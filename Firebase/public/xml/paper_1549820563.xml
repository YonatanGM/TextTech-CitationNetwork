<paper id="1549820563"><title>SAT-Based Verification without State Space Traversal</title><year>2000</year><authors><author org="Chalmers University of Technology" id="2780286042">Per Bjesse</author><author org="Chalmers University of Technology" id="540517650">Koen Claessen</author></authors><n_citation>148</n_citation><doc_type>Conference</doc_type><references><reference>1494481937</reference><reference>1495266209</reference><reference>1498682591</reference><reference>1502028089</reference><reference>1787074469</reference><reference>1814068099</reference><reference>2043100293</reference><reference>2080267935</reference><reference>2084638680</reference><reference>2123736383</reference><reference>2129664123</reference><reference>2340735175</reference><reference>2559833958</reference><reference>2913459036</reference></references><venue id="1166230065" type="C">Formal Methods in Computer-Aided Design</venue><doi>10.1007/3-540-40922-X_23</doi><keywords><keyword weight="0.43066">Discrete mathematics</keyword><keyword weight="0.60963">Model checking</keyword><keyword weight="0.5355">Tree traversal</keyword><keyword weight="0.45235">Computer science</keyword><keyword weight="0.47143">Satisfiability</keyword><keyword weight="0.55006">Binary decision diagram</keyword><keyword weight="0.45722">Algorithm</keyword><keyword weight="0.46233">Theoretical computer science</keyword><keyword weight="0.51439">State space</keyword><keyword weight="0.58663">Symbolic trajectory evaluation</keyword><keyword weight="0.41781">Traverse</keyword><keyword weight="0.0">Safety property</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Binary Decision Diagrams (BDDs) have dominated the area of symbolic model checking for the past decade. Recently, the use of satisfiability (SAT) solvers has emerged as an interesting complement to BDDs. SAT-based methods are capable of coping with some of the systems that BDDs are unable to handle.The most challenging problem that has to be solved in order to adapt standard symbolic model checking to SAT-solvers is the boolean quanti fication necessary for traversing the state space. A possible approach to extending the applicability of SAT-based model checkers is therefore to reduce the amount of traversal.In this paper, we investigate a BDD-based verification algorithm due to van Eijk. Van Eijku0027s algorithm tries to compute information that is sufficient to prove a given safety property directly. When this is not possible, the computed information can be used to reduce the amount of traversal needed by standard model checking algorithms. We convert van Eijku0027s algorithm to use a SAT-solver instead of BDDs. We also make a number of improvements to the original algorithm, such as combining it with recently developed variants of induction. The result is a collection of substantially strengthened and complete verification methods that do not require state space traversal.</abstract></paper>