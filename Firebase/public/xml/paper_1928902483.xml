<paper id="1928902483"><title>ViewPoint-oriented software development by distributed graph transformation: towards a basis for living with inconsistencies</title><year>1999</year><authors><author org="Dept. of Math. &amp; Comput. Sci., Essen Univ., Germany" id="2250860430">M. Goedicke</author><author org="" id="2678887162">T. Meyer</author><author org="" id="1978163079">G. Taentzer</author></authors><n_citation>41</n_citation><doc_type>Journal</doc_type><references><reference>1507228683</reference><reference>1518900364</reference><reference>1564693463</reference><reference>1889614459</reference><reference>1942703822</reference><reference>1968128450</reference><reference>2054097655</reference><reference>2135920852</reference></references><venue id="207090427" type="J">Requirements Engineering</venue><doi>10.1109/ISRE.1999.777989</doi><keywords><keyword weight="0.46826">Graph theory</keyword><keyword weight="0.4785">Software engineering</keyword><keyword weight="0.46431">Systems engineering</keyword><keyword weight="0.48301">Viewpoints</keyword><keyword weight="0.46655">Computer science</keyword><keyword weight="0.50204">Systems analysis</keyword><keyword weight="0.58997">Requirements engineering</keyword><keyword weight="0.61562">Requirements analysis</keyword><keyword weight="0.53195">Graph rewriting</keyword><keyword weight="0.59187">Software architecture</keyword><keyword weight="0.61307">Software development</keyword></keywords><publisher>IEEE</publisher><abstract>Software development is a staged and evolutionary process. Multiple stakeholders with different needs and views collaborate to build a system from interoperating and heterogeneous development artifacts. In such a setting, one has to cope with requirements changing dynamically during the entire lifetime of the system. Within this changing world living with inconsistencies is natural. Tool support is needed to tolerate inconsistencies and help developers to use them to drive the development process forward. In this contribution we consider the application of distributed graph transformation to the problem of formalizing the integration of multiple perspectives in software development called ViewPoints. Our work concentrates on requirements engineering. We demonstrate how inconsistency management can be used as a tool for requirements analysis by presenting a sample integration of architecture design and performance evaluation views.</abstract></paper>