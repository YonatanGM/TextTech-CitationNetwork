<paper id="1751849233"><title>Workload-optimal histograms on streams</title><year>2005</year><authors><author org="Supported by NSF ITR 0220280 and NSF 0354600, Rutgers University#TAB#" id="2921339358">S. Muthukrishnan</author><author org="Supported by NSF DMS 0354600, University of Michigan#TAB#" id="2911631061">M. Strauss</author><author org="Supported by NSF DMS 0354600, University of Michigan#TAB#" id="2396615003">X. Zheng</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>1572446108</reference><reference>1822348499</reference><reference>2005188603</reference><reference>2010890196</reference><reference>2011999472</reference><reference>2047424291</reference><reference>2076009323</reference><reference>2092919877</reference><reference>2102166438</reference><reference>2107745473</reference><reference>2117348908</reference><reference>2120108467</reference><reference>2121601267</reference><reference>2122962290</reference><reference>2128869116</reference><reference>2133577012</reference><reference>2138793904</reference><reference>2139276812</reference><reference>2140115873</reference><reference>2151310484</reference><reference>2152506638</reference><reference>2158322625</reference><reference>2212047990</reference><reference>2294832208</reference></references><venue id="1154039276" type="C">European Symposium on Algorithms</venue><doi>10.1007/11561071_65</doi><keywords><keyword weight="0.67147">Query optimization</keyword><keyword weight="0.5101">Histogram</keyword><keyword weight="0.45666">Dynamic programming</keyword><keyword weight="0.45256">Lossy compression</keyword><keyword weight="0.40664">Workload</keyword><keyword weight="0.44495">Computer science</keyword><keyword weight="0.48252">Load balancing (computing)</keyword><keyword weight="0.4567">Theoretical computer science</keyword><keyword weight="0.41019">Partition (number theory)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A histogram is a piecewise-constant approximation of an observed data distribution. A histogram is used as a small-space, approximate synopsis of the underlying data distribution, which is often too large to be stored precisely. Histograms have found many applications in database management systems, perhaps most commonly for query selectivity estimation in query optimizers [1], but have also found applications in approximate query answering [2], load balancing in parallel join execution [3], mining time-series data [4], partition-based temporal join execution, query pro.ling for user feedback, etc. Ioannidis has a nice overview of the history of histograms, their applications, and their use in commercial DBMSs [5]. Also, Poosalaâ€™s thesis provides a systematic treatment of different types of histograms [3].</abstract></paper>