<paper id="1879346405"><title>Reflections on the Object Constraint Language</title><year>1998</year><authors><author org="University of Brighton" id="2924197948">Ali Hamie</author><author org="University of Brighton" id="671876942">Franco Civello</author><author org="University of Brighton" id="2012038289">John Howse</author><author org="University of Brighton" id="2700825362">Stuart Kent</author><author org="University of Brighton" id="2112533413">Richard Mitchell</author></authors><n_citation>34</n_citation><doc_type>Journal</doc_type><references><reference>1555946950</reference><reference>1583095677</reference><reference>1769049936</reference><reference>1970495662</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/978-3-540-48480-6_13</doi><keywords><keyword weight="0.53796">Specification language</keyword><keyword weight="0.4677">Programming language</keyword><keyword weight="0.50654">Unified Modeling Language</keyword><keyword weight="0.49958">Object-oriented programming</keyword><keyword weight="0.44733">Computer science</keyword><keyword weight="0.49408">Formal specification</keyword><keyword weight="0.4495">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.49545">Parsing</keyword><keyword weight="0.71548">Object Constraint Language</keyword><keyword weight="0.51426">Semantics</keyword><keyword weight="0.54998">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The object Constraint Language (OCL), which forms part of the UML set of modelling notations, is a precise, textual language for expressing constraints that cannot be shown diagrammatically in UML. This paper reflects on a number of aspects of the syntax and semantics of the OCL, and makes proposals for clarification or extension. Specifically, the paper suggests that: the concept of flattening collections of collections is unnecessary, state models should be connectable to class models, defining object creation should be made more convenient, OCL should be based on a 2-valued logic, set subtraction should be covered more fully, and a “let” feature should be introduced.</abstract></paper>