<paper id="1497293019"><title>Towards a Unified Agent Architecture that Combines Rationality with Reactivity</title><year>1996</year><authors><author org="imperial College" id="2228449327">Robert A. Kowalski</author><author org="imperial College" id="2026095753">Fariba Sadri</author></authors><n_citation>74</n_citation><doc_type>Conference</doc_type><references><reference>82825902</reference><reference>134504121</reference><reference>1517715981</reference><reference>1586710160</reference><reference>1652032257</reference><reference>1839937676</reference><reference>1866624891</reference><reference>2037035101</reference><reference>2084749326</reference><reference>2097856935</reference></references><venue id="1180646617" type="C">Logic in Databases</venue><doi>10.1007/BFb0031739</doi><keywords><keyword weight="0.55452">Horn clause</keyword><keyword weight="0.45416">Computer science</keyword><keyword weight="0.56625">Constraint programming</keyword><keyword weight="0.62154">Abductive logic programming</keyword><keyword weight="0.45686">Theoretical computer science</keyword><keyword weight="0.57511">Agent architecture</keyword><keyword weight="0.56167">Concurrent constraint logic programming</keyword><keyword weight="0.58627">Logic programming</keyword><keyword weight="0.6494">Proof procedure</keyword><keyword weight="0.56573">Constraint logic programming</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we analyse the differences between rational and reactive agent architectures, and propose a uniform agent architecture that aims to capture both as special cases. For this purpose we employ a proof procedure, to control the agentu0027s behaviour, which combines definitions with integrity constraints. The proof procedure is general, and has been shown elsewhere to unify abductive logic programming, constraint logic programming and semantic query optimisation. We also employ a resource-bounded formalisation of the proof procedure which allows the agentu0027s reasoning to be interrupted and resumed, so that observations and actions can be performed.</abstract></paper>