<paper id="1855789069"><title>Towards the Automated Verification of Multithreaded Java Programs</title><year>2002</year><authors><author org="Università di Genova" id="2041871214">Giorgio Delzanno</author><author org="Université libre de Bruxelles" id="1979323527">Jean-François Raskin</author><author org="Université libre de Bruxelles" id="2100690623">Laurent Van Begin</author></authors><n_citation>70</n_citation><doc_type>Conference</doc_type><references><reference>1540737511</reference><reference>1810198311</reference><reference>1854314632</reference><reference>1864138857</reference><reference>1905380539</reference><reference>1913196744</reference><reference>1967174286</reference><reference>2036526834</reference><reference>2051020320</reference><reference>2123910665</reference><reference>2129073086</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-46002-0_13</doi><keywords><keyword weight="0.48107">Asynchronous communication</keyword><keyword weight="0.44408">Synchronization</keyword><keyword weight="0.4695">Knowledge representation and reasoning</keyword><keyword weight="0.47629">Programming language</keyword><keyword weight="0.628">Java annotation</keyword><keyword weight="0.4666">Computer science</keyword><keyword weight="0.62197">Real time Java</keyword><keyword weight="0.46195">Theoretical computer science</keyword><keyword weight="0.63039">Java Modeling Language</keyword><keyword weight="0.58651">Java</keyword><keyword weight="0.44411">Semantics</keyword><keyword weight="0.45959">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we investigate the possible application of parameterized verification techniques to synchronization skeletons of multithreaded Java programs. As conceptual contribution, we identify a class of infinite-state abstract models, called Multi-Transfer Nets (MTNs), that preserve the main features of the semantics of concurrent Java. We achieve this goal by exploiting an interesting connection with the Broadcast Protocols of [7], and by introducing the notion of asynchronous rendez-vous. As technical contribution, we extend the symbolic verification techniques of [6] based on Covering Sharing Trees and structural invariants to MTNs. As practical contribution, we report on experimental results for verification of examples of multithreaded Java programs.</abstract></paper>