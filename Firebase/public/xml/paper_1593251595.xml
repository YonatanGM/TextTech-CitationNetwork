<paper id="1593251595"><title>On the hardness of permanent</title><year>1999</year><authors><author org="Department of Computer Science and Engineering, State University of New York at Buffalo, Buffalo, NY#TAB#" id="2115541029">Jin-Yi Cai</author><author org="Department of Computer Science and Engineering, State University of New York at Buffalo, Buffalo, NY#TAB#" id="2150759953">A. Pavan</author><author org="Department of Computer Science, University of Houston, Houston, TX" id="2630099799">D. Sivakumar</author></authors><n_citation>42</n_citation><doc_type>Conference</doc_type><references><reference>1524052280</reference><reference>1596412683</reference><reference>1970056983</reference><reference>1982547542</reference><reference>2006912660</reference><reference>2007747613</reference><reference>2057512592</reference><reference>2070464413</reference><reference>2082647621</reference><reference>2094878497</reference><reference>2132833941</reference><reference>2151536080</reference><reference>2154317379</reference></references><venue id="1178070762" type="C">Symposium on Theoretical Aspects of Computer Science</venue><doi>10.1007/3-540-49116-3_8</doi><keywords><keyword weight="0.49955">Integer</keyword><keyword weight="0.46407">Discrete mathematics</keyword><keyword weight="0.48243">Inverse</keyword><keyword weight="0.46421">Combinatorics</keyword><keyword weight="0.5412">Finite field</keyword><keyword weight="0.55522">Polynomial</keyword><keyword weight="0.50065">Matrix (mathematics)</keyword><keyword weight="0.53772">Time complexity</keyword><keyword weight="0.55179">Computing the permanent</keyword><keyword weight="0.42425">Mathematics</keyword><keyword weight="0.49934">Computational complexity theory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We prove that if there is a polynomial time algorithm which computes the permanent of a matrix of order n for any inverse polynomial fraction of all inputs, then there is a BPP algorithm computing the permanent for every matrix. It follows that this hypothesis implies P #P = BPP. Our algorithm works over any sufficiently large finite field (polynomially larger than the inverse of the assumed success ratio), or any interval of integers of similar range. The assumed algorithm can also be a probabilistic polynomial time algorithm. Our result is essentially the best possible based on any black box assumption of permanent solvers, and is a simultaneous improvement of the results of Gemmell and Sudan [GS92], Feige and Lund [FL92] as well as Cai and Hemachandra [CH91], and Toda (see [ABG90]).</abstract></paper>