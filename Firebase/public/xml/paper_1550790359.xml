<paper id="1550790359"><title>Logical analysis of hash functions</title><year>2005</year><authors><author org="Mathematical Institute, Belgrade, Serbia and Montenegro#TAB#" id="2639579951">Dejan Jovanović</author><author org="Faculty of Mathematics, Belgrade, Serbia and Montenegro#TAB#" id="91530389">Predrag Janičić</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>4983232</reference><reference>104980622</reference><reference>117707387</reference><reference>1549228503</reference><reference>1583771634</reference><reference>1600432225</reference><reference>2036265926</reference><reference>2057361103</reference><reference>2070717151</reference><reference>2122856906</reference><reference>2133252868</reference><reference>2142785340</reference><reference>2147012241</reference><reference>2157280385</reference><reference>2890068598</reference><reference>2916086000</reference><reference>2916302273</reference></references><venue id="1185914153" type="C">Frontiers of Combining Systems</venue><doi>10.1007/11559306_11</doi><keywords><keyword weight="0.44595">Discrete mathematics</keyword><keyword weight="0.44768">Computer science</keyword><keyword weight="0.54423">Boolean satisfiability problem</keyword><keyword weight="0.5544">Propositional calculus</keyword><keyword weight="0.45304">Algorithm</keyword><keyword weight="0.51676">MD4</keyword><keyword weight="0.60431">Hash function</keyword><keyword weight="0.67715">Security of cryptographic hash functions</keyword><keyword weight="0.50717">MD5</keyword><keyword weight="0.58735">Propositional formula</keyword><keyword weight="0.6379">Propositional variable</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we report on a novel approach for uniform encoding of hash functions (but also other cryptographic functions) into propositional logic formulae, and reducing cryptanalysis problems to the satisfiability problem. The approach is general, elegant, and does not require any human expertise on the construction of a specific cryptographic function. By using this approach, we developed a technique for generating hard and satisfiable propositional formulae and hard and unsatisfiable propositional formulae. In addition, one can finely tune the hardness of generated formulae. This can be very important for different applications, including testing (complete or incomplete) sat solvers. The uniform logical analysis of cryptographic functions can be used for comparison between different functions and can expose weaknesses of some of them (as shown for md4 in comparison with md5).</abstract></paper>