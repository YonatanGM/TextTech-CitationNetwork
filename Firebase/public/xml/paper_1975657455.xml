<paper id="1975657455"><title>Modalities for model checking: branching time logic strikes back</title><year>1987</year><authors><author org="Univ of Texas at Austin, Austin" id="2115834734">E. Allen Emerson</author><author org="Univ of Texas at Austin, Austin" id="2121202801">Chin-Laung Lei</author></authors><n_citation>334</n_citation><doc_type>Journal</doc_type><references><reference>207131139</reference><reference>1487199072</reference><reference>1501731334</reference><reference>1567881920</reference><reference>1574129634</reference><reference>1666015432</reference><reference>1798280647</reference><reference>1812404936</reference><reference>1834198313</reference><reference>1964845238</reference><reference>1976772375</reference><reference>1978358700</reference><reference>2003227046</reference><reference>2004306067</reference><reference>2021711161</reference><reference>2023808162</reference><reference>2033071128</reference><reference>2045165287</reference><reference>2048355938</reference><reference>2067441543</reference><reference>2069709605</reference><reference>2072887965</reference><reference>2090398333</reference><reference>2094912129</reference><reference>2117189826</reference><reference>2118382442</reference><reference>2126395320</reference><reference>2138695497</reference><reference>2166656159</reference></references><venue id="21029587" type="J">Science of Computer Programming</venue><doi>10.1016/0167-6423(87)90036-0</doi><keywords><keyword weight="0.64618">Computation tree logic</keyword><keyword weight="0.45037">Programming language</keyword><keyword weight="0.65355">Model checking</keyword><keyword weight="0.63722">Interval temporal logic</keyword><keyword weight="0.4468">Computer science</keyword><keyword weight="0.64099">Multimodal logic</keyword><keyword weight="0.68034">Linear temporal logic</keyword><keyword weight="0.46653">Theoretical computer science</keyword><keyword weight="0.64399">Predicate logic</keyword><keyword weight="0.6416">Intermediate logic</keyword><keyword weight="0.64149">Higher-order logic</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract We consider automatic verification of finite state concurrent programs. The global state graph of such a program can be viewed as a finite (Kripke) structure, and a model checking algorithm can be given for determining if a given structure is a model of a specification expressed in a propositional temporal logic. In this paper, we present a unified approach for efficient model checking under a broad class of generalized fairness constraints in a branching time framework extending that of Clarke et al. (1983). Our method applies to any type of fairness expressed in a certain canonical form. Almost all ‘practical’ types of fairness from the literature, including the fundamental notions of impartiality, weak fairness, and strong fairness, can be succintly written in our canonical form. Moreover, our branching time approach can easily be adapted to handle types of fairness (such as fair reachability of a predicate) which cannot even be expressed in a linear temporal logic. We go on to argue that branching time logic is always better than linear time logic for model checking. We show that given any model checking algorithm for any system of linear time logic (in particular, for the usual system of linear time logic) there is a model checking algorithm of the same order of complexity (in both the structure and formula size) for the corresponding full branching time logic which trivially subsumes the linear time logic in expressive power (in particular, for the system of full branching time logic CTL * ). We also consider an application of our work to the theory of finite automata on infinite strings.</abstract></paper>