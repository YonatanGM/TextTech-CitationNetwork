<paper id="1589224558"><title>Reachability Analysis of Pushdown Automata: Application to Model-Checking</title><year>1997</year><authors><author org="Verimag" id="2283651526">Ahmed Bouajjani</author><author org="Tech. Univ. MÃ¼nchen" id="2123449190">Javier Esparza</author><author org="Verimag" id="694493417">Oded Maler</author></authors><n_citation>589</n_citation><doc_type>Conference</doc_type><references><reference>22002794</reference><reference>1496412704</reference><reference>1504739534</reference><reference>1569051713</reference><reference>1655990431</reference><reference>1713142183</reference><reference>1872012219</reference><reference>1905205673</reference><reference>1976043843</reference><reference>2004463571</reference><reference>2023808162</reference><reference>2030224590</reference><reference>2054554282</reference><reference>2101508170</reference><reference>2155756511</reference><reference>2268014521</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-63141-0_10</doi><keywords><keyword weight="0.61249">Deterministic context-free grammar</keyword><keyword weight="0.65019">Embedded pushdown automaton</keyword><keyword weight="0.45902">Discrete mathematics</keyword><keyword weight="0.62226">Context-free language</keyword><keyword weight="0.52064">Model checking</keyword><keyword weight="0.66102">Nested word</keyword><keyword weight="0.43982">Computer science</keyword><keyword weight="0.71386">Deterministic pushdown automaton</keyword><keyword weight="0.46347">Theoretical computer science</keyword><keyword weight="0.50433">Reachability</keyword><keyword weight="0.64983">Pushdown automaton</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We apply the symbolic analysis principle to pushdown systems. We represent (possibly infinite) sets of configurations of such systems by means of finite-state automata. In order to reason in a uniform way about analysis problems involving both existential and universal path quantification (such as model-checking for branching-time logics), we consider the more general class of alternating pushdown systems and use alternating finite-state automata as a representation structure for sets of their configurations. We give a simple and natural procedure to compute sets of predecessors using this representation structure. We incorporate this procedure into the automata-theoretic approach to model-checking to define new model-checking algorithms for pushdown systems against both linear and branching-time properties. From these results we derive upper bounds for several model-checking problems as well as matching lower bounds.</abstract></paper>