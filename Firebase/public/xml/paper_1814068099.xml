<paper id="1814068099"><title>Combining Decision Diagrams and SAT Procedures for Efficient Symbolic Model Checking</title><year>2000</year><authors><author org="Technical University of, Denmark" id="2799113707">Poul Frederick Williams</author><author org="ETH Zentrum" id="2242438494">Armin Biere</author><author org="Carnegie - Mellon University#TAB#" id="2129477832">Edmund M. Clarke</author><author org="Carnegie - Mellon University#TAB#" id="2304711325">Anubhav Gupta</author></authors><n_citation>102</n_citation><doc_type>Conference</doc_type><references><reference>1494481937</reference><reference>1498682591</reference><reference>1511155470</reference><reference>1513300473</reference><reference>1574030932</reference><reference>1582162693</reference><reference>1787074469</reference><reference>2024148935</reference><reference>2044560939</reference><reference>2080267935</reference><reference>2096076317</reference><reference>2099120582</reference><reference>2117189826</reference><reference>2151793720</reference><reference>2168974500</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/10722167_13</doi><keywords><keyword weight="0.56103">Boolean function</keyword><keyword weight="0.44452">Discrete mathematics</keyword><keyword weight="0.66488">Model checking</keyword><keyword weight="0.44813">Computer science</keyword><keyword weight="0.58703">Binary decision diagram</keyword><keyword weight="0.45914">Algorithm</keyword><keyword weight="0.4621">Theoretical computer science</keyword><keyword weight="0.4951">Canonical form</keyword><keyword weight="0.50795">Conjunctive normal form</keyword><keyword weight="0.58416">Boolean expression</keyword><keyword weight="0.51893">Liveness</keyword><keyword weight="0.51554">Formal verification</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>In this paper we show how to do symbolic model checking using Boolean Expression Diagrams (BEDs), a non-canonical representation for Boolean formulas, instead of Binary Decision Diagrams (BDDs), the traditionally used canonical representation. The method is based on standard fixed point algorithms, combined with BDDs and SAT-solvers to perform satisfiability checking. As a result we are able to model check systems for which standard BDD-based methods fail. For example, we model check a liveness property of a 256 bit shift-and-add multiplier and we are able to find a previously undetected bug in the specification of a 16 bit multiplier. As opposed to Bounded Model Checking (BMC) our method is complete in practice.</abstract></paper>