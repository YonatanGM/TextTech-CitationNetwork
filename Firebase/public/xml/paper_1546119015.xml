<paper id="1546119015"><title>A Tutorial on Using PVS for Hardware Verification</title><year>1994</year><authors><author org="SRI, International#TAB#" id="2091958867">Sam Owre</author><author org="SRI, International#TAB#" id="2157944775">John M. Rushby</author><author org="SRI, International#TAB#" id="2118526916">Natarajan Shankar</author><author org="SRI, International#TAB#" id="2143082811">Mandayam K. Srivas</author></authors><n_citation>29</n_citation><doc_type /><references><reference>1506758048</reference><reference>1511590542</reference><reference>1538310240</reference><reference>1541064517</reference><reference>1590828018</reference><reference>1593276140</reference><reference>1593457833</reference><reference>1764512891</reference><reference>1867436870</reference><reference>1982619477</reference><reference>2085818042</reference><reference>2162338955</reference></references><venue id="" type="">TPCD '94 Proceedings of the Second International Conference on Theorem Provers in Circuit Design - Theory, Practice and Experience</venue><doi>10.1007/3-540-59047-1_53</doi><keywords><keyword weight="0.55716">Specification language</keyword><keyword weight="0.46615">Programming language</keyword><keyword weight="0.69366">Intelligent verification</keyword><keyword weight="0.45354">Computer science</keyword><keyword weight="0.5087">Automated theorem proving</keyword><keyword weight="0.46439">Register file</keyword><keyword weight="0.68646">Verification</keyword><keyword weight="0.65059">Formal methods</keyword><keyword weight="0.66142">High-level verification</keyword><keyword weight="0.65657">Software verification</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>PVS stands for “Prototype Verification System.” It consists of a specification language integrated with support tools and a theorem prover. PVS tries to provide the mechanization needed to apply formal methods both rigorously and productively.</abstract></paper>