<paper id="1598095616"><title>Semantics-Based Program Integration</title><year>1988</year><authors><author org="University of Wisconsin" id="341386833">Thomas W. Reps</author><author org="University of Wisconsin" id="1974504312">Susan Horwitz</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>115888706</reference><reference>1491178396</reference><reference>1593452414</reference><reference>1966449927</reference><reference>1997493115</reference><reference>2012131382</reference><reference>2015711103</reference><reference>2023222549</reference><reference>2025554746</reference><reference>2043555680</reference><reference>2064625489</reference><reference>2080901110</reference><reference>2088126145</reference><reference>2114876342</reference><reference>2144344516</reference><reference>2166667085</reference><reference>2293624369</reference></references><venue id="1136861413" type="C">European Symposium on Programming</venue><doi>10.1007/3-540-19027-9_1</doi><keywords><keyword weight="0.47892">Programming language</keyword><keyword weight="0.0">Integration algorithm</keyword><keyword weight="0.47856">Computer science</keyword><keyword weight="0.50628">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The need to integrate several versions of a base program into a common one arises frequently, but it is a tedious and time consuming task to integrate programs by hand. To date, the only available tools for assisting with program integration are variants of text-based differential file comparators; these are of limited utility because one has no guarantees about how the program that is the product of an integration behaves compared to the programs that were integrated.</abstract></paper>