<paper id="1533471782"><title>Augmenting pattern-based architectural recovery with flow analysis: Mosaic-a case study</title><year>1996</year><authors><author org="IRST, Trento, Italy" id="174962400">P. Tonella</author><author org="" id="1204727178">R. Fiutem</author><author org="" id="2240784224">G. Antoniol</author><author org="" id="2107216203">E. Merlo</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>1975033347</reference><reference>2007798926</reference><reference>2021481978</reference><reference>2033750216</reference><reference>2052592404</reference><reference>2064332668</reference><reference>2068258563</reference><reference>2077318760</reference><reference>2097602997</reference><reference>2112879740</reference><reference>2120779835</reference><reference>2129013235</reference><reference>2132262784</reference><reference>2135926579</reference><reference>2150020266</reference><reference>2151360539</reference><reference>2156619646</reference><reference>2293624369</reference></references><venue id="1131743930" type="C">Working Conference on Reverse Engineering</venue><doi>10.1109/WCRE.1996.558904</doi><keywords><keyword weight="0.62691">Presentation–abstraction–control</keyword><keyword weight="0.46465">Software engineering</keyword><keyword weight="0.45108">Systems engineering</keyword><keyword weight="0.46139">Computer science</keyword><keyword weight="0.57077">Software system</keyword><keyword weight="0.54269">Systems architecture</keyword><keyword weight="0.55763">Software maintenance</keyword><keyword weight="0.59037">Software architecture</keyword><keyword weight="0.72955">Architectural pattern</keyword><keyword weight="0.53807">Legacy system</keyword><keyword weight="0.53347">Data flow diagram</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Understanding the overall organization of a software system, i.e. its software architecture, is often required during software maintenance: tools can help maintainers in managing the evolution of legacy systems, by showing them architectural information. The analysis of a medium-sized application using a pattern based architectural recovery environment is presented. The results obtained give useful information about the system architecture but also show some limitations of a purely pattern based approach. To overcome such limitations, architectural analysis algorithms have been augmented with information about control and data flow and the case study application has been re-analyzed. Complementing pattern matching with flow information has also allowed detection of architectural constructs when they are spread over different procedures in source code and to extract useful additional information through the use of constant propagation and slicing.</abstract></paper>