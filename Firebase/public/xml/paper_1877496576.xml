<paper id="1877496576"><title>Debugging Parallel Programs with Instant Replay</title><year>1987</year><authors><author org="Department of Computer Science, University of Rochester#TAB#" id="2705937531">Leblanc</author><author org="" id="2217879814">Mellor-Crummey</author></authors><n_citation>481</n_citation><doc_type>Journal</doc_type><references><reference>3665002</reference><reference>52746826</reference><reference>122545444</reference><reference>141158723</reference><reference>162227438</reference><reference>1547639789</reference><reference>1969884952</reference><reference>1973501242</reference><reference>2003716256</reference><reference>2028590948</reference><reference>2049764332</reference><reference>2058618358</reference><reference>2131053137</reference><reference>2131791649</reference><reference>2132773226</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1987.1676929</doi><keywords><keyword weight="0.39746">Instant</keyword><keyword weight="0.45469">Programming language</keyword><keyword weight="0.45364">Computer science</keyword><keyword weight="0.0">Parallel processing</keyword><keyword weight="0.44687">Real-time computing</keyword><keyword weight="0.44392">Synchronism</keyword><keyword weight="0.45449">Distributed computing</keyword><keyword weight="0.66045">Algorithmic program debugging</keyword><keyword weight="0.45405">Parallel computing</keyword><keyword weight="0.48667">Multiprocessing</keyword><keyword weight="0.49844">Inter-process communication</keyword><keyword weight="0.44622">Shared resource</keyword><keyword weight="0.57848">Debugging</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The debugging cycle is the most common methodology for finding and correcting errors in sequential programs. Cyclic debugging is effective because sequential programs are usually deterministic. Debugging parallel programs is considerably more difficult because successive executions of the same program often do not produce the same results. In this paper we present a general solution for reproducing the execution behavior of parallel programs, termed Instant Replay. During program execution we save the relative order of significant events as they occur, not the data associated with such events. As a result, our approach requires less time and space to save the information needed for program replay than other methods. Our technique is not dependent on any particular form of interprocess communication. It provides for replay of an entire program, rather than individual processes in isolation. No centralized bottlenecks are introduced and there is no need for synchronized clocks or a globally consistent logical time. We describe a prototype implementation of Instant Replay on the BBN Butterflyâ„¢ Parallel Processor, and discuss how it can be incorporated into the debugging cycle for parallel programs.</abstract></paper>