<paper id="1873658816"><title>Invariance of Approximate Semantics with Respect to Program Transformations</title><year>1981</year><authors><author org="Technische Universität" id="154878420">Robert Giegerich</author><author org="Universität des Saarlandes" id="1567627761">Ulrich Möncke</author><author org="" id="2127844901">Reinhard Wilhelm</author></authors><n_citation>46</n_citation><doc_type /><references><reference>1986328875</reference><reference>2014764321</reference><reference>2043100293</reference></references><venue id="" type="">GI - 11. Jahrestagung in Verbindung mit Third Conference of the European Co-operation in Informatics (ECI)</venue><doi>10.1007/978-3-662-01089-1_1</doi><keywords><keyword weight="0.4735">Invariant (physics)</keyword><keyword weight="0.57012">Abstract interpretation</keyword><keyword weight="0.45492">Computer science</keyword><keyword weight="0.58917">Data-flow analysis</keyword><keyword weight="0.45552">Theoretical computer science</keyword><keyword weight="0.0">Program development</keyword><keyword weight="0.44264">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.4896">Semantics</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Program transformations, as used for optimization and sometimes for program development, utilize information about the program which is derived by the method of abstract interpretation within various data flow analysis frameworks. Each transformation, as it changes the program, may render the flow information derived for the original program suboptimal or even invalid with respect to the new program. Although the outdated flow information may serve well as a starting point for rederivation, it appears profitable to look for conditions where passes of many transformations may be performed without recalculating flow information each time a transformation rule is applied.</abstract></paper>