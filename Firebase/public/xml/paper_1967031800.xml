<paper id="1967031800"><title>Data flow analysis is model checking of abstract interpretations</title><year>1998</year><authors><author org="Computing and Information Sciences Department, Kansas State University, 234 Nichols Hall, Manhattan, KS" id="2114568335">David A. Schmidt</author></authors><n_citation>175</n_citation><doc_type>Conference</doc_type><references><reference>1487472891</reference><reference>1491178396</reference><reference>1491755917</reference><reference>1503973138</reference><reference>1516326834</reference><reference>1519861553</reference><reference>1534067655</reference><reference>1542369348</reference><reference>1554850964</reference><reference>1592238360</reference><reference>1599545360</reference><reference>1604147565</reference><reference>1814870153</reference><reference>1855771754</reference><reference>1934513401</reference><reference>1964193719</reference><reference>1974939942</reference><reference>1976808561</reference><reference>1981580304</reference><reference>1998717006</reference><reference>2014764321</reference><reference>2015640848</reference><reference>2025554746</reference><reference>2032137108</reference><reference>2043100293</reference><reference>2049641148</reference><reference>2057260173</reference><reference>2071095465</reference><reference>2074425862</reference><reference>2080593426</reference><reference>2084875723</reference><reference>2088126145</reference><reference>2090106217</reference><reference>2116098983</reference><reference>2117189826</reference><reference>2133976022</reference><reference>2171536993</reference></references><venue id="1160032607" type="C">Symposium on Principles of Programming Languages</venue><doi>10.1145/268946.268950</doi><keywords><keyword weight="0.66239">Abstraction model checking</keyword><keyword weight="0.45974">Programming language</keyword><keyword weight="0.60928">Model checking</keyword><keyword weight="0.44953">Computer science</keyword><keyword weight="0.56963">Abstract interpretation</keyword><keyword weight="0.52691">Data-flow analysis</keyword><keyword weight="0.45624">Theoretical computer science</keyword><keyword weight="0.42256">Depiction</keyword><keyword weight="0.4772">Semantics</keyword><keyword weight="0.49619">Modal</keyword></keywords><publisher>ACM</publisher><abstract>This expository paper simplifies and clarifies Steffenu0027s depiction of data flow analysis (d.f.a.) as model checking: By employing abstract interpretation (a.i.) to generate program traces and by utilizing Kozenu0027s modal mu-calculus to express trace properties, we express in simplest possible terms that a d.f.a. is a model check of a programu0027s a.i. trace. In particular, the classic flow equations for bit-vector-based d.f.a.s reformat trivially into modal mu-Calculus formulas. A surprising consequence is that two of the classical d.f.a.s are exposed as unsound; this problem is analyzed and simply repaired. In the process of making the above discoveries, we clarify the relationship between a.i. and d.f.a. in terms of the often-misunderstood notion of collecting semantics and we highlight how the research areas of flow analysis, abstract interpretation, and model checking have grown together.</abstract></paper>