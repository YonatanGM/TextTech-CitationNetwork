<paper id="1663140555"><title>Encoding Planning Problems in Nonmonotonic Logic Programs</title><year>1997</year><authors><author org="Universität Freiburg," id="2719522320">Yannis Dimopoulos</author><author org="Universität Freiburg," id="1989269690">Bernhard Nebel</author><author org="Universität Freiburg," id="2132947874">Jana Koehler</author></authors><n_citation>132</n_citation><doc_type>Journal</doc_type><references><reference>12006093</reference><reference>30784608</reference><reference>83671853</reference><reference>102430551</reference><reference>1487715631</reference><reference>1570679913</reference><reference>1590917522</reference><reference>1600919542</reference><reference>1667362966</reference><reference>1968513265</reference><reference>1993512664</reference><reference>2025460523</reference><reference>2115128204</reference><reference>2149225517</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-63912-8_84</doi><keywords><keyword weight="0.46885">Business system planning</keyword><keyword weight="0.45843">Computer science</keyword><keyword weight="0.63913">Satplan</keyword><keyword weight="0.45972">Theoretical computer science</keyword><keyword weight="0.50349">Circumscription</keyword><keyword weight="0.52588">Negation as failure</keyword><keyword weight="0.5392">Non-monotonic logic</keyword><keyword weight="0.5877">Logic programming</keyword><keyword weight="0.6408">Graphplan</keyword><keyword weight="0.47391">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a framework for encoding planning problems in logic programs with negation as failure, having computational efficiency as our major consideration. In order to accomplish our goal, we bring together ideas from logic programming and the planning systems GRAPHPLAN and SATPLAN. We discuss different representations of planning problems in logic programs, point out issues related to their performance, and show ways to exploit the structure of the domains in these representations. For our experimentation we use an existing implementation of the stable models semantics called SMODELS. It turns out that for careful and compact encodings, the performance of the method across a number of different domains, is comparable to that of planners like GRAPHPLAN and SATPLAN.</abstract></paper>