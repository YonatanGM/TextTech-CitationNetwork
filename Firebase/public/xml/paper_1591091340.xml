<paper id="1591091340"><title>Case Inference in Resolution-Based Languages</title><year>1988</year><authors><author org="Syracuse University" id="2562164473">Toshiro Wakayama</author><author org="UniversityÂ of California" id="2523364594">T. H. Payne</author></authors><n_citation>5</n_citation><doc_type>Conference</doc_type><references><reference>101983502</reference><reference>189317106</reference><reference>1524811847</reference><reference>1530765221</reference><reference>1588666994</reference><reference>1605976683</reference><reference>2005090804</reference><reference>2021473914</reference><reference>2058656940</reference><reference>2092842298</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/BFb0012839</doi><keywords><keyword weight="0.49177">Functional logic programming</keyword><keyword weight="0.48152">Second-generation programming language</keyword><keyword weight="0.48853">Programming paradigm</keyword><keyword weight="0.61599">Inference</keyword><keyword weight="0.43202">Computer science</keyword><keyword weight="0.49118">Very high-level programming language</keyword><keyword weight="0.44161">Theoretical computer science</keyword><keyword weight="0.4828">Declarative programming</keyword><keyword weight="0.4794">Low-level programming language</keyword><keyword weight="0.4962">Programming language theory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Informally, case inference is a type of inference that inherently involves disjunctions in deriving definite consequences. We show that a difficulty with efficient implementation of case inference in resolution-based languages stems from the fact that case inference always requires derived clauses to be reused as side clauses: in general, the number of derived clauses is quite large, and storing all of them seems unacceptably inefficient in programming language settings. However, our results also show that in retrieving definite information, this use of derived clauses is necessary only when case inference is required. This in turn leads to our next finding that storing a relatively small class of derived clauses, which is characterized in terms of certain properties of case inference, is sufficient for proving all definite consequences. We then show that a conservative approximation of this class can be, in effect, precomputed for clause sets not containing purely negative clauses.</abstract></paper>