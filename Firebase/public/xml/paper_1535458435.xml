<paper id="1535458435"><title>From goals to high-variability software design</title><year>2008</year><authors><author org="Department of Computing, The Open University, United Kingdom#TAB#" id="2145198186">Yijun Yu</author><author org="Department of Computer Science, University of Toronto, Canada" id="110093395">Alexei Lapouchnian</author><author org="School of IT, York University, Canada" id="2138229616">Sotirios Liaskos</author><author org="Department of Computer Science, University of Toronto, Canada" id="2161153869">John Mylopoulos</author><author org="Dept. of Informatics - PUC-Rio, Brazil" id="2169434849">Julio C. S. P. Leite</author></authors><n_citation>69</n_citation><doc_type>Conference</doc_type><references><reference>1500250067</reference><reference>1552595334</reference><reference>1557686760</reference><reference>1606306725</reference><reference>1624528677</reference><reference>1625345750</reference><reference>1983723499</reference><reference>2017739343</reference><reference>2055374183</reference><reference>2070005657</reference><reference>2084103106</reference><reference>2098909078</reference><reference>2105539612</reference><reference>2118084379</reference><reference>2118202700</reference><reference>2121764468</reference><reference>2122067742</reference><reference>2122824813</reference><reference>2123431646</reference><reference>2125174515</reference><reference>2125579889</reference><reference>2129395888</reference><reference>2129873712</reference><reference>2130891285</reference><reference>2135670602</reference><reference>2138876988</reference><reference>2140050848</reference><reference>2144634407</reference><reference>2157437711</reference><reference>2159315987</reference><reference>2301605390</reference><reference>2342082360</reference></references><venue id="1150523337" type="C">International Syposium on Methodologies for Intelligent Systems</venue><doi>10.1007/978-3-540-68123-6_1</doi><keywords><keyword weight="0.64428">Software design</keyword><keyword weight="0.45523">Computer science</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.45054">Management science</keyword><keyword weight="0.60189">Software development</keyword><keyword weight="0.61649">Software requirements</keyword><keyword weight="0.47293">Software engineering</keyword><keyword weight="0.61541">Requirements analysis</keyword><keyword weight="0.60891">Requirement</keyword><keyword weight="0.61582">Goal modeling</keyword><keyword weight="0.605">Software construction</keyword><keyword weight="0.60824">Goal-Driven Software Development Process</keyword><keyword weight="0.4383">Machine learning</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Software requirements consist of functionalities and qualities to be accommodated during design. Through goal-oriented requirements engineering, stakeholder goals are refined into a space of alternative functionalities. We adopt this framework and propose a decision-making process to generate a generic software design that can accommodate the full space of alternatives each of which can fulfill stakeholder goals. Specifically, we present a process for generating complementary design views from a goal model with high variability in configurations, behavioral specifications, architectures and business processes.</abstract></paper>