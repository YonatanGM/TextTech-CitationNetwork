<paper id="1983304353"><title>A normal form for XML documents</title><year>2004</year><authors><author org="University of Toronto, Toronto, Ontario, #N#Canada." id="2117861229">Marcelo Arenas</author><author org="University of Toronto, Toronto, Ontario, #N#Canada." id="1971151415">Leonid Libkin</author></authors><n_citation>264</n_citation><doc_type>Journal</doc_type><references><reference>97077349</reference><reference>1547414429</reference><reference>1558832481</reference><reference>1563059434</reference><reference>1566656512</reference><reference>1593666219</reference><reference>1874705449</reference><reference>1922703629</reference><reference>1971206510</reference><reference>1972514879</reference><reference>1988902465</reference><reference>1990391007</reference><reference>2011992362</reference><reference>2016521643</reference><reference>2018870244</reference><reference>2025151754</reference><reference>2041601261</reference><reference>2045566234</reference><reference>2051736015</reference><reference>2057852703</reference><reference>2075276099</reference><reference>2142864156</reference><reference>2143332976</reference><reference>2153320571</reference><reference>2158763191</reference><reference>2165286227</reference><reference>2168578744</reference><reference>2169418560</reference><reference>2294548604</reference><reference>2670189140</reference></references><venue id="90119964" type="J">ACM Transactions on Database Systems</venue><doi>10.1145/974750.974757</doi><keywords><keyword weight="0.43522">Data mining</keyword><keyword weight="0.61959">XML Encryption</keyword><keyword weight="0.62115">Efficient XML Interchange</keyword><keyword weight="0.43665">Computer science</keyword><keyword weight="0.67481">XML validation</keyword><keyword weight="0.66238">Document Structure Description</keyword><keyword weight="0.62227">XML database</keyword><keyword weight="0.62205">XML schema</keyword><keyword weight="0.62058">Simple API for XML</keyword><keyword weight="0.41861">Database</keyword><keyword weight="0.63036">XML Schema Editor</keyword></keywords><publisher>ACM</publisher><abstract>This article takes a first step towards the design and normalization theory for XML documents. We show that, like relational databases, XML documents may contain redundant information, and may be prone to update anomalies. Furthermore, such problems are caused by certain functional dependencies among paths in the document. Our goal is to find a way of converting an arbitrary DTD into a well-designed one, that avoids these problems. We first introduce the concept of a functional dependency for XML, and define its semantics via a relational representation of XML. We then define an XML normal form, XNF, that avoids update anomalies and redundancies. We study its properties, and show that XNF generalizes BCNF; we also discuss the relationship between XNF and normal forms for nested relations. Finally, we present a lossless algorithm for converting any DTD into one in XNF.</abstract></paper>