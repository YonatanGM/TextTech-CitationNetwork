<paper id="1537539847"><title>Committed Oblivious Transfer and Private Multi-Party Computation</title><year>1995</year><authors><author org="Université de Montréal," id="2293660417">Claude Crépeau</author><author org="Université de Montréal," id="2035113235">Jeroen van de Graaf</author><author org="Université de Montréal," id="2121242716">Alain Tapp</author></authors><n_citation>128</n_citation><doc_type>Conference</doc_type><references><reference>1488169517</reference><reference>1495060840</reference><reference>1568324739</reference><reference>1599837121</reference><reference>1984685443</reference><reference>1987667503</reference><reference>2007661134</reference><reference>2012045293</reference><reference>2016443801</reference><reference>2052207834</reference><reference>2067596507</reference><reference>2081533283</reference><reference>2096604262</reference><reference>2125247191</reference><reference>2129163648</reference><reference>2135393523</reference><reference>2154839628</reference><reference>2161670619</reference><reference>2168957864</reference><reference>2229572253</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-44750-4_9</doi><keywords><keyword weight="0.4623">Commit</keyword><keyword weight="0.43696">Computer science</keyword><keyword weight="0.4239">Exploit</keyword><keyword weight="0.43612">Theoretical computer science</keyword><keyword weight="0.45022">Linear code</keyword><keyword weight="0.4319">Black box</keyword><keyword weight="0.49674">Security parameter</keyword><keyword weight="0.49147">Zero-knowledge proof</keyword><keyword weight="0.41527">Computation</keyword><keyword weight="0.65802">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we present an efficient protocol for "Committed Oblivious Transfer" to perform oblivious transfer on committed bits: suppose Alice is committed to bits a0 and a1 and Bob is committed to b, they both want Bob to learn and commit to ab without Alice learning b nor Bob learning ab. Our protocol, based on the properties of error correcting codes, uses Bit Commitment (BC) and one-out-of-two Oblivious Transfer (OT) as black boxes. Consequently the protocol may be implemented with or without a computational assumption, depending on the kind of BC and OT used by the participants. Assuming a Broadcast Channel is also available, we exploit this result to obtain a protocol for Private Multi-Party Computation, without making assumptions about a specific number or fraction of participants being honest. We analyze the protocolu0027s efficiency in terms of BCs and OTs performed. Our approach connects Zero Knowledge proofs on BCs, Oblivious Circuit Evaluation and Private Multi-Party Computations in a conceptually simple and efficient way.</abstract></paper>