<paper id="1926460446"><title>Modeling the Dynamics of UML State Machines</title><year>2000</year><authors><author org="Universita di Pisa" id="2026252948">Egon Börger</author><author org="Università di Catania" id="1606833800">Alessandra Cavarra</author><author org="Università di Catania" id="376095773">Elvinia Riccobene</author></authors><n_citation>84</n_citation><doc_type>Journal</doc_type><references><reference>1505618619</reference><reference>1528672540</reference><reference>1570069626</reference><reference>1571075905</reference><reference>1826173575</reference><reference>1969402593</reference><reference>1998017916</reference><reference>1998333922</reference><reference>2018568588</reference><reference>2121163444</reference><reference>2129395888</reference><reference>2159765281</reference><reference>2724963341</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-44518-8_13</doi><keywords><keyword weight="0.46855">Programming language</keyword><keyword weight="0.67178">UML state machine</keyword><keyword weight="0.51858">Unified Modeling Language</keyword><keyword weight="0.66556">UML tool</keyword><keyword weight="0.45283">Computer science</keyword><keyword weight="0.52945">Abstract state machines</keyword><keyword weight="0.51185">Object model</keyword><keyword weight="0.45727">Theoretical computer science</keyword><keyword weight="0.55394">Finite-state machine</keyword><keyword weight="0.54153">Activity diagram</keyword><keyword weight="0.72956">Applications of UML</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We define the dynamic semantics of UML State Machines which integrate statecharts with the UML object model. The use of ASMs allows us (a) to rigorously model the event driven run to completion scheme, including the sequential execution of entry/exit actions (along the structure of state nesting) and the concurrent execution of internal activities; (b) to formalize the object interaction, by combining control and data flow features in a seamless way; and (c) to provide a precise but nevertheless provably most general computational meaning to the UML terms of atomic and durative actions/activities. We borrow some features from the rigorous description of UML Activity Diagrams by ASMs in [7].</abstract></paper>