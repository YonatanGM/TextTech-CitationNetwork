<paper id="1982279067"><title>A high performance, universal, key associative access method</title><year>1983</year><authors><author org="IBM Thomas J. Watson Research Center Yorktown Heights, New York," id="2630062640">David B. Lomet</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>100318565</reference><reference>2008627910</reference><reference>2057757215</reference><reference>2087966340</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/582192.582213</doi><keywords><keyword weight="0.46533">Data mining</keyword><keyword weight="0.46006">Associative property</keyword><keyword weight="0.60624">Extendible hashing</keyword><keyword weight="0.51336">Access method</keyword><keyword weight="0.47674">Computer science</keyword><keyword weight="0.47331">Theoretical computer science</keyword><keyword weight="0.49169">Universal key</keyword><keyword weight="0.46106">Database</keyword></keywords><publisher>ACM</publisher><abstract>A new file organization is proposed that combines the advantages of digital B-trees and extendible hashing methods into one organization that can be used universally. The method, like these predecessors, relies on digital searching. The key notions are: (i) that multipage nodes are addressed by the root and can have both data and index entries, the mix of entries changing over time; and (ii) that these nodes can be doubled with file growth and, when this occurs, data nodes at the next level of the tree are absorbed into the pages of these nodes, frequently keeping data closer to the root and simultaneously improving utilization. The result is an unbalanced tree that we call a digital lopsided tree or DL-tree. The paper describes DL-trees and their operations, and examines their properties. The most important engineering issues involve the doubling process and the methods used to optimize the tree properties. Ways of dealing with these issues are suggested.</abstract></paper>