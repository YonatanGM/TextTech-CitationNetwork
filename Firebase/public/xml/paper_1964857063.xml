<paper id="1964857063"><title>On random sampling over joins</title><year>1999</year><authors><author org="Microsoft Research,#TAB#" id="2163909284">Surajit Chaudhuri</author><author org="Stanford, University" id="2034912444">Rajeev Motwani</author><author org="Microsoft Research,#TAB#" id="2057455714">Vivek Narasayya</author></authors><n_citation>278</n_citation><doc_type>Conference</doc_type><references><reference>1592355944</reference><reference>1608865483</reference><reference>1892999956</reference><reference>2000154402</reference><reference>2026896584</reference><reference>2080566084</reference><reference>2090403603</reference><reference>2118229812</reference><reference>2119885577</reference><reference>2165906949</reference><reference>2295428206</reference><reference>2296677182</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/304182.304206</doi><keywords><keyword weight="0.46678">Data mining</keyword><keyword weight="0.53352">Bottleneck</keyword><keyword weight="0.57373">Joins</keyword><keyword weight="0.0">Sql server</keyword><keyword weight="0.47368">Computer science</keyword><keyword weight="0.47348">Inefficiency</keyword><keyword weight="0.4672">Theoretical computer science</keyword><keyword weight="0.6031">Sampling (statistics)</keyword><keyword weight="0.4634">Database</keyword><keyword weight="0.48545">Gibbs sampling</keyword></keywords><publisher>ACM</publisher><abstract>A major bottleneck in implementing sampling as a primitive relational operation is the inefficiency of sampling the output of a query. It is not even known whether it is possible to generate a sample of a join tree without first evaluating the join tree completely. We undertake a detailed study of this problem and attempt to analyze it in a variety of settings. We present theoretical results explaining the difficulty of this problem and setting limits on the efficiency that can be achieved. Based on new insights into the interaction between join and sampling, we develop join sampling techniques for the settings where our negative results do not apply. Our new sampling algorithms are significantly more efficient than those known earlier. We present experimental evaluation of our techniques on Microsoftu0027s SQL Server 7.0.</abstract></paper>