<paper id="1965037638"><title>Success factors of systematic reuse</title><year>1994</year><authors><author org="Virginia Polytech. Inst. &amp; State Univ., Blacksburg, VA, USA" id="147044506">W.B. Frakes</author><author org="" id="2973412450">S. Isoda</author></authors><n_citation>182</n_citation><doc_type>Journal</doc_type><references><reference>2015840967</reference><reference>2021112529</reference><reference>2098331276</reference><reference>2100020698</reference><reference>2147519594</reference><reference>2154586078</reference><reference>2294861651</reference></references><venue id="6725529" type="J">IEEE Software</venue><doi>10.1109/52.311045</doi><keywords><keyword weight="0.60084">Domain engineering</keyword><keyword weight="0.0">Success factors</keyword><keyword weight="0.44731">Systems engineering</keyword><keyword weight="0.44209">Computer science</keyword><keyword weight="0.47429">Paradigm shift</keyword><keyword weight="0.59141">Reuse</keyword><keyword weight="0.51063">Risk management</keyword><keyword weight="0.46107">Software</keyword><keyword weight="0.4895">Market share</keyword><keyword weight="0.46067">Competitor analysis</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>Systematic software reuse is a paradigm shift in software engineering from building single systems to building families of related systems. The goal of software reuse research is to discover systematic procedures for engineering new systems from existing assets. Implementing systematic reuse is risky. Not doing it is also risky. Trying systematic reuse unsuccessfully can cost precious time and resources and may make management sceptical of trying it again. But if your competitors do it successfully and you do not, you may lose market share and possibly an entire market. There is no cookbook solution-each organization must analyze its own needs, implement reuse measurements, define the key benefits it expects, identify and remove impediments, and manage risk. Reliable data on how much this costs and the benefits an organization will derive are insufficient. The article addresses issues from management, measurement, law, economics, libraries, and the design of reusable software. u003e</abstract></paper>