<paper id="1568188239"><title>Verifying Quantitative Real-Time Properties of Synchronous Programs</title><year>1993</year><authors><author org="VERIMAG" id="2098566749">M. Jourdan</author><author org="VERIMAG" id="2790591678">Florence Maraninchi</author><author org="VERIMAG" id="2095279249">Alfredo Olivero</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>1503767920</reference><reference>2011694130</reference><reference>2081938726</reference><reference>2099529102</reference><reference>2135784828</reference><reference>2152815305</reference><reference>2153439859</reference><reference>2167668895</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56922-7_29</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.48108">Programming language</keyword><keyword weight="0.46207">Computer science</keyword><keyword weight="0.44696">Algorithm</keyword><keyword weight="0.57508">Compiler</keyword><keyword weight="0.46941">Theoretical computer science</keyword><keyword weight="0.0">Synchronous language</keyword><keyword weight="0.48306">Discrete time and continuous time</keyword><keyword weight="0.54192">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We propose to apply the verification techniques available for Timed Graphs [ACD90], and particularly the symbolic model-checking algorithm of [HNSY92], to the Argos [Mar92] synchronous language. We extend the language with a single delay construct that allows to express watchdogs and timeouts, at any level in the parallel or hierarchic structure of a program. We define the semantics of this extended language in terms of Timed Graphs, and show that it is a “convenient” extension of the pure Argos synchronous semantics. Indeed, for discrete time, the two semantics coincide. The Timed Graph semantics can be viewed as a continuous time semantics for Argos. We extend the Argos compiler and connect it to the KRONOS tool which implements the abovementioned model-checking algorithm.</abstract></paper>