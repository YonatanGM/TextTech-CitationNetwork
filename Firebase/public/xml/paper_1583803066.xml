<paper id="1583803066"><title>LTAM: A Location-Temporal Authorization Model</title><year>2004</year><authors><author org="Nanyang Technological University" id="2307004805">Hai Yu</author><author org="Nanyang Technological University" id="2136050841">Ee Peng Lim</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1996879666</reference><reference>2040735523</reference><reference>2041232096</reference><reference>2099119031</reference><reference>2116347193</reference><reference>2116522143</reference><reference>2150259682</reference><reference>2150388519</reference><reference>2912491435</reference></references><venue id="1133523790" type="C">Very Large Data Bases</venue><doi>10.1007/978-3-540-30073-1_13</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.54217">Access time</keyword><keyword weight="0.45969">Computer science</keyword><keyword weight="0.0">Authorization</keyword><keyword weight="0.58457">Access control</keyword><keyword weight="0.43818">Enforcement</keyword><keyword weight="0.45822">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes an authorization model for specifying access privileges of users who make requests to access a set of locations in a building or more generally a physical or virtual infrastructure. In the model, primitive locations can be grouped into composite locations and the connectivities among locations are represented in a multilevel location graph. Authorizations are defined with temporal constraints on the time to enter and leave a location and constraints on the number of times users can access a location. Access control enforcement is conducted by monitoring user movement and checking access requests against an authorization database. The authorization model also includes rules that define the relationships among authorizations. We also describe the problem of finding inaccessible locations given a set of user specified authorizations and a multilevel location graph, and outline a solution algorithm.</abstract></paper>