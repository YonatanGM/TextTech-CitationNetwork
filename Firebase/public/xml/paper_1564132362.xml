<paper id="1564132362"><title>Compiler-integrated program mutation</title><year>1991</year><authors><author org="Department of Computer Science, Purdue University, West Lafayette, IN USA" id="85310976">R.A. DeMillo</author><author org="Department of Computer Science, Purdue University, West Lafayette, IN USA" id="2162702185">E.W. Krauser</author><author org="Department of Computer Science, Purdue University, West Lafayette, IN USA" id="2150536169">A.P. Mathur</author></authors><n_citation>57</n_citation><doc_type>Conference</doc_type><references><reference>2044660257</reference></references><venue id="1143160721" type="C">Computer Software and Applications Conference</venue><doi>10.1109/CMPSAC.1991.170202</doi><keywords><keyword weight="0.44354">Programming language</keyword><keyword weight="0.45116">Software engineering</keyword><keyword weight="0.43689">Computer science</keyword><keyword weight="0.53327">System testing</keyword><keyword weight="0.55173">Compiler</keyword><keyword weight="0.40085">Error detection and correction</keyword><keyword weight="0.55694">Commercial software</keyword><keyword weight="0.56959">Software system</keyword><keyword weight="0.42777">Redundancy (engineering)</keyword><keyword weight="0.50721">Software portability</keyword><keyword weight="0.0">Software testing</keyword></keywords><publisher>IEEE</publisher><abstract>A method for integrating support for program mutation into a compiler is presented. The method is both efficient and sufficiently powerful to support program mutation software testing. Moreover, existing research suggests that this approach appears to be essential for the cost-effective application of program mutation to testing large commercial software systems. It is believed that a compiler-integrated approach will provide a significant increase in the efficiency of several existing testing tools and allow program mutation to be effectively used to test commercial software systems. u003e</abstract></paper>