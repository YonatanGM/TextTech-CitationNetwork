<paper id="1984758917"><title>Introducing variability into aspect-oriented modeling approaches</title><year>2007</year><authors><author org="I3S Nice-Sophia Antipolis, Sophia-Antipolis Cedex" id="122666603">Philippe Lahire</author><author org="IRISA Rennes, Rennes Cedex" id="2100039332">Brice Morin</author><author org="GET Telecom-Lille 1, Villeneuve d'Ascq Cedex" id="1992921720">Gilles Vanwormhoudt</author><author org="I3S Nice-Sophia Antipolis, Sophia-Antipolis Cedex" id="397505225">Alban Gaignard</author><author org="IRISA Rennes, Rennes Cedex" id="2065409138">Olivier Barais</author><author org="IRISA Rennes, Rennes Cedex" id="2807702182">Jean-Marc Jézéquel</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1483609118</reference><reference>1492969510</reference><reference>1509054644</reference><reference>1610570299</reference><reference>1978613757</reference><reference>2003890597</reference><reference>2028236851</reference><reference>2029414465</reference><reference>2042998805</reference><reference>2097964082</reference><reference>2100134231</reference><reference>2104793203</reference><reference>2156537303</reference><reference>2159386446</reference></references><venue id="1191550517" type="C">Model Driven Engineering Languages and Systems</venue><doi>10.1007/978-3-540-75209-7_34</doi><keywords><keyword weight="0.44843">Complex system</keyword><keyword weight="0.44576">Systems engineering</keyword><keyword weight="0.4546">Software engineering</keyword><keyword weight="0.45173">Computer science</keyword><keyword weight="0.47427">Web engineering</keyword><keyword weight="0.0">Aspect oriented modeling</keyword><keyword weight="0.49699">Software product line</keyword><keyword weight="0.51455">Programming complexity</keyword><keyword weight="0.49929">Reusability</keyword><keyword weight="0.47936">Design pattern</keyword><keyword weight="0.48563">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Aspect-Oriented Modeling (AOM) approaches propose to model reusable aspects, or cross-cutting concerns, that can be composed in different systems at a model or code level. Building complex systems with reusable aspects helps managing software complexity. But in general, reusability of an aspect is limited to a particular context. On the one hand, if the target model does not match the template point-to-point, the aspect cannot be applied. On the other hand, even when it is actually applied, it is woven into the target model always in the same way. In this paper, we point out the needs of variability in the AOM approaches and introduce seamless variability mechanisms in an existing AOM approach to improve reusability. Our aspects can fit various contexts and can be composed into the base model in different ways. Introducing variability into AOM approaches will turn standard aspects into highly reusable aspects.</abstract></paper>