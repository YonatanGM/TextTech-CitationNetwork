<paper id="1560962701"><title>Dynamic Change Management by Distributed Graph Transformation: Towards Configurable Distributed Systems</title><year>1998</year><authors><author org="Technical University of Berlin" id="1978163079">Gabriele Taentzer</author><author org="University of Essen" id="2250860430">Michael Goedicke</author><author org="University of Essen" id="2678887162">Torsten Meyer</author></authors><n_citation>82</n_citation><doc_type /><references><reference>1579904842</reference><reference>1642278851</reference><reference>1928902483</reference><reference>2055378322</reference><reference>2059496390</reference><reference>2068536883</reference><reference>2096910097</reference><reference>2099778632</reference><reference>2101996617</reference><reference>2103950033</reference><reference>2122976174</reference><reference>2135670602</reference><reference>2139300704</reference></references><venue id="" type="">TAGT'98 Selected papers from the 6th International Workshop on Theory and Application of Graph Transformations</venue><doi>10.1007/978-3-540-46464-8_13</doi><keywords><keyword weight="0.4917">Change management</keyword><keyword weight="0.63295">Replication (computing)</keyword><keyword weight="0.46763">Computer science</keyword><keyword weight="0.53984">Node (networking)</keyword><keyword weight="0.67703">Distributed design patterns</keyword><keyword weight="0.47005">Theoretical computer science</keyword><keyword weight="0.67296">Distributed algorithm</keyword><keyword weight="0.48297">Need to know</keyword><keyword weight="0.56472">Graph rewriting</keyword><keyword weight="0.67022">Distributed concurrency control</keyword><keyword weight="0.47873">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this contribution we consider the application of distributed graph transformation to the problem of specifying dynamic change in distributed systems. Change in distributed systems is related to at least two levels. One is the management of change in a local node of the distributed system and how such a local change is then propagated to those nodes which need to know about the change. The other aspect is changing the structure of the distributed system itself. This implies e.g. to add and/or remove a local node or an entire subsystem to/from the distributed system. In some important application areas such operations must be done during runtime without disturbing the unmodified rest of the distributed computing system. We first give an overview of our model of change and how exactly the two aspects of change interact. We describe distributed graph transformation as a technique to realize our change model. An example – a ring database – then shows how our approach can be applied to a small but nontrivial distributed system. This example shows nicely how the two aspects of change can be described uniformly using graph transformation rules and how the interaction of the two change aspects can be defined in an adequate way. Since this is ongoing work we conclude with an assessment of our approach and a brief discussion of further work.</abstract></paper>