<paper id="1512176711"><title>Reuse of Proofs in Software Verification</title><year>1993</year><authors><author org="Universität karlsruhe" id="2139633246">Wolfgang Reif</author><author org="Universität karlsruhe" id="2131326225">Kurt Stenzel</author></authors><n_citation>44</n_citation><doc_type>Conference</doc_type><references><reference>1490966766</reference><reference>1587847854</reference><reference>1590828018</reference><reference>1602450953</reference><reference>2096047179</reference><reference>2103005030</reference><reference>2123596219</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-57529-4_61</doi><keywords><keyword weight="0.66721">Functional verification</keyword><keyword weight="0.47227">Programming language</keyword><keyword weight="0.4867">Reuse</keyword><keyword weight="0.46261">Computer science</keyword><keyword weight="0.67788">Verification</keyword><keyword weight="0.54042">Mathematical proof</keyword><keyword weight="0.48078">Dynamic logic (digital electronics)</keyword><keyword weight="0.0">Proof obligation</keyword><keyword weight="0.52646">Reusability</keyword><keyword weight="0.70284">Software verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a method for automated reuse of proofs in software verification. Proofs about programs as well as proof attempts are used to guide the verification of modified programs, particularly of program corrections. We illustrate the phenomenon of reusability, present an evolutionary verification process model and discuss theoretical and technical aspects. Finally, we report on case studies with an implementation of this method in the Karlsruhe Interactive Verifier (KIV).</abstract></paper>