<paper id="1523720236"><title>Hybrid Group Reflective Architecture for Object-Oriented Concurrent Reflective Programming</title><year>1991</year><authors><author org="&lt;org_name&gt;The University of Tokyo&lt;/org_name&gt;" id="2164966972">Satoshi Matsuoka</author><author org="&lt;org_name&gt;The University of Tokyo&lt;/org_name&gt;" id="2122941679">Takuo Watanabe</author><author org="&lt;org_name&gt;The University of Tokyo&lt;/org_name&gt;" id="660900409">Akinori Yonezawa</author></authors><n_citation>59</n_citation><doc_type>Conference</doc_type><references><reference>51584646</reference><reference>1588858748</reference><reference>1592794240</reference><reference>1595694410</reference><reference>2010030599</reference><reference>2018028877</reference><reference>2019818093</reference><reference>2061154014</reference><reference>2066181430</reference><reference>2074487796</reference><reference>2078434561</reference><reference>2152834103</reference><reference>2160798075</reference><reference>2163890495</reference><reference>2168287017</reference><reference>2296636214</reference><reference>2397446124</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/BFb0057025</doi><keywords><keyword weight="0.48934">Resource management</keyword><keyword weight="0.46223">Architecture</keyword><keyword weight="0.46465">Programming language</keyword><keyword weight="0.0">Virtual time</keyword><keyword weight="0.5353">Object-oriented programming</keyword><keyword weight="0.46828">Computer science</keyword><keyword weight="0.4609">Theoretical computer science</keyword><keyword weight="0.0">Computational reflection</keyword><keyword weight="0.44362">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The benefits of computational reflection are the abilities to reason and alter the dynamic behavior of computation from within the language framework. This is more beneficial in concurrent/distributed computing, where the complexity of the system is much greater compared to sequential computing; we have demonstrated various benefits in our past research of Object-Oriented Concurrent Reflective (OOCR) architectures. Unfortunately, attempts to formulate reflective features provided in practical reflective systems, such as resource management, have led to some difficulties in maintaining the linguistic lucidity necessary in computational reflection. The primary reason is that previous OOCR architectures lack the ingredients for group-wide object coordination. We present a new OOCR language with a hybrid group reflective architecture, ABCL/R2, whose key features are the notion of heterogeneous object groups and coordinated management of group shared resources. We describe and give examples of how such management can be effectively modeled and adaptively modified/controlled with the reflective features of ABCL/R2. We also identify that this architecture embodies two kinds of reflective towers, individual and group.</abstract></paper>