<paper id="1691379155"><title>A Hyperresolution-Based Proof Procedure and its Implementation in Prolog</title><year>1987</year><authors><author org="ECRC" id="2158063412">Rainer Manthey</author><author org="ECRC" id="870525885">Fran√ßois Bry</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>2051033340</reference><reference>2099805467</reference><reference>2107046473</reference><reference>2126583599</reference></references><venue id="2756375147" type="C">German Workshop on Artificial Intelligence</venue><doi>10.1007/978-3-642-73005-4_24</doi><keywords><keyword weight="0.46969">Programming language</keyword><keyword weight="0.4538">Computer science</keyword><keyword weight="0.54562">Axiom</keyword><keyword weight="0.56359">Automated theorem proving</keyword><keyword weight="0.52132">Satisfiability</keyword><keyword weight="0.45695">Theoretical computer science</keyword><keyword weight="0.53166">Data integrity</keyword><keyword weight="0.58116">Prolog</keyword><keyword weight="0.63434">Proof procedure</keyword><keyword weight="0.0">Schema design</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Our work on automated deduction has been motivated by database problems. The set of deduction rules and integrity constraints of a logic database can be considered as axioms of a first-order theory while the actual sets of facts constitute (finite) models of this theory. Satisfiability of the underlying axioms is a necessary prerequisite for any logic database. The procedure described in this paper is the basis of a program called SATCHMO (SATisfiability CHecking by MOdel generation) that has been implemented at ECRC as part of a prototype schema design system for logic databases.</abstract></paper>