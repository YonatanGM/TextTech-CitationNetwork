<paper id="1659746359"><title>Business rule evolution and measures of business rule evolution</title><year>2003</year><authors><author org="Dept. of Comput. Sci, Manchester Univ., UK" id="2502924239">L. Lin</author><author org="Dept. of Comput. Sci, Manchester Univ., UK" id="2974209398">S. Embury</author><author org="Dept. of Comput. Sci, Manchester Univ., UK" id="2973983691">B. Warboys</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1516386166</reference><reference>1604345466</reference><reference>1817329791</reference><reference>2049624350</reference><reference>2084119909</reference><reference>2129162379</reference><reference>2138122555</reference><reference>2152192063</reference><reference>2169782617</reference></references><venue id="1204557082" type="C">International Workshop on Principles of Software Evolution</venue><doi>10.1109/IWPSE.2003.1231218</doi><keywords><keyword weight="0.43508">Systems engineering</keyword><keyword weight="0.4486">Software engineering</keyword><keyword weight="0.44046">Computer science</keyword><keyword weight="0.55089">Software system</keyword><keyword weight="0.55598">Software metric</keyword><keyword weight="0.60525">Software evolution</keyword><keyword weight="0.55182">Software construction</keyword><keyword weight="0.5598">Software development</keyword><keyword weight="0.56322">Business rule</keyword><keyword weight="0.55515">Software sizing</keyword><keyword weight="0.55426">Social software engineering</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>There is an urgent industrial need to enforce the changes of business rules (BRs) to software systems quickly, reliably and economically. Unfortunately, evolving BRs in most existing software systems is both time-consuming and error-prone. In order to manage, control and improve BR evolution, it is necessary that the software evolution community comes to an understanding of the ways in which BRs are implemented and how BR evolution can be facilitated or hampered by the design of software systems. We suggest that new software metrics are needed to allow us to measure the characteristics of BR evolution and to help us to explore possible improvements in a systematic way. A suitable set of BR-related metrics help us to discover the root causes of the difficulties inherent in BR evolution, evaluate the success of proposed approaches to BR evolution and improve the BR evolution process as a whole.</abstract></paper>