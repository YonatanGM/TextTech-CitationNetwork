<paper id="1556422878"><title>Java Program Verification Challenges</title><year>2002</year><authors><author org="Univ. Nijmegen" id="2105127320">Bart Jacobs</author><author org="Univ. Nijmegen" id="1188065969">Joseph Kiniry</author><author org="Univ. Nijmegen" id="2030916568">Martijn Warnier</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1488188749</reference><reference>1512952371</reference><reference>1573154295</reference><reference>1578560741</reference><reference>1583826417</reference><reference>1594381772</reference><reference>1644882639</reference><reference>1842222980</reference><reference>1923766689</reference><reference>1967877062</reference><reference>1993836075</reference><reference>1995008247</reference><reference>2094160561</reference><reference>2103953153</reference><reference>2104029108</reference><reference>2111706174</reference><reference>2114879684</reference><reference>2147543351</reference><reference>2164810907</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1007/978-3-540-39656-7_8</doi><keywords><keyword weight="0.6039">Functional verification</keyword><keyword weight="0.46095">Programming language</keyword><keyword weight="0.48682">Object-oriented programming</keyword><keyword weight="0.45091">Computer science</keyword><keyword weight="0.53774">Correctness</keyword><keyword weight="0.62481">Java Modeling Language</keyword><keyword weight="0.46286">Component-based software engineering</keyword><keyword weight="0.51606">Formal methods</keyword><keyword weight="0.55523">Java</keyword><keyword weight="0.46366">Software development</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper aims to raise the level of verification challenges by presenting a collection of sequential Java programs with correctness annotations formulated in JML. The emphasis lies more on the underlying semantical issues than on verification.</abstract></paper>