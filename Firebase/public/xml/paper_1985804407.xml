<paper id="1985804407"><title>Automating the Transformational Development of Software</title><year>1985</year><authors><author org="Department of Computer Science, University of Oregon" id="2974219580">S.F. Fickas</author></authors><n_citation>112</n_citation><doc_type>Journal</doc_type><references><reference>28640463</reference><reference>1492953877</reference><reference>1502719717</reference><reference>1988901815</reference><reference>1994184566</reference><reference>2009906188</reference><reference>2019712414</reference><reference>2077271799</reference><reference>2094837773</reference></references><venue id="8351582" type="J">IEEE Transactions on Software Engineering</venue><doi>10.1109/TSE.1985.231878</doi><keywords><keyword weight="0.46475">Systems engineering</keyword><keyword weight="0.48024">Software engineering</keyword><keyword weight="0.54526">Package development process</keyword><keyword weight="0.45905">Computer science</keyword><keyword weight="0.58079">Software system</keyword><keyword weight="0.49615">Software</keyword><keyword weight="0.56208">Software development process</keyword><keyword weight="0.55269">Systems development life cycle</keyword><keyword weight="0.53869">Software verification and validation</keyword><keyword weight="0.56437">Software construction</keyword><keyword weight="0.57703">Software development</keyword></keywords><publisher>University of California, Irvine</publisher><abstract>This paper reports on efforts to extend the transformational implementation (TI) model of software development [1]. In particular, we describe a system that uses AI techniques to automate major portions of a transformational implementation. The work has focused on the formalization of the goals, strategies, selection rationale, and finally the transformations used by expert human developers. A system has been constructed that includes representations for each of these problem-solving components, as well as machinery for handling human-system interaction and problem-solving control. We will present the system and illustrate automation issues through two annotated examples.</abstract></paper>