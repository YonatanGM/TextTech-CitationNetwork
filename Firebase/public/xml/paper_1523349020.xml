<paper id="1523349020"><title>Moving Discs Between Polygons</title><year>1988</year><authors><author org="FB 10, UniversitÃ¤t des Saarlandes" id="2798997019">Hans Rohnert</author></authors><n_citation>1</n_citation><doc_type>Conference</doc_type><references><reference>1965440866</reference><reference>1986022261</reference><reference>2004389974</reference><reference>2011124327</reference><reference>2011999472</reference><reference>2060513624</reference><reference>2092200806</reference><reference>2294603245</reference><reference>2982998056</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/3-540-19488-6_137</doi><keywords><keyword weight="0.48014">Binary logarithm</keyword><keyword weight="0.45953">Discrete mathematics</keyword><keyword weight="0.57098">Polygon</keyword><keyword weight="0.4598">Combinatorics</keyword><keyword weight="0.0">Collision free</keyword><keyword weight="0.4132">Preprocessor</keyword><keyword weight="0.5197">Time complexity</keyword><keyword weight="0.4098">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>An algorithm is given for finding a collision free path for a disc between a collection of polygons having n corners in total. The polygons are fixed and can be preprocessed. One query specifies the radius r of the disc to be moved and start and destination point of the center of the disc. The answer whether a feasible path exists is given in time O(log n). Returning a feasible path is done in additional time proportional to the length of the description of the path. Preprocessing time is O(n log n) and space complexity is O(n).</abstract></paper>