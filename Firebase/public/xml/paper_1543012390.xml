<paper id="1543012390"><title>A data modeling methodology for the design and implementation of information systems</title><year>1986</year><authors><author org="Hewlett-Packard Laboratories, 1501 Page Mill Road, Palo Alto, California#TAB#" id="213392656">Peter Lyngbaek</author><author org="Hewlett-Packard Laboratories, 1501 Page Mill Road, Palo Alto, California#TAB#" id="2251908480">William Kent</author></authors><n_citation>43</n_citation><doc_type /><references><reference>120372354</reference><reference>180117855</reference><reference>311063090</reference><reference>1525915701</reference><reference>1540715848</reference><reference>1562783376</reference><reference>1585197271</reference><reference>1749190968</reference><reference>1770006921</reference><reference>1980942432</reference><reference>2013012235</reference><reference>2027750453</reference><reference>2039601877</reference><reference>2070115085</reference><reference>2074756472</reference><reference>2103219113</reference><reference>2115759606</reference><reference>2116879651</reference><reference>2122789628</reference><reference>2130474477</reference><reference>2912039080</reference></references><venue id="" type="">OODS '86 Proceedings on the 1986 international workshop on Object-oriented database systems</venue><doi>10.1007/978-3-642-84374-7_14</doi><keywords><keyword weight="0.6708">Data modeling</keyword><keyword weight="0.64919">Software design</keyword><keyword weight="0.48058">Software engineering</keyword><keyword weight="0.46953">Systems engineering</keyword><keyword weight="0.47313">Computer science</keyword><keyword weight="0.68631">Formal specification</keyword><keyword weight="0.65786">Software system</keyword><keyword weight="0.64943">IDEF1X</keyword><keyword weight="0.66313">Formal methods</keyword><keyword weight="0.65729">Data model</keyword><keyword weight="0.64728">Software development</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>Formal specifications that precisely and correctly define the semantics of software systems become increasingly important as the complexity of such systems increase. The emerging set of semantic data models which support both structural and operational abstractions are excellent tools for formal specifications. In this paper we introduce a methodology, based on an object-oriented data model, for the design and development of large software systems. The methodology is demonstrated by applying the object-oriented data model to the specification of a database system which implements the given model. The specification serves several purposes: it formally defines the precise semantics of the operations of the data model, it provides a basis from which the corresponding database system software can be systematically derived, and it tests and demonstrates the adequacy of such a model for defining software systems in general. The design methodology introduced combines techniques from data modeling, formal specifications, and software engineering.</abstract></paper>