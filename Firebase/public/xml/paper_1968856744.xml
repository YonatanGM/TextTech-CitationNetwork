<paper id="1968856744"><title>Software reuse through information retrieval</title><year>1986</year><authors><author org="" id="147044506">W B Frakes</author><author org="" id="2302731378">B A Nejmeh</author></authors><n_citation>128</n_citation><doc_type>Conference</doc_type><references><reference>1539062564</reference><reference>1539211164</reference><reference>1956559956</reference><reference>2005546948</reference><reference>2010455929</reference><reference>2043351574</reference><reference>2068632118</reference><reference>2101814813</reference><reference>2138709157</reference></references><venue id="1140684652" type="C">International ACM SIGIR Conference on Research and Development in Information Retrieval</venue><doi>10.1145/24634.24636</doi><keywords><keyword weight="0.42879">Information retrieval</keyword><keyword weight="0.68357">Package development process</keyword><keyword weight="0.44475">Computer science</keyword><keyword weight="0.65249">Software metric</keyword><keyword weight="0.65341">Resource-oriented architecture</keyword><keyword weight="0.70065">Software construction</keyword><keyword weight="0.67631">Software quality</keyword><keyword weight="0.67309">Software development</keyword><keyword weight="0.44674">Database</keyword><keyword weight="0.65355">Software sizing</keyword><keyword weight="0.65619">Social software engineering</keyword></keywords><publisher>ACM</publisher><abstract>There is widespread need for safe, verifiable, efficient, and reliable software that can be delivered in a timely manner. Software reuse can make a valuable contrbution toward this goal by increasing programmer productivity and software quality. Unfortunately, the amount of software reuse currently done is quite small. DeMarco [1] estimates that in the average software development environment only about five percent of code is reused.</abstract></paper>