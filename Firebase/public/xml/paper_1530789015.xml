<paper id="1530789015"><title>Advances in the Design of the BANG File</title><year>1989</year><authors><author org="ECRC" id="2082709563">Michael Freeston</author></authors><n_citation>34</n_citation><doc_type /><references><reference>42286387</reference><reference>100341640</reference><reference>1993906297</reference><reference>2084873722</reference><reference>2092177011</reference><reference>2151521932</reference></references><venue id="" type="">FOFO '89 Proceedings of the 3rd International Conference on Foundations of Data Organization and Algorithms</venue><doi>10.1007/3-540-51295-0_140</doi><keywords><keyword weight="0.66671">Directory information tree</keyword><keyword weight="0.50156">Arithmetic underflow</keyword><keyword weight="0.50145">Joins</keyword><keyword weight="0.65642">Directory</keyword><keyword weight="0.46227">Direct representation</keyword><keyword weight="0.4948">Tuple</keyword><keyword weight="0.45314">Computer science</keyword><keyword weight="0.67084">BANG file</keyword><keyword weight="0.45083">Theoretical computer science</keyword><keyword weight="0.61608">Grid file</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A recent paper described a new kind of grid file — the BANG file — which, unlike previous grid file designs, has the important property that the directory never expands faster than the data, whatever the dimensionality of the file or the form of the data distribution. Experience with the first implementation of the BANG file has given new insights into its properties and behaviour, which have enabled significant improvements in performance to be obtained without compromising the conceptual simplicity of the original to :[83],"an individual tuple now always succeeds in a single pass down the directory tree, as with a or :[102],"underflow of data or directory pages never leads to more page splits or merges than in a B-tree of the same directory :[126],"direct representation of a sub-space of the data space is guaranteed to be a minimal representation — substantially improving the efficiency of range searches, partial match searches and joins.</abstract></paper>