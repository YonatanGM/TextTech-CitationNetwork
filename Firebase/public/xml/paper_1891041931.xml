<paper id="1891041931"><title>A Fast and Simple Algorithm for Identifying 2-Monotonic Positive Boolean Functions</title><year>1995</year><authors><author org=", Kyoto University#TAB#" id="2343481990">Kazuhisa Makino</author><author org=", Kyoto University#TAB#" id="2110223873">Toshihide Ibaraki</author></authors><n_citation>6</n_citation><doc_type>Conference</doc_type><references><reference>1594632484</reference><reference>1607453745</reference><reference>1609370892</reference><reference>2007940874</reference><reference>2019363670</reference><reference>2041324781</reference><reference>2065895258</reference><reference>2080947358</reference></references><venue id="1175727152" type="C">International Symposium on Algorithms and Computation</venue><doi>10.1007/BFb0015434</doi><keywords><keyword weight="0.49819">Karp–Lipton theorem</keyword><keyword weight="0.49178">Maximum satisfiability problem</keyword><keyword weight="0.44794">Discrete mathematics</keyword><keyword weight="0.47755">Boolean circuit</keyword><keyword weight="0.4519">Combinatorics</keyword><keyword weight="0.52999">Boolean algebras canonically defined</keyword><keyword weight="0.48557">Parity function</keyword><keyword weight="0.48232">Time complexity</keyword><keyword weight="0.47497">Boolean expression</keyword><keyword weight="0.40053">Mathematics</keyword><keyword weight="0.47554">Complete Boolean algebra</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Consider the problem of identifying min T(f) and max F(f) of a positive (i.e., monotone) Boolean function f, by using membership queries only, where min T(f) (max F(f)) denotes the set of minimal true vectors (maximal false vectors) of f. As the existence of a polynomial total time algorithm (i.e., polynomial time in the length of input and output) for this problem is still open, we consider here a restricted problem: given an unknown positive function f of n variables, decide whether f is 2-monotonic or not, and if f is 2-monotonic, output both min T(f) and max. F(f). For this problem, we propose a simple algorithm, which is based on the concept of maximum latency, and show that it uses O(n2m) time and O(n2m) queries, where m=¦ min T(f)¦+¦ max F(f)¦. This answers affirmatively the conjecture raised in [3, 4], and is an improvement over the two algorithms discussed therein: one uses O(n3m) time and O(n3m) queries, and the other uses O(nm2+n2m) time and O(nm) queries.</abstract></paper>