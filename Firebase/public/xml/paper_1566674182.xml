<paper id="1566674182"><title>Designing regular array architectures using higher order functions</title><year>1985</year><authors><author org="Oxford University, Oxford UK" id="2154442338">Mary Sheeran</author></authors><n_citation>28</n_citation><doc_type>Conference</doc_type><references><reference>1527809250</reference><reference>1582257052</reference><reference>1606316858</reference><reference>1666015432</reference><reference>1984366601</reference><reference>2003131643</reference><reference>2162873316</reference><reference>2172307690</reference><reference>2504421574</reference></references><venue id="1162793720" type="C">International Conference on Functional Programming</venue><doi>10.1007/3-540-15975-4_39</doi><keywords><keyword weight="0.55314">Program transformation</keyword><keyword weight="0.50689">Adder</keyword><keyword weight="0.56335">Functional programming</keyword><keyword weight="0.46805">Computer science</keyword><keyword weight="0.56978">Correctness</keyword><keyword weight="0.51993">Systolic array</keyword><keyword weight="0.47391">Theoretical computer science</keyword><keyword weight="0.49698">Engineering design process</keyword><keyword weight="0.50695">Cycles per instruction</keyword><keyword weight="0.53095">Very-large-scale integration</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Functional programmers often use higher order functions such as map, reduce and filter in writing programs. By giving such higher order functions geometric as well as behavioural interpretation, we use similar techniques to design regular array architectures. We use some higher order functions from programming and two which were introduced specifically for describing and reasoning about regular arrays. Our higher order functions obey a number of algebraic laws. This allows us to use program transformation in the design process. We transform a correct (and understandable) initial design into one which is more suitable for VLSI implementation. The algebraic laws guarantee the correctness of the final circuit.</abstract></paper>