<paper id="1482620438"><title>Open Resource Allocation for Mobile Code</title><year>1997</year><authors><author org="University of Zurich, Switzerland and International Computer Science Institute (ICSI)" id="2805848600">Christian F. Tschudin</author></authors><n_citation>34</n_citation><doc_type /><references><reference>1491938051</reference><reference>2018073438</reference><reference>2107014025</reference><reference>2110982196</reference><reference>2111087562</reference><reference>2138661659</reference><reference>2296073022</reference><reference>2753542457</reference></references><venue id="" type="">MA '97 Proceedings of the First International Workshop on Mobile Agents</venue><doi>10.1007/3-540-62803-7_34</doi><keywords><keyword weight="0.45965">Computer science</keyword><keyword weight="0.46588">Openness to experience</keyword><keyword weight="0.57012">Resource allocation</keyword><keyword weight="0.0">Mobile code</keyword><keyword weight="0.51251">Open system (systems theory)</keyword><keyword weight="0.47512">Standardization</keyword><keyword weight="0.45902">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Mobile code technology leads to a new type of “open systems”: instead of applying openness to a standardization process we now require the running systems to become open for foreign code. The question then is how far this technical openness can go for mobile code. The less constraints we impose on hosts running mobile code, the more can the benefits of mobile code be exploited. However, there must necessarily be basic constraints regarding the utilization of resources which are always finite and most of the time will be operated near the saturation point. In this paper we argue in favor of openness even at the level of resource allocation. We link this topic to (open) market models, describe the mechanisms we developed so far for communication messengers and show how they are used to allocate resources in an open way. Finally we present experimental results of validation runs which help us testing these mechanisms.</abstract></paper>