<paper id="1556454286"><title>On the Precise Meaning of OCL Constraints</title><year>2002</year><authors><author org="Ludwig-Maximilians-Universität München" id="36835992">Rolf Hennicker</author><author org="Technische Universität Dresden¶" id="2559349117">Heinrich Hußmann</author><author org="CNRS &amp; ENS de Cachan" id="71173655">Michel Bidoit</author></authors><n_citation>23</n_citation><doc_type>Journal</doc_type><references><reference>1483157468</reference><reference>1490861245</reference><reference>1495380017</reference><reference>1495459135</reference><reference>1568412184</reference><reference>1995008247</reference><reference>2064025843</reference><reference>2111706174</reference><reference>2161825580</reference><reference>2339444902</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45669-4_5</doi><keywords><keyword weight="0.43683">Programming language</keyword><keyword weight="0.44644">Unified Modeling Language</keyword><keyword weight="0.4192">Computer science</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.41681">Natural language processing</keyword><keyword weight="0.61009">Object Constraint Language</keyword><keyword weight="0.0">Proof obligation</keyword><keyword weight="0.40038">Distributed computing</keyword><keyword weight="0.47167">Class diagram</keyword><keyword weight="0.4476">Knowledge representation and reasoning</keyword><keyword weight="0.44627">Object-oriented programming</keyword><keyword weight="0.45897">Semantics</keyword><keyword weight="0.0">Semantics of logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>When OCL is applied in concrete examples, many questions arise about the precise meaning of OCL constraints. The same kind of difficulties appears when automatic support tools for OCL are designed. These questions are due to the lack of a precise semantics of OCL constraints in the context of a UML model. The aim of this paper is to contribute to a clarification of several issues, like interpretation of invariants and pre- and postconditions, treatment of undefined values, inheritance of constraints, transformation rules for OCL constraints and computation of proof obligations. Our study is based on a formal, abstract semantics of OCL.</abstract></paper>