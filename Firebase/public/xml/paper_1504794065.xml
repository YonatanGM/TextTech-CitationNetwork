<paper id="1504794065"><title>On Concurrent Zero-Knowledge with Pre-processing</title><year>1999</year><authors><author org="University of California San Diego, and Telcordia Technologies, Inc." id="2923602960">Giovanni Di Crescenzo</author><author org="Telcordia Technologies, Inc.#TAB#" id="1482108584">Rafail Ostrovsky</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1502416796</reference><reference>1504280744</reference><reference>1538463291</reference><reference>1539572409</reference><reference>1621317130</reference><reference>1631229389</reference><reference>1885156594</reference><reference>1970606468</reference><reference>1996888795</reference><reference>2011112377</reference><reference>2036788199</reference><reference>2070773953</reference><reference>2137883105</reference><reference>2144820675</reference><reference>2151433956</reference><reference>2162559375</reference><reference>2163172859</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48405-1_31</doi><keywords><keyword weight="0.44309">Polynomial</keyword><keyword weight="0.47984">Cryptography</keyword><keyword weight="0.46034">Computer science</keyword><keyword weight="0.50323">Commitment scheme</keyword><keyword weight="0.45927">Theoretical computer science</keyword><keyword weight="0.44051">Preprocessor</keyword><keyword weight="0.52961">Mathematical proof</keyword><keyword weight="0.55382">Zero-knowledge proof</keyword><keyword weight="0.45671">The Internet</keyword><keyword weight="0.46282">Discrete logarithm</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Concurrent Zero-Knowledge protocols remain zero-knowledge even when many sessions of them are executed together. These protocols have applications in a distributed setting, where many executions of the same protocol must take place at the same time by many parties, such as the Internet. In this paper, we are concerned with the number of rounds of interaction needed for such protocols and their efficiency. Here, we show an efficient constant-round concurrent zero-knowledge protocol with preprocessing for all languages in NP, where both the preprocessing phase and the proof phase each require 3 rounds of interaction. We make no timing assumptions or assumptions on the knowledge of the number of parties in the system. Moreover, we allow arbitrary interleavings in both the preprocessing and in the proof phase. Our techniques apply to both zero-knowledge proof systems and zero-knowledge arguments and we show how to extend our technique so that polynomial number of zero-knowledge proofs/arguments can be executed after the preprocessing phase is done.</abstract></paper>