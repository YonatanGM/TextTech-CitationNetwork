<paper id="1966460148"><title>A philosophy for software measurement</title><year>1990</year><authors><author org="Department of Computer Science, Iowa State University Ames, IowaUSA" id="2125701193">A. L. Baker</author><author org="Department of Computer Science, Colorado State University, Fort Collins, ColoradoUSA" id="1998923582">J. M. Bieman</author><author org="Centre for Software Reliability, The City University, London, United Kingdom" id="1610973832">N. Fenton</author><author org="Department of Computing and Information Sciences, Kansas State University, Manhattan, KansasUSA" id="2146532449">D. A. Gustafson</author><author org="Department of Computing and Information Sciences, Kansas State University, Manhattan, KansasUSA" id="2493321135">A. Melton</author><author org="Department of Electrical and Electronic Engineering, Polytechnic of the South Bank, London, United Kingdom" id="676309546">R. Whitty</author></authors><n_citation>82</n_citation><doc_type>Journal</doc_type><references><reference>1985551847</reference><reference>2025879499</reference><reference>2059051069</reference></references><venue id="37879656" type="J">Journal of Systems and Software</venue><doi>10.1016/0164-1212(90)90050-V</doi><keywords><keyword weight="0.66369">Personal software process</keyword><keyword weight="0.47258">Software engineering</keyword><keyword weight="0.45481">Systems engineering</keyword><keyword weight="0.65991">Software peer review</keyword><keyword weight="0.45232">Computer science</keyword><keyword weight="0.65894">Package development process</keyword><keyword weight="0.65606">Software metric</keyword><keyword weight="0.68608">Software construction</keyword><keyword weight="0.68534">Software measurement</keyword><keyword weight="0.66411">Software development</keyword><keyword weight="0.67371">Social software engineering</keyword></keywords><publisher>Elsevier Science Inc.</publisher><abstract>Abstract We as a group—called the Grubstake Group—are convinced that software measures are essential for “controlling” software. Thus, we are dedicated to producing an environment in which software measures can be confidently used by software managers and programmers. However, we are also convinced that such an environment can only be created if there exists a formal and rigorous foundation for software measurement. This foundation will not have to be understood by the users of the software measures, but it will have to be understood by those who define, validate, and provide tool support for the measures. It is this foundation that we are introducing in this article.</abstract></paper>