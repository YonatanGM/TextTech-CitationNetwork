<paper id="1550487903"><title>Expressing checkable properties of dynamic systems: the Bandera Specification Language</title><year>2002</year><authors><author org="Department of Information and Computer Science, University of Hawaii, Honolulu, HI 96822, USA; E-mail: corbett@hawaii.edu, US" id="2950909434">James C. Corbett</author><author org="Department of Computing and Information Sciences, Kansas State University, Manhattan, KS 66506, USA; E-mail: {dwyer,hatcliff,robby}@cis.ksu.edu, US" id="2156583880">Matthew B. Dwyer</author><author org="Department of Computing and Information Sciences, Kansas State University, Manhattan, KS 66506, USA; E-mail: {dwyer,hatcliff,robby}@cis.ksu.edu, US" id="1981077923">John Hatcliff</author><author org="Department of Computing and Information Sciences, Kansas State University, Manhattan, KS 66506, USA; E-mail: {dwyer,hatcliff,robby}@cis.ksu.edu, US" id="242642603">Robby</author></authors><n_citation>58</n_citation><doc_type>Journal</doc_type><references><reference>298244054</reference><reference>1546606300</reference><reference>1559397325</reference><reference>1590185363</reference><reference>1599489402</reference><reference>1644882639</reference><reference>1691700263</reference><reference>1974940962</reference><reference>1996832037</reference><reference>2001289891</reference><reference>2018118431</reference><reference>2040060046</reference><reference>2059224852</reference><reference>2060440626</reference><reference>2093916942</reference><reference>2105142318</reference><reference>2115309705</reference><reference>2118926712</reference><reference>2135274583</reference><reference>2145326461</reference><reference>2171480813</reference></references><venue id="122567160" type="J">International Journal on Software Tools for Technology Transfer</venue><doi>10.1007/s100090200075</doi><keywords><keyword weight="0.58677">Specification language</keyword><keyword weight="0.47736">Programming language</keyword><keyword weight="0.55924">Model checking</keyword><keyword weight="0.50693">Object-oriented programming</keyword><keyword weight="0.53353">Source code</keyword><keyword weight="0.45915">Computer science</keyword><keyword weight="0.54285">Correctness</keyword><keyword weight="0.51534">Assertion</keyword><keyword weight="0.5043">Software system</keyword><keyword weight="0.51854">Java</keyword></keywords><publisher>Springer</publisher><abstract>Research on how to reason about correctness properties of software systems using model checking is advancing rapidly. Work on extracting finite-state models from program source code and on abstracting those models is focused on enabling the tractable checking of program properties such as freedom from deadlock and assertion violations. For the most part, the problem of specifying more general program properties has not been considered. In this paper, we report on the support for specifying properties of dynamic multi-threaded Java programs that we have built into the Bandera system. Bandera extracts finite-state models, in the input format of several existing model checkers, from Java code based on the property to be checked. The Bandera Specification Language (BSL) provides a language for defining general assertions and pre/post conditions on methods. It also supports the definition of observations that can be made of the state of program objects and the incorporation of those observations as predicates that can be instantiated in the scope of object quantifiers and used in describing common forms of state/event sequencing properties. We illustrate how BSL can be used to formulate a variety of system correctness properties for several multi-threaded Java applications.</abstract></paper>