<paper id="1596800979"><title>Optimal versioning of objects</title><year>1992</year><authors><author org="Dept. of Electr. Eng., Polytech. Univ., Brooklyn, NY, USA" id="2973781085">V.J. Tsotras</author><author org="" id="2974337781">B. Gopinath</author></authors><n_citation>20</n_citation><doc_type>Conference</doc_type><references><reference>17149905</reference><reference>1887907765</reference><reference>1971550377</reference><reference>1985177045</reference><reference>1993022201</reference><reference>2013025864</reference><reference>2056287941</reference><reference>2090021115</reference><reference>2091207472</reference><reference>2096527593</reference><reference>2100576135</reference><reference>2138091434</reference><reference>2142947709</reference><reference>2154277587</reference><reference>2154322583</reference><reference>2165596211</reference><reference>2165621523</reference><reference>2169100094</reference><reference>2215315499</reference></references><venue id="1163988186" type="C">International Conference on Data Engineering</venue><doi>10.1109/ICDE.1992.213174</doi><keywords><keyword weight="0.47951">Data structure</keyword><keyword weight="0.0">Space requirements</keyword><keyword weight="0.46057">Concurrency control</keyword><keyword weight="0.44548">Computer science</keyword><keyword weight="0.0">Object Class</keyword><keyword weight="0.46828">Information engineering</keyword><keyword weight="0.4577">Application software</keyword><keyword weight="0.44801">Optical disc</keyword><keyword weight="0.43027">Database</keyword><keyword weight="0.48852">Software versioning</keyword><keyword weight="0.45267">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The purpose of versioning is to reconstruct any past state of an object class. The authors show that access to any past version is possible in almost constant time, while the space used is only linear to the number of changes occurring in the class evolution. As a result, versioning with fast reconstruction can be supported in an object-oriented environment without using excessive space requirements. It is also proved that the solution is optimal among all approaches that use the same space limitations. A crucial characteristic of the results is that they can be easily implemented on a storage facility that uses a magnetic disk and an optical disk. u003e</abstract></paper>