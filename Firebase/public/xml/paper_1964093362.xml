<paper id="1964093362"><title>The implementation of an integrated concurrency control and recovery scheme</title><year>1982</year><authors><author org="Computer Corporation of America, Cambridge, Massachusetts" id="2157979715">Arvola Chan</author><author org="Computer Corporation of America, Cambridge, Massachusetts" id="2123369308">Stephen Fox</author><author org="Computer Corporation of America, Cambridge, Massachusetts" id="2112716508">Wen-Te K. Lin</author><author org="Computer Corporation of America, Cambridge, Massachusetts" id="2480798219">Anil Nori</author><author org="Computer Corporation of America, Cambridge, Massachusetts" id="1740826834">Daniel R. Ries</author></authors><n_citation>137</n_citation><doc_type>Conference</doc_type><references><reference>1991199257</reference><reference>2011839903</reference><reference>2016631874</reference><reference>2070115085</reference><reference>2106887953</reference><reference>2129286037</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/582353.582386</doi><keywords><keyword weight="0.61827">Timestamp-based concurrency control</keyword><keyword weight="0.64213">Isolation (database systems)</keyword><keyword weight="0.6433">Serializability</keyword><keyword weight="0.63068">Concurrency control</keyword><keyword weight="0.46942">Computer science</keyword><keyword weight="0.66559">Multiversion concurrency control</keyword><keyword weight="0.67905">Distributed concurrency control</keyword><keyword weight="0.6368">Non-lock concurrency control</keyword><keyword weight="0.46685">Database</keyword><keyword weight="0.66508">Optimistic concurrency control</keyword><keyword weight="0.47291">Distributed computing</keyword></keywords><publisher>ACM</publisher><abstract>This paper describes the implementation level design of an integrated concurrency control and recovery scheme based on the maintenance of multiple versions of data objects in a database. The concurrency control mechanism enhances parallelism by eliminating interference between retrieval and update transactions. The recovery mechanism permits efficient transaction and system recovery by keeping before-images of data objects at the page (block) level. This paper addresses the key technical problems in the implementation of such an integrated scheme. We present an efficient garbage collection algorithm for reclaiming storage space used by old versions of data objects that will no longer be accessed. We also propose an on-line backup algorithm that will permit the backup procedure to run in parallel with regular transactions. This integrated concurrency control and recovery scheme is being implemented in the LDM: the local database manager component of a distributed database management system, now being developed by Computer Corporation of America, that will support the ADAPLEX database application programming language [Chan81a, Smith81].</abstract></paper>