<paper id="1495653136"><title>A new paradigm for collision-free hashing: incrementality at reduced cost</title><year>1997</year><authors><author org="Dept. of Computer Science &amp; Engineering, University of California at San Diego, La Jolla, California" id="2052950829">Mihir Bellare</author><author org="MIT Laboratory for Computer science, Cambridge, MA#TAB#" id="83353782">Daniele Micciancio</author></authors><n_citation>192</n_citation><doc_type>Conference</doc_type><references><reference>149470655</reference><reference>1493969756</reference><reference>1522255819</reference><reference>1547537489</reference><reference>1549228503</reference><reference>1582713334</reference><reference>1595153681</reference><reference>1600432225</reference><reference>1660562555</reference><reference>1921478076</reference><reference>1972792640</reference><reference>2008518944</reference><reference>2052267638</reference><reference>2074196013</reference><reference>2104633167</reference><reference>2142048307</reference><reference>2151413173</reference><reference>2152377620</reference><reference>2167569963</reference><reference>2916302273</reference></references><venue id="1140213147" type="C">Theory and Application of Cryptographic Techniques</venue><doi>10.1007/3-540-69053-0_13</doi><keywords><keyword weight="0.65199">SHA-2</keyword><keyword weight="0.45091">Discrete mathematics</keyword><keyword weight="0.67073">Double hashing</keyword><keyword weight="0.43779">Computer science</keyword><keyword weight="0.65668">Collision resistance</keyword><keyword weight="0.65759">Cryptographic hash function</keyword><keyword weight="0.46094">Algorithm</keyword><keyword weight="0.4558">Theoretical computer science</keyword><keyword weight="0.66308">SWIFFT</keyword><keyword weight="0.69359">Hash function</keyword><keyword weight="0.65395">Security of cryptographic hash functions</keyword><keyword weight="0.66178">MDC-2</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a simple, new paradigm for the design of collision-free hash functions. Any function emanating from this paradigm is incremental. (This means that if a message x which I have previously hashed is modified to x′ then rather than having to re-compute the hash of x′ from scratch, I can quickly "update" the old hash value to the new one, in time proportional to the amount of modification made in x to get x′). Also any function emanating from this paradigm is parallelizable, useful for hardware implementation. We derive several specific functions from our paradigm. All use a standard hash function, assumed ideal, and some algebraic operations. The first function, MuHASH, uses one modular multiplication per block of the message, making it reasonably efficient, and significantly faster than previous incremental hash functions. Its security is proven, based on the hardness of the discrete logarithm problem. A second function, AdHASH, is even faster, using additions instead of multiplications, with security proven given either that approximation of the length of shortest lattice vectors is hard or that the weighted subset sum problem is hard. A third function, LtHASH, is a practical variant of recent lattice based functions, with security proven based, again on the hardness of shortest lattice vector approximation.</abstract></paper>