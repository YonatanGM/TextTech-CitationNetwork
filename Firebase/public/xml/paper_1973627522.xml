<paper id="1973627522"><title>Model Checking Mobile Processes</title><year>1996</year><authors><author org="Swedish Institute of Computer Science, Box 1263, S-164 28, Kista, Sweden#TAB#" id="2464531201">Mads Dam</author></authors><n_citation>91</n_citation><doc_type>Journal</doc_type><references><reference>1532742882</reference><reference>1550474961</reference><reference>1576490998</reference><reference>1679653852</reference><reference>1755813429</reference><reference>1971107784</reference><reference>1979159285</reference><reference>1992582873</reference><reference>1997387389</reference><reference>2013672985</reference><reference>2036996017</reference><reference>2055986709</reference><reference>2083398633</reference><reference>2106102830</reference><reference>2112535338</reference><reference>2170626879</reference><reference>2171536993</reference><reference>2913663755</reference></references><venue id="59933527" type="J">Information &amp; Computation</venue><doi>10.1006/inco.1996.0072</doi><keywords><keyword weight="0.43888">Discrete mathematics</keyword><keyword weight="0.54122">Model checking</keyword><keyword weight="0.53281">Correctness</keyword><keyword weight="0.50339">Propositional calculus</keyword><keyword weight="0.52726">Bisimulation</keyword><keyword weight="0.53195">Temporal logic</keyword><keyword weight="0.46844">Fixed point</keyword><keyword weight="0.50885">Name binding</keyword><keyword weight="0.41129">Mathematics</keyword><keyword weight="0.49831">Recursion</keyword></keywords><publisher>Academic Press, Inc.</publisher><abstract>We introduce a temporal logic for the polyadic?-calculus based on fixed point extensions of Hennessy?Milner logic. Features are added to account for parametrisation, generation, and passing of names, including the use, following Milner, of dependent sum and product to account for (unlocalised) input and output, and explicit parametrisation on names using?-abstraction and application. The latter provides a single name binding mechanism supporting all parametrisation needed. A proof system and decision procedure is developed based on Stirling and Walkeru0027s approach to model checking the modal?-calculus using constants. One difficulty, for both conceptual and efficiency-based reasons, is to avoid the explicit use of the?-rule for parametrised processes. A key idea, following Hennessy and Linu0027s approach to deciding bisimulation for certain types of value-passing processes, is the relativisation of correctness assertions to conditions on names. Based on this idea, a proof system and a decision procedure are obtained for arbitrary?-calculus processes with finite control,?-calculus correlates of CCS finite-state processes, avoiding the use of parallel composition in recursively defined processes.</abstract></paper>