<paper id="1490452953"><title>Verifying the correctness of AADL modules using model checking</title><year>1989</year><authors><author org="FB 10, University of Oldenburg" id="2050131096">Bernhard Josko</author></authors><n_citation>43</n_citation><doc_type>Conference</doc_type><references><reference>1487373862</reference><reference>1538935805</reference><reference>1975657455</reference><reference>2000138546</reference><reference>2003227046</reference><reference>2004306067</reference><reference>2054554282</reference><reference>2067441543</reference><reference>2118382442</reference></references><venue id="2758012628" type="C">REX Workshop on Stepwise Refinement of Distributed Systems, Models, Formalisms, Correctness</venue><doi>10.1007/3-540-52559-9_72</doi><keywords><keyword weight="0.63678">Abstraction model checking</keyword><keyword weight="0.48131">Programming language</keyword><keyword weight="0.69521">Model checking</keyword><keyword weight="0.46798">Computer science</keyword><keyword weight="0.65198">Correctness</keyword><keyword weight="0.60595">Temporal logic</keyword><keyword weight="0.47509">Open system (systems theory)</keyword><keyword weight="0.0">Modular specification</keyword><keyword weight="0.0">Expressivity</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a temporal logic MCTL which is suitable for modular specification and verification of computer architectures. MCTL has the advantage that open systems can be specified and verified; i.e. it allows the specification of properties under some assumptions on the environment. The module concept may help to solve the state explosion problem in the verification of temporal logic specifications. To verify the correctness of an implementation we describe a model checking algoritm for that logic.</abstract></paper>