<paper id="1983309412"><title>A characterization of the power of vector machines</title><year>1974</year><authors><author org="" id="2120476038">Vaughan R. Pratt</author><author org="" id="2144633556">Michael O. Rabin</author><author org="" id="2312167908">Larry J. Stockmeyer</author></authors><n_citation>44</n_citation><doc_type>Conference</doc_type><references><reference>1970961429</reference><reference>1982129592</reference><reference>2009215937</reference><reference>2061739322</reference></references><venue id="1190910084" type="C">Symposium on the Theory of Computing</venue><doi>10.1145/800119.803892</doi><keywords><keyword weight="0.51562">Sorting network</keyword><keyword weight="0.50606">Integer</keyword><keyword weight="0.45322">Discrete mathematics</keyword><keyword weight="0.44298">Combinatorics</keyword><keyword weight="0.4536">Computer science</keyword><keyword weight="0.5184">Automated theorem proving</keyword><keyword weight="0.48375">Support vector machine</keyword><keyword weight="0.49647">Propositional calculus</keyword><keyword weight="0.49872">Decidability</keyword><keyword weight="0.46345">Theoretical computer science</keyword><keyword weight="0.50479">Binary number</keyword><keyword weight="0.509">Random access</keyword></keywords><publisher>ACM</publisher><abstract>Random access machines (RAMs) are usually defined to have registers that hold integers. While this captures in part the structure of a commercial computer, it overlooks an implementation-dependent feature of most binary oriented machines, namely their ability to operate bit by bit on the bit vectors used to represent integers. Typical operations are bit-wise Boolean operations ( and, or, not , etc.) and shifts by an amount specified in some register. These operations are ideal for certain problems, such as dealing with sets represented as bit vectors, some parsing algorithms [4], propositional calculus theorem proving, and analysis of sorting networks. A RAM so implemented we shall call a vector machine .</abstract></paper>