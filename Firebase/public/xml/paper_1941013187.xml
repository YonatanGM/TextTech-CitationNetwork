<paper id="1941013187"><title>Metrics based refactoring</title><year>2001</year><authors><author org="Software Syst. Eng. Res. Group, Tech. Univ. Cottbus, Cottbus, Germany" id="2307611152">F. Simon</author><author org="Brandenburg Univ. of Technology" id="2303403070">F. Steinbruckner</author><author org="Brandenburg Univ. of Technology" id="25798412">C. Lewerentz</author></authors><n_citation>277</n_citation><doc_type>Conference</doc_type><references><reference>1565300882</reference><reference>2097347001</reference><reference>2122670327</reference><reference>2148805150</reference><reference>2158864412</reference><reference>2512806756</reference><reference>2913217271</reference></references><venue id="1145597874" type="C">Conference on Software Maintenance and Reengineering</venue><doi>10.1109/CSMR.2001.914965</doi><keywords><keyword weight="0.45851">Software engineering</keyword><keyword weight="0.55546">Software quality analyst</keyword><keyword weight="0.42738">Systems engineering</keyword><keyword weight="0.55696">Software peer review</keyword><keyword weight="0.44983">Computer science</keyword><keyword weight="0.62726">Extract class</keyword><keyword weight="0.55721">Software metric</keyword><keyword weight="0.60062">Software maintenance</keyword><keyword weight="0.56851">Software verification and validation</keyword><keyword weight="0.68095">Code refactoring</keyword><keyword weight="0.56679">Software development</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Refactoring is one key issue to increase internal software quality during the whole software lifecycle. Since identifying structures where refactorings should be applied often is explained with subjective perceptions like "bad taste" or "bad smell", an automatic refactoring location finder seems difficult. We show that a special kind of metrics can support these subjective perceptions and thus can be used as an effective and efficient way to get support for the decision of where to apply refactoring. Due to the fact that the software developer is the last authority, we provide powerful and metrics based software visualisation to support the developers in judging their products. The authors demonstrate this approach for four typical refactorings and present both a tool supporting the identification and case studies of its application.</abstract></paper>