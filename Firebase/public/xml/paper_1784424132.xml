<paper id="1784424132"><title>Automating Handover in Dynamic Workflow Environments</title><year>1998</year><authors><author org="School of Computing Sciences, University of Technology, Sydney, Australia" id="2915843305">Chengfei Liu</author><author org="the University of Queensland" id="2123081123">Maria E. Orlowska</author><author org="the University of Queensland" id="2111401235">Hui Li</author></authors><n_citation>34</n_citation><doc_type>Conference</doc_type><references><reference>1490230666</reference><reference>1556531117</reference><reference>1595655245</reference><reference>2019987175</reference><reference>2111530234</reference><reference>2148558863</reference><reference>2215315499</reference><reference>2913036292</reference></references><venue id="1134069326" type="C">Conference on Advanced Information Systems Engineering</venue><doi>10.1007/BFb0054224</doi><keywords><keyword weight="0.54758">Specification language</keyword><keyword weight="0.70353">Workflow technology</keyword><keyword weight="0.55857">Business process</keyword><keyword weight="0.45869">Computer science</keyword><keyword weight="0.56229">Business process modeling</keyword><keyword weight="0.63252">XPDL</keyword><keyword weight="0.71181">Workflow engine</keyword><keyword weight="0.69326">Workflow management system</keyword><keyword weight="0.61805">Workflow</keyword><keyword weight="0.4581">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Workflow technology has been widely used in business process modelling, automation and reengineering. In order to meet the fast-changing business requirements, to remain competitive in the market, an enterprise may constantly refine the workflow models of its business processes. The most challenging issue in evolution of a workflow model is the handover of its running instances from the old specification to the new specification. Such a handover depends on the semantics of a workflow model as well as the execution information of its running instances. A handover policy, therefore, needs to be specified for this purpose. In this paper, we propose a simple yet effective handover policy specification language. Using this language, a designer can easily specify a handover policy which reflect exactly what a workflow administrator needs to react to when a workflow model evolves. Criteria for the correct specification of handover policies are also addressed. Finally, a framework for automating handover of workflow instances is presented.</abstract></paper>