<paper id="1483290420"><title>Leakage-resilient signatures</title><year>2010</year><authors><author org="K.U. Leuven ESAT-COSIC/IBBT, Belgium#TAB#" id="2104203427">Sebastian Faust</author><author org="CWI, Amsterdam, The Netherlands#TAB#" id="2158633350">Eike Kiltz</author><author org="CWI, Amsterdam, The Netherlands#TAB#" id="2304537633">Krzysztof Pietrzak</author><author org="MIT, Boston," id="1096017270">Guy N. Rothblum</author></authors><n_citation>80</n_citation><doc_type>Conference</doc_type><references><reference>59080509</reference><reference>111085860</reference><reference>131640530</reference><reference>236432643</reference><reference>1496806208</reference><reference>1498063506</reference><reference>1498503799</reference><reference>1508077776</reference><reference>1511843316</reference><reference>1520746637</reference><reference>1547517307</reference><reference>1554259298</reference><reference>1566345534</reference><reference>1573157032</reference><reference>1587481360</reference><reference>1588518948</reference><reference>1591813095</reference><reference>1592393009</reference><reference>1592625985</reference><reference>1603601034</reference><reference>1606729219</reference><reference>1613874182</reference><reference>1646354800</reference><reference>1663689473</reference><reference>1724890242</reference><reference>1752847028</reference><reference>1789043777</reference><reference>1819824216</reference><reference>1972792640</reference><reference>2015880590</reference><reference>2020981190</reference><reference>2085355422</reference><reference>2096290348</reference><reference>2104965768</reference><reference>2116926584</reference><reference>2133701468</reference><reference>2151413173</reference><reference>2169985476</reference><reference>2170489924</reference><reference>2175377689</reference><reference>2250927570</reference><reference>2401220548</reference><reference>2520195611</reference></references><venue id="1137528458" type="C">Theory of Cryptography Conference</venue><doi>10.1007/978-3-642-11799-2_21</doi><keywords><keyword weight="0.61501">ElGamal signature scheme</keyword><keyword weight="0.44156">Computer security</keyword><keyword weight="0.62813">Merkle signature scheme</keyword><keyword weight="0.44752">Computer science</keyword><keyword weight="0.65486">Ring signature</keyword><keyword weight="0.529">Random oracle</keyword><keyword weight="0.44611">Theoretical computer science</keyword><keyword weight="0.5956">Digital signature</keyword><keyword weight="0.62217">Blind signature</keyword><keyword weight="0.50416">Pseudorandom number generator</keyword><keyword weight="0.64381">Schnorr signature</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The strongest standard security notion for digital signature schemes is unforgeability under chosen message attacks. In practice, however, this notion can be insufficient due to “side-channel attacks” which exploit leakage of information about the secret internal state. In this work we put forward the notion of “leakage-resilient signatures,” which strengthens the standard security notion by giving the adversary the additional power to learn a bounded amount of arbitrary information about the secret state that was accessed during every signature generation. This notion naturally implies security against all side-channel attacks as long as the amount of information leaked on each invocation is bounded and “only computation leaks :[106],"main result of this paper is a construction which gives a (tree-based, stateful) leakage-resilient signature scheme based on any 3-time signature scheme. The amount of information that our scheme can safely leak per signature generation is 1/3 of the information the underlying 3-time signature scheme can leak in total. Signature schemes that remain secure even if a bounded total amount of information is leaked were recently constructed, hence instantiating our construction with these schemes gives the first constructions of provably secure leakage-resilient signature :[190],"above construction assumes that the signing algorithm can sample truly random bits, and thus an implementation would need some special hardware (randomness gates). Simply generating this randomness using a leakage-resilient stream-cipher will in general not work. Our second contribution is a sound general principle to replace uniform random bits in any leakage-resilient construction with pseudorandom ones: run two leakage-resilient stream-ciphers (with independent keys) in parallel and then apply a two-source extractor to their outputs.</abstract></paper>