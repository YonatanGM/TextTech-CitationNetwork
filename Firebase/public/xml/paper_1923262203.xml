<paper id="1923262203"><title>Formalizing the UML class diagram using object-Z</title><year>1999</year><authors><author org="Department of Computer Science and Electrical Engineering, The University of Queensland, Brisbane, Australia" id="2114375786">Soon-Kyeong Kim</author><author org="Department of Computer Science and Electrical Engineering, The University of Queensland, Brisbane, Australia" id="2032647818">David Carrington</author></authors><n_citation>87</n_citation><doc_type>Journal</doc_type><references><reference>1482299161</reference><reference>1487961782</reference><reference>2018568588</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-46852-8_7</doi><keywords><keyword weight="0.46298">Programming language</keyword><keyword weight="0.68906">UML tool</keyword><keyword weight="0.43862">Computer science</keyword><keyword weight="0.63467">Communication diagram</keyword><keyword weight="0.73758">Applications of UML</keyword><keyword weight="0.60153">Association Class</keyword><keyword weight="0.61842">Story-driven modeling</keyword><keyword weight="0.62658">Object Constraint Language</keyword><keyword weight="0.59114">Object-Z</keyword><keyword weight="0.68423">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>To produce a precise and analyzable software model, it is essential for the modeling technique to have formality in the syntax and the semantics of its notation, and to allow rigorous analysis of its models. In this sense, UML is not yet a truly precise modeling technique. This paper presents a formal basis for the syntactic structures and semantics of core UML class constructs, and also provides a basis for reasoning about UML class diagrams. The syntactic structures of UML class constructs and the rules for developing a well-formed class diagram are precisely described using the Z notation. Based on this formal description, UML class constructs are then translated to Object-Z constructs. Proof techniques provided for Object-Z can be used for reasoning about these class diagrams.</abstract></paper>