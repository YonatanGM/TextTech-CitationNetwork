<paper id="1980124682"><title>A semantical framework for supporting subjective and conditional probabilities in deductive databases</title><year>1990</year><authors><author org="Department of Computer Science, University of Maryland - College Park, USA" id="2109621001">Raymond T. Ng</author><author org="Department of Computer Science, University of Maryland - College Park, USA" id="2261167843">V. S. Subrahmanian</author></authors><n_citation>41</n_citation><doc_type>Conference</doc_type><references><reference>13520770</reference><reference>35631723</reference><reference>173033638</reference><reference>1496190091</reference><reference>1503507742</reference><reference>1512921847</reference><reference>1595497122</reference><reference>1980589711</reference><reference>2001805670</reference><reference>2015071685</reference><reference>2093713825</reference><reference>2103500248</reference><reference>2113722134</reference><reference>2129802691</reference><reference>2144755776</reference><reference>2159080219</reference><reference>2169250070</reference><reference>2914728526</reference></references><venue id="2754141368" type="C">International Conference on Lightning Protection</venue><doi>10.1007/BF00881836</doi><keywords><keyword weight="0.59533">Conditional probability</keyword><keyword weight="0.58443">Proof theory</keyword><keyword weight="0.46004">Theoretical computer science</keyword><keyword weight="0.56857">Chain rule (probability)</keyword><keyword weight="0.61328">Probabilistic argumentation</keyword><keyword weight="0.55208">Soundness</keyword><keyword weight="0.58124">Probabilistic logic</keyword><keyword weight="0.57822">Conditional mutual information</keyword><keyword weight="0.57614">Proof procedure</keyword><keyword weight="0.41533">Database</keyword><keyword weight="0.41429">Mathematics</keyword></keywords><publisher>University of Maryland at College Park</publisher><abstract>We present a theoretical basis for supporting subjective and conditional probabilities in deductive databases. We design a language that allows a user greater expressive power than classical logic programming. In particular, a user can express the fact thatA is possible (i.e.A has non-zero probability),B is possible, but (A â‹€B) as a whole is impossible. A user can also freely specify probability annotations that may contain variables. The focus of this paper is to study the semantics of programs written in such a language in relation to probability theory. Our model theory which is founded on the classical one captures the uncertainty described in a probabilistic program at the level of Herbrand interpretations. Furthermore, we develop a fixpoint theory and a proof procedure for such programs and present soundness and completeness results. Finally we characterize the relationships between probability theory and the fixpoint, model, and proof theory of our programs.</abstract></paper>