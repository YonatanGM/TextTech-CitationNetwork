<paper id="1587594994"><title>Default Reasoning via Negation as Failure</title><year>1994</year><authors><author org="Univ.of Cyprus" id="130847482">Antonis C. Kakas</author></authors><n_citation>8</n_citation><doc_type>Conference</doc_type><references><reference>10702684</reference><reference>19957210</reference><reference>44518539</reference><reference>108833919</reference><reference>128301608</reference><reference>176609766</reference><reference>205761009</reference><reference>1494051470</reference><reference>1534361892</reference><reference>1588413856</reference><reference>1672891595</reference><reference>1966552757</reference><reference>1984715534</reference><reference>1987005090</reference><reference>2020153579</reference><reference>2111353076</reference><reference>2128770734</reference><reference>2155322595</reference></references><venue id="1162831978" type="C">European Conference on Artificial Intelligence</venue><doi>10.1007/3-540-58107-3_10</doi><keywords><keyword weight="0.76413">Default logic</keyword><keyword weight="0.45263">Programming language</keyword><keyword weight="0.72561">Autoepistemic logic</keyword><keyword weight="0.44933">Computer science</keyword><keyword weight="0.62534">Negation as failure</keyword><keyword weight="0.49917">Default</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.63535">Deductive reasoning</keyword><keyword weight="0.69622">Non-monotonic logic</keyword><keyword weight="0.67371">Logic programming</keyword><keyword weight="0.0">Default reasoning</keyword><keyword weight="0.43613">Machine learning</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show how recent developments in the study of negation as failure of Logic Programming can be used to define a general framework for Default Reasoning. Negation as failure can be viewed as a form of hypotheses with which we extend the underlying theory, given by the logic program, provided that this extension satisfies an appropriate criterion, called acceptability. The generalization of logic programming to more general representation frameworks is done by adapting this view of NAF and the basic notion of acceptability to the new frameworks. In general, an extension of a given theory by a set of hypotheses (e.g. defaults) is acceptable if it can render any other conflicting extension not acceptable thus ensuring that it is a “self-justified” set of assumptions. We compare our framework with other existing non-monotonic frameworks such as Default Logic and Theorist. In particular, we will show how our framework includes and extends Default Logic.</abstract></paper>