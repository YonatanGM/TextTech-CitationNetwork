<paper id="1530143568"><title>An Efficient Existentially Unforgeable Signature Scheme and its Applications</title><year>1994</year><authors><author org="IBM Almaden Research Center" id="208343995">Cynthia Dwork</author><author org="Weizmann Institute,#TAB#" id="1023361224">Moni Naor</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>1512372863</reference><reference>1542552321</reference><reference>1567157630</reference><reference>1600255172</reference><reference>1972792640</reference><reference>1996360405</reference><reference>2010507480</reference><reference>2016477241</reference><reference>2057777667</reference><reference>2074594718</reference><reference>2087115651</reference><reference>2095708839</reference><reference>2106287110</reference><reference>2108834246</reference><reference>2151413173</reference><reference>2156186849</reference><reference>2914841653</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48658-5_23</doi><keywords><keyword weight="0.43592">Discrete mathematics</keyword><keyword weight="0.45072">Authentication</keyword><keyword weight="0.47829">Polynomial</keyword><keyword weight="0.6634">Merkle signature scheme</keyword><keyword weight="0.41515">Computer science</keyword><keyword weight="0.64196">Ring signature</keyword><keyword weight="0.58291">Digital signature</keyword><keyword weight="0.4318">Theoretical computer science</keyword><keyword weight="0.5167">Security parameter</keyword><keyword weight="0.5058">Modular exponentiation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a practical existentially unforgeable signature scheme and point out applications where its application is desirable. A signature scheme is existentially unforgeable if, given any polynomial (in the security parameter) number of pairs (m1, S(m1)), (m2, S(m2)),... (mk,S(mk)) where S(m) denotes the signature on the message m, it is computationally infeasible to generate a pair (mk+1, S(mk+1)) for any message mk+1 ? {m1,...mk}. We have developed a signature scheme that requires at most 6 times the amount of time needed to generate a signature using RSA (which is not existentially unforgeable).</abstract></paper>