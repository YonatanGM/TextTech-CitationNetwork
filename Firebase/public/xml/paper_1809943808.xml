<paper id="1809943808"><title>Matchmaking: distributed resource management for high throughput computing</title><year>1998</year><authors><author org="Wisconsin, Univ., Madison, WI, USA" id="2117582849">R. Raman</author><author org="" id="228437624">M. Livny</author><author org="" id="2143353419">M. Solomon</author></authors><n_citation>707</n_citation><doc_type>Conference</doc_type><references><reference>1492040731</reference><reference>1989377994</reference><reference>1992346916</reference><reference>2004593585</reference><reference>2018501701</reference><reference>2111996486</reference><reference>2116001007</reference><reference>2140332639</reference></references><venue id="1141854641" type="C">High Performance Distributed Computing</venue><doi>10.1109/HPDC.1998.709966</doi><keywords><keyword weight="0.51553">Specification language</keyword><keyword weight="0.60848">Resource management</keyword><keyword weight="0.54995">Distributed Computing Environment</keyword><keyword weight="0.53199">Scheduling (computing)</keyword><keyword weight="0.46888">Computer science</keyword><keyword weight="0.55372">High-throughput computing</keyword><keyword weight="0.45196">Real-time computing</keyword><keyword weight="0.63733">Resource allocation</keyword><keyword weight="0.53522">System model</keyword><keyword weight="0.47901">Distributed computing</keyword><keyword weight="0.52846">Scalability</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Conventional resource management systems use a system model to describe resources and a centralized scheduler to control their allocation. We argue that this paradigm does not adapt well to distributed systems, particularly those built to support high throughput computing. Obstacles include heterogeneity of resources, which make uniform allocation algorithms difficult to formulate, and distributed ownership, leading to widely varying allocation policies. Faced with these problems, we developed and implemented the classified advertisement (classad) matchmaking framework, a flexible and general approach to resource management in distributed environment with decentralized ownership of resources. Novel aspects of the framework include a semi structured data model that combines schema, data, and query in a simple but powerful specification language, and a clean separation of the matching and claiming phases of resource allocation. The representation and protocols result in a robust, scalable and flexible framework that can evolve with changing resources. The framework was designed to solve real problems encountered in the deployment of Condor, a high throughput computing system developed at the University of Wisconsin-Madison. Condor is heavily used by scientists at numerous sites around the world. It derives much of its robustness and efficiency from the matchmaking architecture.</abstract></paper>