<paper id="1985804037"><title>UML-B: Formal modeling and design aided by UML</title><year>2006</year><authors><author org="University of Southampton UK" id="1941533736">Colin Snook</author><author org="University of Southampton UK" id="2114313152">Michael Butler</author></authors><n_citation>236</n_citation><doc_type>Journal</doc_type><references><reference>33941996</reference><reference>184965696</reference><reference>1502686851</reference><reference>1504594060</reference><reference>1544621933</reference><reference>1594713439</reference><reference>1987274714</reference><reference>1998017916</reference><reference>2000538740</reference><reference>2020476381</reference><reference>2036014053</reference><reference>2047434481</reference><reference>2060440626</reference><reference>2060921624</reference><reference>2066245151</reference><reference>2077359497</reference><reference>2092417937</reference><reference>2099529102</reference><reference>2112337853</reference><reference>2129153376</reference><reference>2144625195</reference><reference>2340735175</reference><reference>2400387248</reference><reference>2913459036</reference></references><venue id="142627899" type="J">ACM Transactions on Software Engineering and Methodology</venue><doi>10.1145/1125808.1125811</doi><keywords><keyword weight="0.49803">De facto standard</keyword><keyword weight="0.6392">UML state machine</keyword><keyword weight="0.46418">Programming language</keyword><keyword weight="0.4335">Systems engineering</keyword><keyword weight="0.73943">UML tool</keyword><keyword weight="0.54735">Unified Modeling Language</keyword><keyword weight="0.44931">Computer science</keyword><keyword weight="0.44247">Theoretical computer science</keyword><keyword weight="0.52508">B-Method</keyword><keyword weight="0.82571">Applications of UML</keyword><keyword weight="0.67023">Object Constraint Language</keyword><keyword weight="0.62124">Shlaerâ€“Mellor method</keyword></keywords><publisher>ACM</publisher><abstract>The emergence of the UML as a de facto standard for object-oriented modeling has been mirrored by the success of the B method as a practically useful formal modeling technique. The two notations have much to offer each other. The UML provides an accessible visualization of models facilitating communication of ideas but lacks formal precise semantics. B, on the other hand, has the precision to support animation and rigorous verification but requires significant effort in training to overcome the mathematical barrier that many practitioners perceive. We utilize a derivation of the B notation as an action and constraint language for the UML and define the semantics of UML entities via a translation into B. Through the UML-B profile we provide specializations of UML entities to support model refinement. The result is a formally precise variant of UML that can be used for refinement based, object-oriented behavioral modeling. The design of UML-B has been guided by industrial applications.</abstract></paper>