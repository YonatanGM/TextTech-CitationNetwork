<paper id="1774916044"><title>Lifted-FL: A Pragmatic Implementation of Combined Model Checking and Theorem Proving</title><year>1999</year><authors><author org="Intel Corporation, JFT-104" id="2304720301">Mark Aagaard</author><author org="Intel Corporation, JFT-104" id="2950675069">Robert B. Jones</author><author org="Intel Corporation, JFT-104" id="1833467962">Carl-Johan H. Seger</author></authors><n_citation>43</n_citation><doc_type>Conference</doc_type><references><reference>1484366641</reference><reference>1505191296</reference><reference>1520936552</reference><reference>1522151482</reference><reference>1541769999</reference><reference>1551406732</reference><reference>1594381772</reference><reference>1608219313</reference><reference>1725475383</reference><reference>1782705083</reference><reference>1972065960</reference><reference>1986558678</reference><reference>2080267935</reference><reference>2080593426</reference><reference>2099873480</reference><reference>2115847338</reference><reference>2126691011</reference><reference>2130308292</reference><reference>2134113233</reference><reference>2159152974</reference></references><venue id="2538859667" type="C">Theorem Proving in Higher Order Logics</venue><doi>10.1007/3-540-48256-3_22</doi><keywords><keyword weight="0.46975">Programming language</keyword><keyword weight="0.58317">Model checking</keyword><keyword weight="0.53887">Functional programming</keyword><keyword weight="0.45649">Computer science</keyword><keyword weight="0.56969">Object language</keyword><keyword weight="0.46384">Theoretical computer science</keyword><keyword weight="0.43073">Discrete mathematics</keyword><keyword weight="0.61047">Automated theorem proving</keyword><keyword weight="0.62322">Automated proof checking</keyword><keyword weight="0.44688">Algorithm</keyword><keyword weight="0.50354">Metalanguage</keyword><keyword weight="0.53217">Rule of inference</keyword><keyword weight="0.61532">Symbolic trajectory evaluation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Combining theorem proving and model checking offers the tantalizing possibility of efficiently reasoning about large circuits at high levels of abstraction. We have constructed a system that seamlessly integrates symbolic trajectory evaluation based model checking with theorem proving in a higher-order classical logic. The approach is made possible by using the same programming language (fl) as both the meta and object language of theorem proving. This is done by "lifting" fl, essentially deeply embedding fl in itself. The approach is a pragmatic solution that provides an efficient and extensible Verification environment. Our approach is generally applicable to any dialect of the ML programming language and any model-checking algorithm that has practical inference rules for combining results.</abstract></paper>