<paper id="1531263763"><title>Fast maintenance of semantic integrity assertions using redundant aggregate data</title><year>1980</year><authors><author org="Aiken Computation Laboratory, Harvard Univ., Cambridge, MA" id="2304774990">Philip A. Bernstein</author><author org="Aiken Computation Laboratory, Harvard Univ., Cambridge, MA" id="2891563190">Barbara T. Blaustein</author><author org="Aiken Computation Laboratory, Harvard Univ., Cambridge, MA" id="2129477832">Edmund M. Clarke</author></authors><n_citation>81</n_citation><doc_type>Conference</doc_type><references><reference>2052570934</reference><reference>2095224573</reference><reference>2103920867</reference><reference>2111706174</reference><reference>2140295918</reference></references><venue id="1133523790" type="C">Very Large Data Bases</venue><doi>10.1016/B978-0-934613-53-8.50034-0</doi><keywords><keyword weight="0.44255">Data mining</keyword><keyword weight="0.58473">Relational calculus</keyword><keyword weight="0.46173">Programming language</keyword><keyword weight="0.45548">Computer science</keyword><keyword weight="0.0">Program logic</keyword><keyword weight="0.46744">Maxima and minima</keyword><keyword weight="0.42133">Enforcement</keyword><keyword weight="0.42526">Aggregate data</keyword><keyword weight="0.0">Semantic integrity</keyword><keyword weight="0.43526">Predicate (grammar)</keyword><keyword weight="0.40483">Maxima</keyword><keyword weight="0.43641">Database</keyword></keywords><publisher>VLDB Endowment</publisher><abstract>Semantic integrity assertions are predicates that define consistent database states. To enforce such assertions, a database system must prevent any update from mapping a consistent state to an inconsistent one. In this paper, we describe an enforcement method that is efficient for a large class of relational calculus assertions. The method automatically selects minima and maxima of certain sets to maintain as redundant data in the database. This redundant data is sufficient for enforcing all of the assertions in the class, yet it can be easily maintained. Correctness proofs are expressed in Hoareu0027s program logic.</abstract></paper>