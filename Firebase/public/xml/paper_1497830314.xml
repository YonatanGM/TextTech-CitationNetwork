<paper id="1497830314"><title>The Semantics of Priority and Fairness in occam</title><year>1990</year><authors><author org="Oxford University, Computing Laboratory" id="2311389942">Geoff Barrett</author></authors><n_citation>15</n_citation><doc_type>Conference</doc_type><references><reference>2058530699</reference><reference>2098083416</reference><reference>2107100996</reference></references><venue id="2753965711" type="C">International Conference on Mathematical Foundations of Programming Semantics</venue><doi>10.1007/BFb0040258</doi><keywords><keyword weight="0.71956">Operational semantics</keyword><keyword weight="0.51237">Programmer</keyword><keyword weight="0.47412">Programming language</keyword><keyword weight="0.5285">Transputer</keyword><keyword weight="0.45602">Computer science</keyword><keyword weight="0.70279">Communicating sequential processes</keyword><keyword weight="0.68555">Denotational semantics</keyword><keyword weight="0.66792">occam</keyword><keyword weight="0.5388">Semantics</keyword><keyword weight="0.0">Semantics of logic</keyword></keywords><publisher>Springer, New York, NY</publisher><abstract>This paper presents an operational semantics for priority and fairness in occam. The semantics is based on the state transitions made by a transputer in the execution of an occam program. It is possible to abstract sufficiently from the transputer implementation that a clear semantics is produced but to maintain enough detail that the particular meanings intended for priority and fairness can be expressed precisely as the practical programmer would understand them.</abstract></paper>