<paper id="1861941756"><title>Recursive Query Answering with Non-Horn Clauses</title><year>1988</year><authors><author org="Northwestern University" id="2671031097">Shan Chi</author><author org="Northwestern University" id="149210974">Lawrence J. Henschen</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>12031847</reference><reference>189317106</reference><reference>1487591965</reference><reference>1524811847</reference><reference>1970637119</reference><reference>2039303449</reference><reference>2058656940</reference><reference>2114321793</reference><reference>2122789628</reference><reference>2132063146</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/BFb0012838</doi><keywords><keyword weight="0.51373">Query optimization</keyword><keyword weight="0.44521">Discrete mathematics</keyword><keyword weight="0.44527">Combinatorics</keyword><keyword weight="0.56429">Horn clause</keyword><keyword weight="0.50147">Transitive reduction</keyword><keyword weight="0.42057">Computer science</keyword><keyword weight="0.48468">Tuple</keyword><keyword weight="0.47421">Automated theorem proving</keyword><keyword weight="0.43146">Algorithm</keyword><keyword weight="0.48354">Directed graph</keyword><keyword weight="0.53066">Transitive closure</keyword><keyword weight="0.49515">Closed-world assumption</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, an algorithm is presented for answering recursive queries under the Generalized Closed World Assumption (GCWA) in a database with positive non-Horn ground clauses. It is proved that the algorithm generates all the answers under the GCWA. We consider only the transitive closure recursions in which only one base relation is involved. The set of ground clauses is stored as one relation so that a modified join operator can be applied to the clauses. The relation can be visualized as a directed graph with each tuple representing an edge. A query (only closed queries are considered in this paper) is answered by extracting the paths from the relation, forming the negative clauses from these paths, and sending the negative clauses together with the non-Horn clauses to a theorem prover. We proved that if the empty clause is derived then the answer to the query is true. This algorithm is efficient for two reasons: 1) facts (positive unit ground clauses) are processed by the modified join operator, and 2) the theorem prover handles only the non-Horn ground clauses and some negative ground clauses.</abstract></paper>