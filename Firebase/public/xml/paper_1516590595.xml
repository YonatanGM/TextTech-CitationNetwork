<paper id="1516590595"><title>On the Use of Relational Expressions in the Design of Efficient Algorithms (Extended Abstract)</title><year>1985</year><authors><author org="University of Jyväskylä**" id="2949278174">Seppo Sippu</author><author org="Univ. of Helsinki" id="2729611587">Eljas Soisalon-Soininen</author></authors><n_citation>2</n_citation><doc_type>Conference</doc_type><references><reference>1768003599</reference><reference>1966686491</reference><reference>2027251041</reference><reference>2051690041</reference><reference>2067924727</reference><reference>2118382442</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0015771</doi><keywords><keyword weight="0.46504">Discrete mathematics</keyword><keyword weight="0.45712">Inverse</keyword><keyword weight="0.51438">Expression (mathematics)</keyword><keyword weight="0.52703">Binary relation</keyword><keyword weight="0.4771">Empty string</keyword><keyword weight="0.43567">Computer science</keyword><keyword weight="0.46039">Algorithm</keyword><keyword weight="0.54121">Parsing</keyword><keyword weight="0.53567">Transitive closure</keyword><keyword weight="0.46679">Computation</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Relational expressions have finite binary relations as arguments and the operations are composition (·), closure (*), inverse (−1), and union (U). The efficient computation of the relation denoted by a relational expression is considered, and a tight bound is established on the complexity of the algorithm suggested by Hunt, Szymanski and Ullman. The result implies a unified method for deriving efficient algorithms for many problems in parsing. For example, optimal algorithms are derived for strong LL(1) and strong LL(2) parser construction and an efficient polynomialtime algorithm is derived for determining the inessential error entries in an LR(1) parsing table.</abstract></paper>