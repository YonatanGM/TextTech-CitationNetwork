<paper id="1943590385"><title>A network-aware distributed storage cache for data intensive environments</title><year>1999</year><authors><author org="California Univ., Berkeley, CA, USA" id="2033317035">B.L. Tierney</author><author org="" id="2907201111">J. Lee</author><author org="" id="2616940170">B. Crowley</author><author org="" id="2582044249">M. Holding</author><author org="" id="1940034617">J. Hylton</author><author org="" id="2011567006">F.L. Drake</author></authors><n_citation>84</n_citation><doc_type>Conference</doc_type><references><reference>1492040731</reference><reference>1537091622</reference><reference>1568568297</reference><reference>1963951527</reference><reference>1970019308</reference><reference>2047703174</reference><reference>2060112420</reference><reference>2083209848</reference><reference>2095629498</reference><reference>2114832271</reference><reference>2128313012</reference><reference>2753542457</reference></references><venue id="1141854641" type="C">High Performance Distributed Computing</venue><doi>10.1109/HPDC.1999.805297</doi><keywords><keyword weight="0.55562">Middleware</keyword><keyword weight="0.57012">Grid computing</keyword><keyword weight="0.57298">Data-intensive computing</keyword><keyword weight="0.6577">Cache</keyword><keyword weight="0.45717">Computer science</keyword><keyword weight="0.60784">Distributed data store</keyword><keyword weight="0.66051">Cache algorithms</keyword><keyword weight="0.61843">Cache coloring</keyword><keyword weight="0.49485">Throughput</keyword><keyword weight="0.47959">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Modern scientific computing involves organizing, moving, visualizing, and analyzing massive amounts of data at multiple sites around the world. The technologies, the middleware services, and the architectures that are used to build useful high-speed, wide area distributed systems, constitute the field of data intensive computing. We describe an architecture for data intensive applications where we use a high-speed distributed data cache as a common element for all of the sources and sinks of data. This cache-based approach provides standard interfaces to a large, application-oriented, distributed, on-line, transient storage system. We describe our implementation of this cache, how we have made it "network aware ", and how we do dynamic load balancing based on the current network conditions. We also show large increases in application throughput by access to knowledge of the network conditions.</abstract></paper>