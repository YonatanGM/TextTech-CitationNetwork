<paper id="1767070588"><title>An Algorithmic Approach for Checking Closure Properties of omega-Regular Languages</title><year>1996</year><authors><author org="Bell-Labs" id="127429266">Doron Peled</author><author org="Rutgers University" id="2983792964">Thomas Wilke</author><author org="Université de Liège**" id="2120041131">Pierre Wolper</author></authors><n_citation>24</n_citation><doc_type>Conference</doc_type><references><reference>1528441743</reference><reference>1540501475</reference><reference>1601573757</reference><reference>1608032220</reference><reference>1895483727</reference><reference>1934074768</reference><reference>1965309410</reference><reference>1986895439</reference><reference>1990161286</reference><reference>1990609140</reference><reference>2003227046</reference><reference>2022136117</reference><reference>2023808162</reference><reference>2033071128</reference><reference>2034410903</reference><reference>2039529128</reference><reference>2054739713</reference><reference>2081163032</reference><reference>2137307988</reference><reference>2165106244</reference><reference>2806619258</reference><reference>2912084748</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-61604-7_78</doi><keywords><keyword weight="0.45152">Discrete mathematics</keyword><keyword weight="0.5548">Equivalence relation</keyword><keyword weight="0.55017">Concurrency</keyword><keyword weight="0.43785">Computer science</keyword><keyword weight="0.57618">Abstract family of languages</keyword><keyword weight="0.5496">Decidability</keyword><keyword weight="0.56395">Linear temporal logic</keyword><keyword weight="0.45695">Theoretical computer science</keyword><keyword weight="0.54709">PSPACE</keyword><keyword weight="0.56956">Cone (formal languages)</keyword><keyword weight="0.54907">Equivalence class</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>In concurrency theory, there are several examples where the interleaved model of concurrency can distinguish between execution sequences which are not significantly different. One such example is sequences that differ from each other by stuttering, i.e., the number of times a state can adjacently repeat. Another example is executions that differ only by the ordering of independently executed events. Considering these sequences as different is semantically rather meaningless. Nevertheless, specification languages that are based on interleaving semantics, such as linear temporal logic (LTL), can distinguish between them. This situation has led to several attempts to define languages that cannot distinguish between such equivalent sequences. In this paper, we take a different approach to this problem: we develop algorithms for deciding if a property cannot distinguish between equivalent sequences, i. e., is closed under the equivalence relation. We focus on properties represented by regular languages, Ω-regular languages, or propositional LTL formulae and show that for such properties there is a wide class of equivalence relations for which determining closure is decidable, in fact in PSPACE. Hence, checking the closure of a specification is no more difficult than checking satisfiability of a temporal formula. Among the closure properties we are able to handle, one finds trace closedness, stutter closedness and projective closedness, for all of which we are also able to prove a PSPACE lower bound. Being able to check that a property is closed under an equivalence relation has an immediate application in state-space exploration based verification. Indeed, the knowledge that the specification does not distinguish between equivalent execution sequences allows constructing a reduced state space where it is sufficient that at least one sequence per equivalence class is represented.</abstract></paper>