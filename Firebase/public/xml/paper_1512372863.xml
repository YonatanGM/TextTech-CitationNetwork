<paper id="1512372863"><title>Two remarks concerning the Goldwasser-Micali-Rivest signature scheme</title><year>1987</year><authors><author org="Technion , Haifa, Israel" id="65538393">Oded Goldreich</author></authors><n_citation>105</n_citation><doc_type>Conference</doc_type><references><reference>57300150</reference><reference>1493969756</reference><reference>1952573265</reference><reference>1996360405</reference><reference>2117362057</reference><reference>2156186849</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-47721-7_8</doi><keywords><keyword weight="0.4357">Discrete mathematics</keyword><keyword weight="0.68369">Merkle signature scheme</keyword><keyword weight="0.4313">Computer science</keyword><keyword weight="0.44119">Algorithm</keyword><keyword weight="0.65443">Ring signature</keyword><keyword weight="0.44011">Theoretical computer science</keyword><keyword weight="0.42074">Moduli</keyword><keyword weight="0.64066">Blind signature</keyword><keyword weight="0.45924">Factoring</keyword><keyword weight="0.42032">Salient</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The focus of this note is the Goldwasser-Micali-Rivest Signature Scheme (presented in the 25th FOCS, 1984). The GMR scheme has the salient property that, unless factoring is easy, it is infeasible to forge any signature even through an adaptive chosen message attack. We present two technical contributions with respect to the GMR scheme: 1) The GMR scheme can be made totally "memoryless": That is, the signature generated by the signer on message M does not depend on the previous signed messages. (In the original scheme, the signature to a message depends on the number of messages signed before.) 2) The GMR scheme can be implemented almost as efficiently as the RSA: The original implementation of the GMR scheme based on factoring, can be speeded-up by a factor of |N|. Thus, both signing and verifying take time O (|N| 3log2 |N|). (Here N is the moduli.).</abstract></paper>