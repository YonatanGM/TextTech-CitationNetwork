<paper id="1603496374"><title>Object-Oriented Design of a Flexible Workflow Management System</title><year>1998</year><authors><author org="Universität Münster" id="2185344053">Mathias Weske</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>19742130</reference><reference>39280257</reference><reference>1555095622</reference><reference>1570265525</reference><reference>2015234709</reference><reference>2062756186</reference><reference>2067347904</reference><reference>2089975742</reference><reference>2147513755</reference><reference>2616826897</reference></references><venue id="1137516283" type="C">Advances in Databases and Information Systems</venue><doi>10.1007/BFb0057722</doi><keywords><keyword weight="0.56057">Object-oriented design</keyword><keyword weight="0.73822">Workflow technology</keyword><keyword weight="0.59874">Distributed object</keyword><keyword weight="0.4547">Computer science</keyword><keyword weight="0.68339">Windows Workflow Foundation</keyword><keyword weight="0.66163">XPDL</keyword><keyword weight="0.76097">Workflow engine</keyword><keyword weight="0.64147">Workflow</keyword><keyword weight="0.75541">Workflow management system</keyword><keyword weight="0.45534">Database</keyword><keyword weight="0.46924">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Workflow management systems aim at controlling the execution of complex application processes in distributed environments. Workflow management currently moves from modeling and executing mostly static structured workflows to supporting flexible workflows, which are typically executed in distributed and heterogeneous environments. This paper discusses the use of distributed object technology to built a flexible workflow management system. In particular, based on a detailed object-oriented object model, we discuss the dynamic behavior of workflow instances, and we show how flexibility requirements have influenced our design.</abstract></paper>