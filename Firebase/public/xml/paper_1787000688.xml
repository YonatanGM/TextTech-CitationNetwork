<paper id="1787000688"><title>Advanced Workflow Patterns</title><year>2000</year><authors><author org="Eindhoven University of Technology, Faculty of Technology and Management" id="270949118">Wil M. P. van der Aalst</author><author org="the University of Queensland" id="2155916173">Alistair P. Barros</author><author org="Queensland University of Technology#TAB#" id="1987818517">Arthur H. M. ter Hofstede</author><author org="Mincom Limited" id="2686876394">Bartek Kiepuszewski</author></authors><n_citation>313</n_citation><doc_type>Conference</doc_type><references><reference>39280257</reference><reference>1506229097</reference><reference>1976132482</reference><reference>2015234709</reference><reference>2129466958</reference><reference>2134606933</reference><reference>2174443976</reference></references><venue id="1147734270" type="C">Cooperative Information Systems</venue><doi>10.1007/10722620_2</doi><keywords><keyword weight="0.762">Workflow technology</keyword><keyword weight="0.55668">Business process</keyword><keyword weight="0.55001">Document management system</keyword><keyword weight="0.46107">Computer science</keyword><keyword weight="0.6717">XPDL</keyword><keyword weight="0.76906">Workflow engine</keyword><keyword weight="0.74507">Workflow management system</keyword><keyword weight="0.66247">Workflow</keyword><keyword weight="0.45329">Distributed computing</keyword><keyword weight="0.4816">Design pattern</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Conventional workflow functionality like task sequencing, split parallelism, join synchronization and iteration have proven effective for business process automation and have widespread support in current workflow products. However, newer requirements for workflows are encountered in practice, opening grave uncertainties about the extensions for current languages. Different concepts, although outwardly appearing to be more or less the same, are based on different paradigms, have fundamentally different semantics and different levels of applicability â€“ more specialized for modeling or more generalized for workflow engine posit. By way of developmental insight of new requirements, we define workflow patterns which are described imperatively but independently of current workflow languages. These patterns provide the basis for an in-depth comparison of 12 workflow management systems. As such, the work reported in this paper can be seen as the academic response to evaluations made by prestigious consulting companies. Typically, these evaluations hardly consider the workflow modeling language and routing capabilities and focus more on the purely technical and commercial aspects.</abstract></paper>