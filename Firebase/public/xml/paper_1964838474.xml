<paper id="1964838474"><title>Algebraic families of interpretations</title><year>1976</year><authors><author org="" id="2988225418">Bruno Courcelle</author><author org="" id="2892675338">Maurice Nivat</author></authors><n_citation>82</n_citation><doc_type>Conference</doc_type><references><reference>41351628</reference><reference>1986893176</reference><reference>2032076167</reference><reference>2542070736</reference></references><venue id="1150208541" type="C">Foundations of Computer Science</venue><doi>10.1109/SFCS.1976.3</doi><keywords><keyword weight="0.46737">Discrete mathematics</keyword><keyword weight="0.46272">Combinatorics</keyword><keyword weight="0.67243">Dimension of an algebraic variety</keyword><keyword weight="0.65446">Algebraic closure</keyword><keyword weight="0.46875">Algebra</keyword><keyword weight="0.6592">Differential algebraic geometry</keyword><keyword weight="0.67306">Algebraic surface</keyword><keyword weight="0.7069">Algebraic cycle</keyword><keyword weight="0.66424">Algebraic extension</keyword><keyword weight="0.6767">Real algebraic geometry</keyword><keyword weight="0.43314">Mathematics</keyword><keyword weight="0.6544">Adequate equivalence relation</keyword></keywords><publisher>IEEE</publisher><abstract>To each family C of interpretations corresponds an equivalence relation among program schemes, namely the equivalence of the program schemes for all interpretation of C. A family C is algebraic if any two programs are C-equivalent iff every partial finite computation of one of them is C-equivalent to some partial finite computation of the other. Our main theorem states that a family C is algebraic iff it is represented with respect to the equivalence of programs by a single interpretation (a C-Herbrand interpretation) which is algebraic (in Scottu0027s sense, roughly speaking). We give examples of algebraic and non algebraic families.</abstract></paper>