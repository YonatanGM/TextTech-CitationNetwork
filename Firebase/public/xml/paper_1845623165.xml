<paper id="1845623165"><title>Using QDL to specify QoS aware distributed (QuO) application configuration</title><year>2000</year><authors><author org="BBN Technol., Cambridge, MA, USA" id="2112927533">P. Pal</author><author org="" id="2952041601">J. Loyall</author><author org="" id="2248816087">R. Schantz</author><author org="" id="572935831">J. Zinky</author><author org="" id="2097041017">R. Shapiro</author><author org="" id="1208783417">J. Megquier</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>1479754293</reference><reference>1503031735</reference><reference>2022529720</reference><reference>2029414465</reference><reference>2033175455</reference><reference>2057081379</reference><reference>2069168704</reference><reference>2076638640</reference><reference>2115075004</reference><reference>2127036198</reference><reference>2153196731</reference><reference>2157335831</reference><reference>2162255975</reference></references><venue id="1174688487" type="C">International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing</venue><doi>10.1109/ISORC.2000.839545</doi><keywords><keyword weight="0.57856">Middleware</keyword><keyword weight="0.64043">Distributed object</keyword><keyword weight="0.48505">Data security</keyword><keyword weight="0.46471">Computer science</keyword><keyword weight="0.56615">Common Object Request Broker Architecture</keyword><keyword weight="0.52772">Quality of service</keyword><keyword weight="0.45974">Real-time computing</keyword><keyword weight="0.49068">Formal specification</keyword><keyword weight="0.49238">Software quality</keyword><keyword weight="0.51039">Application software</keyword><keyword weight="0.48035">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Recent work in opening up distributed object systems to make them suitable for applications needing quality of service control has had the side effect of increasing the complexity in setting up, configuring, and initializing such applications. Configuration of distributed applications is more complicated than that of non-distributed applications, simply because of the heterogeneous and distributed nature of the applicationu0027s components. CORBA and other distributed object middleware simplifies the configuration of distributed object applications, but hides much of the information and control necessary to achieve quality of service (QoS). We describe the techniques and tools that we have developed within our Quality Objects (QuO) framework for simplifying the configuration of distributed applications with QoS attributes. We describe a QuO configuration language, as well as the specific configuration needs of particular QoS properties-real-time, security, and dependability-and the support we provide for them.</abstract></paper>