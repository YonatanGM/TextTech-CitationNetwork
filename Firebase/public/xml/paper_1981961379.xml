<paper id="1981961379"><title>Logic programming as constructivism: a formalization and its application to databases</title><year>1989</year><authors><author org="ECRC, Arabellastr. 17,8000 MÃ¼nchen 81, West Germany#TAB#" id="870525885">F. Bry</author></authors><n_citation>66</n_citation><doc_type>Conference</doc_type><references><reference>35943912</reference><reference>98332576</reference><reference>100489838</reference><reference>174273805</reference><reference>180964288</reference><reference>1503088848</reference><reference>1522225310</reference><reference>1530765221</reference><reference>1570025952</reference><reference>1665904199</reference><reference>1979101142</reference><reference>1995447625</reference><reference>2003531456</reference><reference>2027639996</reference><reference>2031868932</reference><reference>2036240164</reference><reference>2045486626</reference><reference>2051223322</reference><reference>2062897452</reference><reference>2070553391</reference><reference>2083474880</reference><reference>2084749326</reference><reference>2108911687</reference><reference>2120127771</reference><reference>2149109323</reference><reference>2171094216</reference></references><venue id="1184151122" type="C">Symposium on Principles of Database Systems</venue><doi>10.1145/73721.73725</doi><keywords><keyword weight="0.43103">Discrete mathematics</keyword><keyword weight="0.62273">Computational logic</keyword><keyword weight="0.64071">Horn clause</keyword><keyword weight="0.6064">Autoepistemic logic</keyword><keyword weight="0.45515">Computer science</keyword><keyword weight="0.60686">Multimodal logic</keyword><keyword weight="0.46343">Theoretical computer science</keyword><keyword weight="0.62922">Logic programming</keyword><keyword weight="0.62342">Philosophy of logic</keyword><keyword weight="0.62568">Predicate logic</keyword><keyword weight="0.62479">Higher-order logic</keyword></keywords><publisher>ACM</publisher><abstract>The features of logic programming that seem unconventional from the viewpoint of classical logic can be explained in terms of constructivistic logic. We motivate and propose a constructivistic proof theory of non-Horn logic programming. Then, we apply this formalization for establishing results of practical interest. First, we show that u0027stratificationu0027 can be motivated in a simple and intuitive way. Relying on similar motivations, we introduce the larger classes of u0027loosely stratifiedu0027 and u0027constructively consistentu0027 programs. Second, we give a formal basis for introducing quantifiers into queries and logic programs by defining u0027constructively domain independentu0027 formulas. Third, we extend the Generalized Magic Sets procedure to loosely stratified and constructively consistent programs, by relying on a u0027conditional fixpointu0027 procedure.</abstract></paper>