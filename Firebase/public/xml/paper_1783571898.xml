<paper id="1783571898"><title>Transforming object-oriented models to process-oriented models</title><year>2007</year><authors><author org="Queensland University of Technology Brisbane Australia" id="2103256068">Guy Redding</author><author org="Queensland University of Technology Brisbane Australia" id="2250777962">Marlon Dumas</author><author org="Queensland University of Technology Brisbane Australia" id="1987818517">Arthur H. M. Ter Hofstede</author><author org="Shared Web Services Pty Ltd, Sydney, Australia#TAB#" id="2617248756">Adrian Iordachescu</author></authors><n_citation>36</n_citation><doc_type>Conference</doc_type><references><reference>1239375374</reference><reference>1567115292</reference><reference>2020675906</reference><reference>2026088163</reference><reference>2091277021</reference><reference>2096998948</reference><reference>2110233627</reference><reference>2155862563</reference><reference>2159765281</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/978-3-540-78238-4_15</doi><keywords><keyword weight="0.57458">Model transformation</keyword><keyword weight="0.58456">Conceptual model</keyword><keyword weight="0.43679">Systems engineering</keyword><keyword weight="0.45655">Computer science</keyword><keyword weight="0.58418">Object type</keyword><keyword weight="0.46026">Theoretical computer science</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.53232">Object-oriented programming</keyword><keyword weight="0.62924">Method</keyword><keyword weight="0.56109">Process modeling</keyword><keyword weight="0.67728">Object model</keyword><keyword weight="0.54046">Metamodeling</keyword><keyword weight="0.45413">Machine learning</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Object-oriented modelling is an established approach to document the information systems. In an object model, a system is captured in terms of object types and associations, state machines, collaboration diagrams, etc. Process modeling on the other hand, provides a different approach whereby behaviour is captured in terms of activities, flow dependencies, resources, etc. These two approaches have their relative advantages. In object models, behaviour is split across object types, whereas in process models, behaviour is captured along chains of logically related tasks. Also, object models and process models lend themselves to different styles of implementation. There is an opportunity to leverage the relative advantages of object models and process models by creating integrated meta-models and transformations so that modellers can switch between these views. In this paper we define a transformation from a meta-model for object behavior modeling to a metamodel for process modeling. The transformation relies on the identification of causal relations in the object model. These relations are encoded in a heuristics net from which a process model is derived.</abstract></paper>