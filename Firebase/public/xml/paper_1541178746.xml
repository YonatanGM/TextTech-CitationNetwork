<paper id="1541178746"><title>Object Identity and Inheritance in Deductive Databases—an Evolutionary Approach</title><year>1990</year><authors><author org="MCC, 3500 West Balcones Center Drive, Austin, Texas 78759" id="2028117853">Carlo Zaniolo</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>17866890</reference><reference>24738145</reference><reference>163538350</reference><reference>1672891595</reference><reference>1913091358</reference><reference>1977583107</reference><reference>2035182234</reference><reference>2092842298</reference><reference>2128770734</reference></references><venue id="2756318837" type="C">International Conference on Deductive and Object-Oriented Databases</venue><doi>10.1016/B978-0-444-88433-6.50009-5</doi><keywords><keyword weight="0.46426">Programming language</keyword><keyword weight="0.54257">Identifier</keyword><keyword weight="0.55318">Negation</keyword><keyword weight="0.44593">Computer science</keyword><keyword weight="0.4518">Minimal model</keyword><keyword weight="0.45675">Theoretical computer science</keyword><keyword weight="0.59595">Stable model semantics</keyword><keyword weight="0.4695">Predicate (grammar)</keyword><keyword weight="0.0">Extensional definition</keyword><keyword weight="0.53956">Unique identifier</keyword><keyword weight="0.49762">Syntax</keyword><keyword weight="0.42181">Database</keyword></keywords><publisher>North-Holland</publisher><abstract>This paper proposes simple extensions to logic-based languages for deductive databases to support the key notions of object identity and object inheritance of object-oriented systems. Thus the paper shows how, given a logic program P and its minimal model M(P), it is possible to construct a program P′ and its minimal model M(P′) such that M(P′) is basically obtained from M(P) by prefixing each fact of M(P) with a unique identifier. This is accomplished through the use of L D L non-deterministic choice constructs (or alternatively through negation under the stable model semantics). This allow a user to view facts and predicates of ordinary logic programs as objects and refer to them through their identifiers—in both the extensional database and the intensional one. Then, syntactic shorthand conventions are introduced to facilitate reference based reasoning and access to objects. The result is a logic-based language where the ISA inheritance is fully supported along with the use of identifiers as surrogates for the actual objects. The proposed solution is firmly rooted in the theory of deductive databases and simple to implement as an extension of current deductive database systems.</abstract></paper>