<paper id="1498019180"><title>Speeding up Prime Number Generation</title><year>1991</year><authors><author org="Aarhus University," id="2121858404">Jørgen Brandt</author><author org="Aarhus University," id="2682364181">Ivan Damgård</author><author org="Aarhus University," id="2639954296">Peter Landrock</author></authors><n_citation>27</n_citation><doc_type>Conference</doc_type><references><reference>1514901799</reference><reference>1527534931</reference><reference>2037690423</reference><reference>2058177464</reference><reference>2172061174</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-57332-1_37</doi><keywords><keyword weight="0.45986">Discrete mathematics</keyword><keyword weight="0.63386">Prime number</keyword><keyword weight="0.51604">Cyclotomic polynomial</keyword><keyword weight="0.46323">Arithmetic</keyword><keyword weight="0.46723">Incremental search</keyword><keyword weight="0.5675">Prime factor</keyword><keyword weight="0.41071">Confidence interval</keyword><keyword weight="0.0">Probability of error</keyword><keyword weight="0.43873">Mathematics</keyword><keyword weight="0.50917">Speedup</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present various ways of speeding up the standard methods for generating provable, resp. probable primes. For probable primes, the effect of using test division and 2 as a fixed base for the Rabin test is analysed, showing that a speedup of almost 50% can be achieved with the same confidence level, compared to the standard method. For Maureru0027s algorithm generating provable primes p, we show that a small extension of the algorithm will mean that only one prime factor of p−1 has to be generated, implying a gain in efficiency. Further savings can be obtained by combining with the Rabin test. Finally, we show how to combine the algorithms of Maurer and Gordon to make ”strong provable primes” that satisfy additional security constraints.</abstract></paper>