<paper id="1483157468"><title>A Hoare Calculus for Verifying Java Realizations of OCL-Constrained Design Models</title><year>2001</year><authors><author org="University of Sussex at Brighton" id="2163053218">Bernhard Reus</author><author org="Ludwig-Maximilians-Universität München" id="2069719606">Martin Wirsing</author><author org="Ludwig-Maximilians-Universität München" id="36835992">Rolf Hennicker</author></authors><n_citation>36</n_citation><doc_type>Conference</doc_type><references><reference>101802158</reference><reference>1489990994</reference><reference>1573258001</reference><reference>1588394470</reference><reference>1605775181</reference><reference>1644882639</reference><reference>1918806322</reference><reference>1995008247</reference><reference>1998017916</reference><reference>2067780727</reference><reference>2090962365</reference><reference>2097185397</reference><reference>2111619838</reference><reference>2111706174</reference><reference>2120897738</reference><reference>2169735850</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-45314-8_22</doi><keywords><keyword weight="0.47884">Programming language</keyword><keyword weight="0.51533">Object-oriented programming</keyword><keyword weight="0.49729">Unified Modeling Language</keyword><keyword weight="0.45566">Computer science</keyword><keyword weight="0.53844">Assertion</keyword><keyword weight="0.4565">Theoretical computer science</keyword><keyword weight="0.49502">Explicit substitution</keyword><keyword weight="0.5098">Instance variable</keyword><keyword weight="0.65099">Java Modeling Language</keyword><keyword weight="0.66432">Object Constraint Language</keyword><keyword weight="0.54852">Java</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Object Constraint Language OCL offers a formal notation for constraining the modelling elements occurring in UML diagrams. In this paper we apply OCL for developing Java realizations of UML design models and introduce a new Hoare-Calculus for Java classes which uses OCL as assertion language. The Hoare rules are as usual for while programs, blocks and (possibly recursive) method calls. Update of instance variables is handled by an explicit substitution operator which also takes care of aliasing. For verifying a Java subsystem w.r.t. a design subsystem specified using OCL constraints we define an appropriate realization relation and illustrate our approach by an example.</abstract></paper>