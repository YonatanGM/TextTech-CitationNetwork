<paper id="1526692684"><title>K-Nearest Neighbor Search for Moving Query Point</title><year>2001</year><authors><author org="University of Maryland" id="2158807239">Zhexuan Song</author><author org="University of Maryland" id="258753967">Nick Roussopoulos</author></authors><n_citation>315</n_citation><doc_type>Conference</doc_type><references><reference>1488719427</reference><reference>1604713212</reference><reference>1796251476</reference><reference>1893622764</reference><reference>1972881375</reference><reference>2046144220</reference><reference>2059378307</reference><reference>2099317610</reference><reference>2106642566</reference><reference>2109424811</reference><reference>2134627110</reference><reference>2149906774</reference><reference>2166050755</reference></references><venue id="2532200668" type="C">Symposium on Large Spatial Databases</venue><doi>10.1007/3-540-47724-1_5</doi><keywords><keyword weight="0.53674">k-nearest neighbors algorithm</keyword><keyword weight="0.46682">Mobile computing</keyword><keyword weight="0.45264">Data mining</keyword><keyword weight="0.63197">Fixed-radius near neighbors</keyword><keyword weight="0.53798">Search algorithm</keyword><keyword weight="0.4436">Computer science</keyword><keyword weight="0.4816">Real point</keyword><keyword weight="0.58192">Range query (data structures)</keyword><keyword weight="0.47023">Spatial database</keyword><keyword weight="0.65054">Nearest neighbor search</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper addresses the problem of finding k nearest neighbors for moving query point (we call it k-NNMP). It is an important issue in both mobile computing research and real-life applications. The problem assumes that the query point is not static, as in k-nearest neighbor problem, but varies its position over time. In this paper, four different methods are proposed for solving the problem. Discussion about the parameters affecting the performance of the algorithms is also presented. A sequence of experiments with both synthetic and real point data sets are studied. In the experiments, our algorithms always outperform the existing ones by fetching 70% less disk pages. In some settings, the saving can be as much as one order of magnitude.</abstract></paper>