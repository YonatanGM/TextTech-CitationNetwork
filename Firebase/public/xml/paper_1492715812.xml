<paper id="1492715812"><title>Sharing Trees for on-the-fly Verification</title><year>1995</year><authors><author org="INRS- Telecommunications" id="2276233506">Francois Gagnon</author><author org="INRS- Telecommunications" id="2168182239">Jean-Charles Gregoire</author><author org="Facultés Universitaires Notre Dame de la Paix" id="2630616459">D. Zampuniéris</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>1508152977</reference><reference>1513380414</reference><reference>1682661763</reference><reference>1728798265</reference><reference>1972065960</reference><reference>1998132813</reference><reference>2012935476</reference><reference>2030224590</reference><reference>2131101129</reference></references><venue id="1173173816" type="C">Formal Techniques for (Networked and) Distributed Systems</venue><doi>10.1007/978-0-387-34945-9_30</doi><keywords><keyword weight="0.53793">Data structure</keyword><keyword weight="0.0">State information</keyword><keyword weight="0.47287">Computer science</keyword><keyword weight="0.58122">Correctness</keyword><keyword weight="0.0">On the fly</keyword><keyword weight="0.47727">Theoretical computer science</keyword><keyword weight="0.5015">Operator (computer programming)</keyword></keywords><publisher>Springer, Boston, MA</publisher><abstract>We describe here how Sharing Trees can be used in an ‘on-the-fly’ verification tool for proving correctness properties of concurrent and distributed systems. STs are a new data structure which supports a compact representation of full state information. We discuss how we have experimented with the basic set of STs algorithms and describe a new operator which combines insertion and reduction and is more suitable for our purposes. Performance results between standard operators and the new operator are given. We also show how STs compare with full state and BDD-based representations.</abstract></paper>