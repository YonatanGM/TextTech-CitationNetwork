<paper id="1570112753"><title>Preemption in Concurrent Systems</title><year>1993</year><authors><author org="ECOLE des MINES" id="2431982862">GÃ©rard Berry</author></authors><n_citation>94</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1505276063</reference><reference>1574107608</reference><reference>1994285316</reference><reference>2007584988</reference><reference>2058713130</reference><reference>2081938726</reference><reference>2099529102</reference><reference>2110425399</reference><reference>2142605518</reference><reference>2151739026</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-57529-4_44</doi><keywords><keyword weight="0.40251">Discrete mathematics</keyword><keyword weight="0.54746">Preemption</keyword><keyword weight="0.46366">Programming language</keyword><keyword weight="0.55052">Concurrency</keyword><keyword weight="0.44585">Computer science</keyword><keyword weight="0.0">Concrete syntax</keyword><keyword weight="0.57922">Synchronous programming language</keyword><keyword weight="0.44239">Operator (computer programming)</keyword><keyword weight="0.73778">Esterel</keyword><keyword weight="0.54547">Process calculus</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Process preemption deals with contolling the life and death of concurrent processes. Well-defined preemption mechanisms are essential in control-dominated reactive and real-time programming, and accurate handling of preemption requires a time-dependent model. We first informally discuss what preemption is about and argue for the need of preemption primitives that are fully orthogonal with sequencing and concurrency ones. Then, we formally present the preemption operators of the Esterel zero-delay process calculus, which is a theoretical version of the Esterel synchronous programming language.</abstract></paper>