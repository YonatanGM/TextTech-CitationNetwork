<paper id="1520527482"><title>The Search Efficiency of Theorem Proving Strategies</title><year>1994</year><authors><author org="University of North Carolina at Chapel Hill**" id="174197633">David A. Plaisted</author></authors><n_citation>33</n_citation><doc_type>Conference</doc_type><references><reference>134546141</reference><reference>177650123</reference><reference>1479669713</reference><reference>1514729613</reference><reference>1530765221</reference><reference>1606511448</reference><reference>1791728543</reference><reference>1972956465</reference><reference>1986341459</reference><reference>1988083342</reference><reference>1998330152</reference><reference>2020794409</reference><reference>2042551813</reference><reference>2043314428</reference><reference>2046511504</reference><reference>2062897452</reference><reference>2067716734</reference><reference>2069767473</reference><reference>2090172107</reference><reference>2098022011</reference><reference>2150470619</reference><reference>2163619482</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-58156-1_5</doi><keywords><keyword weight="0.43877">Discrete mathematics</keyword><keyword weight="0.56437">Horn clause</keyword><keyword weight="0.54723">GÃ¶del's completeness theorem</keyword><keyword weight="0.55397">Second-order logic</keyword><keyword weight="0.43927">Computer science</keyword><keyword weight="0.59145">Automated theorem proving</keyword><keyword weight="0.58604">First-order logic</keyword><keyword weight="0.56251">Fundamental theorem</keyword><keyword weight="0.60736">Unit propagation</keyword><keyword weight="0.56304">Compactness theorem</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We analyze the search efficiency of a number of common refutational theorem proving strategies for first-order logic. We show that most of them produce search spaces of exponential size even on simple sets of clauses, or else are not sensitive to the goal. We also discuss clause linking, a new procedure that uses a reduction to propositional calculus, and show that it, together with methods that cache subgoals, have behavior that is more favorable in some respects.</abstract></paper>