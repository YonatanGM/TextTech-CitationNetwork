<paper id="1984720830"><title>HARP: a tableau-based theorem prover</title><year>1988</year><authors><author org="School of Computer Science, Carleton University Ottawa Canada" id="2974548740">F. Oppacher</author><author org="School of Computer Science, Carleton University Ottawa Canada" id="2973828364">E. Suen</author></authors><n_citation>92</n_citation><doc_type>Journal</doc_type><references><reference>159279589</reference><reference>1514674620</reference><reference>1514729613</reference><reference>1530999579</reference><reference>1531543048</reference><reference>1970045008</reference><reference>1978260344</reference><reference>2010939537</reference><reference>2018221833</reference><reference>2051342369</reference><reference>2061288661</reference><reference>2071915991</reference><reference>2078580799</reference><reference>2088350978</reference><reference>2107046473</reference><reference>2134228926</reference><reference>2152475379</reference></references><venue id="99781599" type="J">Journal of Automated Reasoning</venue><doi>10.1007/BF00244513</doi><keywords><keyword weight="0.56454">Analytic proof</keyword><keyword weight="0.55316">Computer-assisted proof</keyword><keyword weight="0.42034">Discrete mathematics</keyword><keyword weight="0.47021">Programming language</keyword><keyword weight="0.46237">Computer science</keyword><keyword weight="0.54148">Automated theorem proving</keyword><keyword weight="0.44271">Algorithm</keyword><keyword weight="0.5037">HARP</keyword><keyword weight="0.54354">First-order logic</keyword><keyword weight="0.57432">Heuristics</keyword><keyword weight="0.56346">Mathematical proof</keyword><keyword weight="0.52999">Inference engine</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>This paper presents HARP, a complete, tableau-based theorem prover for first order logic, which is intended to be used both interactively and as an inference engine for Artificial Intelligence applications. Accordingly, HARPu0027s construction is influenced by the design goals of ‘naturalness’, efficiency, usefulness in an Artificial Intelligence environment, and modifiability of the control structure by heuristics. To achieve these goals, HARP accepts the entire language of first order logic, i.e. avoids conversion to any kind of normal form, and combines a proof condensation procedure with explicitly represented, declaratively formulated heuristics to construct and communicate its proofs in a format congenial to people. The proof condensation procedure makes proof shorter and more readable by excising redundancies from proof trees. Domain-independent heuristics are formulated to capture efficient and human-like deduction strategies and to rapidly detect certain types of nontheorems. Domain-dependent heuristics can be used to implement specific control regimes, e.g. to efficiently support inheritance. HARPu0027s architecture-and the concomitant ready extensibility of its control structure by declarative heuristic rules-renders it easy to let extralogical information, e.g. semantic and world knowledge, guide the search for proofs and help eliminate irrelevant premisses.</abstract></paper>