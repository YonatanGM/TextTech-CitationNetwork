<paper id="1523016082"><title>On the Relation between Direct and Continuation Semantics</title><year>1974</year><authors><author org="Syracuse University" id="2403193723">John C. Reynolds</author></authors><n_citation>117</n_citation><doc_type>Conference</doc_type><references><reference>2013644825</reference><reference>2043416466</reference><reference>2048426921</reference><reference>2104416102</reference><reference>2152944474</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/3-540-06841-4_57</doi><keywords><keyword weight="0.59278">Formal semantics (linguistics)</keyword><keyword weight="0.63184">Operational semantics</keyword><keyword weight="0.44038">Programming language</keyword><keyword weight="0.58457">Computational semantics</keyword><keyword weight="0.42708">Computer science</keyword><keyword weight="0.62837">Denotational semantics</keyword><keyword weight="0.59531">Action semantics</keyword><keyword weight="0.61737">Well-founded semantics</keyword><keyword weight="0.58147">Continuation-passing style</keyword><keyword weight="0.58293">Semantics (computer science)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The use of continuations in the definition of programming languages has gained considerable currency recently, particularly in conjunction with the lattice-theoretic methods of D. Scott. Although continuations are apparently needed to provide a mathematical semantics for non-applicative control features, they are unnecessary for the definition of a purely applicative language, even when call-by-value occurs. This raises the question of the relationship between the direct and the continuation semantic functions for a purely applicative language. We give two theorems which specify this relationship and show that, in a precise sense, direct semantics are included in continuation semantics.</abstract></paper>