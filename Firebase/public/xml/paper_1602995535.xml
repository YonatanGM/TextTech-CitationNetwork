<paper id="1602995535"><title>A Decision Algorithm for Full Propositional Temporal Logic</title><year>1993</year><authors><author org="The Weizmann Institute of Science" id="41634159">Yonit Kesten</author><author org="Stanford, University" id="2146370811">Zohar Manna</author><author org="Stanford, University" id="2397035872">Hugh McGuire</author><author org="The Weizmann Institute of Science" id="2171343426">Amir Pnueli</author></authors><n_citation>72</n_citation><doc_type>Conference</doc_type><references><reference>1491593738</reference><reference>1515452107</reference><reference>2000138546</reference><reference>2003227046</reference><reference>2040127143</reference><reference>2069709605</reference><reference>2090398333</reference><reference>2093916942</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56922-7_9</doi><keywords><keyword weight="0.58823">Computation tree logic</keyword><keyword weight="0.62785">Model checking</keyword><keyword weight="0.57962">Autoepistemic logic</keyword><keyword weight="0.5893">Interval temporal logic</keyword><keyword weight="0.44985">Computer science</keyword><keyword weight="0.61432">Satisfiability</keyword><keyword weight="0.58088">Zeroth-order logic</keyword><keyword weight="0.46715">Algorithm</keyword><keyword weight="0.46832">Theoretical computer science</keyword><keyword weight="0.60036">Linear temporal logic</keyword><keyword weight="0.61546">Resolution (logic)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper presents an efficient algorithm for checking the satisfiability of a propositional linear time temporal logic formula, which may have past as well as future operators. This algorithm can be used to check validity of such formulas over all models as well as over computations of a finite-state program (model checking). Unlike previous theoretical presentations of a decision method for checking satisfiability or validity, whose first step is to construct the full set of all possible atoms of a tableau (satisfaction graph) and immediately pay the worst case exponential complexity price, the algorithm presented here builds the tableau incrementally. This means that the algorithm constructs only those atoms that are reachable from a possible initial atom, satisfying the formula to be checked.</abstract></paper>