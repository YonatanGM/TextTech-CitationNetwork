<paper id="1604457670"><title>Validation and verification of software process models</title><year>1991</year><authors><author org="University of Dortmund" id="2701829154">Volker Gruhn</author></authors><n_citation>61</n_citation><doc_type /><references><reference>1570372094</reference><reference>2065597033</reference><reference>2127509644</reference><reference>2166227371</reference><reference>2176296250</reference></references><venue id="" type="">Proceedings of the European symposium on Software development environments and CASE technology</venue><doi>10.1007/3-540-54194-2_40</doi><keywords><keyword weight="0.5854">Verification and validation of computer simulation models</keyword><keyword weight="0.47381">Software engineering</keyword><keyword weight="0.56782">Validation rule</keyword><keyword weight="0.46873">Computer science</keyword><keyword weight="0.58276">Modeling language</keyword><keyword weight="0.74029">Software Process simulation</keyword><keyword weight="0.67302">Software development process</keyword><keyword weight="0.72077">Software verification and validation</keyword><keyword weight="0.70381">Software construction</keyword><keyword weight="0.71726">Software verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We introduce a software process modeling language — called FUNSOFT nets — which has a formally defined semantics in terms of Predicate/Transition nets. For this language we have implemented various analysis facilities. We point out which benefits can be gained from a thorough software process model analysis. We explain how software process models can be validated and how software process model properties can be verified. The proposed software process model validation is based on software process simulation, the proposed verification of software process model properties is based on well-known Petri net algorithms and on the notion of quantity restricted coverability trees. Finally, we explain how the proposed analysis facilities are implemented in the analysis tool ANAMEL, which is embedded into the software process management environment MELMAC.</abstract></paper>