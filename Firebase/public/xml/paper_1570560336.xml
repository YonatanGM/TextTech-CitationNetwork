<paper id="1570560336"><title>Modular Program Construction Using Abstractions</title><year>1979</year><authors><author org="massachusetts institute of technology" id="2084056563">Barbara Liskov</author></authors><n_citation>15</n_citation><doc_type /><references><reference>1562161142</reference><reference>1930570670</reference><reference>2008395018</reference><reference>2106348655</reference><reference>2110050316</reference><reference>2148817888</reference></references><venue id="" type="">Proceedings of the Abstract Software Specifications, 1979 Copenhagen Winter School</venue><doi>10.1007/3-540-10007-5_43</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.58022">Modular decomposition</keyword><keyword weight="0.47736">Programming language</keyword><keyword weight="0.4405">Abstraction</keyword><keyword weight="0.45741">Computer science</keyword><keyword weight="0.48513">Software development process</keyword><keyword weight="0.54008">Modular design</keyword><keyword weight="0.49367">Software construction</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A programming methodology is presented in which modular decomposition is based on recognition of useful abstractions. Two kinds of abstractions are used, procedural abstractions and data abstractions. Decomposition is carried out during a design phase that takes place before implementation begins. The design is documented by a graph showing the relationship among abstractions and by (informal) specifications of each abstraction.</abstract></paper>