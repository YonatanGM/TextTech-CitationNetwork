<paper id="1524254575"><title>Object-Oriented Meta Modelling</title><year>1995</year><authors><author org="Tokyo Inst. of tech." id="1999148367">Motoshi Saeki</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>166854877</reference><reference>1540499553</reference><reference>1580124140</reference><reference>1589638152</reference><reference>1597374350</reference><reference>2020775305</reference><reference>2115940479</reference><reference>2150829668</reference></references><venue id="1176514135" type="C">International Conference on Conceptual Modeling</venue><doi>10.1007/BFb0020537</doi><keywords><keyword weight="0.4549">Data mining</keyword><keyword weight="0.52218">Object-oriented programming</keyword><keyword weight="0.5214">Problem domain</keyword><keyword weight="0.57829">Method engineering</keyword><keyword weight="0.46219">Computer science</keyword><keyword weight="0.4727">Information hiding</keyword><keyword weight="0.52791">Computer-aided software engineering</keyword><keyword weight="0.52352">System requirements specification</keyword><keyword weight="0.49778">Modularity</keyword><keyword weight="0.49573">Reusability</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>For efficient system specification development, it is very important that the developers can compose the development methods suitable for their problem domain and environment before starting system development. Method Engineering, especially meta-modelling technique, provides us with the powerful devices to compose the methods effectively. In this framework, we develop new methods and their supporting tools easily from the data base of the existing methods and/or method fragments (meaningful constituents of methods), called method base. This paper discusses a meta-modelling technique based on object-oriented concept for the method base system. Information hiding and inheritance mechanism in object-oriented concept provide method fragments with high modularity and reusability. Method fragments are modelled and described in object-oriented formal description language Object Z. We also discuss how to customize method fragments and to integrate them to a new method.</abstract></paper>