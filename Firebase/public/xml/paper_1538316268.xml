<paper id="1538316268"><title>Verifying Nondeterministic Implementations of Deterministic Systems</title><year>1996</year><authors><author org="Carnegie - Mellon University#TAB#" id="2973403908">Alok Jain</author><author org="IBM CORPORATION" id="2109068553">Kyle L. Nelson</author><author org="Carnegie - Mellon University#TAB#" id="2472051909">Randal E. Bryant</author></authors><n_citation>15</n_citation><doc_type>Conference</doc_type><references><reference>1583165871</reference><reference>1741528175</reference><reference>1986558678</reference><reference>2095572512</reference><reference>2116141893</reference><reference>2132055325</reference><reference>2144928994</reference><reference>2150119568</reference></references><venue id="1166230065" type="C">Formal Methods in Computer-Aided Design</venue><doi>10.1007/BFb0031803</doi><keywords><keyword weight="0.59709">Symbolic simulation</keyword><keyword weight="0.57844">Nondeterministic algorithm</keyword><keyword weight="0.47263">Computer science</keyword><keyword weight="0.47217">Parallel computing</keyword><keyword weight="0.45977">Exploit</keyword><keyword weight="0.48594">Implementation</keyword><keyword weight="0.47022">Theoretical computer science</keyword><keyword weight="0.52599">Execution model</keyword><keyword weight="0.53851">PowerPC</keyword><keyword weight="0.59492">Symbolic trajectory evaluation</keyword><keyword weight="0.59185">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Some modern systems with a simple deterministic high-level specification have implementations that exhibit highly nondeterministic behavior. Such systems maintain a simple operation semantics at the high-level. However their underlying implementations exploit parallelism to enhance performance leading to interaction among operations and contention for resources. The deviation from the sequential execution model not only leads to nondeterminism in the implementation but creates the potential for serious design errors. This paper presents a methodology for formal verification of such systems. An abstract specification describes the high-level behavior as a set of operations. A mapping relates the sequential semantics of these operations to the underlying nondeterminism in the implementation. Symbolic Trajectory Evaluation, a modified form of symbolic simulation, is used to perform the actual verification. The methodology is currently being used to verify portions of a superscalar processor which implements the PowerPC architecture. Our initial work on the fixed point unit indicates that this is a promising approach for verification of processors.</abstract></paper>