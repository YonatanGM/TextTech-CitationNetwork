<paper id="1942703822"><title>Management of evolving specifications using category theory</title><year>1998</year><authors><author org="Software Res. Lab., NASA/WVU, Fairmont, WV, USA" id="342554022">V. Wiels</author><author org="" id="329574911">S. Easterbrook</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1533848815</reference><reference>1542403019</reference><reference>1563584846</reference><reference>1716417115</reference><reference>1914906025</reference><reference>1985566198</reference><reference>2005819264</reference><reference>2054830285</reference><reference>2135920852</reference></references><venue id="1166511975" type="C">Automated Software Engineering</venue><doi>10.1109/ASE.1998.732561</doi><keywords><keyword weight="0.47009">Change management</keyword><keyword weight="0.46669">Software engineering</keyword><keyword weight="0.45846">Systems engineering</keyword><keyword weight="0.49106">Categorical variable</keyword><keyword weight="0.46532">Computer science</keyword><keyword weight="0.55984">Change request</keyword><keyword weight="0.58053">Formal specification</keyword><keyword weight="0.46966">Software</keyword><keyword weight="0.49777">Category theory</keyword><keyword weight="0.50701">Software maintenance</keyword><keyword weight="0.49144">Formal verification</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Structure is important in large specifications for understanding, testing and managing change. Category theory has been explored as framework for providing this structure, and has been successfully used to compose specifications. This work has typically adopted a "correct-by-construction" approach: components are specified, proved correct and then composed together in such a way as to preserve their properties. However, in a large project, it is desirable to be able to mix specification and composition steps such that, at any particular moment in the process, we may have established only some of the properties of the components and some of the composition relations. In this paper, we propose adaptations to the categorical framework in order to manage evolving specifications. We demonstrate the utility of the framework on the analysis of a part of a software change request for the Space Shuttle.</abstract></paper>