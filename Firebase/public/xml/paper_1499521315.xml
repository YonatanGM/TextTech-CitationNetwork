<paper id="1499521315"><title>Goal-Oriented Concurrency Control</title><year>1989</year><authors><author org="University of California" id="152493642">Victor Vianu</author><author org="Technische Hochschule Aachen" id="721127700">Gottfried Vossen</author></authors><n_citation>4</n_citation><doc_type /><references><reference>46148474</reference><reference>54673468</reference><reference>1490966766</reference><reference>1545155892</reference><reference>1554659905</reference><reference>1580391168</reference><reference>1975519850</reference><reference>1985581502</reference><reference>1986975171</reference><reference>1992430701</reference><reference>2012170877</reference><reference>2023304911</reference><reference>2025151754</reference><reference>2031374177</reference><reference>2042592111</reference><reference>2054666843</reference><reference>2059693475</reference><reference>2078057384</reference><reference>2106887953</reference><reference>2115822498</reference><reference>2153754624</reference><reference>2161609549</reference></references><venue id="" type="">MFDBS 89 Proceedings of the second symposium on Mathematical fundamentals of database systems</venue><doi>10.1007/3-540-51251-9_26</doi><keywords><keyword weight="0.63466">Timestamp-based concurrency control</keyword><keyword weight="0.7123">Isolation (database systems)</keyword><keyword weight="0.74643">Serializability</keyword><keyword weight="0.46136">Programming language</keyword><keyword weight="0.63446">Concurrency control</keyword><keyword weight="0.46458">Computer science</keyword><keyword weight="0.6674">Multiversion concurrency control</keyword><keyword weight="0.69774">Distributed concurrency control</keyword><keyword weight="0.67586">Non-lock concurrency control</keyword><keyword weight="0.68194">Optimistic concurrency control</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A new correctness criterion for schedules of update transactions is proposed, which captures usersu0027 intended changes to the database. This is motivated by the observation that traditional serializability may lead to anomalies by not taking into account semantics related to such intended changes. The alternate criterion — goal-correctness — is orthogonal to serializability, and is based on realizing goals associated with each transaction. The problems involved in goal-oriented concurrency control are first identified in a general framework. The analysis suggests that this approach is practical only for restricted transaction languages where goals can be inferred and manipulated efficiently. One such language is then considered, capturing a class of updates of practical interest. For this language it is shown that goal-oriented concurrency control is tractable and compares favorably to serializability with respect to complexity: testing goal-correctness takes polynomial time, while testing serializability is NP-complete. The sets of schedules which are correct with respect to the two criteria are incomparable. Thus, goal-correctness may allow increased concurrency. The results highlight the feasibility and advantages of goal-oriented concurrency control in restricted frameworks. The paper focuses on the static aspects of goal-oriented concurrency control. A conservative approach to the dynamic generation of goal-correct schedules is briefly sketched.</abstract></paper>