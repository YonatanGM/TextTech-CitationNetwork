<paper id="1576974478"><title>An Overview of the Fortran D Programming System</title><year>1991</year><authors><author org="Rice University" id="2047566528">Seema Hiranandani</author><author org="Rice University" id="2136496678">Ken Kennedy</author><author org="Rice University" id="2175709007">Charles Koelbel</author><author org="Rice University" id="2286609894">Ulrich Kremer</author><author org="Rice University" id="2105068653">Chau-Wen Tseng</author></authors><n_citation>87</n_citation><doc_type>Conference</doc_type><references><reference>129396582</reference><reference>1495096560</reference><reference>1977026930</reference><reference>1977697058</reference><reference>1997835767</reference><reference>2024804689</reference><reference>2049824838</reference><reference>2053546108</reference><reference>2056458773</reference><reference>2057303472</reference><reference>2063905556</reference><reference>2088560953</reference><reference>2092309910</reference><reference>2095798890</reference><reference>2102430469</reference><reference>2118735733</reference><reference>2125380948</reference><reference>2160650521</reference><reference>2167548825</reference></references><venue id="1198129048" type="C">Languages and Compilers for Parallel Computing</venue><doi>10.1007/BFb0038655</doi><keywords><keyword weight="0.50103">MODFLOW</keyword><keyword weight="0.63378">Procedural programming</keyword><keyword weight="0.47816">Programming language</keyword><keyword weight="0.58838">Programming paradigm</keyword><keyword weight="0.4585">Computer science</keyword><keyword weight="0.46851">Parallel computing</keyword><keyword weight="0.66012">Fortran</keyword><keyword weight="0.61186">Compiler</keyword><keyword weight="0.62297">High-level programming language</keyword><keyword weight="0.60623">Parallel programming model</keyword><keyword weight="0.42306">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The success of large-scale parallel architectures is limited by the difficulty of developing machine-independent parallel programs. We have developed Fortran D, a version of Fortran extended with data decomposition specifications, to provide a portable data-parallel programming model. This paper presents the design of two key components of the Fortran D programming system: a prototype compiler and an environment to assist automatic data decomposition. The Fortran D compiler addresses program partitioning, communication generation and optimization, data decomposition analysis, run-time support for unstructured computations, and storage management. The Fortran D programming environment provides a static performance estimator and an automatic data partitioner. We believe that the Fortran D programming system will significantly ease the task of writing machine-independent data-parallel programs.</abstract></paper>