<paper id="1553290931"><title>The Complexity of Generating and Checking Proffs of Membership</title><year>1996</year><authors><author org="CWI" id="2307024348">Harry Buhrman</author><author org="Universität Ulm" id="204841444">Thomas Thierauf</author></authors><n_citation>3</n_citation><doc_type>Conference</doc_type><references><reference>1485836178</reference><reference>1505211902</reference><reference>1967283546</reference><reference>1973023438</reference><reference>1979746590</reference><reference>1985204981</reference><reference>2000107242</reference><reference>2008999657</reference><reference>2029980187</reference><reference>2036265926</reference><reference>2052309234</reference><reference>2057512592</reference><reference>2058277150</reference><reference>2071367694</reference><reference>2085861229</reference><reference>2093454413</reference><reference>2116395240</reference><reference>2148761449</reference><reference>2162185625</reference><reference>2578539248</reference></references><venue id="1178070762" type="C">Symposium on Theoretical Aspects of Computer Science</venue><doi>10.1007/3-540-60922-9_7</doi><keywords><keyword weight="0.53842">FP</keyword><keyword weight="0.46237">Discrete mathematics</keyword><keyword weight="0.56421">Average-case complexity</keyword><keyword weight="0.55649">Structural complexity theory</keyword><keyword weight="0.46218">Combinatorics</keyword><keyword weight="0.54642">Sparse language</keyword><keyword weight="0.5669">Boolean satisfiability problem</keyword><keyword weight="0.54178">Descriptive complexity theory</keyword><keyword weight="0.54398">UP</keyword><keyword weight="0.55422">Time complexity</keyword><keyword weight="0.41098">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We consider the following :[4],"one compute satisfying assignments for satisfiable Boolean formulas in polynomial time with parallel queries to the :[20],"unique optimal clique problem (UOCLIQUE) complete for PNP[O(log the :[20],"unique :[30],"satisfiability problem (USAT) NP hard? We define a framework that enables us to study the complexity of generating and checking proofs of membership. We connect the above three questions to the complexity of generating and checking proofs of membership for sets in NP and PNP[O(log n)]. We show that an affirmative answer to any of the three questions implies the existence of coNP checkable proofs for PNP[O(log n)] that can be generated in FP ∥ NP . Furthermore, we construct an oracle relative to which there do not exist coNP checkable proofs for NP that are generated in FP ∥ NP . It follows that relative to this oracle all of the above questions are answered negatively.</abstract></paper>