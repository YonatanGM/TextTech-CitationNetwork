<paper id="1506818785"><title>Dynamic meta modeling: a graphical approach to the operational semantics of behavioral diagrams in UML</title><year>2000</year><authors><author org="University of Paderborn, Dept. of Mathematics and Computer Science, Paderborn, Germany#TAB#" id="2136680303">Gregor Engels</author><author org="University of Paderborn, Dept. of Mathematics and Computer Science, Paderborn, Germany#TAB#" id="2581769830">Jan Hendrik Hausmann</author><author org="University of Paderborn, Dept. of Mathematics and Computer Science, Paderborn, Germany#TAB#" id="1978340988">Reiko Heckel</author><author org="University of Paderborn, Dept. of Mathematics and Computer Science, Paderborn, Germany#TAB#" id="2134847361">Stefan Sauer</author></authors><n_citation>154</n_citation><doc_type>Journal</doc_type><references><reference>74571819</reference><reference>116431634</reference><reference>1501916033</reference><reference>1517943782</reference><reference>1520697883</reference><reference>1539553861</reference><reference>1570069626</reference><reference>1571075905</reference><reference>1574057703</reference><reference>1909063750</reference><reference>2087327214</reference><reference>2915014422</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-40011-7_23</doi><keywords><keyword weight="0.54449">Specification language</keyword><keyword weight="0.63394">Operational semantics</keyword><keyword weight="0.47213">Programming language</keyword><keyword weight="0.69471">UML tool</keyword><keyword weight="0.45226">Computer science</keyword><keyword weight="0.57129">Formal specification</keyword><keyword weight="0.75597">Applications of UML</keyword><keyword weight="0.63175">Story-driven modeling</keyword><keyword weight="0.61803">Shlaerâ€“Mellor method</keyword><keyword weight="0.60362">Metamodeling</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, dynamic meta modeling is proposed as a new approach to the operational semantics of behavioral UML diagrams. The dynamic meta model extends the well-known static meta model by a specification of the systemu0027s dynamics by means of collaboration diagrams. In this way, it is possible to define the behavior of UML diagrams within :[56],"conceptual idea is inherited from Plotkinu0027s structured operational semantics (SOS) paradigm, a style of semantics specification for concurrent programming languages and process calculi: Collaboration diagrams are used as deduction rules to specify a goal-oriented interpreter for the language. The approach is exemplified using a fragment of UML state-chart and object collaboration diagrams are :[107],"interpreted as graph transformation rules. In this way, dynamic UML semantics can be both mathematically rigorous so as to enable formal specifications and proofs and, due to the use of UML notation, understandable without prior knowledge of heavy mathematic machinery. Thus, it can be used as a reference by tool developers, teachers, and advanced users.</abstract></paper>