<paper id="1501192697"><title>Pattern-Based Design and Implementation of an XML and RDF Parser and Interpreter: A Case Study</title><year>2002</year><authors><author org="Vienna University of Economics" id="2113115014">Gustaf Neumann</author><author org="University of Essen" id="2344120076">Uwe Zdun</author></authors><n_citation>8</n_citation><doc_type>Conference</doc_type><references><reference>168690215</reference><reference>369868522</reference><reference>1499332970</reference><reference>1557557006</reference><reference>1563913545</reference><reference>1581138707</reference><reference>1843304713</reference><reference>1967246009</reference><reference>1969287957</reference><reference>2057334711</reference><reference>2088322083</reference><reference>2088520036</reference><reference>2112087280</reference><reference>2116411509</reference><reference>2121984483</reference><reference>2131431233</reference><reference>2137606889</reference><reference>2138363365</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/3-540-47993-7_17</doi><keywords><keyword weight="0.62563">RDF query language</keyword><keyword weight="0.47719">Programming language</keyword><keyword weight="0.57237">XML</keyword><keyword weight="0.46564">Computer science</keyword><keyword weight="0.57545">Language construct</keyword><keyword weight="0.58768">High-level programming language</keyword><keyword weight="0.55499">Parsing</keyword><keyword weight="0.57319">Scripting language</keyword><keyword weight="0.56538">Design pattern</keyword><keyword weight="0.57614">Markup language</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Software patterns have been widely promoted as a means of conveying practical design knowledge in a reusable fashion. Several approaches for providing better implementation variants of certain patterns have been presented. These approaches promise great advantages for flexibility, traceability, and reusability of pattern implementations. However, there are only a few larger practical case studies of these concepts available. In this paper we will present a case study of a component framework for flexible processing of markup languages in the object-oriented scripting language XOTcl. The language offers high-level means and architectural support for component integration ("component glueing"), introspection, language dynamics, and message interception techniques. These language constructs enable developers to extend the language with pattern implementations, and so to provide language support for certain pattern fragments. As a case study domain we discuss an extensible and flexible framework for XML/RDF parsing and interpretation that was developed and evolved over a period of three years and is now in use in numerous applications.</abstract></paper>