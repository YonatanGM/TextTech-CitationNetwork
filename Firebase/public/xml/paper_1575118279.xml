<paper id="1575118279"><title>STeP: Deductive-Algorithmic Verification of Reactive and Real-Time Systems</title><year>1996</year><authors><author org="Stanford, University" id="2655530446">Nikolaj Bjørner</author><author org="Stanford, University" id="2093172619">Anca Browne</author><author org="Stanford, University" id="2697690582">Eddie Chang</author><author org="Stanford, University" id="2060220732">Michael Colón</author><author org="Stanford, University" id="2155537987">Arjun Kapur</author><author org="Stanford, University" id="2146370811">Zohar Manna</author><author org="Stanford, University" id="5168973">Henny Sipma</author><author org="Stanford, University" id="1998231181">Tomás E. Uribe</author></authors><n_citation>106</n_citation><doc_type>Conference</doc_type><references><reference>1540180001</reference><reference>1559397325</reference><reference>1605381479</reference><reference>1699259381</reference><reference>2045112813</reference><reference>2125617568</reference><reference>2129664123</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-61474-5_92</doi><keywords><keyword weight="0.71548">Functional verification</keyword><keyword weight="0.60718">Model checking</keyword><keyword weight="0.47338">Programming language</keyword><keyword weight="0.46185">Computer science</keyword><keyword weight="0.69642">Intelligent verification</keyword><keyword weight="0.44694">Real-time computing</keyword><keyword weight="0.70255">Runtime verification</keyword><keyword weight="0.46142">Theoretical computer science</keyword><keyword weight="0.56763">Temporal logic</keyword><keyword weight="0.72904">High-level verification</keyword><keyword weight="0.51202">Gas meter prover</keyword><keyword weight="0.69236">Software verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Stanford Temporal Prover, STeP, combines deductive methods with algorithmic techniques to verify linear-time temporal logic specifications of reactive and real-time systems. STeP uses verification rules, verification diagrams, automatically generated invariants, model checking, and a collection of decision procedures to verify finite- and infinite-state systems.</abstract></paper>