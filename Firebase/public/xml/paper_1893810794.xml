<paper id="1893810794"><title>Extensible Denotational Language Specifications</title><year>1994</year><authors><author org="Rice University" id="2305176596">Robert Cartwright</author><author org="CARNEGIE-MELLON UNIVERSITY" id="113813022">Matthias Felleisen</author></authors><n_citation>48</n_citation><doc_type>Conference</doc_type><references><reference>267417</reference><reference>131154974</reference><reference>1493825700</reference><reference>1523016082</reference><reference>1526097408</reference><reference>1539369778</reference><reference>1544564247</reference><reference>1569788249</reference><reference>1829244603</reference><reference>1976711789</reference><reference>1980665766</reference><reference>1980939032</reference><reference>1995674161</reference><reference>1997143185</reference><reference>2002301065</reference><reference>2004105509</reference><reference>2010525351</reference><reference>2011001069</reference><reference>2032910840</reference><reference>2037984920</reference><reference>2039155915</reference><reference>2047869411</reference><reference>2054299141</reference><reference>2059076906</reference><reference>2070531891</reference><reference>2093541252</reference><reference>2107219179</reference><reference>2151716725</reference><reference>2156876717</reference><reference>2294422796</reference></references><venue id="2756067413" type="C">International Conference on Theoretical Aspects of Computer Software</venue><doi>10.1007/3-540-57887-0_99</doi><keywords><keyword weight="0.62461">Denotational semantics of the Actor model</keyword><keyword weight="0.62517">Denotation</keyword><keyword weight="0.64207">Normalisation by evaluation</keyword><keyword weight="0.54951">Semantic domain</keyword><keyword weight="0.54077">Functional programming</keyword><keyword weight="0.43646">Computer science</keyword><keyword weight="0.64778">Denotational semantics</keyword><keyword weight="0.45001">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.55341">Numeral system</keyword><keyword weight="0.60331">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Traditional denotational semantics assigns radically different meanings to one and the same phrase depending on the rest of the programming language. If the language is purely functional, the denotation of a numeral is a function from environments to integers. But, in a functional language with imperative control operators, a numeral denotes a function from environments and continuations to integers. This paper introduces a new format for denotational language specifications, extended direct semantics, that accommodates orthogonal extensions of a language without changing the denotations of existing phrases. An extended direct semantics always maps a numeral to the same denotation: the injection of the corresponding number into the domain of values. In general, the denotation of a phrase in a functional language is always a projection of the denotation of the same phrase in the semantics of an extended languageâ€”no matter what the extension is. Based on extended direct semantics, it is also possible to construct interpreters for complete languages by composing interpreters for language fragments.</abstract></paper>