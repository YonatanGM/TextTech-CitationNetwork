<paper id="1826173575"><title>An ASM Semantics for UML Activity Diagrams</title><year>2000</year><authors><author org="Universita di Pisa" id="2026252948">Egon Börger</author><author org="Università di Catania" id="1606833800">Alessandra Cavarra</author><author org="Università di Catania" id="376095773">Elvinia Riccobene</author></authors><n_citation>90</n_citation><doc_type>Conference</doc_type><references><reference>1528672540</reference><reference>1998017916</reference><reference>2018568588</reference><reference>2031506023</reference><reference>2129395888</reference><reference>2159765281</reference><reference>2724963341</reference></references><venue id="1191172908" type="C">Algebraic Methodology and Software Technology</venue><doi>10.1007/3-540-45499-3_22</doi><keywords><keyword weight="0.46145">Programming language</keyword><keyword weight="0.5253">Unified Modeling Language</keyword><keyword weight="0.66309">UML tool</keyword><keyword weight="0.44172">Computer science</keyword><keyword weight="0.51558">Abstract state machines</keyword><keyword weight="0.44752">Theoretical computer science</keyword><keyword weight="0.5948">Activity diagram</keyword><keyword weight="0.49512">occam</keyword><keyword weight="0.69438">Applications of UML</keyword><keyword weight="0.50022">Abstract machine</keyword><keyword weight="0.6332">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We provide a rigorous semantics for one of the central diagram types which are used in UML for the description of dynamical system behavior, namely activity diagrams. We resolve for these diagrams some of the ambiguities which arise from difierent interpretations of UML models. Since we phrase our definition in terms of Abstract State Machines, we define at the same time an interesting subclass of ASMs, offering the possibility to exploit the UML tool support for using these special ASMs in the practice of software design. We apply these Activity Diagram Machines for a succinct definition of the semantics of OCCAM.</abstract></paper>