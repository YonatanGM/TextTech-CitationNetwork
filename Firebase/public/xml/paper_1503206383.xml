<paper id="1503206383"><title>On-the-Fly Model Checking of RCTL Formulas</title><year>1998</year><authors><author org="Haifa Research Laboratory" id="2126025634">Ilan Beer</author><author org="Haifa Research Laboratory" id="2151264347">Shoham Ben-David</author><author org="Haifa Research Laboratory" id="276722063">Avner Landver</author></authors><n_citation>94</n_citation><doc_type>Conference</doc_type><references><reference>1501731334</reference><reference>1573354578</reference><reference>2009965218</reference><reference>2075920544</reference><reference>2090398333</reference><reference>2109338287</reference><reference>2141725526</reference><reference>2172190585</reference><reference>2532815277</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BFb0028744</doi><keywords><keyword weight="0.53222">Specification language</keyword><keyword weight="0.48066">Regular expression</keyword><keyword weight="0.56518">Model checking</keyword><keyword weight="0.45836">Programming language</keyword><keyword weight="0.45118">Computer science</keyword><keyword weight="0.45142">Systems design</keyword><keyword weight="0.44764">Algorithm</keyword><keyword weight="0.45228">Theoretical computer science</keyword><keyword weight="0.47483">Reachability</keyword><keyword weight="0.45185">Design process</keyword><keyword weight="0.44332">Computation</keyword><keyword weight="0.52636">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The specification language RCTL, an extension of CTL, is defined by adding the power of regular expressions to CTL. In addition to being a more expressive and natural hardware specification language than CTL, a large family of RCTL formulas can be verified on-the-fly (during symbolic reachability analysis). On-the-fly model checking, as a powerful verification paradigm, is especially efficient when the specification is false and extremely efficient when the computation needed to get to a failing state is short. It is suitable for the inherently gradual design process since it detects a multitude of bugs at the early verification stages, and paves the way towards finding the more complex errors as the design matures. It is shown that for every erroneous finite computation, there is an RCTL formula that detects it and can be verified on-the-fly. On-the-fly verification of RCTL formulas has moved model checking in IBM into a different class of designs inaccessible by prior techniques.</abstract></paper>