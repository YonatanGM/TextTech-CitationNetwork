<paper id="1558846832"><title>Testing and spot-checking of data streams</title><year>2002</year><authors><author org="AT&amp;T," id="2167932487">Joan Feigenbaum</author><author org="AT&amp;T" id="2128447696">Sampath Kannan</author><author org="AT&amp;T" id="2911631061">Martin Strauss</author><author org="AT&amp;T" id="2161931206">Mahesh Viswanathan</author></authors><n_citation>49</n_citation><doc_type>Conference</doc_type><references><reference>358088974</reference><reference>1761167196</reference><reference>1970630090</reference><reference>1996839061</reference><reference>2033361557</reference><reference>2080745194</reference><reference>2097147952</reference><reference>2156943642</reference><reference>2163964823</reference><reference>2294022756</reference><reference>2340787257</reference></references><venue id="1130177464" type="C">Symposium on Discrete Algorithms</venue><doi>10.1007/s00453-002-0959-4</doi><keywords><keyword weight="0.67464">Data stream mining</keyword><keyword weight="0.46855">Data set</keyword><keyword weight="0.51468">Property testing</keyword><keyword weight="0.46137">Computer science</keyword><keyword weight="0.59853">Data stream</keyword><keyword weight="0.45823">Theoretical computer science</keyword><keyword weight="0.46602">Sampling (statistics)</keyword></keywords><publisher>Springer New York</publisher><abstract>We consider the tasks of testing and spot-checking for data streams . These testers and spot-checkers are potentially useful in real-time or near real-time applications that process huge data sets. Crucial aspects of the computational model include the space complexity of the testers and spot-checkers (ideally much lower than the size of the input stream) and the number of passes that the tester or spot-checker must make over the input stream (ideally one, because the original stream may be too large to store for a second pass).</abstract></paper>