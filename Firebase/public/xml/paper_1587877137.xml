<paper id="1587877137"><title>A Calculus for Long-Running Transactions</title><year>2003</year><authors><author org="Universitá di Bologna" id="2282603131">Laura Bocchi</author><author org="Universitá di Bologna" id="221201208">Cosimo Laneve</author><author org="Universitá di Bologna" id="92252108">Gianluigi Zavattaro</author></authors><n_citation>139</n_citation><doc_type>Conference</doc_type><references><reference>204654470</reference><reference>1479764148</reference><reference>1555669967</reference><reference>1999704832</reference><reference>2008838944</reference><reference>2013672985</reference><reference>2128932399</reference><reference>2161536823</reference></references><venue id="1129611459" type="C">Formal Methods for Open Object-Based Distributed Systems</venue><doi>10.1007/978-3-540-39958-2_9</doi><keywords><keyword weight="0.55096">Asynchronous communication</keyword><keyword weight="0.47534">Programming language</keyword><keyword weight="0.4754">Computer science</keyword><keyword weight="0.52603">Business process modeling</keyword><keyword weight="0.54209">Web service</keyword><keyword weight="0.44054">Transactional leadership</keyword><keyword weight="0.53221">Semantics</keyword><keyword weight="0.54875">Computer programming</keyword><keyword weight="0.45002">Encoding (memory)</keyword><keyword weight="0.46423">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We study long-running transactions in open component-based distributed applications, such as Web Services platforms. Long-running transactions describe time-extensive activities that involve several distributed components. Henceforth, in case of failure, it is usually not possible to restore the initial state, and firing a compensation process is preferable. Despite the interest of such transactional mechanisms, a formal modeling of them is still lacking. In this paper we address this issue by designing an extension of the asynchronous π-calculus with long-running transactions (and sequences) – the πt -calculus. We study the practice of πt-calculus, by discussing few paradigmatic examples, and its theory, by defining a semantics and providing a correct encoding of πt-calculus into asynchronous π-calculus.</abstract></paper>