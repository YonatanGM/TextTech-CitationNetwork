<paper id="1982232871"><title>The ergo support system: an integrated set of tools for prototyping integrated environments</title><year>1989</year><authors><author org="Carnegie Mellon University, Pittsburgh Pa" id="2139030624">Peter Lee</author><author org="Carnegie Mellon University, Pittsburgh Pa" id="114048148">Frank Pfenning</author><author org="Carnegie Mellon University, Pittsburgh Pa" id="2226750950">Gene Rollins</author><author org="Carnegie Mellon University, Pittsburgh Pa" id="4823187">William Scherlis</author></authors><n_citation>23</n_citation><doc_type>Conference</doc_type><references><reference>11111983</reference><reference>1483170865</reference><reference>1530295539</reference><reference>1550435668</reference><reference>1569426623</reference><reference>1594353830</reference><reference>1992808564</reference><reference>2003131168</reference><reference>2009464583</reference><reference>2019651724</reference><reference>2023299380</reference><reference>2027071978</reference><reference>2062968803</reference><reference>2112308928</reference><reference>2128057448</reference><reference>2165434002</reference></references><venue id="2625784626" type="C">Software Engineering Symposium on Practical Software Development Environments</venue><doi>10.1145/64135.65006</doi><keywords><keyword weight="0.43951">Architecture</keyword><keyword weight="0.45629">Programming language</keyword><keyword weight="0.51511">Open architecture</keyword><keyword weight="0.47594">Software engineering</keyword><keyword weight="0.46893">Systems engineering</keyword><keyword weight="0.45212">Suite</keyword><keyword weight="0.0">Support system</keyword><keyword weight="0.45781">Computer science</keyword><keyword weight="0.0">Program development</keyword><keyword weight="0.51125">Program analysis</keyword><keyword weight="0.5647">Formal methods</keyword></keywords><publisher>ACM</publisher><abstract>The Ergo Support System (ESS) is an engineering framework for experimentation and prototyping to support the application of formal methods to program development, ranging from program analysis and derivation to proof-theoretic approaches. The ESS is a growing suite of tools that are linked together by means of a set of abstract interfaces. The principal engineering challenge is the design of abstract interfaces that are semantically rich and yet flexible enough to permit experimentation with a wide variety of formally-based program and proof development paradigms and associated languages. As part of the design of ESS, several abstract interface designs have been developed that provide for more effective component integration while preserving flexibility and the potential for scaling. A benefit of the open architecture approach of ESS is the ability to mix formal and informal approaches in the same environment architecture. The ESS has already been applied in a number of formal methods experiments.</abstract></paper>