<paper id="1553641727"><title>Implementation of Delayed Updates in Heraclitus</title><year>1992</year><authors><author org="University of Southern California" id="326002240">Shahram Ghandeharizadeh</author><author org="University of Southern California" id="2157269769">Richard Hull</author><author org="University of Southern California" id="2103612445">Dean Jacobs</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>1484105964</reference><reference>1562083166</reference><reference>1585666970</reference><reference>1586615678</reference><reference>2005132320</reference><reference>2046269252</reference><reference>2078057384</reference><reference>2116436709</reference><reference>2153320798</reference><reference>2159886933</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/BFb0032436</doi><keywords><keyword weight="0.57904">Fifth-generation programming language</keyword><keyword weight="0.47621">Programming language</keyword><keyword weight="0.46954">Computer science</keyword><keyword weight="0.55489">Abstract syntax tree</keyword><keyword weight="0.0">Virtual database</keyword><keyword weight="0.50143">Relational algebra</keyword><keyword weight="0.55261">Transaction processing system</keyword><keyword weight="0.45943">Database</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>The Heraclitus languages are database programming languages that give prominence to “delayed updates” or deltas, which are first-class values representing sets of proposed updates, such as inserts and deletes, to the underlying persistent store. Deltas can be created, inspected and combined without committing to the given updates. Deltas are useful for realizing advanced database features that manipulate virtual database states in addition to the currently stored state; examples include supporting rule-based triggers, hypothetical reasoning, and concurrent transaction processing systems.</abstract></paper>