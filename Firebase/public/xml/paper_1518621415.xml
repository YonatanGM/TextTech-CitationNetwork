<paper id="1518621415"><title>Beyond Depth-First: Improving Tabled Logic Programs through Alternative Scheduling Strategies</title><year>1996</year><authors><author org="State University of New York at Stony Brook" id="2116519607">Juliana Freire</author><author org="State University of New York at Stony Brook" id="2291248690">Terrance Swift</author><author org="State University of New York at Stony Brook" id="2163362677">David Scott Warren</author></authors><n_citation>51</n_citation><doc_type>Conference</doc_type><references><reference>57903016</reference><reference>99485709</reference><reference>1486392831</reference><reference>1586430014</reference><reference>1608806855</reference><reference>1967140769</reference><reference>1968513265</reference><reference>1978108034</reference><reference>1984715534</reference><reference>1998915208</reference><reference>2003733792</reference><reference>2031868932</reference><reference>2070598037</reference><reference>2088785244</reference></references><venue id="2754504537" type="C">International Symposium on Programming Language Implementation and Logic Programming</venue><doi>10.1007/3-540-61756-6_89</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.0">Program Efficiency</keyword><keyword weight="0.46861">Programming language</keyword><keyword weight="0.48586">Scheduling (computing)</keyword><keyword weight="0.46889">Computer science</keyword><keyword weight="0.47052">Depth-first search</keyword><keyword weight="0.46137">Theoretical computer science</keyword><keyword weight="0.61438">Logic programming</keyword><keyword weight="0.51349">Transitive closure</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Tabled evaluations ensure termination of logic programs with finite models by keeping track of which subgoals have been called. Given several variant subgoals in an evaluation, only the first one encountered will use program clause resolution; the rest uses answer resolution. This use of answer resolution prevents infinite looping which happens in SLD. Given the asynchronicity of answer generation and answer return, tabling systems face an important scheduling choice not present in traditional top-down evaluation: How does the order of returning answers to consuming subgoals affect program efficiency.</abstract></paper>