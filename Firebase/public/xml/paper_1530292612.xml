<paper id="1530292612"><title>Determinate literals in inductive logic programming</title><year>1991</year><authors><author org="Basser Department of Computer Science, University of Sydney, Sydney, NSW, Australia#TAB#" id="2569648598">J. R. Quinlan</author></authors><n_citation>68</n_citation><doc_type>Conference</doc_type><references><reference>15464195</reference><reference>112116639</reference><reference>1562138751</reference><reference>1565236324</reference><reference>1999138184</reference><reference>2067642555</reference><reference>2077422877</reference><reference>2484153108</reference></references><venue id="1203999783" type="C">International Joint Conference on Artificial Intelligence</venue><doi>10.1016/B978-1-55860-200-7.50091-X</doi><keywords><keyword weight="0.56755">Inductive logic programming</keyword><keyword weight="0.50193">Heuristic</keyword><keyword weight="0.55503">Horn clause</keyword><keyword weight="0.45479">Computer science</keyword><keyword weight="0.48629">Quicksort</keyword><keyword weight="0.57236">Greedy algorithm</keyword><keyword weight="0.46306">Theoretical computer science</keyword><keyword weight="0.45633">Artificial intelligence</keyword><keyword weight="0.61994">Greedy randomized adaptive search procedure</keyword><keyword weight="0.44639">Machine learning</keyword><keyword weight="0.43924">Computation</keyword><keyword weight="0.53374">Golem</keyword></keywords><publisher>Morgan Kaufmann Publishers Inc.</publisher><abstract>A recent system, FOIL, constructs Horn clause programs from numerous examples. Computational efficiency is achieved by using greedy search guided by an information-based heuristic. Greedy search tends to be myopic but determinate terms, an adaptation of an idea introduced by another new system (GOLEM), has been found to provide many of the benefits of lookahead without substantial increases in computation. This paper sketches key ideas from FOIL and GOLEM and discusses the use of determinate literals in a greedy search context. The efficacy of this approach is illustrated on the task of learning the quicksort procedure and other small but non-trivial list-manipulation functions.</abstract></paper>