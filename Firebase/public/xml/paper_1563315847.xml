<paper id="1563315847"><title>Improved Linear Time Approximation Algorithms for Weighted Matchings</title><year>2003</year><authors><author org="Humboldt-UniversitäT Zu Berlin" id="2060913789">Doratha E. Drake</author><author org="Humboldt-UniversitäT Zu Berlin" id="69337491">Stefan Hougardy</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>1485041102</reference><reference>1536362626</reference><reference>2024106841</reference><reference>2024607148</reference><reference>2036106789</reference><reference>2054420170</reference><reference>2088687202</reference><reference>2090168101</reference><reference>2785650282</reference></references><venue id="2539178803" type="C">Randomization and Approximation Techniques in Computer Science</venue><doi>10.1007/978-3-540-45198-3_2</doi><keywords><keyword weight="0.49382">Graph theory</keyword><keyword weight="0.5441">Approximation algorithm</keyword><keyword weight="0.45431">Discrete mathematics</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.45738">Combinatorics</keyword><keyword weight="0.5311">Matching (graph theory)</keyword><keyword weight="0.5334">Factor-critical graph</keyword><keyword weight="0.54512">3-dimensional matching</keyword><keyword weight="0.52146">Time complexity</keyword><keyword weight="0.50467">Blossom algorithm</keyword><keyword weight="0.40117">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The weighted matching problem is to find a matching in a weighted graph that has maximum weight. The fastest known algorithm for this problem has running time O(n m + n 2 logn). Many real world problems require graphs of such large size that this running time is too costly. We present a linear time approximation algorithm for the weighted matching problem with a performance ratio of \(\frac{2}{3}-\epsilon\). This improves the previously best performance ratio of \(\frac{1}{2}\).</abstract></paper>