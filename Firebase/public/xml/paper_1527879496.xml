<paper id="1527879496"><title>Detecting and Resolving Process Model Differences in the Absence of a Change Log</title><year>2008</year><authors><author org="IBM Zurich Research Laboratory Rüschlikon Switzerland" id="2032654697">Jochen M. Küster</author><author org="IBM Zurich Research Laboratory, Rüschlikon, Switzerland 8803 and Department of Computer Science, University of Paderborn, Germany#TAB#" id="1896520792">Christian Gerth</author><author org="Department of Computer Science, University of Paderborn, Germany#TAB#" id="2473236528">Alexander Förster</author><author org="Department of Computer Science, University of Paderborn, Germany#TAB#" id="2136680303">Gregor Engels</author></authors><n_citation>139</n_citation><doc_type>Conference</doc_type><references><reference>1480278719</reference><reference>1494640588</reference><reference>1500477099</reference><reference>1511762409</reference><reference>1524195172</reference><reference>1534498635</reference><reference>1570265525</reference><reference>1591513229</reference><reference>1794344093</reference><reference>1841581133</reference><reference>2096695219</reference><reference>2129466958</reference><reference>2149550070</reference><reference>2150784528</reference><reference>2157252812</reference><reference>2489841419</reference><reference>2913036292</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/978-3-540-85758-7_19</doi><keywords><keyword weight="0.45918">Abstraction</keyword><keyword weight="0.0">Version management</keyword><keyword weight="0.43551">Systems engineering</keyword><keyword weight="0.45313">Computer science</keyword><keyword weight="0.54207">Process modeling</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Business-driven development favors the construction of process models at different abstraction levels and by different people. As a consequence, there is a demand for consolidating different versions of process models by detecting and resolving differences. Existing approaches rely on the existence of a change log which logs the changes when changing a process model. However, in several scenarios such a change log does not exist and differences must be identified by comparing process models before and after changes have been made. In this paper, we present our approach to detecting and resolving differences between process models, in the absence of a change log. It is based on computing differences and deriving change operations for resolving differences, thereby providing a foundation for variant and version management in these cases.</abstract></paper>