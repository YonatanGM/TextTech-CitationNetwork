<paper id="1517759046"><title>Model checking bounded prioritized time Petri nets</title><year>2007</year><authors><author org="LAAS/CNRS, Universite de Toulouse, Toulouse, France" id="104559369">Bernard Berthomieu</author><author org="LAAS/CNRS, Universite de Toulouse, Toulouse, France" id="2131862285">Florent Peres</author><author org="LAAS/CNRS, Universite de Toulouse, Toulouse, France" id="308395410">Fran√ßois Vernadat</author></authors><n_citation>31</n_citation><doc_type>Conference</doc_type><references><reference>81848849</reference><reference>1529059198</reference><reference>1574289075</reference><reference>1579136117</reference><reference>1596935793</reference><reference>1841167015</reference><reference>1914485921</reference><reference>2058952583</reference><reference>2099924351</reference><reference>2151612633</reference><reference>2405127419</reference></references><venue id="1130464007" type="C">Automated Technology for Verification and Analysis</venue><doi>10.1007/978-3-540-75596-8_37</doi><keywords><keyword weight="0.43686">Discrete mathematics</keyword><keyword weight="0.50701">Model checking</keyword><keyword weight="0.64122">Petri net</keyword><keyword weight="0.42332">Computer science</keyword><keyword weight="0.44673">Polyhedron</keyword><keyword weight="0.46844">Automaton</keyword><keyword weight="0.58679">Process architecture</keyword><keyword weight="0.44252">Theoretical computer science</keyword><keyword weight="0.63287">Stochastic Petri net</keyword><keyword weight="0.50606">State space</keyword><keyword weight="0.53537">Bounded function</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In a companion paper [BPV06], we investigated the expressiveness of Time Petri Nets extended with Priorities and showed that it is very close to that Timed Automata, in terms of weak timed bisimilarity. As a continuation of this work we investigate here the applicability of the available state space abstractions for Bounded Time Petri Nets to Bounded Prioritized Time Petri Nets. We show in particular that a slight extension of the "strong state classes" construction of [BV03] provides a convenient state space abstraction for these nets, preserving markings, states, and LTL formulas. Interestingly, and conversely to Timed Automata, the construction proposed does not require to compute polyhedra differences.</abstract></paper>