<paper id="1978546859"><title>Regression test selection for Java software</title><year>2001</year><authors><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2984677931">Mary Jean Harrold</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2129459225">James A. Jones</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2290105769">Tongyu Li</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2157713762">Donglin Liang</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="1989715328">Alessandro Orso</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2261017919">Maikel Pennings</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="2135372096">Saurabh Sinha</author><author org="College of Computing, Georgia Inst. of Tech., Atlanta, GA#TAB#" id="394180386">S. Alexander Spoon</author><author org="Citrix Systems, Inc. (Ft. Lauderdale, FL)" id="2072293255">Ashish Gujarathi</author></authors><n_citation>240</n_citation><doc_type>Conference</doc_type><references><reference>1964601431</reference><reference>1983555736</reference><reference>2000194923</reference><reference>2020538887</reference><reference>2031224363</reference><reference>2033250216</reference><reference>2042023054</reference><reference>2044354349</reference><reference>2051600169</reference><reference>2058413637</reference><reference>2068635641</reference><reference>2080264505</reference><reference>2098766297</reference><reference>2105275044</reference><reference>2106837287</reference><reference>2116562786</reference><reference>2129523828</reference><reference>2131185826</reference><reference>2149843953</reference><reference>2153342620</reference><reference>2155235694</reference><reference>2164722319</reference><reference>2165026393</reference><reference>2171240827</reference></references><venue id="1138732554" type="C">Conference on Object-Oriented Programming Systems, Languages, and Applications</venue><doi>10.1145/504282.504305</doi><keywords><keyword weight="0.74114">Test suite</keyword><keyword weight="0.67241">Test harness</keyword><keyword weight="0.44442">Programming language</keyword><keyword weight="0.66243">Test Management Approach</keyword><keyword weight="0.44764">Computer science</keyword><keyword weight="0.66815">Test script</keyword><keyword weight="0.6631">Regression testing</keyword><keyword weight="0.64201">Model-based testing</keyword><keyword weight="0.67036">Test case</keyword><keyword weight="0.66267">Software regression</keyword></keywords><publisher>ACM</publisher><abstract>Regression testing is applied to modified software to provide confidence that the changed parts behave as intended and that the unchanged parts have not been adversely affected by the modifications. To reduce the cost of regression testing, test cases are selected from the test suite that was used to test the original version of the software---this process is called regression test selection. A safe regression-test-selection algorithm selects every test case in the test suite that may reveal a fault in the modified software. Safe regression-test-selection technique that, based on the use of a suitable representation, handles the features of the Java language. Unlike other safe regression test selection techniques, the presented technique also handles incomplete programs. The technique can thus be safely applied in the (very common) case of Java software that uses external libraries of components; the analysis of the external code is note required for the technique to select test cases for such software. The paper also describes RETEST, a regression-test-selection algorithm can be effective in reducing the size of the test suite.</abstract></paper>