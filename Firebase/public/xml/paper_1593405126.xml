<paper id="1593405126"><title>Language Support for Connector Abstractions</title><year>2003</year><authors><author org="University of Washington," id="2128636885">Jonathan Aldrich</author><author org="University of Washington," id="1993763701">Vibha Sazawal</author><author org="University of Washington," id="2133284789">Craig Chambers</author><author org="University of Washington," id="477007165">David Notkin</author></authors><n_citation>65</n_citation><doc_type>Conference</doc_type><references><reference>1494981970</reference><reference>1530381774</reference><reference>1971860760</reference><reference>2013658284</reference><reference>2022933093</reference><reference>2035391316</reference><reference>2056553417</reference><reference>2058806660</reference><reference>2087384268</reference><reference>2096331040</reference><reference>2097187051</reference><reference>2103716111</reference><reference>2105324142</reference><reference>2115603783</reference><reference>2121134342</reference><reference>2133254848</reference><reference>2135670602</reference><reference>2137417304</reference><reference>2146082668</reference><reference>2153933075</reference><reference>2154134159</reference><reference>2156437019</reference><reference>2162366870</reference><reference>2165476590</reference><reference>2462024123</reference><reference>2492503310</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/978-3-540-45070-2_5</doi><keywords><keyword weight="0.46747">Mobile computing</keyword><keyword weight="0.45327">Programming language</keyword><keyword weight="0.51282">Object-oriented programming</keyword><keyword weight="0.45119">Computer science</keyword><keyword weight="0.47833">Reuse</keyword><keyword weight="0.54022">Software system</keyword><keyword weight="0.48768">Ubiquitous computing</keyword><keyword weight="0.51236">Software architecture</keyword><keyword weight="0.466">Semantics</keyword><keyword weight="0.48151">Design pattern</keyword><keyword weight="0.44961">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Software connectors are increasingly recognized as an important consideration in the design and implementation of object-oriented software systems. Connectors can be used to communicate across a distributed system, coordinate the activities of several objects, or adapt one objectâ€™s interface to the interface of another. Mainstream object-oriented languages, however, do not provide explicit support for connectors. As a result, connection code is intermingled with application code, making it difficult to understand, evolve, and reuse connection mechanisms.</abstract></paper>