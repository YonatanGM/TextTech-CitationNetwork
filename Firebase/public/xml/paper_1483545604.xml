<paper id="1483545604"><title>Updates plus Preferences</title><year>2000</year><authors><author org="Fac. Ciěncias e Tecnologia, Univ. Nova de Lisboa" id="2304619042">José Júlio Alferes</author><author org="Fac. Ciěncias e Tecnologia, Univ. Nova de Lisboa" id="2104852094">Luís Moniz Pereira</author></authors><n_citation>40</n_citation><doc_type>Journal</doc_type><references><reference>59923821</reference><reference>90143897</reference><reference>139391652</reference><reference>175258934</reference><reference>1551453953</reference><reference>1594099509</reference><reference>1600297185</reference><reference>1672891595</reference><reference>1847820984</reference><reference>1963591676</reference><reference>2012373058</reference><reference>2094341147</reference><reference>2105631606</reference><reference>2121111746</reference><reference>2124627636</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-40006-0_24</doi><keywords><keyword weight="0.50578">Default rule</keyword><keyword weight="0.44773">Dynamic programming</keyword><keyword weight="0.0">Logic program</keyword><keyword weight="0.46431">Programming language</keyword><keyword weight="0.46088">Computer science</keyword><keyword weight="0.49586">Computational linguistics</keyword><keyword weight="0.50056">Circumscription</keyword><keyword weight="0.56049">Logic programming</keyword><keyword weight="0.6239">Well-founded semantics</keyword><keyword weight="0.53387">Semantics</keyword></keywords><publisher>Springer Verlag</publisher><abstract>The aim of this paper is to combine, into a single logic programming framework, the hitherto separate forms of reasoning of preferences and updating. More precisely, we define a language capable of considering sequences of logic programs that result from the consecutive updates of an initial program, where it is possible to define a priority relation among the rules of all successive programs. Moreover, within the framework, the priority relation can itself be :[73],"order to define a declarative semantics for the language, we start by reviewing the declarative semantics of updates of [1], and by presenting a definition of a semantics for preferences, shown equivalent to the one in [5], in a form suitable for its integration with the updates one. Before the conclusions and mention of future work, we present two illustrative examples of application of the framework.</abstract></paper>