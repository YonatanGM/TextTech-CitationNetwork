<paper id="1975146994"><title>Constructing a perfect matching is in random NC</title><year>1985</year><authors><author org="Computer Science Division, University of California at Berkeley#TAB#" id="1964658237">R M Karp</author><author org="Computer Science Dept. Stanford University," id="265232414">E Upfal</author><author org="IBM San Jose Research Laboratory" id="31335080">A Wigderson</author></authors><n_citation>100</n_citation><doc_type>Conference</doc_type><references><reference>15553240</reference><reference>1974040526</reference><reference>1980364701</reference><reference>1982800484</reference><reference>2056352038</reference><reference>2059378738</reference><reference>2061496873</reference><reference>2062881752</reference><reference>2070476310</reference><reference>2080132708</reference><reference>2149342630</reference></references><venue id="1190910084" type="C">Symposium on the Theory of Computing</venue><doi>10.1145/22145.22148</doi><keywords><keyword weight="0.63481">Perfect graph</keyword><keyword weight="0.47723">Discrete mathematics</keyword><keyword weight="0.47971">Combinatorics</keyword><keyword weight="0.6318">Line graph</keyword><keyword weight="0.66417">Edge cover</keyword><keyword weight="0.63492">Graph factorization</keyword><keyword weight="0.65047">Bipartite graph</keyword><keyword weight="0.63676">Matching (graph theory)</keyword><keyword weight="0.66328">Factor-critical graph</keyword><keyword weight="0.631">3-dimensional matching</keyword><keyword weight="0.4184">Mathematics</keyword></keywords><publisher>ACM</publisher><abstract>We show that the problem of constructing a perfect matching in a graph is in the complexity class Random NC: i.e., the problem is solvable in polylog time by a randomized parallel algorithm using a polynomial-bounded number of processors. We also show that several related problems lie in Random NC. These include: (i) Constructing a perfect matching of maximum weight in a graph whose edge weights are given in unary notation; (ii) Constructing a maximum-cardinality matching; (iii) Constructing a matching covering a set of vertices of maximum weight in a graph whose vertex weights are given in binary; (iv) Constructing a maximum s-t flow in a directed graph whose edge weights are given in unary.</abstract></paper>