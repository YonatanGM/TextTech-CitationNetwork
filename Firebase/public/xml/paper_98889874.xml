<paper id="98889874"><title>A new scheme for memory-efficient probabilistic verification</title><year>1996</year><authors><author org="Stanford, University" id="2103634389">Ulrich Stern</author><author org="Stanford, University" id="2148325455">David L. Dill</author></authors><n_citation>47</n_citation><doc_type>Conference</doc_type><references><reference>98763178</reference><reference>195082763</reference><reference>1583487553</reference><reference>1972065960</reference><reference>2052207834</reference><reference>2116762814</reference><reference>2116989825</reference><reference>2117812659</reference><reference>2120543825</reference><reference>2127547524</reference><reference>2138620071</reference><reference>2150119568</reference><reference>2151454836</reference><reference>2166158916</reference></references><venue id="1173173816" type="C">Formal Techniques for (Networked and) Distributed Systems</venue><doi>10.1007/978-0-387-35079-0_21</doi><keywords><keyword weight="0.55354">State transition table</keyword><keyword weight="0.60915">Double hashing</keyword><keyword weight="0.43928">Computer science</keyword><keyword weight="0.42688">Enumeration</keyword><keyword weight="0.4514">Theoretical computer science</keyword><keyword weight="0.51305">Probabilistic method</keyword><keyword weight="0.59014">Hash function</keyword><keyword weight="0.53722">Probabilistic logic</keyword><keyword weight="0.64543">Dynamic perfect hashing</keyword><keyword weight="0.51626">False positive paradox</keyword></keywords><publisher>Chapman &amp; Hall, Ltd.</publisher><abstract>In verification by explicit state enumeration, for each reachable state of the protocol being verified the full state descriptor is stored in a state table. Two probabilistic methods — bitstate hashing and hash compaction — have been proposed in the literature that store much fewer bits for each state but come at the price of some probability that not all reachable states will be explored during the search, and that the verifier may thus produce false positives. Holzmann introduced bitstate hashing and derived an approximation formula for the average probability that a particular state is not omitted during the search, but this formula does not give a bound on the probability of false positives. In contrast, the analysis for hash compaction, introduced by Wolper and Leroy and improved upon by Stern and Dill, yielded a bound on the probability that not even one state is omitted during the search, thus providing a bound on the probability of false positives.</abstract></paper>