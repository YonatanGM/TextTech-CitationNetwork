<paper id="1584887677"><title>The Complexity of Equivalence and Containment for Free Single Variable Program Schemes</title><year>1978</year><authors><author org="Cornell University;" id="2277304846">Steven Fortune</author><author org="Cornell University;" id="2079447303">John E. Hopcroft</author><author org="Cornell University;" id="2678991458">Erik Meineche Schmidt</author></authors><n_citation>75</n_citation><doc_type>Conference</doc_type><references><reference>1655990431</reference><reference>1768003599</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/3-540-08860-1_17</doi><keywords><keyword weight="0.45422">Discrete mathematics</keyword><keyword weight="0.44779">Combinatorics</keyword><keyword weight="0.47048">Exponential function</keyword><keyword weight="0.52182">Polynomial</keyword><keyword weight="0.42502">Computer science</keyword><keyword weight="0.45589">Algorithm</keyword><keyword weight="0.56182">Equivalence (measure theory)</keyword><keyword weight="0.45871">Boolean algebra</keyword><keyword weight="0.45057">Decision theory</keyword><keyword weight="0.54783">Time complexity</keyword><keyword weight="0.47984">Boolean data type</keyword><keyword weight="0.3542">Containment</keyword></keywords><publisher>Cornell University</publisher><abstract>Non-containment for free single variable program schemes is shown to be NP-complete. A polynomial time algorithm for deciding equivalence of two free schemes, provided one of them has the predicates appearing in the same order in all executions, is given. However, the ordering of a free scheme is shown to lead to an exponential increase in size.</abstract></paper>