<paper id="1583769822"><title>Logical foundations for typed object-oriented languages</title><year>1998</year><authors><author org="FernuniversitÄt Hagen" id="2343845410">Arnd Poetzsch-Heffter</author><author org="FernuniversitÄt Hagen" id="2285904575">Peter Müller</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>105422765</reference><reference>566359488</reference><reference>1583095677</reference><reference>1918806322</reference><reference>2111619838</reference><reference>2147543351</reference></references><venue id="2757313622" type="C">IFIP International Conference on Programming Concepts and Methods</venue><doi>10.1007/978-0-387-35358-6_26</doi><keywords><keyword weight="0.44191">Kernel (linear algebra)</keyword><keyword weight="0.48029">Programming language</keyword><keyword weight="0.43067">Algebraic number</keyword><keyword weight="0.59102">Object-oriented programming</keyword><keyword weight="0.45944">Computer science</keyword><keyword weight="0.45141">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.61319">Logic programming</keyword><keyword weight="0.48853">Subtyping</keyword><keyword weight="0.57697">Formal verification</keyword></keywords><publisher>Chapman &amp; Hall, Ltd.</publisher><abstract>This paper presents logical foundations for the most important object-oriented language features, including abstract types, dynamic binding, subtyping, and inheritance. These foundations are introduced along with an object-oriented kernel language. We show how object environments of such languages can be formalized in an algebraic way. Based on this foundation, we develop a Hoare-style logic for formal verification of object-oriented programs.</abstract></paper>