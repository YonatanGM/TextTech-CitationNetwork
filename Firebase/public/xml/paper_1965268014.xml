<paper id="1965268014"><title>An O(n) algorithm for the linear multiple choice knapsack problem and related problems</title><year>1984</year><authors><author org="Northwestern University, Evanston, Il." id="1960929287">Eitan Zemel</author></authors><n_citation>98</n_citation><doc_type>Journal</doc_type><references><reference>1979018429</reference><reference>1990480988</reference><reference>1993058867</reference><reference>2002636386</reference><reference>2009409317</reference><reference>2017316844</reference><reference>2040895999</reference><reference>2107423006</reference><reference>2139594840</reference></references><venue id="147953040" type="J">Information Processing Letters</venue><doi>10.1016/0020-0190(84)90014-0</doi><keywords><keyword weight="0.46154">Discrete mathematics</keyword><keyword weight="0.46499">Combinatorics</keyword><keyword weight="0.58938">Change-making problem</keyword><keyword weight="0.43973">Algorithm</keyword><keyword weight="0.59876">Continuous knapsack problem</keyword><keyword weight="0.57276">Cutting stock problem</keyword><keyword weight="0.57719">Linear programming</keyword><keyword weight="0.5047">Hyperplane</keyword><keyword weight="0.60627">Knapsack problem</keyword><keyword weight="0.64233">Criss-cross algorithm</keyword><keyword weight="0.51102">Convex optimization</keyword><keyword weight="0.41648">Mathematics</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract We present an O(n) algorithm for the Linear Multiple Choice Knapsack Problem and its d-dimensional generalization which is based on Megiddou0027s (1982) algorithm for linear programming. We also consider a certain type of convex programming problems which are common in geometric location models. An application of the linear case is an O(n) algorithm for finding a least distance hyperplane in R d according to the rectilinear norm. The best previously available algorithm for this problem was an O(n log 2 n) algorithm for the two-dimensional case. A simple application of the nonlinear case is an O(n) algorithm for finding the point at which a ‘pursuer’ minimizes its distance from the furthest among n ‘targets’, when the trajectories involved are straight lines in R d .</abstract></paper>