<paper id="1896185571"><title>COMO: a UML-based component development methodology</title><year>1999</year><authors><author org="ETRI Comput. &amp; Software Technol. Lab., Daejon, South Korea" id="2119648968">Sang Duck Lee</author><author org="" id="2668579035">Young Jong Yang</author><author org="" id="2227610627">Fun Sook Cho</author><author org="" id="2101815510">Soo Dong Kim</author><author org="" id="2667209631">Sung Yul Rhew</author></authors><n_citation>61</n_citation><doc_type>Conference</doc_type><references><reference>2027506139</reference><reference>2167500728</reference><reference>2610296873</reference></references><venue id="1134663949" type="C">Asia-Pacific Software Engineering Conference</venue><doi>10.1109/APSEC.1999.809584</doi><keywords><keyword weight="0.45725">Programming language</keyword><keyword weight="0.5204">Systematic process</keyword><keyword weight="0.58164">Unified Modeling Language</keyword><keyword weight="0.45694">Systems engineering</keyword><keyword weight="0.45542">Computer science</keyword><keyword weight="0.60079">Unified Process</keyword><keyword weight="0.42203">Real-time computing</keyword><keyword weight="0.57272">Software system</keyword><keyword weight="0.63106">Applications of UML</keyword><keyword weight="0.55931">JavaBeans</keyword><keyword weight="0.61626">Component-based software engineering</keyword><keyword weight="0.50483">Application software</keyword></keywords><publisher>IEEE</publisher><abstract>Many organizations have begun to consider implementing applications using reusable components. They envision that writing a component once and reusing it in many subsequent software systems will effectively amortize the development cost among all users. Recent technology advances such as JavaBeans/EJB, COM, CORBA, and others spur this interest. However, the systematic development process and practical instructions for building software components have not been studied enough. We propose a practical object-oriented component development methodology (COMO) that can be utilized in developing software components. COMO extends Unified Modeling Language (UML) and Rationalu0027s Unified process with semantics related to component development. Since COMO provides systematic process and comprehend instructions for each development task, we believe it can be effectively used in modeling and implementing software components.</abstract></paper>