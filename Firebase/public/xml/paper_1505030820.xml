<paper id="1505030820"><title>Analysis of Timed Systems Using Time-Abstracting Bisimulations</title><year>2001</year><authors><author org="Verimag, Centre Équation, 2, Av. de Vignate, 38610, Gières, France. stavros.tripakis@imag.fr#TAB#" id="80538963">Stavros Tripakis</author><author org="Verimag, Centre Équation, 2, Av. de Vignate, 38610, Gières, France. sergio.yovine@imag.fr#TAB#" id="2096597339">Sergio Yovine</author></authors><n_citation>129</n_citation><doc_type>Conference</doc_type><references><reference>3820865</reference><reference>15266677</reference><reference>59365162</reference><reference>1482233117</reference><reference>1482750607</reference><reference>1488659932</reference><reference>1499481996</reference><reference>1501731334</reference><reference>1535168632</reference><reference>1543050278</reference><reference>1567707156</reference><reference>1571330180</reference><reference>1574289075</reference><reference>1577437452</reference><reference>1599105192</reference><reference>1715978372</reference><reference>1796174165</reference><reference>1874996599</reference><reference>1967761514</reference><reference>1981808971</reference><reference>2000947342</reference><reference>2012935476</reference><reference>2016079448</reference><reference>2068361557</reference><reference>2071152819</reference><reference>2100271265</reference><reference>2118382442</reference><reference>2118956464</reference><reference>2124563781</reference><reference>2126860147</reference><reference>2130773092</reference><reference>2137865376</reference><reference>2139796094</reference><reference>2145000217</reference><reference>2153273838</reference><reference>2610406808</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1023/A:1008734703554</doi><keywords><keyword weight="0.53819">Model checking</keyword><keyword weight="0.458">Programming language</keyword><keyword weight="0.48238">Modulo</keyword><keyword weight="0.44718">Computer science</keyword><keyword weight="0.47583">Polyhedron</keyword><keyword weight="0.48655">Automaton</keyword><keyword weight="0.46463">Theoretical computer science</keyword><keyword weight="0.5118">Bisimulation</keyword><keyword weight="0.51312">Equivalence class</keyword><keyword weight="0.48395">Mutual exclusion</keyword><keyword weight="0.51174">Büchi automaton</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>The objective of this paper is to show how verification of dense-time systems modeled as timed automata can be effectively performed using untimed verification techniques. In that way, the existing rich infrastructure in algorithms and tools for the verification of untimed systems can be exploited. The paper completes the ideas introduced in (Tripakis and Yovine, 1996, in Proc. 8th Conf. Computer-Aided Verification, CAVu002796, Rutgers, NJ. LNCS, Vol. 1102, Springer-Verlag, 1996, pp. :[71],"approach consists in two steps. First, given a timed system A, we compute a finite graph G which captures the behavior of A modulo the fact that exact time delays are abstracted away. Then, we apply untimed verification techniques on G to prove properties on A. As property-specification languages, we use both the linear-time formalism of timed Buchi automata (TBA) and the branching-time logic TCTL. Model checking A against properties specified as TBA or TCTL formulae comes down to applying, respectively, automata-emptiness or CTL model-checking algorithms on :[159],"abstraction of exact delays is formalized under the concept of time-abstracting bisimulations. We define three time-abstracting bisimulations which are strictly ordered with respect to their reduction power. The stronger of them preserves both linear- and branching-time properties whereas the two weaker ones preserve only linear-time finite graph G is the :[205],"quotient A with respect to a time-abstracting bisimulation. Generating G is called minimization and can be done by adapting a partition-refinement algorithm to the timed case. The adapted algorithm is symbolic, that is, equivalence classes are represented as simple polyhedra. When these polyhedra are not convex, operations become expensive, therefore, we develop a partition-refinement technique which preserves :[268],"have implemented the minimization algorithm in a prototype module called minim, as part of the real-time verification platform KRONOS (Bozga et al., 1998, in CAVu002798). minim connects KRONOS to the CADP tool suite for the verification of untimed graphs (Fernandez et al., 1992, in 14th Int. Conf. on Software Engineering). To demonstrate the practical interest behind our approach, we present two case studies, namely, Fischeru0027s mutual exclusion protocol and the CSMA/CD communication protocol.</abstract></paper>