<paper id="1955693250"><title>Effective Lossy Queue Languages</title><year>2001</year><authors><author org=", Uppsala University," id="1952177885">Parosh Aziz Abdulla</author><author org="University of Paris" id="2780982039">Luc Boasson</author><author org="University of Paris" id="2283651526">Ahmed Bouajjani</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>49167929</reference><reference>1503762954</reference><reference>1513444661</reference><reference>1516753891</reference><reference>1574761428</reference><reference>1586140256</reference><reference>1713142183</reference><reference>1965551437</reference><reference>1985925577</reference><reference>2003477691</reference><reference>2012935476</reference><reference>2037747061</reference><reference>2052380955</reference><reference>2123160677</reference><reference>2162205677</reference><reference>2668034915</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/3-540-48224-5_53</doi><keywords><keyword weight="0.46338">Discrete mathematics</keyword><keyword weight="0.51843">Substring</keyword><keyword weight="0.53877">Context-free language</keyword><keyword weight="0.47488">Model checking</keyword><keyword weight="0.45979">Lossy compression</keyword><keyword weight="0.43846">Computer science</keyword><keyword weight="0.4834">Queue</keyword><keyword weight="0.4606">Theoretical computer science</keyword><keyword weight="0.54819">Computability</keyword><keyword weight="0.55024">Rewriting</keyword><keyword weight="0.51116">Nested loop join</keyword><keyword weight="0.43">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Although the set of reachable states of a lossy channel system (LCS) is regular, it is well-known that this set cannot be constructed effectively. In this paper, we characterize significant classes of LCS for which the set of reachable states can be computed. Furthermore, we show that, for slight generatlizations of these classes, computability can no longer be :[58],"carry out our study, we define rewriting systems which capture the behaviour of LCS, in the sense that (i) they have a FIFO-like semantics and (ii) their languages are downward closed with respect to the substring relation. The main result of the paper shows that, for context-free rewriting systems, the corresponding language can be computed. An interesting consequence of our results is that we get a characterization of classes of meta-transitions whose post-images can be effectively constructed. These meta-transitions consist of sets of nested loops in the control graph of the system, in contrast to previous works on meta-transitions in which only single loops are the :[164],"same proof technique we use to show the result mentioned above allows also to establish a result in the theory of 0L-systems, i.e., context-free parallel rewriting systems. We prove that the downward closure of the language generated by any 0L-system is effectively regular.</abstract></paper>