<paper id="1600642426"><title>Cooperation between Autonomous Operation Services and Object Database Systems in a Heterogeneous Environment</title><year>1992</year><authors><author org="Information Systems – Databases, ETH Zürich, 8092 Zürich, Switzerland" id="2050071469">Hans-Jörg Schek</author><author org="Information Systems – Databases, ETH Zürich, 8092 Zürich, Switzerland" id="2794186108">Andreas Wolf</author></authors><n_citation>10</n_citation><doc_type>Conference</doc_type><references><reference>115691913</reference><reference>192407326</reference><reference>1559386490</reference><reference>1559896221</reference><reference>1560538750</reference><reference>1973635708</reference><reference>1990337493</reference><reference>1992847198</reference><reference>2012534139</reference><reference>2118269922</reference><reference>2120533455</reference><reference>2141824507</reference><reference>2149173084</reference><reference>2163765478</reference><reference>2168434379</reference></references><venue id="1132231445" type="C">Discovery Science</venue><doi>10.1016/B978-0-444-89879-1.50021-X</doi><keywords><keyword weight="0.42198">Kernel (linear algebra)</keyword><keyword weight="0.44759">Data mining</keyword><keyword weight="0.43438">Architecture</keyword><keyword weight="0.47269">Computer science</keyword><keyword weight="0.51763">Interoperability</keyword><keyword weight="0.60154">Database design</keyword><keyword weight="0.50176">Trojan horse</keyword><keyword weight="0.59875">Database testing</keyword><keyword weight="0.49506">Factor cost</keyword><keyword weight="0.43655">Extensibility</keyword><keyword weight="0.46972">Database</keyword></keywords><publisher>North-Holland Publishing Co.</publisher><abstract>Abstract The cooperation between a database system and an operation service providing application-specific computations on behalf of the database has important advantages. It allows to utilize (existing or newly developed) software modules which may run in a different system environment (supporting heterogeneity). And it provides more protection which is a key problem in extensible databases when foreign code has to be linked to the database code (avoiding the Trojan Horse problem). Such an architecture causes higher execution cost. Therefore in this paper we are interested in the cost factors occuring when a method invocation and computation is done outside the kernel object manager. If we have the choice, we want to know whether we should send an object to an operation service whenever we need a compution to be performed on it rather than have the method sent and linked to the object manager. We will present first considerations to these questions and give examples which show that operation services are a viable solution providing increased interoperability between databases and applications.</abstract></paper>