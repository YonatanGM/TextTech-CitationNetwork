<paper id="1854012871"><title>Model Checking in CLP</title><year>1999</year><authors><author org="Max Planck Institut für Informatik,#TAB#" id="2041871214">Giorgio Delzanno</author><author org="Max Planck Institut für Informatik,#TAB#" id="2284941451">Andreas Podelski</author></authors><n_citation>89</n_citation><doc_type>Conference</doc_type><references><reference>1502028089</reference><reference>1503857897</reference><reference>1524332517</reference><reference>1532358383</reference><reference>1540180001</reference><reference>1550288578</reference><reference>1594722104</reference><reference>1601687420</reference><reference>1695437353</reference><reference>1777025722</reference><reference>1822301642</reference><reference>1881102326</reference><reference>1904450094</reference><reference>1905380539</reference><reference>1912609664</reference><reference>1965765860</reference><reference>1985728418</reference><reference>1995151557</reference><reference>2000947342</reference><reference>2022530540</reference><reference>2033106108</reference><reference>2056229702</reference><reference>2056640187</reference><reference>2060361043</reference><reference>2063727779</reference><reference>2088372987</reference><reference>2123910665</reference><reference>2132661148</reference><reference>2141957585</reference><reference>2145000217</reference><reference>2158744037</reference><reference>2178044126</reference><reference>2913665964</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-49059-0_16</doi><keywords><keyword weight="0.54863">Model checking</keyword><keyword weight="0.45262">Programming language</keyword><keyword weight="0.43429">Computer science</keyword><keyword weight="0.51487">Concurrency</keyword><keyword weight="0.54491">Presburger arithmetic</keyword><keyword weight="0.43595">Real-time operating system</keyword><keyword weight="0.44007">Theoretical computer science</keyword><keyword weight="0.5527">Constraint logic programming</keyword><keyword weight="0.45799">Mutual exclusion</keyword><keyword weight="0.49147">Formal verification</keyword><keyword weight="0.53949">Liveness</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show that Constraint Logic Programming (CLP) can serve as a conceptual basis and as a practical implementation platform for the model checking of infinite-state systems. Our contributions are: (1) a semantics-preserving translation of concurrent systems into CLP programs, (2) a method for verifying safety and liveness properties on the CLP programs produced by the translation. We have implemented the method in a CLP system and verified well-known examples of infinitestate programs over integers, using here linear constraints as opposed to Presburger arithmetic as in previous solutions.</abstract></paper>