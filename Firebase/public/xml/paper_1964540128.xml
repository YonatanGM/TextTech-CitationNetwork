<paper id="1964540128"><title>Relaxation methods for minimum cost ordinary and generalized network flow problems</title><year>1988</year><authors><author org="" id="2302225927">Dimitri P. Bertsekas</author><author org="" id="2183949295">Paul Tseng</author></authors><n_citation>151</n_citation><doc_type>Journal</doc_type><references><reference>1971540397</reference><reference>1984840780</reference><reference>2001274023</reference><reference>2003203603</reference><reference>2037209059</reference><reference>2039651888</reference><reference>2053913299</reference><reference>2057869046</reference><reference>2066375037</reference><reference>2089845419</reference><reference>2109567578</reference><reference>2119234846</reference><reference>2123806189</reference><reference>2139805900</reference><reference>2160149076</reference></references><venue id="125775545" type="J">Operations Research</venue><doi>10.1287/opre.36.1.93</doi><keywords><keyword weight="0.60059">Flow network</keyword><keyword weight="0.47399">Mathematical optimization</keyword><keyword weight="0.59033">Relaxation (iterative method)</keyword><keyword weight="0.46801">Algorithm</keyword><keyword weight="0.50789">Transportation theory</keyword><keyword weight="0.4748">Simplex</keyword><keyword weight="0.40729">Implementation</keyword><keyword weight="0.43578">Order of magnitude</keyword><keyword weight="0.41813">Mathematics</keyword><keyword weight="0.68619">Minimum-cost flow problem</keyword><keyword weight="0.56048">Speedup</keyword></keywords><publisher>INFORMS</publisher><abstract>We propose a new class of algorithms for linear cost network flow problems with and without gains. These algorithms are based on iterative improvement of a dual cost and operate in a manner that is reminiscent of coordinate ascent and Gauss-Seidel relaxation methods. We compare our coded implementations of these methods with mature state-of-the-art primal simplex and primal-dual codes, and find them to be several times faster on standard benchmark problems, and faster by an order of magnitude on large, randomly generated problems. Our experiments indicate that the speedup factor increases with problem dimension.</abstract></paper>