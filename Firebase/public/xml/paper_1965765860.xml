<paper id="1965765860"><title>Verifying systems with integer constraints and Boolean predicates: a composite approach</title><year>1998</year><authors><author org="Department of Computer Science, University of Maryland, college park, MD" id="2279626640">Tevfik Bultan</author><author org="Department of Computer Science, University of Maryland, college park, MD" id="2113983763">Richard Gerber</author><author org="Department of Computer Science, University of Maryland, college park, MD" id="2951064894">Christopher League</author></authors><n_citation>33</n_citation><doc_type>Conference</doc_type><references><reference>1509757908</reference><reference>1516753891</reference><reference>1594722104</reference><reference>1713142183</reference><reference>1777025722</reference><reference>1957511817</reference><reference>2004463571</reference><reference>2046138576</reference><reference>2060361043</reference><reference>2080267935</reference><reference>2097699872</reference><reference>2102785826</reference><reference>2117189826</reference><reference>2118774213</reference><reference>2124778357</reference><reference>2125708466</reference><reference>2127271657</reference><reference>2132331020</reference><reference>2151056896</reference></references><venue id="1124964101" type="C">International Symposium on Software Testing and Analysis</venue><doi>10.1145/271771.271799</doi><keywords><keyword weight="0.51449">Integer</keyword><keyword weight="0.56501">Model checking</keyword><keyword weight="0.53963">Enumerated type</keyword><keyword weight="0.44435">Computer science</keyword><keyword weight="0.52278">Concurrency</keyword><keyword weight="0.46208">Algorithm</keyword><keyword weight="0.56376">Binary decision diagram</keyword><keyword weight="0.46553">Theoretical computer science</keyword><keyword weight="0.54869">Boolean algebra</keyword><keyword weight="0.56585">Boolean data type</keyword><keyword weight="0.49318">Formal verification</keyword></keywords><publisher>ACM</publisher><abstract>Symbolic mode, checking has proved highly successful for large finite-state systems, in which states can be compactly encoded using binary decision diagrams (BDDs) or their variants. The inherent limitation of this approach is that it cannot be applied to systems with an infinite number of states --- even those with a single unbounded integer.Alternatively, we recently proposed a model checker for integer-based systems that uses Presburger constraints as the underlying state representation. While this approach easily verified some subtle, infinite-state concurrency problems, it proved inefficient in its treatment of Boolean and (unordered) enumerated types --- which possess no natural mapping to the Euclidean coordinate space.In this paper we describe a model checker which combines the strengths of both approaches. We use a composite model, in which a formulau0027s valuations are encoded in a mixed BDD-Presburger form, depending on the variables used. We demonstrate our techniqueu0027s effectiveness on a nontrivial requirements specification, which includes a mixture of Booleans, integers and enumerated types.</abstract></paper>