<paper id="1967310115"><title>Database support for interactive computer graphics</title><year>1984</year><authors><author org="Rensselaer Polytechnic Institute Troy, NY" id="1365133378">David L. Spooner</author></authors><n_citation>10</n_citation><doc_type>Conference</doc_type><references><reference>2037214271</reference><reference>2051315198</reference><reference>2133384222</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/602259.602272</doi><keywords><keyword weight="0.69608">3D computer graphics</keyword><keyword weight="0.60437">Graphics pipeline</keyword><keyword weight="0.46844">Computer science</keyword><keyword weight="0.47771">Humanâ€“computer interaction</keyword><keyword weight="0.70896">Graphics software</keyword><keyword weight="0.68518">Real-time computer graphics</keyword><keyword weight="0.609">Software rendering</keyword><keyword weight="0.67363">Computer graphics</keyword><keyword weight="0.64207">Scientific visualization</keyword><keyword weight="0.46227">Database</keyword><keyword weight="0.64759">Computer Graphics Metafile</keyword></keywords><publisher>ACM</publisher><abstract>Software applications involving interactive computer graphics are made up of several components. One of these is a data modeling component. This data modeling component is often application dependent and therefore difficult to integrate with the data model of other related applications. One solution to this problem is to interface a DBMS with an interactive graphics system to reduce data model dependency and increase sharing of data. This also has the advantage of allowing novice users to use computer graphics by eliminating the need for the user to write complex programs invoking the graphics system.This paper explores these ideas by discussing the implementation of a prototype interface between a relational DBMS and an interactive computer graphics system. It presents both the database structures used to manage the data and the techniques used to design the interface. It concludes by discussing an approach for making the interface portable.</abstract></paper>