<paper id="1985610876"><title>Building applied natural language generation systems</title><year>1997</year><authors><author org="Department of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, Scotland; (e-mail: ereiter@csd.abdn.ac.uk)#TAB#" id="2144649503">Ehud Reiter</author><author org="Microsoft Research Institute, Macquarie University, Sydney, NSW 2109, Australia; (e-mail: Robert.Dale@mq.edu.au)#TAB#" id="2232810675">Robert Dale</author></authors><n_citation>310</n_citation><doc_type>Journal</doc_type><references><reference>156747965</reference><reference>1575457686</reference><reference>1585903149</reference><reference>1597744629</reference><reference>1612708911</reference><reference>1733954365</reference><reference>1968448532</reference><reference>1976614857</reference><reference>1983707534</reference><reference>2005473185</reference><reference>2011877259</reference><reference>2048737604</reference><reference>2050492193</reference><reference>2070016268</reference><reference>2081035377</reference><reference>2085702226</reference><reference>2095627528</reference><reference>2116392449</reference><reference>2119275489</reference><reference>2131429178</reference><reference>2132271306</reference><reference>2141608913</reference><reference>2169539710</reference></references><venue id="18088403" type="J">Natural Language Engineering</venue><doi>10.1017/S1351324997001502</doi><keywords><keyword weight="0.67204">Natural language generation</keyword><keyword weight="0.49319">Pointer (computer programming)</keyword><keyword weight="0.62756">Referring expression generation</keyword><keyword weight="0.57567">Lexicalization</keyword><keyword weight="0.44884">Computer science</keyword><keyword weight="0.46961">Realisation</keyword><keyword weight="0.46328">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.51438">Sentence</keyword></keywords><publisher>Cambridge University Press</publisher><abstract>In this article, we give an overview of Natural Language Generation (NLG) from an applied system-building perspective. The article includes a discussion of when NLG techniques should be used; suggestions for carrying out requirements analyses; and a description of the basic NLG tasks of content determination, discourse planning, sentence aggregation, lexicalization, referring expression generation, and linguistic realisation. Throughout, the emphasis is on established techniques that can be used to build simple but practical working systems now. We also provide pointers to techniques in the literature that are appropriate for more complicated scenarios.</abstract></paper>