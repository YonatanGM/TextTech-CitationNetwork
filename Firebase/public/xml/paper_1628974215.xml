<paper id="1628974215"><title>Pfair scheduling of fixed and migrating periodic tasks on multiple resources</title><year>1999</year><authors><author org="Dept. of Comput. Sci., Pittsburgh Univ., PA, USA" id="2648964153">M. Moir</author><author org="" id="2063295674">S. Ramamurthy</author></authors><n_citation>89</n_citation><doc_type>Conference</doc_type><references><reference>85119474</reference><reference>1987173935</reference><reference>2042979415</reference><reference>2054998117</reference><reference>2056830486</reference><reference>2064207294</reference><reference>2086748818</reference><reference>2101300711</reference><reference>2104338317</reference><reference>2109488193</reference><reference>2166440675</reference><reference>2543632133</reference></references><venue id="1124527938" type="C">Real-Time Systems Symposium</venue><doi>10.1109/REAL.1999.818857</doi><keywords><keyword weight="0.65049">Fixed-priority pre-emptive scheduling</keyword><keyword weight="0.43431">Computer science</keyword><keyword weight="0.58783">Scheduling (computing)</keyword><keyword weight="0.45182">Parallel computing</keyword><keyword weight="0.43897">Real-time computing</keyword><keyword weight="0.49775">Multiprocessing</keyword><keyword weight="0.0">Processor scheduling</keyword><keyword weight="0.42341">Periodic graph (geometry)</keyword><keyword weight="0.4501">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>This paper concerns the problem of scheduling sets of preemptable, periodic tasks on multiple resources. We consider a task model that allows arbitrary mixes of fixed and migratable tasks, and prove the existence of an optimal pfair scheduler in this model. Fixed tasks must always be scheduled on a given resource, while migratable tasks can be scheduled on different resources at different times. A pfair scheduler produces a periodic schedule in which the times each task is allocated a processor are approximately evenly spread throughout its period. This paper extends work of Baruah et al., who proved a similar result for systems in which all tasks are migratable.</abstract></paper>