<paper id="1975551945"><title>A generalized control structure and its formal definition</title><year>1983</year><authors><author org="University of Victoria, BC, Canada" id="88694571">David Lorge Parnas</author></authors><n_citation>79</n_citation><doc_type>Journal</doc_type><references><reference>1525811688</reference><reference>1588198101</reference><reference>2019389359</reference><reference>2103953153</reference><reference>2147543351</reference></references><venue id="103482838" type="J">Communications of The ACM</venue><doi>10.1145/358161.358168</doi><keywords><keyword weight="0.56296">Data structure</keyword><keyword weight="0.47636">Programming language</keyword><keyword weight="0.51933">Kripke semantics</keyword><keyword weight="0.46471">Computer science</keyword><keyword weight="0.5004">Semantic Generalization</keyword><keyword weight="0.47039">Theoretical computer science</keyword><keyword weight="0.0">Formal description</keyword><keyword weight="0.0">Program development</keyword></keywords><publisher>ACM</publisher><abstract>A new programming language control structure as well as an improved approach to a formal definition of programming languages are presented. The control structure can replace both iteration and conditional structures. Because it is a semantic generalization of those structures, a single statement using the new control structure can implement the functions of loops, conditionals, and also programs that would require several conventional constructs. As a consequence of this increased capability, it is possible to write algorithms that are simpler, more efficient, and more clearly correct than those that can be written with earlier structured-programming control structures. In order to provide a precise definition of the new constructs, a new version of relational semantics, called LD - relations is presented. An algebra of these relations is developed and used to define the meaning of the new constructs. A short discussion of program development and the history of control structures is included.</abstract></paper>