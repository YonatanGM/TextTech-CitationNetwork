<paper id="1512952371"><title>An Architecture for Interactive Program Provers</title><year>2000</year><authors><author org="FernuniversitÄt Hagen" id="2706944793">Jörg Meyer</author><author org="FernuniversitÄt Hagen" id="2343845410">Arnd Poetzsch-Heffter</author></authors><n_citation>44</n_citation><doc_type>Conference</doc_type><references><reference>1533795866</reference><reference>1573258001</reference><reference>1579319924</reference><reference>1583095677</reference><reference>1983346515</reference><reference>2018951244</reference><reference>2057835515</reference><reference>2107995193</reference><reference>2107997147</reference><reference>2121444793</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-46419-0_6</doi><keywords><keyword weight="0.49188">Abstract data type</keyword><keyword weight="0.46889">Programming language</keyword><keyword weight="0.51404">Object-oriented programming</keyword><keyword weight="0.45446">Computer science</keyword><keyword weight="0.49542">Automated theorem proving</keyword><keyword weight="0.54214">Formal specification</keyword><keyword weight="0.44198">Theoretical computer science</keyword><keyword weight="0.60506">Interactive programming</keyword><keyword weight="0.48886">Java</keyword><keyword weight="0.57971">Gas meter prover</keyword><keyword weight="0.5498">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Formal specification and verification techniques can improve the quality of programs by enabling the analysis and proof ofsem antic program properties. This paper describes the modular architecture of an interactive program prover that we are currently developing for a Java subset. In particular, it discusses the integration of a programming language-specific prover component with a general purpose theorem prover.</abstract></paper>