<paper id="1979811304"><title>Experimental tests of resolution-based theorem-proving strategies</title><year>1976</year><authors><author org="Computer Science Department, Washington State University, Pullman, WA 99163, USA" id="2690835298">J. Dennis Lawrence</author><author org="Computer Science Department, Washington State University, Pullman, WA 99163, USA" id="2152600562">J. Denbigh Starkey</author></authors><n_citation>9</n_citation><doc_type>Journal</doc_type><references><reference>1972956465</reference><reference>2003287551</reference><reference>2010405422</reference><reference>2025360553</reference><reference>2079282627</reference><reference>2100738443</reference><reference>2109964311</reference></references><venue id="192650101" type="J">Information Sciences</venue><doi>10.1016/S0020-0255(76)90698-8</doi><keywords><keyword weight="0.4625">Robot control</keyword><keyword weight="0.48231">Question answering</keyword><keyword weight="0.50285">CPU time</keyword><keyword weight="0.47015">Computer science</keyword><keyword weight="0.55426">Correctness</keyword><keyword weight="0.55986">Automated theorem proving</keyword><keyword weight="0.46782">Theoretical computer science</keyword><keyword weight="0.56293">Mathematical proof</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.4626">Factoring</keyword><keyword weight="0.45633">Machine learning</keyword><keyword weight="0.48329">Statistical hypothesis testing</keyword></keywords><publisher>Elsevier Science Inc.</publisher><abstract>Many potential applications of mechanical theorem proving exist in such areas as question answering, robot control, program writing, proof of program correctness, verification of mathematical proofs, general problem solving, and command and control systems. Theorem-proving systems must become much more efficient before applications become generally practical, and much statistical testing will be necessary to select the strategies to be used in practical systems. This paper reports on the results of experimental testing of some major theorem-proving strategies and their interactions. Test results are based on CPU time. The paper concludes that (1) subsumption and factoring should not be used (at least, in this implementation), (2) set of support and P1-deduction should be used, (3) the choice between breadth-first searching and unit preference searching is highly problem dependent, and (4) merge and linear strategies have little effect on the proof process. No statistically significant interaction among the strategies was discovered.</abstract></paper>