<paper id="1964830323"><title>An overview of JML tools and applications</title><year>2005</year><authors><author org="INRIA Sophia-Antipolis, France" id="2063376040">Lilian Burdy</author><author org="Dept. of Comput. Sci., Univ. of Texas at El Paso, El Paso, TX, USA" id="2001849669">Yoonsik Cheon</author><author org="R&amp;D Laboratories, Eastman Kodak Company, Rochester, NY, USA" id="1810168175">David R. Cok</author><author org="Computer Science and Artificial Intelligence Laboratories, MIT, Cambridge, MA, USA" id="2235702021">Michael D. Ernst</author><author org="Dept. of Computer Science, University of Nijmegen, Nijmegen, MA, The Netherlands" id="1188065969">Joseph R. Kiniry</author><author org="Department of Computer Science, Iowa State University, Ames, IA, USA#TAB#" id="2308881956">Gary T. Leavens</author><author org="Microsoft Research, , Redmond, WA , USA" id="710865586">K. Rustan M. Leino</author><author org="Dept. of Computer Science, University of Nijmegen, Nijmegen, MA, The Netherlands" id="2149911619">Erik Poll</author></authors><n_citation>596</n_citation><doc_type>Conference</doc_type><references><reference>1486696980</reference><reference>1489778371</reference><reference>1492315860</reference><reference>1498946538</reference><reference>1499226144</reference><reference>1511405608</reference><reference>1512952371</reference><reference>1546081490</reference><reference>1551782231</reference><reference>1552647623</reference><reference>1556422878</reference><reference>1573044584</reference><reference>1573154295</reference><reference>1578560741</reference><reference>1582537688</reference><reference>1583095677</reference><reference>1583826417</reference><reference>1593874741</reference><reference>1627776297</reference><reference>1637866372</reference><reference>1659048632</reference><reference>1969929929</reference><reference>1970495662</reference><reference>1983119041</reference><reference>1989547358</reference><reference>1992216463</reference><reference>1992371286</reference><reference>1992431017</reference><reference>1993836075</reference><reference>1995008247</reference><reference>1996228525</reference><reference>1998017916</reference><reference>1998490923</reference><reference>2024201176</reference><reference>2031111340</reference><reference>2038960098</reference><reference>2042751794</reference><reference>2052075846</reference><reference>2055477538</reference><reference>2057835515</reference><reference>2059295282</reference><reference>2094160561</reference><reference>2096601022</reference><reference>2097310563</reference><reference>2101928793</reference><reference>2103318645</reference><reference>2105142318</reference><reference>2107995193</reference><reference>2108538489</reference><reference>2111654822</reference><reference>2112925845</reference><reference>2114863142</reference><reference>2115224143</reference><reference>2116409384</reference><reference>2116973066</reference><reference>2121376435</reference><reference>2121759723</reference><reference>2121953666</reference><reference>2122327724</reference><reference>2129304537</reference><reference>2130853806</reference><reference>2133099573</reference><reference>2138059712</reference><reference>2140001025</reference><reference>2142346010</reference><reference>2146908974</reference><reference>2151131364</reference><reference>2151191515</reference><reference>2155479707</reference><reference>2157547754</reference><reference>2157888382</reference><reference>2160307932</reference><reference>2161825580</reference><reference>2164419371</reference><reference>2164810907</reference><reference>2166985644</reference><reference>2167849549</reference><reference>2170898576</reference><reference>2223115626</reference><reference>2483314354</reference><reference>2592015105</reference><reference>2611434897</reference></references><venue id="1176669504" type="C">Formal Methods for Industrial Critical Systems</venue><doi>10.1007/s10009-004-0167-4</doi><keywords><keyword weight="0.52836">Specification language</keyword><keyword weight="0.46258">Programming language</keyword><keyword weight="0.43812">Computer science</keyword><keyword weight="0.48955">Extended static checking</keyword><keyword weight="0.47789">Design by contract</keyword><keyword weight="0.45382">Static analysis</keyword><keyword weight="0.51231">Formal specification</keyword><keyword weight="0.66874">Java Modeling Language</keyword><keyword weight="0.55809">Java</keyword><keyword weight="0.49748">Debugging</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>The Java Modeling Language (JML) can be used to specify the detailed design of Java classes and interfaces by adding annotations to Java source files. The aim of JML is to provide a specification language that is easy to use for Java programmers and that is supported by a wide range of tools for specification typechecking, runtime debugging, static analysis, and verification.This paper gives an overview of the main ideas behind JML, details about JMLâ€™s wide range of tools, and a glimpse into existing applications of JML.</abstract></paper>