<paper id="1957506489"><title>Combining abstract interpretation and ILP for microarchitecture modelling and program path analysis</title><year>1998</year><authors><author org="Fachbereich Inf., Saarlandes Univ., Saarbrucken, Germany" id="2973409695">H. Theiling</author><author org="" id="2974024780">C. Ferdinand</author></authors><n_citation>92</n_citation><doc_type>Conference</doc_type><references><reference>1503265404</reference><reference>1874478398</reference><reference>2043100293</reference><reference>2062066235</reference><reference>2118297067</reference><reference>2138952175</reference><reference>2154158220</reference><reference>2162222856</reference></references><venue id="1124527938" type="C">Real-Time Systems Symposium</venue><doi>10.1109/REAL.1998.739739</doi><keywords><keyword weight="0.53217">Worst-case execution time</keyword><keyword weight="0.49999">Cache</keyword><keyword weight="0.45771">Computer science</keyword><keyword weight="0.53231">Abstract interpretation</keyword><keyword weight="0.46876">Parallel computing</keyword><keyword weight="0.44471">Real-time computing</keyword><keyword weight="0.45198">System monitoring</keyword><keyword weight="0.52408">Integer programming</keyword><keyword weight="0.37908">Path analysis (statistics)</keyword><keyword weight="0.52697">Microarchitecture</keyword><keyword weight="0.49222">Computational complexity theory</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Abstract interpretation (AI) and integer linear programming (ILP) are two techniques which were used independently from each other for worst case execution time (WCET) approximation. With AI one can compute interesting properties of programs. It can be implemented efficiently and yields provably correct results. Previous work has shown that it is suitable for cache behaviour prediction of memory references of a program. By using ILP the structure of a program and the program path can be described easily and in a very natural way. A set of constraints describes the overall structure of the program and solving the constraints yields very precise results. However when modelling microarchitectural components like caches or pipelines, the complexity of the solving process can increase dramatically. Our approach uses AI to model the microarchitectureu0027s behaviour and ILP for finding worst case program paths using the results of the Al. This combines the advantages of both approaches.</abstract></paper>