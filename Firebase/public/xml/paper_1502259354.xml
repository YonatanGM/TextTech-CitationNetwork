<paper id="1502259354"><title>Two New Frameworks for Learning.</title><year>1988</year><authors><author org="Carnegie - Mellon University#TAB#" id="2973572598">Balaubramaniam Kausik. Natarajan</author></authors><n_citation>23</n_citation><doc_type>Conference</doc_type><references><reference>38913427</reference><reference>1970089350</reference><reference>2019363670</reference><reference>2064672629</reference><reference>2091401625</reference><reference>2180885055</reference></references><venue id="1180662882" type="C">International Conference on Machine Learning</venue><doi>10.1016/B978-0-934613-64-4.50046-3</doi><keywords><keyword weight="0.51275">Information theory</keyword><keyword weight="0.43626">Architecture</keyword><keyword weight="0.5373">Symbolic integration</keyword><keyword weight="0.47869">Computer science</keyword><keyword weight="0.4788">Theoretical computer science</keyword><keyword weight="0.59298">Heuristics</keyword><keyword weight="0.47893">Artificial intelligence</keyword><keyword weight="0.0">Information complexity</keyword><keyword weight="0.47352">Machine learning</keyword><keyword weight="0.43871">Computation</keyword></keywords><publisher>Morgan Kaufmann</publisher><abstract>Abstract This paper presents two new formal frameworks for learning. The first framework requires the learner to approximate an unknown function, given examples for the function as well as some background information on it. As far as information complexity is concerned, it is shown that this framework is no more powerful than a framework that allows the learner to see examples but not background information. The second framework explores learning in the sense of improving computational efficiency as opposed to acquiring an unknown concept or function. Specifically, the framework concerns the acquisition of heuristics over problem domains of special structure. A theorem is proved identifying some conditions sufficient to allow the efficient acquisition of heuristics over the aforementioned class of domains. The framework is illustrated with the help of an implemented program in the domain of symbolic integration.</abstract></paper>