<paper id="1521209386"><title>Automated program recognition: a feasibility demonstration</title><year>1987</year><authors><author org="The Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 545 Technology Square, Room 803, Cambridge, MA 02139, USA" id="2072450760">Linda M. Wills</author></authors><n_citation>122</n_citation><doc_type>Journal</doc_type><references><reference>722158</reference><reference>61101914</reference><reference>94129030</reference><reference>124330686</reference><reference>176897760</reference><reference>189608015</reference><reference>1483471644</reference><reference>1490294047</reference><reference>1494827375</reference><reference>1509704038</reference><reference>1510094545</reference><reference>1535038271</reference><reference>1541268280</reference><reference>1542847539</reference><reference>1608201119</reference><reference>1824125400</reference><reference>1964071625</reference><reference>1975033347</reference><reference>1991923264</reference><reference>1997789798</reference><reference>2000265963</reference><reference>2007798926</reference><reference>2022557060</reference><reference>2024143380</reference><reference>2027071978</reference><reference>2031681640</reference><reference>2032373962</reference><reference>2032926330</reference><reference>2044838697</reference><reference>2046585568</reference><reference>2049633569</reference><reference>2051113166</reference><reference>2051642532</reference><reference>2052592404</reference><reference>2054920589</reference><reference>2056458682</reference><reference>2069718764</reference><reference>2088604010</reference><reference>2111326547</reference><reference>2124212956</reference><reference>2133247167</reference><reference>2169663107</reference><reference>2296275650</reference></references><venue id="196139623" type="J">Artificial Intelligence</venue><doi>10.1016/0004-3702(90)90039-3</doi><keywords><keyword weight="0.48183">Data structure</keyword><keyword weight="0.4936">Programmer</keyword><keyword weight="0.47186">Programming language</keyword><keyword weight="0.46578">Computer science</keyword><keyword weight="0.47134">Automation</keyword><keyword weight="0.45242">Artificial intelligence</keyword><keyword weight="0.5147">Parsing</keyword><keyword weight="0.44384">Syntax</keyword><keyword weight="0.45865">Machine learning</keyword><keyword weight="0.49625">Computer programming</keyword><keyword weight="0.50619">Debugging</keyword><keyword weight="0.40249">Computation</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract The recognition of familiar computational structures in a program can help an experienced programmer to understand a program. Automating this recognition process will facilitate many tasks that require program understanding, e.g., maintenance, translation, and debugging. This paper describes a prototype recognition system which demonstrates the feasibility of automating program recognition. The prototype system automatically identifies occurrences of stereotyped algorithmic fragments and data structures, called cliches, in programs. It does so even though the cliches may be expressed in a wide range of syntactic forms and may be in the midst of unfamiliar code. Based on the known behaviors of these cliches and the relationships between them, the system generates a hierarchical description of a plausible design of the program. It does this systematically and exhaustively, using a parsing technique. This work is built on two previous advances: a graphical, programming-language-independent representation for programs, called the Plan Calculus, and an efficient graph parsing algorithm.</abstract></paper>