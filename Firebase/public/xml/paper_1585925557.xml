<paper id="1585925557"><title>Static Type Analysis of Prolog Procedures for Ensuring Correctness</title><year>1990</year><authors><author org="Facultés Universitaires N.D.P. Namur" id="2408579227">Pierre De Boeck</author><author org="Facultés Universitaires N.D.P. Namur" id="2158192849">Baudouin Le Charlier</author></authors><n_citation>14</n_citation><doc_type /><references><reference>15157627</reference><reference>163005890</reference><reference>171682210</reference><reference>1501017496</reference><reference>1535051828</reference><reference>1581472906</reference><reference>1766332311</reference><reference>2038037493</reference><reference>2098120938</reference><reference>2140502249</reference></references><venue id="" type="">PLILP '90 Proceedings of the 2nd International Workshop on Programming Language Implementation and Logic Programming</venue><doi>10.1007/BFb0024187</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.47772">Programming language</keyword><keyword weight="0.45916">Computer science</keyword><keyword weight="0.55483">Abstract interpretation</keyword><keyword weight="0.63109">Correctness</keyword><keyword weight="0.45519">Theoretical computer science</keyword><keyword weight="0.61792">Prolog</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A method for deducing type properties at each execution point of a Prolog procedure is proposed. Such properties allow to detect at compile-time inconsistent calls, i.e. whose arguments donu0027t respect some type preconditions.</abstract></paper>