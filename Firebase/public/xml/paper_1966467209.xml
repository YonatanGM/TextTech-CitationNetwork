<paper id="1966467209"><title>Investigating reverse engineering technologies for the CAS program understanding project</title><year>1994</year><authors><author org="IBM Canada, Ltd., North York, Ont., Canada" id="2153209180">E. Buss</author><author org="McGill Univ., Montre´al, P.Q., Canada" id="2111301776">R. De Mori</author><author org="National Research Council Canada, Ottawa, Ont., Canada#TAB#" id="2688907602">W. M. Gentleman</author><author org="IBM Canada, Ltd., North York, Ont., Canada" id="2596817344">J. Henshaw</author><author org="National Research Council Canada, Ottawa, Ont., Canada#TAB#" id="2703995327">H. Johnson</author><author org="McGill Univ., Montre´al, P.Q., Canada" id="689229069">K. Kontogiannis</author><author org="E´cole Polytechnique, Montre´al, P.Q., Canada#TAB#" id="2107216203">E. Merlo</author><author org="Univ. of Victoria, Victoria, B. C., Canada" id="2142848257">H. A. Müller</author><author org="Univ. of Toronto, Toronto, Ont., Canada#TAB#" id="2161153869">J. Mylopoulos</author><author org="University of Michigan, Ann Arbor" id="2136077826">S. Paul</author><author org="University of Michigan, Ann Arbor" id="2222476460">A. Prakash</author><author org="Univ. of Toronto, Toronto, Ont., Canada#TAB#" id="2130477299">M. Stanley</author><author org="Univ. of Victoria, Victoria, B. C., Canada" id="1871878035">S. R. Tilley</author><author org="IBM Canada, Ltd., North York, Ont., Canada" id="1139360677">J. Troster</author><author org="Department of Computer Science, University of Victoria, P.O. Box 3055, BC V8W 3P6, Canada" id="2188562642">K. Wong</author></authors><n_citation>54</n_citation><doc_type>Journal</doc_type><references><reference>109508126</reference><reference>1495859062</reference><reference>1497664140</reference><reference>1512285202</reference><reference>1516730279</reference><reference>1521209386</reference><reference>1540323172</reference><reference>1674578920</reference><reference>1953996914</reference><reference>1964962870</reference><reference>1972418517</reference><reference>1988905793</reference><reference>2005546948</reference><reference>2006267758</reference><reference>2010050957</reference><reference>2013020655</reference><reference>2026863920</reference><reference>2027766562</reference><reference>2033750216</reference><reference>2037712120</reference><reference>2079814255</reference><reference>2090278452</reference><reference>2090859782</reference><reference>2097997737</reference><reference>2100591395</reference><reference>2120704737</reference><reference>2128990852</reference><reference>2133528651</reference><reference>2144857527</reference><reference>2155024699</reference><reference>2156619646</reference><reference>2170629373</reference><reference>2173331527</reference></references><venue id="112676551" type="J">Ibm Systems Journal</venue><doi>10.1147/sj.333.0477</doi><keywords><keyword weight="0.51972">SQL</keyword><keyword weight="0.50824">IBM</keyword><keyword weight="0.50778">Relational database</keyword><keyword weight="0.46923">Systems engineering</keyword><keyword weight="0.44452">Computer science</keyword><keyword weight="0.47614">Source code</keyword><keyword weight="0.53463">Reverse engineering</keyword><keyword weight="0.52494">Relational database management system</keyword><keyword weight="0.51641">Business rule</keyword><keyword weight="0.44345">Database</keyword><keyword weight="0.57321">Legacy system</keyword></keywords><publisher>IBM Corp.</publisher><abstract>Corporations face mounting maintenance and re-engineering costs for large legacy systems. Evolving over several years, these systems embody substantial corporate knowledge, including requirements, design decisions, and business rules. Such knowledge is difficult to recover after many years of operation, evolution, and personnel change. To address the problem of program understanding, software engineers are spending an ever-growing amount of effort on reverse engineering technologies. This paper describes the scope and results of an ongoing research project on program understanding undertaken by the IBM Toronto Software Solutions Laboratory Centre for Advanced Studies (CAS). The project involves a team from CAS and five research groups working cooperatively on complementary reverse engineering approaches. All the groups are using the source code of SQL/DS™ (a multimillion-line relational database system) as the reference legacy system. Also discussed is an approach adopted to integrate the various tools under a single reverse engineering environment.</abstract></paper>