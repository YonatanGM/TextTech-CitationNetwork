<paper id="1651478352"><title>Achieving a general, formal and decidable approach to the OR-Join in workflow using reset nets</title><year>2005</year><authors><author org="Center for IT Innovation, Queensland University of Technology, Brisbane, Qld, Australia#TAB#" id="2027853008">Moe Thandar Wynn</author><author org="Center for IT Innovation, Queensland University of Technology, Brisbane, Qld, Australia#TAB#" id="2159695084">David Edmond</author><author org="Center for IT Innovation, Queensland University of Technology, Brisbane, Qld, Australia#TAB#" id="2061938730">W. M. P. van der Aalst</author><author org="Center for IT Innovation, Queensland University of Technology, Brisbane, Qld, Australia#TAB#" id="2094193350">A. H. M. ter Hofstede</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>39280257</reference><reference>91558953</reference><reference>1504874300</reference><reference>1507322398</reference><reference>1513999490</reference><reference>1535673446</reference><reference>1547144898</reference><reference>1602938474</reference><reference>1967174286</reference><reference>2016259411</reference><reference>2020675906</reference><reference>2123910665</reference><reference>2129466958</reference><reference>2131624124</reference><reference>2133863960</reference><reference>2911625174</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/11494744_24</doi><keywords><keyword weight="0.52642">Joins</keyword><keyword weight="0.47673">Algorithmics</keyword><keyword weight="0.5933">Petri net</keyword><keyword weight="0.45744">Collaborative software</keyword><keyword weight="0.46677">Computer science</keyword><keyword weight="0.452">Thread (computing)</keyword><keyword weight="0.46649">Theoretical computer science</keyword><keyword weight="0.48676">Decidability</keyword><keyword weight="0.55971">Workflow</keyword><keyword weight="0.51365">Semantics</keyword><keyword weight="0.45287">Distributed computing</keyword></keywords><publisher>Springer Berlin / Heidelberg</publisher><abstract>Workflow languages offer constructs for coordinating tasks. Among these constructs are various types of splits and joins. One type of join, which shows up in various incarnations, is the OR-join. Different approaches assign a different (often only intuitive) semantics to this type of join, though they do share the common theme that synchronisation is only to be performed for active threads. Depending on context assumptions this behaviour may be relatively easy to deal with, though in general its semantics is complicated, both from a definition point of view (in terms of formally capturing a desired intuitive semantics) and from a computational point of view (how does one determine whether an OR-join is enabled?). In this paper the concept of OR-join is examined in detail in the context of the workflow language YAWL, a powerful workflow language designed to support a collection of workflow patterns and inspired by Petri nets. The OR-joinu0027s definition is adapted from an earlier proposal and an algorithmic approach towards determining OR-join enablement is examined. This approach exploits a link that is proposed between YAWL and Reset nets, a variant of Petri nets with a special type of arc that can remove all tokens from a place.</abstract></paper>