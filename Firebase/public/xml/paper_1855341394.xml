<paper id="1855341394"><title>A Formal Definition of Crosscuts</title><year>2001</year><authors><author org="Ecole des Mines de Nantes" id="2951392740">Rémi Douence</author><author org="Ecole des Mines de Nantes" id="1255754058">Olivier Motelet</author><author org="Ecole des Mines de Nantes" id="620262226">Mario Südholt</author></authors><n_citation>130</n_citation><doc_type>Journal</doc_type><references><reference>1506492451</reference><reference>1512275035</reference><reference>1521311146</reference><reference>1610570299</reference><reference>1997644097</reference><reference>2023808162</reference><reference>2050349524</reference><reference>2105033638</reference><reference>2132625653</reference><reference>2138363365</reference><reference>2170973665</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45429-2_13</doi><keywords><keyword weight="0.54592">Domain-specific language</keyword><keyword weight="0.61339">Operational semantics</keyword><keyword weight="0.46845">Programming language</keyword><keyword weight="0.50415">Aspect-oriented programming</keyword><keyword weight="0.45558">Computer science</keyword><keyword weight="0.5218">Parsing</keyword><keyword weight="0.54005">Semantics</keyword><keyword weight="0.50003">Software development</keyword><keyword weight="0.48347">Sketch</keyword><keyword weight="0.52962">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Crosscutting, i.e. relating different program points is one of the key notions of Aspect-Oriented Programming. In this article, we consider a general and operational model for crosscutting based on execution monitors.A domain-specific language for the definition of crosscuts constitutes the core of the article. The semantics of this language is formally defined by means of parser operators matching event patterns in execution traces. We define an operational semantics of the matching process by means of rules relating the operators.The use of the language is exemplified by several sophisticated crosscut detinitions. We sketch a prototype implementation in JAVA which has been systematically derived from the language definition.</abstract></paper>