<paper id="1518705996"><title>An Extensible SAT-solver</title><year>2003</year><authors><author org="Chalmers University of Technology" id="2693959031">Niklas Eén</author><author org="Chalmers University of Technology" id="85437666">Niklas Sörensson</author></authors><n_citation>2219</n_citation><doc_type>Conference</doc_type><references><reference>2005573219</reference><reference>2024148935</reference><reference>2046239089</reference><reference>2048051309</reference><reference>2057361103</reference><reference>2095821893</reference><reference>2096307462</reference><reference>2110123236</reference><reference>2142785340</reference><reference>2160444875</reference></references><venue id="1145073645" type="C">Theory and Applications of Satisfiability Testing</venue><doi>10.1007/978-3-540-24605-3_37</doi><keywords><keyword weight="0.53737">Conflict-Driven Clause Learning</keyword><keyword weight="0.49718">#SAT</keyword><keyword weight="0.48915">Constraint satisfaction</keyword><keyword weight="0.46958">Computer science</keyword><keyword weight="0.48488">Unsatisfiable core</keyword><keyword weight="0.52949">Boolean satisfiability problem</keyword><keyword weight="0.50154">Implication graph</keyword><keyword weight="0.47924">Unit propagation</keyword><keyword weight="0.64455">Solver</keyword><keyword weight="0.45998">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this article, we present a small, complete, and efficient SAT-solver in the style of conflict-driven learning, as exemplified by Chaff. We aim to give sufficient details about implementation to enable the reader to construct his or her own solver in a very short time.This will allow users of SAT-solvers to make domain specific extensions or adaptions of current state-of-the-art SAT-techniques, to meet the needs of a particular application area. The presented solver is designed with this in mind, and includes among other things a mechanism for adding arbitrary boolean constraints. It also supports solving a series of related SAT-problems efficiently by an incremental SAT-interface.</abstract></paper>