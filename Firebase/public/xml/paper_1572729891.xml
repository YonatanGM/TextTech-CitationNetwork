<paper id="1572729891"><title>Deciding Equality Formulas by Small Domains Instantiations</title><year>1999</year><authors><author org="The Weizmann Institute of Science" id="2171343426">Amir Pnueli</author><author org="The Weizmann Institute of Science" id="333587676">Yoav Rodeh</author><author org="The Weizmann Institute of Science" id="1521612420">Ofer Shtrichman</author><author org="The Weizmann Institute of Science" id="2188308864">Michael Siegel</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>1504192541</reference><reference>1542298067</reference><reference>1554690752</reference><reference>1575176197</reference><reference>1741528175</reference><reference>2124515106</reference><reference>2983363186</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-48683-6_39</doi><keywords><keyword weight="0.48391">Integer</keyword><keyword weight="0.48587">Floating point</keyword><keyword weight="0.43691">Computer science</keyword><keyword weight="0.49754">Upper and lower bounds</keyword><keyword weight="0.48557">Binary decision diagram</keyword><keyword weight="0.45535">Theoretical computer science</keyword><keyword weight="0.42567">Distributed computing</keyword><keyword weight="0.4576">Discrete mathematics</keyword><keyword weight="0.0">Compiler verification</keyword><keyword weight="0.45878">Algorithm</keyword><keyword weight="0.44532">Reactive system</keyword><keyword weight="0.46062">Abstract machine</keyword><keyword weight="0.44481">Formal verification</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We introduce an efficient decision procedure for the theory of equality based on finite instantiations. When using the finite instantiations method, it is a common practice to take a range of [1..n] (where n is the number of input non-Boolean variables) as the range for all non-Boolean variables, resulting in a state-space of nn. Although various attempts to minimize this range were made, typically they either required various restrictions on the investigated formulas or were not very effective. In many cases, the nn state-space cannot be handled by BDD-based tools within a reasonable amount of time. In this paper we show that significantly smaller domains can be algorithmically found, by analyzing the structure of the formula. We also show an upper bound for the state-space based on this analysis. This method enabled us to verify formulas containing hundreds of integer and floating point variables.</abstract></paper>