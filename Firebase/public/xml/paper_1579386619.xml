<paper id="1579386619"><title>Non-Deterministic Choice in Datalog</title><year>1988</year><authors><author org="MCC, Austin, TX 78720" id="2202388955">Ravi Krishnamurthy</author><author org="MCC, Austin, TX 78720" id="2121832428">Shamim A. Naqvi</author></authors><n_citation>50</n_citation><doc_type /><references><reference>94967048</reference><reference>1600378632</reference><reference>1987862681</reference><reference>2002082975</reference></references><venue id="" type="">Proceedings of the Third International Conference on Data and Knowledge Bases#R##N#Improving Usability and Responsiveness</venue><doi>10.1016/B978-1-4832-1313-2.50038-X</doi><keywords><keyword weight="0.53415">Abstract logic</keyword><keyword weight="0.46941">Programming language</keyword><keyword weight="0.60621">Prolog</keyword><keyword weight="0.53536">Operator (computer programming)</keyword><keyword weight="0.6718">Datalog</keyword><keyword weight="0.49288">Semantics</keyword><keyword weight="0.40682">Mathematics</keyword></keywords><publisher>Morgan Kaufmann</publisher><abstract>Abstract Logic programming languages for database applications, such as LDL, and NAIL! [5] generate all solutions for a given query and fail to recognize multiple equivalent, i.e., redundant, solutions. The Prolog solution is to use the cut operator. Ideally, one would like to syntactically identify programs in which redundant solutions may be pruned but one faces undecidability results in this direction. In order to circumvent the recognition problem we provide an explicit construct, called choice, to choose subsets of relations. We show that choice has clean bottom-up semantics and subsumes the Prolog cut and existential queries.</abstract></paper>