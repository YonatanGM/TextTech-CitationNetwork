<paper id="1487992270"><title>An extensible proof text editor</title><year>2000</year><authors><author org="Dept. of Computing Science, Chalmers Univ. of Technology, Göteborg, Sweden" id="2168498621">Thomas Hallgren</author><author org="Dept. of Computing Science, Chalmers Univ. of Technology, Göteborg, Sweden" id="2001403868">Aarne Ranta</author></authors><n_citation>35</n_citation><doc_type>Conference</doc_type><references><reference>1511774588</reference><reference>1561847196</reference><reference>1590769334</reference><reference>1590985701</reference><reference>2027584005</reference></references><venue id="1201110412" type="C">International Conference on Logic Programming</venue><doi>10.1007/3-540-44404-1_6</doi><keywords><keyword weight="0.46113">Programming language</keyword><keyword weight="0.44028">Computer science</keyword><keyword weight="0.61761">Proof theory</keyword><keyword weight="0.4538">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.52581">Syntax</keyword><keyword weight="0.59668">Grammatical Framework</keyword><keyword weight="0.59043">Formal proof</keyword><keyword weight="0.41239">Algorithm</keyword><keyword weight="0.58517">Natural language</keyword><keyword weight="0.5287">Abstract syntax</keyword><keyword weight="0.54921">Parsing</keyword><keyword weight="0.61965">Proof assistant</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper presents an extension of the proof editor Alfa with natural-language input and output. The basis of the new functionality is an automatic translation to syntactic structures that are closer to natural language than the type-theoretical syntax of Alfa. These syntactic structures are mapped into texts in languages such as English, French, and Swedish. In this way, every theory, definition, proposition, and proof in Alfa can be translated into a text in any of these languages. The translation is defined for incomplete proof objects as well, so that a text with "holes" (i.e. metavariables) in it can be viewed simultaneously with a formal proof constructed. The mappings into natural language also work in the parsing direction, so that input can be given to the proof editor in a natural natural-language :[130],"interface is implemented using the Grammatical Framework GF, so that it is possible to change and extend the :[130],"interface without recompiling the proof editor. Such extensions can be made on two dimensions: by adding new target languages, and by adding theory-specific grammatical annotations to make texts more idiomatic.</abstract></paper>