<paper id="1515486073"><title>Partial-order planning: evaluating possible efficiency gains</title><year>1994</year><authors><author org="Department of Computer Science and Engineering, FR-35, University of Washington, Seattle, WA 98195, USA" id="2777286665">Anthony Barrett</author><author org="Department of Computer Science and Engineering, FR-35, University of Washington, Seattle, WA 98195, USA" id="560881892">Daniel S. Weld</author></authors><n_citation>154</n_citation><doc_type>Journal</doc_type><references><reference>4789806</reference><reference>15206906</reference><reference>51446513</reference><reference>125130877</reference><reference>131208150</reference><reference>147911989</reference><reference>191810397</reference><reference>194068206</reference><reference>1484780672</reference><reference>1491690797</reference><reference>1577254100</reference><reference>2017626051</reference><reference>2021337406</reference><reference>2043267462</reference><reference>2055903611</reference><reference>2084335986</reference><reference>2101217972</reference><reference>2104339435</reference><reference>2121136891</reference><reference>2171798962</reference><reference>2989552998</reference></references><venue id="196139623" type="J">Artificial Intelligence</venue><doi>10.1016/0004-3702(94)90012-4</doi><keywords><keyword weight="0.51352">Serializability</keyword><keyword weight="0.68421">Partial-order planning</keyword><keyword weight="0.44433">Serialization</keyword><keyword weight="0.0">Planning algorithms</keyword><keyword weight="0.0">Intuition</keyword><keyword weight="0.45035">Planner</keyword><keyword weight="0.4482">Theoretical computer science</keyword><keyword weight="0.4392">Artificial intelligence</keyword><keyword weight="0.0">Performance differentiation</keyword><keyword weight="0.43592">Machine learning</keyword><keyword weight="0.39003">Mathematics</keyword><keyword weight="0.44432">Partially ordered set</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract Although most people believe that planners that delay step-ordering decisions as long as possible are more efficient than those that manipulate totally ordered sequences of actions, this intuition has received little formal justification or empirical validation. In this paper we do both, characterizing the types of domains that offer performance differentiation and the features that distinguish the relative overhead of three planning algorithms. As expected, the partial-order (nonlinear) planner often has an advantage when confronted with problems in which the specific order of the plan steps is critical. We argue that the observed performance differences are best understood with an extension of Korfu0027s taxonomy of subgoal collections. Each planner quickly solved problems whose subgoals were independent or trivially serializable, but problems with laboriously serializable or nonserializable subgoals were intractable for all planners. Since different plan representations induce distinct search spaces, the subgoals for a given problem may be trivially serializable for one planner, laboriously serializable for another, and nonserializable for a third. We contend that the partial-order representation yields superior performance because it more frequently results in trivial serializability.</abstract></paper>