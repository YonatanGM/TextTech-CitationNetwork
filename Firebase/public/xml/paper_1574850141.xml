<paper id="1574850141"><title>Using induction and BDDs to model check invariants</title><year>1997</year><authors><author org="UFRN — DIMAp, Universidade Federal do Rio Grande do Norte" id="2093130377">David Déharbe</author><author org="UFRN — DIMAp, Universidade Federal do Rio Grande do Norte" id="2129245147">Anamaria Martins Moreira</author></authors><n_citation>14</n_citation><doc_type /><references><reference>1590315663</reference><reference>1593428110</reference><reference>2080267935</reference><reference>2117189826</reference><reference>2151056896</reference><reference>2157127957</reference></references><venue id="" type="">Proceedings of the IFIP WG 10.5 International Conference on Correct Hardware Design and Verification Methods: Advances in Hardware Design and Verification</venue><doi>10.1007/978-0-387-35190-2_13</doi><keywords><keyword weight="0.54184">Computation tree logic</keyword><keyword weight="0.50993">Kripke structure</keyword><keyword weight="0.51229">Transition system</keyword><keyword weight="0.5423">Abstraction model checking</keyword><keyword weight="0.57967">Model checking</keyword><keyword weight="0.50783">Binary decision diagram</keyword><keyword weight="0.4519">Algorithm</keyword><keyword weight="0.52642">Partial order reduction</keyword><keyword weight="0.403">Mathematics</keyword><keyword weight="0.57996">Symbolic trajectory evaluation</keyword></keywords><publisher>Chapman &amp; Hall, Ltd.</publisher><abstract>We present an inductive characterization for an invariant to stand in a given finite-state transition system. We show how this characterization can be computed by means of BDD-based operations, without performing a fixpoint iteration over sets of states as the CTL symbolic model checking algorithm does.</abstract></paper>