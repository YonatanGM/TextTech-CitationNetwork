<paper id="1912598576"><title>Z-ranking: using statistical analysis to counter the impact of static analysis approximations</title><year>2003</year><authors><author org="Computer Systems Laboratory, Stanford University, Stanford, CA" id="665008183">Ted Kremenek</author><author org="Computer Systems Laboratory, Stanford University, Stanford, CA" id="2163716051">Dawson Engler</author></authors><n_citation>142</n_citation><doc_type>Conference</doc_type><references><reference>1579850852</reference><reference>2066859698</reference><reference>2070869623</reference><reference>2089139117</reference><reference>2103714221</reference><reference>2106972913</reference><reference>2109875364</reference><reference>2129380858</reference><reference>2146878883</reference><reference>2156268601</reference></references><venue id="1137552346" type="C">Static Analysis Symposium</venue><doi>10.1007/3-540-44898-5_16</doi><keywords><keyword weight="0.0">Analysis tools</keyword><keyword weight="0.51675">Ranking</keyword><keyword weight="0.44584">Computer science</keyword><keyword weight="0.51543">Word error rate</keyword><keyword weight="0.51861">Static analysis</keyword><keyword weight="0.4518">Algorithm</keyword><keyword weight="0.50901">Statistical model</keyword><keyword weight="0.53767">Program analysis</keyword><keyword weight="0.0">Statistical analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper explores z-ranking, a technique to rank error reports emitted by static program checking analysis tools. Such tools often use approximate analysis schemes, leading to false error reports. These reports can easily render the error checker useless by hiding real errors amidst the false, and by potentially causing the tool to be discarded as irrelevant. Empirically, all tools that effectively find errors have false positive rates that can easily reach 30-100%. Z-ranking employs a simple statistical model to rank those error messages most likely to be true errors over those that are least likely. This paper demonstrates that z-ranking applies to a range of program checking problems and that it performs up to an order of magnitude better than randomized ranking. Further, it has transformed previously unusable analysis tools into effective program error finders.</abstract></paper>