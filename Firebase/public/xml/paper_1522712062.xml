<paper id="1522712062"><title>On the Unification Free Prolog Programs</title><year>1993</year><authors><author org="CWI" id="2114425188">Krzysztof R. Apt</author><author org="Universita' Di Padova" id="2029907457">Sandro Etalle</author></authors><n_citation>47</n_citation><doc_type>Conference</doc_type><references><reference>10748157</reference><reference>92963751</reference><reference>130711549</reference><reference>201148214</reference><reference>1480711761</reference><reference>1494613828</reference><reference>2072500626</reference><reference>2084591797</reference><reference>2403892066</reference><reference>2915015834</reference></references><venue id="1163686456" type="C">Mathematical Foundations of Computer Science</venue><doi>10.1007/3-540-57182-5_1</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.48028">Programming language</keyword><keyword weight="0.50805">Expression (mathematics)</keyword><keyword weight="0.62129">Unification</keyword><keyword weight="0.46323">Computer science</keyword><keyword weight="0.51859">Binary tree</keyword><keyword weight="0.46921">Theoretical computer science</keyword><keyword weight="0.62401">Prolog</keyword><keyword weight="0.6527">Logic programming</keyword><keyword weight="0.47798">Iterated function</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We provide simple conditions which allow us to conclude that in case of several well-known Prolog programs the unification algorithm can be replaced by iterated matching. The main tools used here are types and generic expressions for types. As already noticed by other researchers, such a replacement offers a possibility of improving the efficiency of programu0027s execution.</abstract></paper>