<paper id="1971289999"><title>The performance of current B-tree algorithms</title><year>1993</year><authors><author org="University of Florida, Gainesville" id="2721866915">Theodore Johnson</author><author org="New York Univ., New York NY" id="2502571332">Dennis Sasha</author></authors><n_citation>62</n_citation><doc_type>Journal</doc_type><references><reference>17487755</reference><reference>68021608</reference><reference>72677960</reference><reference>121773050</reference><reference>167327290</reference><reference>1496615748</reference><reference>1521589550</reference><reference>1573565523</reference><reference>1857644789</reference><reference>1980806195</reference><reference>1986975171</reference><reference>2010042648</reference><reference>2014336145</reference><reference>2021615496</reference><reference>2026942343</reference><reference>2027856270</reference><reference>2033584818</reference><reference>2036122593</reference><reference>2039071499</reference><reference>2047874190</reference><reference>2047908203</reference><reference>2052188422</reference><reference>2057391254</reference><reference>2069205797</reference><reference>2077401654</reference><reference>2084270224</reference><reference>2088339608</reference><reference>2102333161</reference><reference>2108179552</reference><reference>2113141793</reference><reference>2116436709</reference><reference>2130356538</reference><reference>2133386065</reference></references><venue id="90119964" type="J">ACM Transactions on Database Systems</venue><doi>10.1145/151284.151286</doi><keywords><keyword weight="0.54527">Bottleneck</keyword><keyword weight="0.571">Serialization</keyword><keyword weight="0.60518">Concurrency</keyword><keyword weight="0.46461">Computer science</keyword><keyword weight="0.47759">Parallel computing</keyword><keyword weight="0.52053">B-tree</keyword><keyword weight="0.45943">Algorithm</keyword><keyword weight="0.46417">Response time</keyword><keyword weight="0.50747">Throughput</keyword><keyword weight="0.60024">Concurrent data structure</keyword><keyword weight="0.56243">Transaction processing system</keyword></keywords><publisher>ACM</publisher><abstract>Many concurrent B-tree algorithms have been proposed, but their performances have not yet been analyzed satisfactorily. When transaction processing systems require high levels of concurrency, a restrictive serialization technique on the B-tree index can cause a bottleneck. In this paper we present a framework for constructing analytical performance models of concurrent B-tree algorithms. The models can predict the response time and maximum throughput. We analyze a variety of locking algorithms including naive lock-coupling, optimistic descent, two-phase locking, and the Lehman-Yao algorithm. The analyses are validated by simulations of the algorithms on actual B-trees, as well as by simulations done by other researchers</abstract></paper>