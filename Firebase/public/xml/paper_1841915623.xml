<paper id="1841915623"><title>Complete and Partial Redex Trails of Functional Computations</title><year>1997</year><authors><author org="†University of York" id="304003745">Jan Sparud</author><author org="†University of York" id="711150104">Colin Runciman</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>1490584728</reference><reference>1534285741</reference><reference>2027620096</reference><reference>2087198640</reference><reference>2092408876</reference><reference>2134537546</reference><reference>2171821407</reference></references><venue id="1132577199" type="C">Implementation and Application of Functional Languages</venue><doi>10.1007/BFb0055430</doi><keywords><keyword weight="0.46008">Programming language</keyword><keyword weight="0.49766">Functional programming</keyword><keyword weight="0.44901">Computer science</keyword><keyword weight="0.53386">Compiler</keyword><keyword weight="0.45272">Theoretical computer science</keyword><keyword weight="0.52999">Garbage collection</keyword><keyword weight="0.48037">Function application</keyword><keyword weight="0.52737">Graph reduction</keyword><keyword weight="0.48543">Tracing</keyword><keyword weight="0.43471">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Redex trails are histories of functional computations by graph reduction; their main application is fault-tracing. A prototype implementation of a tracer based on redex trails [8] demonstrated the promise of the technique, but was limited in two respects: (1) trails did not record every reduction, only those constructing a new value; (2) even so computing trails was very expensive, particularly in terms of the memory space they occupied. In this paper, we address both problems: complete redex trails provide a full computational record; partial versions of these trails exclude all but selected details, greatly reducing memory costs. We include results of experiments tracing several applications, including a compiler.</abstract></paper>