<paper id="1778824762"><title>Constructing VIL-MACsfrom FIL-MACs: Message Authentication under Weakened Assumptions</title><year>1999</year><authors><author org="University of california at San Diego" id="2780628958">Jee Hea An</author><author org="University of california at San Diego" id="2052950829">Mihir Bellare</author></authors><n_citation>49</n_citation><doc_type>Conference</doc_type><references><reference>1549228503</reference><reference>1566345534</reference><reference>1600432225</reference><reference>1972792640</reference><reference>1985623009</reference><reference>2022521688</reference><reference>2052207834</reference><reference>2077300005</reference><reference>2107165730</reference><reference>2117362057</reference><reference>2122984309</reference><reference>2131300413</reference><reference>2139172211</reference><reference>2148555789</reference><reference>2151413173</reference><reference>2151748484</reference><reference>2152377620</reference><reference>2167569963</reference><reference>2916302273</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48405-1_16</doi><keywords><keyword weight="0.56492">Hash-based message authentication code</keyword><keyword weight="0.50733">Message authentication code</keyword><keyword weight="0.51819">Block cipher</keyword><keyword weight="0.50711">Cryptography</keyword><keyword weight="0.48162">Pseudorandomness</keyword><keyword weight="0.4242">Computer science</keyword><keyword weight="0.56079">Cryptographic hash function</keyword><keyword weight="0.43094">Theoretical computer science</keyword><keyword weight="0.53145">Hash function</keyword><keyword weight="0.48692">Iterated function</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Practical MACs are typically designed by iterating applications of some fixed-input-length (FIL) primitive, namely one like a block cipher or compression function that only applies to data of a fixed length. Existing security analyses of these constructions either require a stronger security property from the FIL primitive (eg. pseudorandomness) than the unforgeability required of the final MAC, or, as in the case of HMAC, make assumptions about the iterated function itself. In this paper we consider the design of iterated MACs under the (minimal) assumption that the given FIL primitive is itself a MAC. We look at three popular transforms, namely CBC, Feistel and the Merkle-Damgard method, and ask for each whether it preserves unforgeability. We show that the answer is no in the first two cases and yes in the third. The last yields an alternative cryptographic hash function based MAC which is secure under weaker assumptions than existing ones, although at a slight increase in cost.</abstract></paper>