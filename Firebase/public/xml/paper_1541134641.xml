<paper id="1541134641"><title>Types for Data-Oriented Languages</title><year>1988</year><authors><author org="Digital Equipment Corporation, Systems Research Center" id="331751290">Luca Cardelli</author></authors><n_citation>41</n_citation><doc_type>Conference</doc_type><references><reference>1984807151</reference><reference>2027657506</reference><reference>2027750453</reference><reference>2089042876</reference><reference>2104204098</reference><reference>2110338707</reference><reference>2114958714</reference><reference>2122534492</reference><reference>2173184982</reference><reference>2411369279</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/3-540-19074-0_44</doi><keywords><keyword weight="0.70454">Conceptual schema</keyword><keyword weight="0.59443">Second-generation programming language</keyword><keyword weight="0.60353">Comparison of multi-paradigm programming languages</keyword><keyword weight="0.46916">Programming language</keyword><keyword weight="0.45134">Computer science</keyword><keyword weight="0.68367">Document Structure Description</keyword><keyword weight="0.61477">Schema (psychology)</keyword><keyword weight="0.84928">Schema evolution</keyword><keyword weight="0.43887">Database</keyword><keyword weight="0.0">Logical schema</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Data-oriented languages may benefit from a rich kind structure. We have shown that kinds can provides a framework for relational and database-wide operations, for subtype relations, for schema computations, and perhaps even for schema evolution.</abstract></paper>