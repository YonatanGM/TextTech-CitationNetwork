<paper id="1778289469"><title>A Machine-Checked Theory of Floating Point Arithmetic</title><year>1999</year><authors><author org="Intel Corporation, EY2-03" id="2148262072">John Harrison</author></authors><n_citation>83</n_citation><doc_type>Conference</doc_type><references><reference>1636139685</reference><reference>1672719503</reference><reference>1846048981</reference><reference>1941428497</reference><reference>2023462640</reference><reference>2157279226</reference><reference>2169810797</reference></references><venue id="2538859667" type="C">Theorem Proving in Higher Order Logics</venue><doi>10.1007/3-540-48256-3_9</doi><keywords><keyword weight="0.4654">Programming language</keyword><keyword weight="0.43069">Round-off error</keyword><keyword weight="0.4605">Computer science</keyword><keyword weight="0.52122">Floating point</keyword><keyword weight="0.4542">Theoretical computer science</keyword><keyword weight="0.4757">Software</keyword><keyword weight="0.51471">Mathematical software</keyword><keyword weight="0.42322">Lemma (mathematics)</keyword><keyword weight="0.42159">Architecture</keyword><keyword weight="0.45879">Arithmetic</keyword><keyword weight="0.43837">Algorithm</keyword><keyword weight="0.51338">Mathematical proof</keyword><keyword weight="0.57804">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Intel is applying formal Verification to various pieces of mathematical software used in Merced, the first implementation of the new IA-64 architecture. This paper discusses the development of a generic floating point library giving definitions of the fundamental terms and containing formal proofs of important lemmas. We also briefly describe how this has been used in the Verification effort so far.</abstract></paper>