<paper id="1604959559"><title>Using UML for Modeling Complex Real-Time Systems</title><year>1998</year><authors><author org="ObjecTime Limited" id="2068168300">Bran Selic</author></authors><n_citation>461</n_citation><doc_type>Conference</doc_type><references><reference>1582068322</reference></references><venue id="1131672992" type="C">Languages, Compilers, and Tools for Embedded Systems</venue><doi>10.1007/BFb0057795</doi><keywords><keyword weight="0.65016">Real-Time Object-Oriented Modeling</keyword><keyword weight="0.7213">UML tool</keyword><keyword weight="0.64247">Model-driven architecture</keyword><keyword weight="0.45577">Computer science</keyword><keyword weight="0.63781">Modeling language</keyword><keyword weight="0.43558">Real-time computing</keyword><keyword weight="0.74329">Applications of UML</keyword><keyword weight="0.67836">Systems Modeling Language</keyword><keyword weight="0.6354">Object Constraint Language</keyword><keyword weight="0.64093">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Real-time software systems encountered in telecommunications, aerospace, and defense often tend to be very large and extremely complex. It is crucial in such systems that the software has a well-defined architecture. This not only facilitates construction of the initial system, it also simplifies system evolution. We describe a set of modeling constructs that facilitate the specification of complex software architectures for real-time systems. These constructs are derived from field-proven concepts originally defined in the ROOM modeling language. Furthermore, we show how they can be represented using the industry-standard Unified Modeling Language (UML) by using the powerful extensibility mechanisms of UML.</abstract></paper>