<paper id="1977898832"><title>The linear abstract machine</title><year>1988</year><authors><author org="Department of Computing, Imperial College, London SW7 2BZ, U.K.#TAB#" id="2786711096">Y. Lafont</author></authors><n_citation>128</n_citation><doc_type>Journal</doc_type><references><reference>1502726770</reference><reference>1963658586</reference><reference>2047323187</reference><reference>2176771007</reference><reference>2911865844</reference></references><venue id="90727058" type="J">Theoretical Computer Science</venue><doi>10.1016/0304-3975(88)90074-6</doi><keywords><keyword weight="0.40305">Discrete mathematics</keyword><keyword weight="0.45093">Programming language</keyword><keyword weight="0.529">Functional programming</keyword><keyword weight="0.43082">Computer science</keyword><keyword weight="0.0">Logical Function</keyword><keyword weight="0.56614">Lazy evaluation</keyword><keyword weight="0.43068">Algorithm</keyword><keyword weight="0.55973">Garbage collection</keyword><keyword weight="0.53787">Linear logic</keyword><keyword weight="0.59993">Strict programming language</keyword><keyword weight="0.4331">Semantics</keyword><keyword weight="0.52642">Abstract machine</keyword></keywords><publisher>Elsevier Science Publishers Ltd.</publisher><abstract>Abstract Linear Logic [6] provides a refinement of functional programming and suggests a new implementation technique, with the following features: • a synthesis of strict and lazy evaluation, • a clean semantics of side effects, • no garbage collector.</abstract></paper>