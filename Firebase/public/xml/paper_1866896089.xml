<paper id="1866896089"><title>Design Constraints in Symbolic Model Checking</title><year>1998</year><authors><author org="MOTOROLA. INC" id="2152494149">Matt Kaufmann</author><author org="Motorola" id="2439550881">Andrew Martin</author><author org="Motorola" id="1999761091">Carl Pixley</author></authors><n_citation>42</n_citation><doc_type>Conference</doc_type><references><reference>1501731334</reference><reference>2110648791</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BFb0028768</doi><keywords><keyword weight="0.58886">Kripke structure</keyword><keyword weight="0.66398">Model checking</keyword><keyword weight="0.47262">Computer science</keyword><keyword weight="0.0">Symbolic verification</keyword><keyword weight="0.45668">Algorithm</keyword><keyword weight="0.47857">Systems design</keyword><keyword weight="0.47156">Theoretical computer science</keyword><keyword weight="0.51299">Execution unit</keyword><keyword weight="0.76406">Symbolic trajectory evaluation</keyword><keyword weight="0.52452">Constrained optimization</keyword><keyword weight="0.57442">Formal verification</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>A time-consuming and error-prone activity in symbolic model-checking is the construction of environments. We present a technique for modeling environmental constraints that avoids the need for explicit construction of environments. Moreover, our approach supports an assume/guarantee style of reasoning that also supports simulation monitors. We give examples of the use of constraints in PowerPCTMverification.</abstract></paper>