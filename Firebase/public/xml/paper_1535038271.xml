<paper id="1535038271"><title>Graph Grammar Engineering: A Software Specification Method</title><year>1986</year><authors><author org="FB 17, Universität Mainz" id="2136680303">Gregor Engels</author><author org="Informatik III, RWTH Aachen" id="25798412">Claus Lewerentz</author><author org="Computer Science, McGill University" id="2810187831">Wilhelm Schäfer</author></authors><n_citation>41</n_citation><doc_type>Conference</doc_type><references><reference>1482012210</reference><reference>1510094545</reference><reference>1516486508</reference><reference>1573954766</reference><reference>1603788080</reference><reference>1608201119</reference><reference>2093415968</reference><reference>2935490314</reference></references><venue id="2756339047" type="C">International Workshop on Graph-Grammars and Their Application to Computer Science</venue><doi>10.1007/3-540-18771-5_53</doi><keywords><keyword weight="0.55573">Software design</keyword><keyword weight="0.47864">Programming language</keyword><keyword weight="0.46625">Computer science</keyword><keyword weight="0.59055">Software requirements specification</keyword><keyword weight="0.55798">Software visualization</keyword><keyword weight="0.56238">Software construction</keyword><keyword weight="0.5466">Software sizing</keyword><keyword weight="0.54868">Software development</keyword><keyword weight="0.55131">Software verification</keyword><keyword weight="0.54658">Search-based software engineering</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Graphs as conceptual data models are accepted and used in a wide range of different problem areas. Giving some examples we outline common aspects for modeling complex structures by graphs. We present a formal frame-work based on graph grammars to specify graph classes and the corresponding graph manipulations. We show that such a specification can be written in a systematic, engineering-like manner. This is achieved by an extension of the known programmed, attributed graph grammars. Node-set operators are introduced to facilitate graph queries. Concepts like abstraction, decomposition, refinement, parameterization, and integration have been adopted from software engineering to yield a comprehensive specification method. This method has successfully been applied to specify the central data structures in a software development environment project.</abstract></paper>