<paper id="1535449473"><title>Symbolic Exploration of transition Hierarchies</title><year>1998</year><authors><author org="University of Pennsylvania and Bell Labs#TAB#" id="689646243">Rajeev Alur</author><author org="University of California at Berkeley" id="2707196735">Thomas A. Henzinger</author><author org="University of California at Berkeley" id="2083764764">Sriram K. Rajamani</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>1571819235</reference><reference>1822320350</reference><reference>1857327297</reference><reference>1875492031</reference><reference>1971107784</reference><reference>2055295051</reference><reference>2088586972</reference><reference>2146485104</reference><reference>2173952623</reference><reference>2611515161</reference><reference>2912904668</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/BFb0054181</doi><keywords><keyword weight="0.0">Formal design</keyword><keyword weight="0.56615">Model checking</keyword><keyword weight="0.47563">Abstraction</keyword><keyword weight="0.46751">Programming language</keyword><keyword weight="0.46289">Computer science</keyword><keyword weight="0.47958">Systems design</keyword><keyword weight="0.45875">Theoretical computer science</keyword><keyword weight="0.46344">Operator (computer programming)</keyword><keyword weight="0.43007">Hierarchy</keyword><keyword weight="0.50548">State space</keyword><keyword weight="0.44773">Distributed computing</keyword><keyword weight="0.56883">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In formal design verification, successful model checking is typically preceded by a laborious manual process of constructing design abstractions. We present a methodology for partially—and in some cases, fully—bypassing the abstraction process. For this purpose, we provide to the designer abstraction operators which, if used judiciously in the description of a design, structure the corresponding state space hierarchically. This structure can then be exploited by verification tools, and makes possible the automatic and exhaustive exploration of state spaces that would otherwise be out of scope for existing model checkers.</abstract></paper>