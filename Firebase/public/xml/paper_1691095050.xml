<paper id="1691095050"><title>A Self-Applicable Partial Evaluator for Term Rewriting Systems</title><year>1989</year><authors><author org="DIKU, Univ. of Copenhagen" id="171124267">Anders Bondorf</author></authors><n_citation>38</n_citation><doc_type /><references><reference>1501891810</reference><reference>1543641760</reference><reference>1566968514</reference><reference>1567694639</reference><reference>1574621558</reference><reference>1607247974</reference><reference>1858571084</reference><reference>1978509573</reference><reference>1988901815</reference><reference>2020024606</reference><reference>2036748304</reference><reference>2067693540</reference><reference>2084099544</reference><reference>2091210577</reference><reference>2913158420</reference></references><venue id="" type="">TAPSOFT '89 Proceedings of the International Joint Conference on Theory and Practice of Software Development, Volume 2: Advanced Seminar on Foundations of Innovative Software Development II and Colloquium on Current Issues in Programming Languages</venue><doi>10.1007/3-540-50940-2_29</doi><keywords><keyword weight="0.45535">Decision tree</keyword><keyword weight="0.47632">Programming language</keyword><keyword weight="0.0">Binding time analysis</keyword><keyword weight="0.52817">Functional programming</keyword><keyword weight="0.50712">Abstract interpretation</keyword><keyword weight="0.53953">Compiler</keyword><keyword weight="0.475">Interpreter</keyword><keyword weight="0.57647">Rewriting</keyword><keyword weight="0.53008">Pattern matching</keyword><keyword weight="0.39897">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes a fully self-applicable partial evaluator developed for equational programs in the form of term rewriting systems. Being self-applicable, the partial evaluator is able to generate efficient compilers from interpreters as well as a compiler generator automatically.</abstract></paper>