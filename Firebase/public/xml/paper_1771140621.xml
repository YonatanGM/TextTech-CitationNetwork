<paper id="1771140621"><title>A Method to Simplify a Boolean Function into a Near Minimal Sum-of-Products for Programmable Logic Arrays</title><year>1978</year><authors><author org="Department of Electronic Engineering, Universidad Distrital" id="217115419">Arevalo</author><author org="" id="956999558">Bredeson</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>1985349545</reference><reference>2018291801</reference><reference>2046603834</reference><reference>2047315525</reference><reference>2066128851</reference><reference>2067942598</reference><reference>2124078793</reference><reference>2141498370</reference><reference>2148204012</reference><reference>2155976221</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1978.1674992</doi><keywords><keyword weight="0.62074">Boolean function</keyword><keyword weight="0.57134">Canonical normal form</keyword><keyword weight="0.62483">Boolean circuit</keyword><keyword weight="0.43694">Computer science</keyword><keyword weight="0.61046">Programmable logic array</keyword><keyword weight="0.46536">Algorithm</keyword><keyword weight="0.57653">Combinational logic</keyword><keyword weight="0.54962">Function block diagram</keyword><keyword weight="0.67028">Implicant</keyword><keyword weight="0.54572">Programmable logic device</keyword></keywords><publisher>IEEE</publisher><abstract>This paper describes an algorithm for minimizing an arbitrary Boolean function. The approach differs from most previous procedures in which first all prime implicants are found and then a minimal set is then determined. This procedure imposes a set of conditions on the selection of the next prime implicant in order to obtain a near minimal sum-of-products realization. Extension to the multiple output and incompletely specified function cases is given. An important characteristic of the proposed procedure is the relatively small amount of computer time spent to solve a problem, as compared to other procedures. The MINI algorithm may give better results for a large number of inputs and outputs if relatively few product terms are needed. This procedure is also well suited to find a solution for programmable logic arrays (PLAu0027s) which internally implement large Boolean functions as a sum-of-products.</abstract></paper>