<paper id="1982619477"><title>Structuring and automating hardware proofs in a higher-order theorem-proving environment</title><year>1993</year><authors><author org="Institut für Rechnerentwurf und Fehlertoleranz, Universität Karlsruhe, Karlsruhe 1, Germany" id="2174301642">Ramayya Kumar</author><author org="Institut für Rechnerentwurf und Fehlertoleranz, Universität Karlsruhe, Karlsruhe 1, Germany" id="2122241011">Klaus Schneider</author><author org="Institut für Rechnerentwurf und Fehlertoleranz, Universität Karlsruhe, Karlsruhe 1, Germany" id="2807509645">Thomas Kropf</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>72090759</reference><reference>121687370</reference><reference>1513458930</reference><reference>1532686795</reference><reference>1536502027</reference><reference>1554618854</reference><reference>1558214710</reference><reference>1605476959</reference><reference>1924552249</reference><reference>1982371911</reference><reference>1984720830</reference><reference>1992006255</reference><reference>1994879909</reference><reference>2023266231</reference><reference>2057956383</reference><reference>2059054133</reference><reference>2064811181</reference><reference>2100738443</reference><reference>2113251992</reference><reference>2126583599</reference><reference>2165789246</reference><reference>2166092235</reference><reference>2171513427</reference><reference>2535018452</reference><reference>2536944202</reference><reference>2582875292</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BF01383880</doi><keywords><keyword weight="0.46481">Computer science</keyword><keyword weight="0.58601">Intelligent verification</keyword><keyword weight="0.56041">Automated theorem proving</keyword><keyword weight="0.449">Algorithm</keyword><keyword weight="0.48909">Automation</keyword><keyword weight="0.46651">Theoretical computer science</keyword><keyword weight="0.50357">Mathematical proof</keyword><keyword weight="0.59592">High-level verification</keyword><keyword weight="0.44123">Structuring</keyword><keyword weight="0.44585">Computer hardware</keyword><keyword weight="0.51771">Gas meter prover</keyword><keyword weight="0.55324">Higher-order logic</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>In this article we present a structured approach to formal hardware verification by modeling circuits at the register-transfer level using a restricted form of higher-order logic. This restricted form of higher-order logic is sufficient for obtaining succinct descriptions of hierarchically designed register-transfer circuits. By exploiting the structure of the underlying hardware proofs and limiting the form of descriptions used, we have attained nearly complete automation in proving the equivalences of the specifications and implementations. A hardware-specific tool called MEPHISTO converts the original goal into a set of simpler subgoals, which are then automatically solved by a general-purpose, first-order prover called FAUST. Furthermore, the complete verification framework is being integrated within a commercial VLSI CAD framework.</abstract></paper>