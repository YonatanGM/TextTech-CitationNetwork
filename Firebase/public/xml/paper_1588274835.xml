<paper id="1588274835"><title>Static Semantics as Program Transformation and Well-founded Computation</title><year>1994</year><authors><author org="Universita’ Degli Studi di Milano" id="2068700840">Stefania Costantini</author><author org="Universita’ Degli Studi di Milano" id="1120302960">Gaetano Aurelio Lanzarone</author></authors><n_citation>5</n_citation><doc_type>Conference</doc_type><references><reference>118616176</reference><reference>192651373</reference><reference>203630350</reference><reference>1505787149</reference><reference>1672891595</reference><reference>1968513265</reference><reference>1972860636</reference><reference>2028245171</reference><reference>2115128204</reference><reference>2132745831</reference><reference>2161628186</reference><reference>2394732923</reference><reference>2945259913</reference></references><venue id="2754141368" type="C">International Conference on Lightning Protection</venue><doi>10.1007/BFb0030664</doi><keywords><keyword weight="0.52252">Axiom schema</keyword><keyword weight="0.61958">Program transformation</keyword><keyword weight="0.47101">Programming language</keyword><keyword weight="0.51199">Constructive</keyword><keyword weight="0.4955">Axiom</keyword><keyword weight="0.45666">Computer science</keyword><keyword weight="0.46611">Theoretical computer science</keyword><keyword weight="0.44333">Preprocessor</keyword><keyword weight="0.42644">Schema (psychology)</keyword><keyword weight="0.5393">Semantics</keyword><keyword weight="0.47072">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we propose a new constructive characterization of those semantics for disjunctive logic programs which are extensions of the well-founded semantics for normal programs. Based on considerations about how disjunctive information is treated by a given semantics, we divide the computation of that semantics into two phases. The first one is a program transformation phase, which applies axiom schemata expressing how derivations involving disjunctions are made in the given semantic framework. The second one is a constructive phase, based on a variation of the well-founded model construction for normal programs. We apply this two-phases procedural semantics to the computation of the static semantics of disjunctive logic programs as a case-study, showing how it works and what its results are in several examples. A main perspective of this proposal is a procedural semantics for disjunctive programs consisting of an inefficient preprocessing phase (implementing the program transformation procedure), to be however performed only once, and of an efficient runtime computation, obtained as a variation of any effective procedural semantics for the well-founded model.</abstract></paper>