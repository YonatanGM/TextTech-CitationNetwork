<paper id="1979030266"><title>An integrated framework for ought-to-be and ought-to-do constraints</title><year>1996</year><authors><author org="Dipartimento di Filosofia, UniversitÃ  di Milano, Milano, Italy" id="2646192850">P. D'altan</author><author org="Department of Mathematics and Computer Science, Utrecht University, Utrecht, The Netherlands" id="2133364323">J-J. Ch. Meyer</author><author org="Department of Mathematics and Computer Science, Vrije Universiteit, Amsterdam, The Netherlands" id="1987029555">R. J. Wieringa</author></authors><n_citation>67</n_citation><doc_type>Journal</doc_type><references><reference>144831858</reference><reference>333489310</reference><reference>1526544135</reference><reference>1603788080</reference><reference>1970077543</reference><reference>1971331291</reference><reference>1978342051</reference><reference>1982451001</reference><reference>2006719707</reference><reference>2021916230</reference><reference>2039200699</reference><reference>2102702767</reference><reference>2113699261</reference><reference>2159228603</reference><reference>2169723796</reference></references><venue id="96609033" type="J">Artificial Intelligence and Law</venue><doi>10.1007/BF00116787</doi><keywords><keyword weight="0.43847">Mathematical economics</keyword><keyword weight="0.60623">Deontic logic</keyword><keyword weight="0.44731">Of the form</keyword><keyword weight="0.42017">Computer science</keyword><keyword weight="0.43243">Expert system</keyword><keyword weight="0.42754">Decision support system</keyword><keyword weight="0.0">Authorization</keyword><keyword weight="0.3915">Knowledge management</keyword><keyword weight="0.44941">Database security</keyword><keyword weight="0.46894">Data integrity</keyword><keyword weight="0.51473">State of affairs</keyword></keywords><publisher>Kluwer Academic</publisher><abstract>Deontic logic is the logic to reason about ideal and actual behaviour. Besides the traditional role as an underlying logic for law and ethics (for a survey see Meyer and Wieringa, 1993), deontic logic has been proposed as a logic for the specification of legal expert systems [Biagioli et al., 1987; Stamper, 1980], authorization mechanisms [Minsky and Lockman, 1985] decision support systems [Kimbrough, 1988; Lee, 1988a, 1988b], database security rules [Glasgow et al., 1988], fault-tolerant software [Khosla and Mailbaum, 1987; Coenen, 1993], and database integrity constraints [Wieringa et al., 1989, 1991]. A survey of applications can be found in [Wieringa and Meyer, 1993]. In all these areas, we must be able to reason about the difference between ideal and actual behaviour. In many cases, it is important to distinguish ought-to-do statements (which may be interpreted as expressing imperatives of the form "an actor ought to perform an action") from ought-to-be statements (which express a desired state of affairs without necessarily mentioning actors and actions bearing relations with that state of affairs). There are situations where we would like to relate the two oughts with each other. For example, suppose we want to specify deontic integrity constraints for a bank data base. From the ought-to-be constraint (1.) The balance of a bank account must be non-negative we would like to derive the ought-to-do statement (2.) If the balance of a bank account is n and n m u003c 0, then it is forbidden to withdraw m from the account. In addition, we would like to be able to express</abstract></paper>