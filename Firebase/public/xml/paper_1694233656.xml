<paper id="1694233656"><title>The architecture of the EXODUS extensible DBMS</title><year>1986</year><authors><author org="Computer Science Department, University of Wisconsin" id="2157114695">Michael J. Carey</author><author org="Computer Science Department, University of Wisconsin" id="1979791317">David J. DeWitt</author><author org="Computer Science Department, University of Wisconsin" id="2560742287">Daniel Frank</author><author org="Computer Science Department, University of Wisconsin" id="364421747">M. Muralikrishna</author><author org="Computer Science Department, University of Wisconsin" id="2284116839">Goetz Graefe</author><author org="Computer Science Department, University of Wisconsin" id="2296166673">Joel E. Richardson</author><author org="Computer Science Department, University of Wisconsin" id="2309335715">Eugene J. Shekita</author></authors><n_citation>196</n_citation><doc_type /><references><reference>180117855</reference><reference>1482799780</reference><reference>1498065375</reference><reference>1499820551</reference><reference>1508355855</reference><reference>1520815598</reference><reference>1530586715</reference><reference>1543012390</reference><reference>1561479548</reference><reference>1606820587</reference><reference>1730901934</reference><reference>1972415527</reference><reference>1977101058</reference><reference>1978309035</reference><reference>1979062141</reference><reference>1980806195</reference><reference>1991541488</reference><reference>2023062025</reference><reference>2036862988</reference><reference>2059252897</reference><reference>2060293238</reference><reference>2066799613</reference><reference>2070115085</reference><reference>2072627547</reference><reference>2080901110</reference><reference>2092639071</reference><reference>2099117306</reference><reference>2099859391</reference><reference>2104027502</reference><reference>2106887953</reference><reference>2110338707</reference><reference>2110788116</reference><reference>2111952456</reference><reference>2112962394</reference><reference>2113906833</reference><reference>2116436709</reference><reference>2118269922</reference><reference>2148238464</reference><reference>2149173084</reference><reference>2154566471</reference><reference>2158141386</reference><reference>2162830660</reference><reference>2163765478</reference><reference>2168787502</reference><reference>2175812749</reference><reference>2611598995</reference><reference>2653473023</reference></references><venue id="" type="">OODS '86 Proceedings on the 1986 international workshop on Object-oriented database systems</venue><doi>10.1007/978-3-642-84374-7_15</doi><keywords><keyword weight="0.58977">Data administration</keyword><keyword weight="0.60448">Database tuning</keyword><keyword weight="0.46218">Computer science</keyword><keyword weight="0.59792">Database testing</keyword><keyword weight="0.63253">Database design</keyword><keyword weight="0.60534">Database schema</keyword><keyword weight="0.59835">Intelligent database</keyword><keyword weight="0.60359">Distributed database</keyword><keyword weight="0.5316">Component-based software engineering</keyword><keyword weight="0.46722">Database</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>With non-traditional application areas such as engineering design, image/voice data management, scientific/statistical applications, and artificial intelligence systems all clamoring for ways to store and efficiently process larger and larger volumes of data, it is clear that traditional database technology has been pushed to its limits. It also seems clear that no single database system will be capable of simultaneously meeting the functionality and performance requirements of such a diverse set of applications. In this paper we describe the preliminary design of EXODUS, an extensible database system that will facilitate the fast development of high-performance, application-specific database systems. EXODUS provides certain kernel facilities, including a versatile storage manager and a type manager. In addition, it provides an architectural framework for building application-specific database systems, tools to partially automate the generation of such systems, and libraries of software components (e.g., access methods) that are likely to be useful for many application domains.</abstract></paper>