<paper id="1733935619"><title>Inverting the Abstraction Mapping: A Methodology for Hardware Verification</title><year>1996</year><authors><author org="SRI International," id="2421201338">David Cyrluk</author></authors><n_citation>24</n_citation><doc_type>Conference</doc_type><references><reference>1538310240</reference><reference>1577772892</reference><reference>1741528175</reference><reference>2113486906</reference><reference>2132107743</reference></references><venue id="1166230065" type="C">Formal Methods in Computer-Aided Design</venue><doi>10.1007/BFb0031807</doi><keywords><keyword weight="0.71638">Functional verification</keyword><keyword weight="0.47242">Programming language</keyword><keyword weight="0.46646">Abstraction</keyword><keyword weight="0.7324">Intelligent verification</keyword><keyword weight="0.46552">Computer science</keyword><keyword weight="0.61262">Correctness</keyword><keyword weight="0.49019">Register file</keyword><keyword weight="0.71185">Verification</keyword><keyword weight="0.4559">Theoretical computer science</keyword><keyword weight="0.73992">High-level verification</keyword><keyword weight="0.69671">Software verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Abstraction mappings have become a standard approach to verifying the correctness of processors. When used in a straightforward manner this approach suffers from generating extremely large intermediate terms that have to be simplified.</abstract></paper>