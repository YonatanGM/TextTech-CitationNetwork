<paper id="1541526834"><title>Composite Temporal Events in Active Databases: A Formal Semantics</title><year>1995</year><authors><author org="U.C.L.A." id="2086315844">Iakovos Motakis</author><author org="U.C.L.A." id="2028117853">Carlo Zaniolo</author></authors><n_citation>13</n_citation><doc_type /><references><reference>107294573</reference><reference>196640945</reference><reference>270081759</reference><reference>1496528554</reference><reference>1530920082</reference><reference>1579145134</reference><reference>1579525522</reference><reference>1589223644</reference><reference>1839937676</reference><reference>1843708379</reference><reference>1991247646</reference><reference>2015516856</reference><reference>2016580249</reference><reference>2104145253</reference><reference>2118751582</reference></references><venue id="" type="">Proceedings of the International Workshop on Temporal Databases: Recent Advances in Temporal Databases</venue><doi>10.1007/978-1-4471-3033-8_18</doi><keywords><keyword weight="0.5844">Formal semantics (linguistics)</keyword><keyword weight="0.61657">Operational semantics</keyword><keyword weight="0.58394">Computational semantics</keyword><keyword weight="0.45068">Computer science</keyword><keyword weight="0.61203">Denotational semantics</keyword><keyword weight="0.59901">Action semantics</keyword><keyword weight="0.56117">Formal specification</keyword><keyword weight="0.55131">Formal methods</keyword><keyword weight="0.42325">Database</keyword><keyword weight="0.57173">Formal verification</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Active databases must support rules triggered by complex patterns of composite temporal events. This paper proposes a general method for specifying the semantics of composite event specification languages. The method is based on a syntax-directed translation of the composite event expressions into Datalog 1 S , whose formal semantics is then used to define the meaning of the original event expressions. We show that the method is applicable to languages such as ODE, Snoop and SAMOS that are based respectively on the formalisms of Finite State Machines, Event Graphs and Petri Nets. The proposed method overcomes various problems and limitations affecting such formalisms.</abstract></paper>