<paper id="1553233117"><title>XEVE, an ESTEREL Verification Environment</title><year>1998</year><authors><author org="INRIA, Sophia-Antipolis Cedex" id="2406961282">Amar Bouali</author></authors><n_citation>69</n_citation><doc_type>Conference</doc_type><references><reference>1523766116</reference><reference>1547562281</reference><reference>1992006255</reference><reference>2021473546</reference><reference>2081938726</reference><reference>2170486827</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BFb0028770</doi><keywords><keyword weight="0.46893">Programming language</keyword><keyword weight="0.57787">Model checking</keyword><keyword weight="0.45684">Computer science</keyword><keyword weight="0.53837">Correctness</keyword><keyword weight="0.51263">Denotational semantics</keyword><keyword weight="0.52425">Finite-state machine</keyword><keyword weight="0.69982">Esterel</keyword><keyword weight="0.50331">Reactive system</keyword><keyword weight="0.58773">Formal verification</keyword><keyword weight="0.54478">Liveness</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe the verification methods and tools we are currently developing around the language ESTEREL. This language is dedicated for the development of synchronous reactive systems such as hardware or software controllers for which the control handling aspects are predominant. The language has a strong mathematical semantics in terms of Finite State Machines. Automatic verification is then possible on this model in which we represent exhaustively all the possible behaviors of a system. Our methods are based on model minimization coupled with unrelevant behaviors masking and model checking techniques to verify correctness properties like safety and liveness ones by means of synchronous observers</abstract></paper>