<paper id="1538792000"><title>Finite Field Arithmetic Using the Connection Machine</title><year>1990</year><authors><author org="Syracuse University" id="2129331763">Ernest E. Sibert</author><author org="Syracuse University" id="2974520957">Harold F. Mattson</author><author org="Syracuse University" id="2553006816">Paul Jackson</author></authors><n_citation>9</n_citation><doc_type /><references><reference>1971869874</reference></references><venue id="" type="">Proceedings of the Second International Workshop on Computer Algebra and Parallelism</venue><doi>10.1007/3-540-55328-2_4</doi><keywords><keyword weight="0.57269">Finite field</keyword><keyword weight="0.50705">Bijection</keyword><keyword weight="0.56389">Polynomial</keyword><keyword weight="0.46686">Algebra</keyword><keyword weight="0.53294">Arbitrary-precision arithmetic</keyword><keyword weight="0.52263">Cyclic code</keyword><keyword weight="0.55831">Finite field arithmetic</keyword><keyword weight="0.49805">Logarithm</keyword><keyword weight="0.42876">Mathematics</keyword><keyword weight="0.55912">Discrete logarithm</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A Connection Machine (model CM-2) with 32K processors has been used to carry out calculations in finite fields with as many as 221 elements and of various characteristics; a typical calculation is to determine the number of roots of a large family of polynomials. The programs use discrete logarithms, employing a table of “successor” logarithms to perform addition. The table is computed in advance, in parallel. The system can evaluate some 4 × 106 polynomial terms per second; performance is limited by the general communication time needed for table lookup. Orbits of the p-th power bijection (also calculated in parallel) are used to deal with common symmetries arising in the calculations. The techniques are illustrated by calculations to determine the number of rational points of a polynomial surface over several fields, quantities which are useful in analyzing certain cyclic codes.</abstract></paper>