<paper id="1566214218"><title>Informal Formality? The Object Constraint Language and Its Application in the UML Metamodel</title><year>1998</year><authors><author org="Klasse Objecten" id="2044679454">Anneke Kleppe</author><author org="IBM (Netherlands)" id="2307737247">Jos Warmer</author><author org="IBM UK Ltd," id="2163725506">Steve Cook</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>1593874741</reference><reference>2161825580</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/978-3-540-48480-6_12</doi><keywords><keyword weight="0.53641">Specification language</keyword><keyword weight="0.45861">Programming language</keyword><keyword weight="0.65833">UML tool</keyword><keyword weight="0.53053">Unified Modeling Language</keyword><keyword weight="0.44222">Computer science</keyword><keyword weight="0.52149">Formal specification</keyword><keyword weight="0.7301">Applications of UML</keyword><keyword weight="0.77022">Object Constraint Language</keyword><keyword weight="0.5655">Metamodeling</keyword><keyword weight="0.58412">Class diagram</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Within the field of object technology it is becoming recognised that constraints are a good way to produce more precise and formal specifications than with diagrams alone. Evidence of this is that UML incorporates a standard constraint language called OCL (Object Constraint Language). The availability of OCL will encourage UML users to add constraints to their UML models. This paper explains OCL and demonstrates its applicability. Probably the largest application of OCL to date was its use to define the metamodel of UML, and the experiences gained in this application are discussed.</abstract></paper>