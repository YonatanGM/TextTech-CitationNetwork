<paper id="1497828701"><title>Secure Computation without Agreement</title><year>2002</year><authors><author org="Weizmann institute of Science" id="1728759264">Shafi Goldwasser</author><author org="Weizmann institute of Science" id="30238620">Yehuda Lindell</author></authors><n_citation>96</n_citation><doc_type>Conference</doc_type><references><reference>44936433</reference><reference>1489286008</reference><reference>1561441787</reference><reference>1584560347</reference><reference>1603973540</reference><reference>1827808880</reference><reference>1867273832</reference><reference>1970464137</reference><reference>1990955330</reference><reference>1997859100</reference><reference>1998058955</reference><reference>2014772227</reference><reference>2016443801</reference><reference>2080947580</reference><reference>2082257278</reference><reference>2116643105</reference><reference>2120510885</reference><reference>2126924915</reference><reference>2142222275</reference><reference>2161670619</reference></references><venue id="1131603458" type="C">International Symposium on Distributed Computing</venue><doi>10.1007/3-540-36108-1_2</doi><keywords><keyword weight="0.57133">Secure multi-party computation</keyword><keyword weight="0.49467">Authentication</keyword><keyword weight="0.43814">Computer science</keyword><keyword weight="0.43629">Computer security</keyword><keyword weight="0.47479">Correctness</keyword><keyword weight="0.42998">Theoretical computer science</keyword><keyword weight="0.6008">Secure two-party computation</keyword><keyword weight="0.67014">Quantum Byzantine agreement</keyword><keyword weight="0.44527">Deterministic system (philosophy)</keyword><keyword weight="0.52318">Oblivious transfer</keyword><keyword weight="0.44779">Computation</keyword><keyword weight="0.4244">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>It has recently been shown that executions of authenticated Byzantine Agreement protocols in which more than a third of the parties are corrupted, cannot be composed concurrently, in parallel, or even sequentially (where the latter is true for deterministic protocols). This result puts into question any usage of authenticated Byzantine agreement in a setting where many executions take place. In particular, this is true for the whole body of work of secure multi-party protocols in the case that 1/3 or more of the parties are corrupted. Such protocols strongly rely on the extensive use of a broadcast channel, which is in turn realized using authenticated Byzantine Agreement. Essentially, this use of Byzantine Agreement cannot be eliminated since the standard definition of secure computation (for the case that less than 1/2 of the parties are corrupted) actually implies Byzantine Agreement. Moreover, it was accepted folklore that the use of a broadcast channel is essential for achieving secure multiparty computation, when 1/3 or more of the parties are corrupted.In this paper we show that this folklore is false. We mildly relax the definition of secure computation allowing abort, and show how this definition can be reached. The difference between our definition and previous ones is as follows. Previously, if one honest party aborted then it was required that all other honest parties also abort. Thus, the parties agree on whether or not the protocol execution terminated successfully or not. In our new definition, it is possible that some parties abort while others receive output. Thus, there is no agreement regarding the success of the protocol execution. We stress that in all other aspects, our definition remains the same. In particular, if an output is received it is guaranteed to have been computed correctly. The novelty of the new definition is in decoupling the issue of agreement from the central security issues of privacy and correctness in secure computation. As a result the lower bounds of Byzantine Agreement no longer apply to secure computation. Indeed, we prove that secure multi-party computation can be achieved for any number of corrupted parties and without a broadcast channel (or trusted preprocessing phase as required for running authenticated Byzantine Agreement). An important corollary of our result is the ability to obtain multi-party protocols that compose.</abstract></paper>