<paper id="1572167134"><title>An Abstract Machine for Fixed-Order Dynamically Stratified Programs</title><year>1996</year><authors><author org="Univ. at Stony Brook" id="2064107187">Konstantinos F. Sagonas</author><author org="Univ. at Stony Brook" id="2291248690">Terrance Swift</author><author org="Univ. at Stony Brook" id="2163362677">David Scott Warren</author></authors><n_citation>6</n_citation><doc_type>Conference</doc_type><references><reference>57903016</reference><reference>158383006</reference><reference>1544862482</reference><reference>1595761884</reference><reference>2024612361</reference><reference>2026433347</reference><reference>2031868932</reference><reference>2061565124</reference><reference>2070598037</reference><reference>2085609918</reference><reference>2111353076</reference><reference>2132574120</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-61511-3_98</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.48044">Programming language</keyword><keyword weight="0.5759">Deductive database</keyword><keyword weight="0.47205">Computer science</keyword><keyword weight="0.53586">Oracle</keyword><keyword weight="0.45659">Algorithm</keyword><keyword weight="0.47742">Theoretical computer science</keyword><keyword weight="0.63861">Logic programming</keyword><keyword weight="0.59196">Abstract machine</keyword><keyword weight="0.50235">Semantics</keyword><keyword weight="0.49146">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>It is known that a fixed computation rule, such as used in most logic programming systems, does not suffice for normal logic programs. For instance, SLS resolution, which evaluates programs according to the well-founded semantics, makes use of an oracle to determine the next literal to select in [5], and of ideal parallelism in [8]. Given these limits, it is natural to define a subclass of normal programs for which a fixed computation rule is adequate. This class, left-to-right dynamically stratified programs, properly includes other stratification classes.</abstract></paper>