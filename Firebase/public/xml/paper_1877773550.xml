<paper id="1877773550"><title>An automated approach for identifying potential vulnerabilities in software</title><year>1998</year><authors><author org="Reliable Software Technol. Corp., Sterling, VA, USA" id="2974298774">A.K. Ghosh</author><author org="" id="2974412700">T. O'Connor</author><author org="" id="2973247636">G. McGraw</author></authors><n_citation>86</n_citation><doc_type>Conference</doc_type><references><reference>1655226010</reference><reference>1813696046</reference><reference>2002934700</reference><reference>2159218872</reference></references><venue id="1163618098" type="C">IEEE Symposium on Security and Privacy</venue><doi>10.1109/SECPRI.1998.674827</doi><keywords><keyword weight="0.53497">Source code</keyword><keyword weight="0.6514">Software security assurance</keyword><keyword weight="0.45003">Computer security</keyword><keyword weight="0.44817">Computer science</keyword><keyword weight="0.66948">Software fault tolerance</keyword><keyword weight="0.5477">Software</keyword><keyword weight="0.59846">Secure coding</keyword><keyword weight="0.52912">Application software</keyword><keyword weight="0.60392">Software quality</keyword><keyword weight="0.61236">Fault injection</keyword></keywords><publisher>IEEE</publisher><abstract>The paper presents results from analyzing the vulnerability of security-critical software applications to malicious threats and anomalous events using an automated fault injection analysis approach. The work is based on the well understood premise that a large proportion of security violations result from errors in software source code and configuration. The methodology employs software fault injection to force anomalous program states during the execution of software and observes their corresponding effects on system security. If insecure behaviour is detected, the perturbed location that resulted in the violation is isolated for further analysis and possibly retrofitting with fault tolerant mechanisms.</abstract></paper>