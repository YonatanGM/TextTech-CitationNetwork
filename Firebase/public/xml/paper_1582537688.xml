<paper id="1582537688"><title>Specifying and Verifying a Decimal Representation in Java for Smart Cards</title><year>2002</year><authors><author org="University of Nijmegen" id="2985358457">Cees-Bart Breunesse</author><author org="University of Nijmegen" id="2105127320">Bart Jacobs</author><author org="University of Nijmegen" id="2160033024">Joachim van den Berg</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>1489990994</reference><reference>1512952371</reference><reference>1551782231</reference><reference>1578560741</reference><reference>1627776297</reference><reference>1659048632</reference><reference>1887681675</reference><reference>2094160561</reference><reference>2104506944</reference><reference>2112448067</reference><reference>2161825580</reference><reference>2164810907</reference><reference>2170898576</reference><reference>2510427943</reference><reference>2583032417</reference></references><venue id="1191172908" type="C">Algebraic Methodology and Software Technology</venue><doi>10.1007/3-540-45719-4_21</doi><keywords><keyword weight="0.51871">Specification language</keyword><keyword weight="0.5817">Decimal representation</keyword><keyword weight="0.46934">Programming language</keyword><keyword weight="0.44759">Computer science</keyword><keyword weight="0.50693">Correctness</keyword><keyword weight="0.50308">Smart card</keyword><keyword weight="0.43882">Theoretical computer science</keyword><keyword weight="0.60271">Java applet</keyword><keyword weight="0.65935">Java Modeling Language</keyword><keyword weight="0.55787">Java</keyword><keyword weight="0.58083">Decimal</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This article describes a case study concerning a component of a Java Purse applet developed by the smart card manufacturer Gemplus. This component is a representation of decimal numbers in Java. The decimal component is annotated with specifications consisting of invariants and pre- and postconditions, describing the functional behavior. These specifications are written in the specification language JML. After translation of the annotated source code to the theorem prover PVS, the correctness of these annotations is proved interactively.</abstract></paper>