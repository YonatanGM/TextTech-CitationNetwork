<paper id="1534612719"><title>Unified index for mobile object data and authorizations</title><year>2005</year><authors><author org="Rutgers University Newark NJ" id="2100792061">Vijayalakshmi Atluri</author><author org="Rutgers University Newark NJ" id="2662773967">Qi Guo</author></authors><n_citation>15</n_citation><doc_type>Conference</doc_type><references><reference>20214369</reference><reference>99053925</reference><reference>1513437747</reference><reference>1536480069</reference><reference>1602465821</reference><reference>1905489744</reference><reference>1979207937</reference><reference>1982042357</reference><reference>1995261198</reference><reference>1996660370</reference><reference>2009963558</reference><reference>2012389722</reference><reference>2027450468</reference><reference>2029243045</reference><reference>2043148321</reference><reference>2048774463</reference><reference>2099397891</reference><reference>2101429492</reference><reference>2121110504</reference><reference>2126818112</reference><reference>2129217297</reference><reference>2141394101</reference><reference>2151135734</reference><reference>2152809170</reference><reference>2158713459</reference></references><venue id="1183679797" type="C">European Symposium on Research in Computer Security</venue><doi>10.1007/11555827_6</doi><keywords><keyword weight="0.57271">Mobile computing</keyword><keyword weight="0.63807">Computer access control</keyword><keyword weight="0.53221">Identifier</keyword><keyword weight="0.57036">Access time</keyword><keyword weight="0.45695">Computer security</keyword><keyword weight="0.45999">Computer science</keyword><keyword weight="0.59512">Access control list</keyword><keyword weight="0.57895">Access control</keyword><keyword weight="0.53903">Security policy</keyword><keyword weight="0.5244">Mobile broadband</keyword><keyword weight="0.45868">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Often, enforcing security incurs overhead, and as a result may degrade the performance of a system. In this paper, we attempt to address this problem in the context of enforcing access control policies in a mobile data object environment. There are a number of applications that call for fine-grained specification of security policies in guaranteeing the confidentiality of data or privacy of individuals in a mobile environment. In particular, the security policies state the rules for providing controlled access to the mobile user profiles, to their current location and movement trajectories, to mobile resources, and stationary resources based on the mobile user location. Either a subject or an object in an authorization specification can be a moving object. The access requests in such an environment can typically be based on past, present and future status of the moving objects. To effectively serve such access requests, one must efficiently organize the mobile objects as well as :[155],"implementation of authorizations as access control list, capability list or access matrix is suitable for traditional data, it is not suitable to search mobile object authorizations as they are based on spatial and temporal attributes of subjects and objects, rather than subject and object identifiers. When a subject issues an access request, the system must first retrieve the relevant objects from the moving object database, and then verify whether there exists an authorization that allows the subject to access these objects. Since both the moving objects and authorizations are spatiotemporal in nature, for efficient processing of access requests, it is essential that they both be organized using some index structures. As a result, processing an access request requires searching two indexes â€“ one, the moving object index, and the other, the authorization index. To improve the response time of access requests, in this paper, we propose a unified index structure, called STPR-tree to index both moving objects and authorizations that govern access to them. As a result of the unified index, access requests can be processed in one pass, thereby improving the response time. Note that current access control systems do not use any index for authorizations; our work is a step in this direction. We show how the STPR-tree can be constructed and maintained, and provide algorithms to process access requests.</abstract></paper>