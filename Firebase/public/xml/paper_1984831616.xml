<paper id="1984831616"><title>A Proof System for Communicating Sequential Processes</title><year>1980</year><authors><author org="Faculty of Economics, University of Rotterdam, P.O. Box 1738, 3000 DR Rotterdam, The Netherlands" id="2114425188">Krzysztof R. Apt</author><author org="Department of Computer Science, Technion-Israel Institute of Technology, Haifa, Israel and Department of Computer Science, University of Utrecht, P.O. Box 80.002, 3508 TA Utrecht, The Netherlands" id="20141768">Nissim Francez</author><author org="Department of Computer Science, Technion-Israel Institute of Technology, Haifa, Israel and Department of Computer Science, University of Utrecht, P.O. Box 80.002, 3508 TA Utrecht, The Netherlands" id="2147389281">Willem P. de Roever</author></authors><n_citation>292</n_citation><doc_type>Journal</doc_type><references><reference>1523580547</reference><reference>1964727056</reference><reference>1965662337</reference><reference>1967267655</reference><reference>2017403884</reference><reference>2067882404</reference><reference>2110425399</reference><reference>2132334337</reference><reference>2144738461</reference><reference>2152957765</reference><reference>2296352387</reference><reference>2340595401</reference></references><venue id="41449414" type="J">ACM Transactions on Programming Languages and Systems</venue><doi>10.1145/357103.357110</doi><keywords><keyword weight="0.45612">Synchronization</keyword><keyword weight="0.45568">Programming language</keyword><keyword weight="0.47609">Axiom</keyword><keyword weight="0.45499">Computer science</keyword><keyword weight="0.59752">Correctness</keyword><keyword weight="0.57314">Deadlock</keyword><keyword weight="0.55758">Communicating sequential processes</keyword><keyword weight="0.46313">Theoretical computer science</keyword><keyword weight="0.54955">Mathematical proof</keyword><keyword weight="0.48488">Greatest common divisor</keyword><keyword weight="0.53011">Message passing</keyword></keywords><publisher>ACM</publisher><abstract>An axiomatic proof system is presented for proving partial correctness and absence of deadlock (and failure) of communicating sequential processes. The key (meta) rule introduces cooperation between proofs, a new concept needed to deal with proofs about synchronization by message passing. CSPu0027s new convention for distributed termination of loops is dealt with. Applications of the method involve correctness proofs for two algorithms, one for distributed partitioning of sets, the other for distributed computation of the greatest common divisor of n numbers.</abstract></paper>