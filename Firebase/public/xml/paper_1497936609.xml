<paper id="1497936609"><title>Computation of Non-Ground Disjunctive Well-Founded Semantics with Constraint Logic Programming</title><year>1996</year><authors><author org="University of Koblenz" id="2095738856">JÃ¼rgen Dix</author><author org="University of Koblenz" id="2224863016">Frieder Stolzenburg</author></authors><n_citation>14</n_citation><doc_type /><references><reference>30202435</reference><reference>1486205590</reference><reference>1518971173</reference><reference>1553202793</reference><reference>1602519158</reference><reference>1602567617</reference><reference>1648841277</reference><reference>1830798555</reference><reference>1885514099</reference><reference>1968516603</reference><reference>1995876561</reference><reference>2026433347</reference><reference>2033074970</reference><reference>2036191870</reference><reference>2038467301</reference><reference>2063727779</reference><reference>2070598037</reference><reference>2138706506</reference></references><venue id="" type="">NMELP '96 Selected papers from the Non-Monotonic Extensions of Logic Programming</venue><doi>10.1007/BFb0023808</doi><keywords><keyword weight="0.58833">Computational logic</keyword><keyword weight="0.58954">Operational semantics</keyword><keyword weight="0.59385">Horn clause</keyword><keyword weight="0.6072">Axiomatic semantics</keyword><keyword weight="0.4626">Programming language</keyword><keyword weight="0.65709">Stable model semantics</keyword><keyword weight="0.59221">Logic programming</keyword><keyword weight="0.60058">Game semantics</keyword><keyword weight="0.61693">Well-founded semantics</keyword><keyword weight="0.40368">Mathematics</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Impressive work has been done in the last years concerning the meaning of negation and disjunction in logic programs, but most of this research concentrated on propositional programs only. While it suffices to consider the propositional case for investigating general properties and the overall behaviour of a semantics, we feel that for real applications and for computational purposes an implementation should be able to handle first-order programs without grounding them.</abstract></paper>