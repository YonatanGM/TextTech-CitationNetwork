<paper id="109911914"><title>User Leadership in the Systems Development Life Cycle: A Contingency Model</title><year>1985</year><authors><author org="" id="2703461327">Charles R. Franz</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>57683776</reference><reference>1528991045</reference><reference>1574807592</reference><reference>1583141478</reference><reference>1601751799</reference><reference>1939114018</reference><reference>2024750636</reference><reference>2031320978</reference><reference>2059986802</reference><reference>2066900729</reference></references><venue id="9954729" type="J">Journal of Management Information Systems</venue><doi>10.1080/07421222.1985.11517727</doi><keywords><keyword weight="0.58524">Information system</keyword><keyword weight="0.43529">Computer science</keyword><keyword weight="0.47629">Knowledge management</keyword><keyword weight="0.47839">Situational ethics</keyword><keyword weight="0.59982">Systems development life cycle</keyword><keyword weight="0.57378">Contingency theory</keyword><keyword weight="0.0">System development</keyword></keywords><publisher>Routledge</publisher><abstract>The development of an information system requires four main activities that must be carried out during the systems development life cycle (sdlc): feasibility study /analysis, design, technical construction, and implementation. This paper ex- amines the conditions under which information systems (is) specialists and users should assume responsibility and decision-making authority during the sdlc. A contingency model is presented that recommends the type of responsibility and authority roles that users should assume during the sdlc to minimize the risk and uncertainty inherent in developing computer-based systems. The contingency model developed in this paper builds upon the situational charac- teristics of information system complexity, is department experience, and user past experience in system development. According to the model, certain system factors and systems development experiences require that the user become involved by exercising heavy responsibility and authority roles, while other situational factors suggest light user leadership. The concept of sdlc leadership as responsibility and authority is developed and its meaning for users during each state of the sdlc is discussed.</abstract></paper>