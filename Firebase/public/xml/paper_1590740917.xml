<paper id="1590740917"><title>Aspect-Oriented Programming of Sparse Matrix Code</title><year>1997</year><authors><author org="Xerox Palo Alto Research Center#TAB#" id="2478528530">John Irwin</author><author org="Xerox Palo Alto Research Center#TAB#" id="2987249012">Jean-Marc Loingtier</author><author org="Xerox Palo Alto Research Center#TAB#" id="2125747468">John R. Gilbert</author><author org="Xerox Palo Alto Research Center#TAB#" id="562619066">Gregor Kiczales</author><author org="Xerox Palo Alto Research Center#TAB#" id="1763576553">John Lamping</author><author org="Xerox Palo Alto Research Center#TAB#" id="2577906926">Anurag Mendhekar</author><author org="Xerox Palo Alto Research Center#TAB#" id="46628356">Tatiana Shpeisman</author></authors><n_citation>95</n_citation><doc_type>Conference</doc_type><references><reference>1506342804</reference><reference>2007259720</reference><reference>2025043404</reference><reference>2038205735</reference><reference>2093992309</reference><reference>2138363365</reference><reference>2147542748</reference></references><venue id="1192015008" type="C">Conference on Scientific Computing</venue><doi>10.1007/3-540-63827-X_68</doi><keywords><keyword weight="0.46932">Programming language</keyword><keyword weight="0.49703">External Data Representation</keyword><keyword weight="0.5415">Object-oriented programming</keyword><keyword weight="0.53815">Functional programming</keyword><keyword weight="0.5685">Aspect-oriented programming</keyword><keyword weight="0.4641">Computer science</keyword><keyword weight="0.60492">Separation of concerns</keyword><keyword weight="0.52063">Abstract syntax tree</keyword><keyword weight="0.46614">Theoretical computer science</keyword><keyword weight="0.48077">Pivot element</keyword><keyword weight="0.54784">Sparse matrix</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The expressiveness conferred by high-level and object-oriented languages is often impaired by concerns that cross-cut a programu0027s basic functionality. Execution time, data representation, and numerical stability are three such concerns that are of great interest to numerical analysts. Using aspect-oriented programming we have created AML, a system for sparse matrix computation that deals with these concerns separately and explicitly while preserving the expressiveness of the original functional language. The resulting code maintains the efficiency of highly tuned low-level code, yet is ten times shorter.</abstract></paper>