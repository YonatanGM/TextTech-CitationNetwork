<paper id="1977647614"><title>Schema evolution in object-oriented database systems</title><year>1989</year><authors><author org="Univ. de Grenoble, Grenoble, France#TAB#" id="2974152914">G. T. Nguyen</author><author org="Univ. de Grenoble, Grenoble, France#TAB#" id="2306283991">D. Rieu</author></authors><n_citation>88</n_citation><doc_type>Conference</doc_type><references><reference>21236608</reference><reference>77209766</reference><reference>1512552654</reference><reference>1565238329</reference><reference>1770006921</reference><reference>1982731949</reference><reference>1992847198</reference><reference>2005318605</reference><reference>2010376553</reference><reference>2027657506</reference><reference>2036862988</reference><reference>2041042883</reference><reference>2076244711</reference><reference>2082514774</reference><reference>2089365354</reference><reference>2095436501</reference><reference>2105153803</reference><reference>2138261202</reference><reference>2140157327</reference><reference>2145452360</reference><reference>2163832616</reference><reference>2169842681</reference><reference>2215315499</reference></references><venue id="1168542559" type="C">Data and Knowledge Engineering</venue><doi>10.1016/0169-023X(89)90004-9</doi><keywords><keyword weight="0.45654">Data mining</keyword><keyword weight="0.53077">Knowledge representation and reasoning</keyword><keyword weight="0.56238">Object-oriented programming</keyword><keyword weight="0.47024">Computer science</keyword><keyword weight="0.50882">Systems design</keyword><keyword weight="0.52631">Knowledge base</keyword><keyword weight="0.61618">Schema evolution</keyword><keyword weight="0.48468">Schema (psychology)</keyword><keyword weight="0.49693">Modularity</keyword><keyword weight="0.45497">Database</keyword><keyword weight="0.50694">Debugging</keyword></keywords><publisher>Elsevier Science Publishers B. V.</publisher><abstract>Object-oriented database systems ususally exhibit specific advantages over traditional database management systems and programming languages. Among them stand the ease of writing, maintaining and debugging application programs, code modularity, inheritance, persistency and sharability. Of particular interest to software engineering and computer-aided design applications is also the ability to dynamically change the object definitions and the opportunity to define incrementally composite objects. This paper gives an overview of current research efforts directed towards evolving data definitions in object-oriented database systems. The emphasis is on their ability to support two complementary aspects: supporting evolving schemas, and propagating the changes on the object :[100],"projects are analyzed: Cadb, Encore, GemStone, Orion and Sherpa. Current results indicate that if most of them provide schema evolution facilities, they seldom support automatic propagation :[127],"proposal is described that enables Sherpa to fully support the propagation of changes and the dynamic classification of the instances whose class definitions are modified. This approach is an extension of techniques used in artificial intelligence for knowledge representation. It extends previous classification mechanisms with a dynamic capability which adequately supports evolving class definitions and instances.</abstract></paper>