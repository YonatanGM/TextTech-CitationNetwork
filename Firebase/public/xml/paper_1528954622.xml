<paper id="1528954622"><title>Knowledge-Based Situated Agents Among Us: A Preliminary Report</title><year>1996</year><authors><author org="Universidade Nova de Lisboa,#TAB#" id="2153227821">Renwei Li</author><author org="Universidade Nova de Lisboa,#TAB#" id="2104852094">Luís Moniz Pereira</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>84356328</reference><reference>175258934</reference><reference>1515238411</reference><reference>1553075743</reference><reference>1555877973</reference><reference>1699699942</reference><reference>2025249178</reference><reference>2056420056</reference><reference>2080833987</reference><reference>2108309071</reference><reference>2149420462</reference><reference>2168692628</reference></references><venue id="1195874795" type="C">Intelligent Agents</venue><doi>10.1007/BFb0013598</doi><keywords><keyword weight="0.55276">Specification language</keyword><keyword weight="0.54036">Situated</keyword><keyword weight="0.44446">Programming language</keyword><keyword weight="0.44874">Computer science</keyword><keyword weight="0.43594">Knowledge management</keyword><keyword weight="0.45293">Human–computer interaction</keyword><keyword weight="0.5088">Interpreter</keyword><keyword weight="0.50276">Non-monotonic logic</keyword><keyword weight="0.50903">Knowledge base</keyword><keyword weight="0.52088">Logic programming</keyword><keyword weight="0.46226">Proactivity</keyword><keyword weight="0.52164">Reasoning system</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A situated agent is a computer-based system that is embedded in a real-time world or environment, is ascribed with some mental states, and may enjoy a disconcerting variety of properties such as proactivity, reactivity, etc. In this paper we present the design of a class of knowledge-based situated agents and an agent specification language, called SICLE. After the SICLE interpreter receives a SICLE specification of an agentu0027s initial knowledge base, atomic actions (their conditional effects and executability conditions), initial intentions and some predefined optimal plans, the agent for this specification is born and becomes active. The agent will always try to realize all its intentions at its best and may produce new intentions in the real-time. The SICLE interpreter employs a non-monotonic reasoning system, namely an extended logic programming system, to model the real-world, to record the past history of the environment, and to reify the underlying action theory. For those situations which may frequently arise, the user can provide optimal plans to achieve timely response. The SICLE language and its associated architecture and interpreter was designed based on an extended logic programming system and action theory. A simple example of commuter between two cities is used to present our approach.</abstract></paper>