<paper id="1560443002"><title>Stepwise Refinement and Concurrency: A Small Exercise</title><year>1989</year><authors><author org="Philips Research Laboratory" id="2974108541">E. Pascal Gribomont</author></authors><n_citation>5</n_citation><doc_type>Conference</doc_type><references><reference>1511589634</reference><reference>1514985742</reference><reference>1545046703</reference><reference>1857327297</reference><reference>1964727056</reference><reference>1971321632</reference><reference>1976324339</reference><reference>1983409972</reference><reference>1987120621</reference><reference>1994350081</reference><reference>2000302396</reference><reference>2003967246</reference><reference>2005945927</reference><reference>2005952505</reference><reference>2011444209</reference><reference>2014375692</reference><reference>2018930611</reference><reference>2038814435</reference><reference>2043100293</reference><reference>2047051012</reference><reference>2059229220</reference><reference>2065705928</reference><reference>2087713039</reference><reference>2103953153</reference><reference>2105673930</reference><reference>2110425399</reference><reference>2111706174</reference><reference>2113090411</reference><reference>2123464354</reference><reference>2132661148</reference><reference>2147543351</reference><reference>2154004999</reference><reference>2158525816</reference><reference>2169333969</reference></references><venue id="1159310735" type="C">Mathematics of Program Construction</venue><doi>10.1007/3-540-51305-1_12</doi><keywords><keyword weight="0.46774">Programming language</keyword><keyword weight="0.0">Correctness proofs</keyword><keyword weight="0.4577">Computer science</keyword><keyword weight="0.59499">Concurrency</keyword><keyword weight="0.43287">Top-down and bottom-up design</keyword><keyword weight="0.46151">Theoretical computer science</keyword><keyword weight="0.56882">Mutual exclusion</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A simple methodology for the design of concurrent programs is illustrated by a short example. This methodology formalizes the classical concept of “stepwise refinement”.</abstract></paper>