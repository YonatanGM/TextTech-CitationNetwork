<paper id="1566454408"><title>Untangling Unstructured Cyclic Flows â€“ A Solution Based on Continuations</title><year>2004</year><authors><author org="IBM Zurich Research Laboratory," id="2132947874">Jana Koehler</author><author org="IBM Zurich Research Laboratory," id="2148184573">Rainer Hauser</author></authors><n_citation>41</n_citation><doc_type /><references><reference>91558953</reference><reference>1491178396</reference><reference>1506868454</reference><reference>1530632793</reference><reference>1995405030</reference><reference>1998017916</reference><reference>2079430385</reference><reference>2097145414</reference><reference>2102075452</reference><reference>2156268797</reference><reference>2157527989</reference></references><venue id="" type="">OTM Confederated International Conferences "On the Move to Meaningful Internet Systems"</venue><doi>10.1007/978-3-540-30468-5_10</doi><keywords><keyword weight="0.6107">Business process</keyword><keyword weight="0.46786">Computer science</keyword><keyword weight="0.51096">Continuation</keyword><keyword weight="0.46974">Theoretical computer science</keyword><keyword weight="0.57964">Compiler construction</keyword><keyword weight="0.56455">Business Process Execution Language</keyword><keyword weight="0.64161">Business process modeling</keyword><keyword weight="0.56902">Workflow</keyword><keyword weight="0.47512">Semantics</keyword><keyword weight="0.52046">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a novel transformation method that allows us to map unstructured cyclic business process models to functionally equivalent workflow specifications that support structured cycles only. Our solution is based on a continuation semantics, which we developed for the graphical representation of a process model. By using a rule-based transformation method originally developed in compiler theory, we can untangle the unstructured flow while solving a set of abstract continuation equations. The generated workflow code can be optimized by controlling the order in which the transformation rules are applied.</abstract></paper>