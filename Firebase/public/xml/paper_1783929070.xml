<paper id="1783929070"><title>Verification of Object Oriented Programs Using Class Invariants</title><year>2000</year><authors><author org="Eindhoven University of Technology" id="2986706056">Kees Huizing</author><author org="Eindhoven University of Technology" id="2168038073">Ruurd Kuiper</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>101802158</reference><reference>1507766766</reference><reference>1533109738</reference><reference>1533592581</reference><reference>1583769822</reference><reference>1918806322</reference><reference>1995008247</reference><reference>2111706174</reference><reference>2161825580</reference><reference>2167500728</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-46428-X_15</doi><keywords><keyword weight="0.52531">Pointer (computer programming)</keyword><keyword weight="0.50004">Data domain</keyword><keyword weight="0.47121">Programming language</keyword><keyword weight="0.53521">Object-oriented programming</keyword><keyword weight="0.45515">Computer science</keyword><keyword weight="0.46381">Theoretical computer science</keyword><keyword weight="0.61029">Class hierarchy</keyword><keyword weight="0.58899">Mathematical proof</keyword><keyword weight="0.47106">Invariant (mathematics)</keyword><keyword weight="0.53867">Strong and weak typing</keyword></keywords><publisher>Springer</publisher><abstract>A proof system is presented for the verification and derivation of object oriented programs with as main features strong typing, dynamic binding, and inheritance. The proof system is inspired on Meyeru0027s system of class invariants [12] and remedies its unsoundness, which is already recognized by Meyer. Dynamic binding is treated in a flexible way: when throughout the class hierarchy overriding methods respect the preand postconditions of the overridden methods, very simple proof rules for method calls suffice; more powerful proof rules are supplied for cases where one cannot or does not want to follow this proof system is :[95],"complete relative to proofs for properties of pointers and the data domain.</abstract></paper>