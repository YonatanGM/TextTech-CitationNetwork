<paper id="61565270"><title>An approach to parameterizing web service flows</title><year>2005</year><authors><author org="IAAS, Universität Stuttgart, Germany" id="1970120478">Dimka Karastoyanova</author><author org="IAAS, Universität Stuttgart, Germany" id="2127483189">Frank Leymann</author><author org="Computer Science Department, Technische Universität Darmstadt, Germany#TAB#" id="427541198">Alejandro Buchmann</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>1506229097</reference><reference>1596716486</reference><reference>2121545043</reference></references><venue id="1158589615" type="C">International Conference on Service Oriented Computing</venue><doi>10.1007/11596141_45</doi><keywords><keyword weight="0.0">Process definition</keyword><keyword weight="0.45115">Data mining</keyword><keyword weight="0.46457">Computer science</keyword><keyword weight="0.45349">Reuse</keyword><keyword weight="0.5077">Process modeling</keyword><keyword weight="0.5522">Business Process Execution Language</keyword><keyword weight="0.0">Service oriented</keyword><keyword weight="0.56263">Web service</keyword><keyword weight="0.48372">Metamodeling</keyword><keyword weight="0.49636">Reusability</keyword><keyword weight="0.4534">Database</keyword><keyword weight="0.46513">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The flexibility and reusability of Web Service flows (WS-flows) are limited especially by the fact that portType and operation names are hard-coded in the process definition. In this paper we argue that through parameterization and substitution WS-flows flexibility can be improved, while reusability is enhanced. We introduce a meta-model extension to enable run time evaluation of parameter values and thus discard the need to predict any possible partner service types during process modeling. The extension enables also run time changes in portType values. We show how the approach can be mapped to BPEL. We discuss prototypical implementation for the extended functionality and present conclusions and ideas for future work.</abstract></paper>