<paper id="1501726193"><title>Revision by Communication</title><year>1995</year><authors><author org="Delft University of Technology" id="2033214668">Cees Witteveen</author><author org="Utrecht University" id="2106214946">Wiebe van der Hoek</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>68567760</reference><reference>111873265</reference><reference>1559284681</reference><reference>1563917596</reference><reference>1585951339</reference><reference>1599825908</reference><reference>1874801995</reference><reference>1976303542</reference><reference>2014117644</reference><reference>2022740624</reference><reference>2057095065</reference><reference>2061967591</reference><reference>2063499502</reference><reference>2091849010</reference></references><venue id="1201110412" type="C">International Conference on Logic Programming</venue><doi>10.1007/3-540-59487-6_14</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.47058">Computer science</keyword><keyword weight="0.42557">Algorithm</keyword><keyword weight="0.45911">Theoretical computer science</keyword><keyword weight="0.50936">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We deal with the problem of revising logic programs that, according to some non-monotonic semantics, do not have an acceptable model. We propose to study such revisions in a framework where a number of semantical agents is distinguished, each agent associated with a different semantics but all agents interpreting the same program. If an agent cannot find an acceptable model for the program, he has to perform program revision. For logic programs, the different agents can be partially ordered by inferential strength. We propose a revision framework where an agent may consult his weaker colleagues, adds the information they can infer to the program and tries to find an acceptable model for the expanded program. In this paper we will concentrate on the kind of information needed to find successful revisions of programs. We point out some parameters along which our framework can be analyzed and suggest some further research.</abstract></paper>