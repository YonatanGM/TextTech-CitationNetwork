<paper id="1540891592"><title>Implementational Issues for Verifying RISC-Pipeline Conflicts in HOL</title><year>1994</year><authors><author org="University of Karlsruhe#TAB#" id="1901381520">Sofi√®ne Tahar</author><author org="Forschungszentrum Informatik" id="2174301642">Ramayya Kumar</author></authors><n_citation>6</n_citation><doc_type>Conference</doc_type><references><reference>1543469746</reference><reference>1555915743</reference><reference>1982619477</reference><reference>2095572512</reference><reference>2106188359</reference><reference>2119623415</reference></references><venue id="2538859667" type="C">Theorem Proving in Higher Order Logics</venue><doi>10.1007/3-540-58450-1_58</doi><keywords><keyword weight="0.55924">HOL</keyword><keyword weight="0.432">Pipeline transport</keyword><keyword weight="0.50083">Constructive proof</keyword><keyword weight="0.47538">Programming language</keyword><keyword weight="0.46554">Computer science</keyword><keyword weight="0.43269">Algorithm</keyword><keyword weight="0.45574">Theoretical computer science</keyword><keyword weight="0.5688">Reduced instruction set computing</keyword><keyword weight="0.52536">Abstraction layer</keyword><keyword weight="0.45912">Hierarchical database model</keyword><keyword weight="0.54025">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We outline a general methodology for the formal verification of instruction pipelines in RISC cores. The different kinds of conflicts, i. e. resource, data and control conflicts, that can occur due to the simultaneous execution of the instructions in the pipeline have been formally specified in HOL. Based on a hierarchical model for RISC processors, we have developed a constructive proof methodology, i.e. when conflicts at a specific abstraction level are detected, the conditions under which these occur are generated and explicitly output to the designer, thus easing their removal. All implemented specifications and tactics are kept general, so that the implementation could be used for a wide range of RISC cores. In this paper, the described formalization and proof strategies are illustrated via the DLX RISC processor.</abstract></paper>