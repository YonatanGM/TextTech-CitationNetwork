<paper id="1559018605"><title>Role Hierarchies and Constraints for Lattice-Based Access Controls</title><year>1996</year><authors><author org="George Mason University" id="1996714504">Ravi S. Sandhu</author></authors><n_citation>170</n_citation><doc_type>Conference</doc_type><references><reference>1543439672</reference><reference>2007999111</reference><reference>2140618551</reference><reference>2152505375</reference><reference>2166602595</reference></references><venue id="1183679797" type="C">European Symposium on Research in Computer Security</venue><doi>10.1007/3-540-61770-1_28</doi><keywords><keyword weight="0.35646">Lattice (order)</keyword><keyword weight="0.43664">Computer science</keyword><keyword weight="0.43914">Computer security</keyword><keyword weight="0.52139">Covert channel</keyword><keyword weight="0.69287">Role-based access control</keyword><keyword weight="0.62712">Role hierarchy</keyword><keyword weight="0.52081">Access control</keyword><keyword weight="0.45823">Hierarchy</keyword><keyword weight="0.43805">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Role-based access control (RBAC) is a promising alternative to traditional discretionary and mandatory access controls. In RBAC permissions are associated with roles, and users are made members of appropriate roles thereby acquiring the rolesu0027 permissions. In this paper we formally show that lattice-based mandatory access controls can be enforced by appropriate configuration of RBAC components. Our constructions demonstrate that role hierarchies and constraints are required to effectively achieve this result. We show that variations of the lattice-based *-property, such as write-up (liberal *-property) and no-write-up (strict *-property), can be easily accommodated in RBAC. Our results attest to the flexibility of RBAC and its ability to accommodate different policies by suitable configuration of role hierarchies and constraints.</abstract></paper>