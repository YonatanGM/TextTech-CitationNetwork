<paper id="1602021644"><title>Which Life Cycle--Work System, Information System, or Software?</title><year>2001</year><authors><author org="Univ. of San Francisco#TAB#" id="1979115484">Steven Alter</author></authors><n_citation>39</n_citation><doc_type>Journal</doc_type><references><reference>127158069</reference><reference>174358014</reference><reference>266742865</reference><reference>1530063253</reference><reference>1532520187</reference><reference>1590327229</reference><reference>1604229319</reference><reference>1737826015</reference><reference>1844831399</reference><reference>1963624584</reference><reference>2053931398</reference><reference>2063129520</reference><reference>2170021374</reference><reference>2171748935</reference></references><venue id="7020383" type="J">Communications of The Ais</venue><doi>10.17705/1CAIS.00717</doi><keywords><keyword weight="0.60802">Information system</keyword><keyword weight="0.61074">Management information systems</keyword><keyword weight="0.56152">Work systems</keyword><keyword weight="0.49547">GRASP</keyword><keyword weight="0.44356">Normative</keyword><keyword weight="0.47079">Knowledge management</keyword><keyword weight="0.48931">Software</keyword><keyword weight="0.59076">Executive information system</keyword><keyword weight="0.41581">Engineering</keyword></keywords><publisher>Association for Information Systems</publisher><abstract>This article presents the work system life cycle (WSLC) model, according to which a work system, an information system, or a software product passes through one or more iterations of four phases: initiation, development, implementation, and operation and maintenance. Although this descriptive model is both clear enough to understand readily and specific enough to apply easily, it encompasses a variety of other models commonly used to describe information system life cycles, organizational change processes, projects, and the life cycles of software products. The explicit inclusion of both an operation and maintenance phase and iterations allows it to cover both continuous and discontinuous change. This article explains the need for this type of model and shows how it spans more than a dozen descriptive and normative models that appear in the IS literature. The WSLC model could help bridge the communication gap between business and IT professionals, could help both do their own system-related work, and could help students grasp the broad alternatives for building and modifying systems. Comparison of the WSLC phases with the phases of other models shows that many of those models might be misleading to people who are not primed to understand why their goals and assumptions are quite different. Both</abstract></paper>