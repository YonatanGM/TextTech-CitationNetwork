<paper id="1523442991"><title>Combining Partial Order Reductions with On-the-fly Model-Checking</title><year>1994</year><authors><author org="AT&amp;T Bell Lab.#TAB#" id="127429266">Doron Peled</author></authors><n_citation>257</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>1528441743</reference><reference>1540501475</reference><reference>1563242841</reference><reference>1934074768</reference><reference>1986895439</reference><reference>1989877393</reference><reference>1990161286</reference><reference>1991956281</reference><reference>2001817854</reference><reference>2012935476</reference><reference>2016300863</reference><reference>2021711161</reference><reference>2034410903</reference><reference>2073689993</reference><reference>2086147982</reference><reference>2090398333</reference><reference>2117189826</reference><reference>2129335898</reference><reference>2144362636</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-58179-0_69</doi><keywords><keyword weight="0.50748">Dependency relation</keyword><keyword weight="0.58039">Model checking</keyword><keyword weight="0.47102">Negation</keyword><keyword weight="0.43927">Computer science</keyword><keyword weight="0.50937">Automaton</keyword><keyword weight="0.46071">Algorithm</keyword><keyword weight="0.46052">Theoretical computer science</keyword><keyword weight="0.66195">Partial order reduction</keyword><keyword weight="0.52786">Temporal logic</keyword><keyword weight="0.5496">Propositional variable</keyword><keyword weight="0.64532">BÃ¼chi automaton</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Partial order model-checking is an approach to reduce time and memory in model-checking concurrent programs. On-the-fly model-checking is a technique to eliminate part of the search by intersecting an automaton representing the (negation of the) checked property with the state during its generation. We prove conditions under which these two methods can be combined in order to gain reduction from both. An extension of the model-checker SPIN, which implements this combination, is studied, showing substantial reduction over traditional search, not only in the number of reachable states, but directly in the amount of memory and time used. We also describe how to apply partial-order model-checking under given fairness assumptions.</abstract></paper>