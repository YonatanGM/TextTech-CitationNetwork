<paper id="1584216871"><title>A Formal Framework for the Analysis of Recursive-Parallel Programs</title><year>1997</year><authors><author org="Univ. Rennes I" id="342308072">Olga Kouchnarenko</author><author org="Lab. Spécification &amp; Vérification" id="1988141938">Ph. Schnoebelen</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1578992643</reference><reference>2015713033</reference><reference>2098023243</reference><reference>2912614885</reference></references><venue id="2757151199" type="C">Parallel Computing Technologies</venue><doi>10.1007/3-540-63371-5_6</doi><keywords><keyword weight="0.48282">Programming language</keyword><keyword weight="0.47689">Computer science</keyword><keyword weight="0.55628">Concurrency</keyword><keyword weight="0.48576">Synchronizing</keyword><keyword weight="0.47718">Theoretical computer science</keyword><keyword weight="0.54906">Recursion</keyword><keyword weight="0.0">Semantics of logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>RP programs are imperative programs with parallelism and recursion and only a limited way of synchronizing parallel processes. The formal framework we propose here combines (1) a formal operational model of abstract programs (or RP schemes), (2) a set of decision methods for the analysis of RP schemes, (3) a formal operational model for the interpreted programs, and (4) translation results stating how some behavioural properties of the concrete programs can be correctly checked on the corresponding scheme.</abstract></paper>