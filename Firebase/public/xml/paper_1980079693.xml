<paper id="1980079693"><title>Requirements-driven design of autonomic application software</title><year>2006</year><authors><author org="University of Toronto,#TAB#" id="110093395">Alexei Lapouchnian</author><author org="University of Toronto,#TAB#" id="2145198186">Yijun Yu</author><author org="University of Toronto,#TAB#" id="2138229616">Sotirios Liaskos</author><author org="University of Toronto,#TAB#" id="2161153869">John Mylopoulos</author></authors><n_citation>90</n_citation><doc_type>Conference</doc_type><references><reference>1543823774</reference><reference>1557686760</reference><reference>1608057971</reference><reference>1624528677</reference><reference>1859760514</reference><reference>1990911977</reference><reference>2017739343</reference><reference>2096266868</reference><reference>2115044062</reference><reference>2122067742</reference><reference>2138876988</reference><reference>2157269301</reference><reference>2165911035</reference><reference>2166099324</reference><reference>2301605390</reference><reference>2611876927</reference></references><venue id="1151131449" type="C">Computer Science and Software Engineering</venue><doi>10.1145/1188966.1188976</doi><keywords><keyword weight="0.68218">Autonomic computing</keyword><keyword weight="0.47914">Software engineering</keyword><keyword weight="0.46328">Computer science</keyword><keyword weight="0.4478">Real-time computing</keyword><keyword weight="0.64147">Software development process</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.64467">Software maintenance</keyword><keyword weight="0.58505">Application software</keyword><keyword weight="0.44822">Machine learning</keyword></keywords><publisher>IBM Corp.</publisher><abstract>Autonomic computing systems reduce software maintenance costs and management complexity by taking on the responsibility for their configuration, optimization, healing, and protection. These tasks are accomplished by switching at runtime to a different system behaviour - the one that is more efficient, more secure, more stable, etc. - while still fulfilling the main purpose of the system. Thus, identifying the objectives of the system, analyzing alternative ways of how these objectives can be met, and designing a system that supports all or some of these alternative behaviours is a promising way to develop autonomic systems. This paper proposes the use of requirements goal models as a foundation for such software development process and demonstrates this on an example.</abstract></paper>