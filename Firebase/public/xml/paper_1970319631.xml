<paper id="1970319631"><title>An algorithm for approximate closest-point queries</title><year>1994</year><authors><author org="AT&amp;T Bell Laboratories, Murray Hill. New Jersey#TAB#" id="2291386233">Kenneth L. Clarkson</author></authors><n_citation>108</n_citation><doc_type>Conference</doc_type><references><reference>1581442026</reference><reference>1998512964</reference><reference>2031671531</reference><reference>2069291005</reference><reference>2070991879</reference><reference>2071866949</reference><reference>2122844470</reference><reference>2169351022</reference></references><venue id="1143959562" type="C">Symposium on Computational Geometry</venue><doi>10.1145/177424.177609</doi><keywords><keyword weight="0.43075">Discrete mathematics</keyword><keyword weight="0.43744">Data structure</keyword><keyword weight="0.4103">Dynamic programming</keyword><keyword weight="0.44357">Binary logarithm</keyword><keyword weight="0.43689">Combinatorics</keyword><keyword weight="0.42232">Polyhedron</keyword><keyword weight="0.39424">Algorithm</keyword><keyword weight="0.43426">Triangulation (social science)</keyword><keyword weight="0.44436">Geometric hashing</keyword><keyword weight="0.60301">Closest pair of points problem</keyword><keyword weight="0.38804">Mathematics</keyword><keyword weight="0.41703">Approximation error</keyword></keywords><publisher>ACM</publisher><abstract>This paper gives an algorithm for approximately solving the post office problem: given n points (called sites) in d dimensions, build a data structure so that, given a query point q , a closest site to q can be found quickly. The algorithm is also given a relative error bound e, and depends on a ratio r, which is no more than the ratio of the distance between the farthest pair of sites to the distance between the closest pair of sites. The algorithm builds a data structure of size O ( n e) O (1/e) ( d −1)/2 in time O ( n 2 e) O (1/e) ( d −1) . Here e=log(r/e). With this data structure, a site is returned whose distance to a query point q is within 1+e of the distance of the closest site. A query needs O (log n ) O (1/e) ( d −1)/2 time, with high probability.</abstract></paper>