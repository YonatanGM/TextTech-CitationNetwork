<paper id="1972868674"><title>Speed is as powerful as clairvoyance</title><year>2000</year><authors><author org="University of Pittsburgh, Pittsburgh, PA" id="22180286">Bala Kalyanasundaram</author><author org="University of Pittsburgh, Pittsburgh, PA" id="2147318369">Kirk Pruhs</author></authors><n_citation>487</n_citation><doc_type>Journal</doc_type><references><reference>230344389</reference><reference>1492865622</reference><reference>1495743741</reference><reference>1522896878</reference><reference>1548819781</reference><reference>1552828154</reference><reference>1584243868</reference><reference>1685963381</reference><reference>1941732106</reference><reference>1958713532</reference><reference>1980135493</reference><reference>1984034567</reference><reference>2041645394</reference><reference>2042789015</reference><reference>2044260124</reference><reference>2044496389</reference><reference>2052476895</reference><reference>2075354456</reference><reference>2076364559</reference><reference>2099261768</reference><reference>2104306824</reference><reference>2116981347</reference><reference>2128722354</reference><reference>2144287101</reference><reference>2145174892</reference><reference>2159472851</reference></references><venue id="118992489" type="J">Journal of the ACM</venue><doi>10.1145/347476.347479</doi><keywords><keyword weight="0.68543">Fixed-priority pre-emptive scheduling</keyword><keyword weight="0.60493">I/O scheduling</keyword><keyword weight="0.64078">Fair-share scheduling</keyword><keyword weight="0.66603">Scheduling (computing)</keyword><keyword weight="0.43752">Computer science</keyword><keyword weight="0.45227">Parallel computing</keyword><keyword weight="0.61927">Two-level scheduling</keyword><keyword weight="0.61056">Least slack time scheduling</keyword><keyword weight="0.61743">Rate-monotonic scheduling</keyword><keyword weight="0.60562">Round-robin scheduling</keyword></keywords><publisher>ACM</publisher><abstract>We introduce resource augmentation as a method for analyzing online scheduling problems. In resource augmentation analysis the on-line scheduler is given more resources, say faster processors or more processors, than the adversary. We apply this analysis to two well-known on-line scheduling problems, the classic uniprocessor CPU scheduling problem 1 | r i , pmtn|S F i , and the best-effort firm real-time scheduling problem 1| r i , pmtn | S w i ( 1- U i ). It is known that there are no constant competitive nonclairvoyant on-line algorithms for these problems. We show that there are simple on-line scheduling algorithms for these problems that are constant competitive if the online scheduler is equipped with a slightly faster processor than the adversary. Thus, a moderate increase in processor speed effectively gives the on-line scheduler the power of clairvoyance. Furthermore, the on-line scheduler can be constant competitive on all inputs that are not closely correlated with processor speed. We also show that the performance of an on-line scheduler is best-effort real time scheduling can be significantly improved if the system is designed in such a way that the laxity of every job is proportional to its length.</abstract></paper>