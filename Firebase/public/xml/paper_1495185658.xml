<paper id="1495185658"><title>On business process model transformations</title><year>2000</year><authors><author org="Distributed Systems Technology Centre, School of Computer Science &amp; Electrical Engineering, The University of Queensland, Qld, Australia#TAB#" id="1980462002">Wasim Sadiq</author><author org="Distributed Systems Technology Centre, School of Computer Science &amp; Electrical Engineering, The University of Queensland, Qld, Australia#TAB#" id="2123081123">Maria E. Orlowska</author></authors><n_citation>8</n_citation><doc_type>Conference</doc_type><references><reference>92826413</reference><reference>601657164</reference><reference>1490230666</reference><reference>1570265525</reference><reference>1604634792</reference><reference>1909893457</reference><reference>2015234709</reference><reference>2019987175</reference><reference>2141116304</reference></references><venue id="1176514135" type="C">International Conference on Conceptual Modeling</venue><doi>10.1007/3-540-45393-8_20</doi><keywords><keyword weight="0.65368">Artifact-centric business process model</keyword><keyword weight="0.44043">Data mining</keyword><keyword weight="0.60025">Model transformation</keyword><keyword weight="0.45699">Industrial engineering</keyword><keyword weight="0.45709">Computer science</keyword><keyword weight="0.52796">Work in process</keyword><keyword weight="0.6456">Process modeling</keyword><keyword weight="0.53962">Business requirements</keyword><keyword weight="0.441">Artificial intelligence</keyword><keyword weight="0.6804">Business process modeling</keyword><keyword weight="0.62985">Business process discovery</keyword><keyword weight="0.67025">Business Process Model and Notation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A business process model represents the basic building block for a workflow-enabled enterprise information system. Generally, a process model evolves through numerous changes during its lifetime to meet dynamic and changing business requirements. It is essential that such changes are introduced systematically and their impact is clearly understood. Process model transformation is a suitable approach for this purpose. Applying pre-defined transformation operations can ensure that the modified process conforms to a given class of constraints specified in the original model. Using a generic process modelling language, we identify three classes of transformation principles - equivalent, imply, and subsume - to manage changes in process models. A simple algebraic notation for representing process graphs is also presented that can be used to reason about transformation operations.</abstract></paper>