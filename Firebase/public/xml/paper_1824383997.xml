<paper id="1824383997"><title>Modal Logic of Concurrent Nondeterministic Programs</title><year>1979</year><authors><author org="University of Washington," id="2177271051">Karl R. Abrahamson</author></authors><n_citation>35</n_citation><doc_type /><references><reference>1574129634</reference><reference>1964727056</reference><reference>1997703312</reference><reference>2023808162</reference><reference>2059034970</reference><reference>2066210260</reference><reference>2111706174</reference><reference>2132334337</reference></references><venue id="" type="">Proceedings of the International Sympoisum on Semantics of Concurrent Computation</venue><doi>10.1007/BFb0022461</doi><keywords><keyword weight="0.60191">Modal Î¼-calculus</keyword><keyword weight="0.44106">Computer science</keyword><keyword weight="0.58297">Substructural logic</keyword><keyword weight="0.60453">Description logic</keyword><keyword weight="0.64169">Multimodal logic</keyword><keyword weight="0.5865">Decidability</keyword><keyword weight="0.61316">Linear temporal logic</keyword><keyword weight="0.45252">Theoretical computer science</keyword><keyword weight="0.66353">Modal logic</keyword><keyword weight="0.64412">Dynamic logic (modal logic)</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper describes a logic, L, for reasoning about concurrent programs. Programs are similar to those of dynamic logic, with a shuffle operator included. L is a modal logic including the modalities [], meaning "throughout the future," and +, meaning "sometime in the future." These modalities are extended by constraints, so that they can be used to express assertions such as "p holds as long as q does." Programs contain labels. Using labels, it is possible to isolate the behavior of a single process or segment of a process, while at the same time keeping the segment in the context of the whole parallel system. A certain subset of the propositional case of L is known to be decidable.</abstract></paper>