<paper id="1775921724"><title>Implementing regular tree expressions</title><year>1991</year><authors><author org="IBM Almaden Research Center" id="2067453598">Alexander Aiken</author><author org="Stanford, University" id="2160495780">Brian R. Murphy</author></authors><n_citation>73</n_citation><doc_type>Conference</doc_type><references><reference>171682210</reference><reference>1608901052</reference><reference>1973576343</reference><reference>2001507716</reference><reference>2007313703</reference><reference>2076696436</reference><reference>2088126145</reference></references><venue id="1162793720" type="C">International Conference on Functional Programming</venue><doi>10.1007/3540543961_21</doi><keywords><keyword weight="0.58514">Tree traversal</keyword><keyword weight="0.53623">Expression (mathematics)</keyword><keyword weight="0.45753">Computer science</keyword><keyword weight="0.5876">Tree (data structure)</keyword><keyword weight="0.56403">Binary tree</keyword><keyword weight="0.4888">Type inference</keyword><keyword weight="0.4672">Theoretical computer science</keyword><keyword weight="0.52841">Heuristics</keyword><keyword weight="0.55834">Order statistic tree</keyword><keyword weight="0.5099">Program analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Regular tree expressions are a natural formalism for describing the sets of tree-structured values that commonly arise in programs; thus, they are well-suited to applications in program analysis. We describe an implementation of regular tree expressions and our experience with that implementation in the context of the FL type system. A combination of algorithms, optimizations, and fast heuristics for computationally difficult problems yields an implementation efficient enough for practical use.</abstract></paper>