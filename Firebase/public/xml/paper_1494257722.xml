<paper id="1494257722"><title>Automatic Datapath Abstraction In Hardware Systems</title><year>1995</year><authors><author org="" id="2135689897">Ramin Hojati</author><author org="" id="2038038819">Robert K. Brayton</author></authors><n_citation>60</n_citation><doc_type>Conference</doc_type><references><reference>1565735329</reference><reference>1577772892</reference><reference>1741528175</reference><reference>1988192943</reference><reference>2012001501</reference><reference>2042445573</reference><reference>2080267935</reference><reference>2168047940</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-60045-0_43</doi><keywords><keyword weight="0.56214">Abstraction model checking</keyword><keyword weight="0.53872">Concurrency</keyword><keyword weight="0.46438">Computer science</keyword><keyword weight="0.56995">Finite state machine with datapath</keyword><keyword weight="0.47266">Theoretical computer science</keyword><keyword weight="0.55094">Abstraction inversion</keyword><keyword weight="0.53926">Memory address</keyword><keyword weight="0.53806">Abstraction layer</keyword><keyword weight="0.45003">Computer hardware</keyword><keyword weight="0.53173">State space</keyword><keyword weight="0.56098">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The biggest stumbling block to make formal verification widely acceptable is the state space explosion problem. Abstraction is used to simplify a design so that the number of reachable states is reduced. In this paper, we first introduce a concurrency model, called integer combinational/sequential (ICS), capable of describing hardware systems at high and low levels of abstractions. ICS uses finite relations, interpreted and uninterpreted integer functions and predicates, interpreted memory functions, and supports non-determinism and fairness constraints. As a subset, it includes finite-state systems with general fairness constraints. Verification in this framework is performed using language containment as a :[98],"subclass of “control-intensive” ICS models, we prove that finite small instantiations can be used to decide the properties without sacrificing accuracy. A linear time algorithm for recognizing these subsets is given. These results also hold for the standard finite-state systems and thus also provide some generic methods for automatic data abstraction for such systems. Using these results, we are able to verify a memory model by reducing integer data values to binary, and unbounded memory addresses to a small :[179],"verifying properties of circuits with complex datapaths, the model can be executed symbolically to find the reachable states. In some cases, the set of reachable states is finite, and the verification can be completed exactly. In other cases, given n, the verifier checks that no errors of length less than n exist.</abstract></paper>