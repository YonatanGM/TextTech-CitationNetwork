<paper id="1853445766"><title>Hardware/Software Co-Design Using Functional Languages</title><year>2001</year><authors><author org="AT&amp;T Laboratories, Cambridge," id="163000670">Alan Mycroft</author><author org="AT&amp;T Laboratories, Cambridge," id="2161161904">Richard Sharp</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>1555915743</reference><reference>1556604985</reference><reference>1595601404</reference><reference>1607211864</reference><reference>1829244603</reference><reference>2003131643</reference><reference>2014497214</reference><reference>2023299380</reference><reference>2049600101</reference><reference>2113757735</reference><reference>2168405043</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-45319-9_17</doi><keywords><keyword weight="0.47254">Programming language</keyword><keyword weight="0.51815">Program transformation</keyword><keyword weight="0.48385">Functional programming</keyword><keyword weight="0.60044">Silicon compiler</keyword><keyword weight="0.4577">Computer science</keyword><keyword weight="0.55251">Compiler</keyword><keyword weight="0.48231">Call graph</keyword><keyword weight="0.54831">Software</keyword><keyword weight="0.48954">Program analysis</keyword><keyword weight="0.46709">Operating system</keyword><keyword weight="0.46145">Distributed computing</keyword><keyword weight="0.63324">Hardware architecture</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In previous work we have developed and prototyped a silicon compiler which translates a functional language (SAFL) into hardware. Here we present a SAFL-level program transformation which: (i) partitions a specification into hardware and software parts and (ii) generates a specialised architecture to execute the software part. The architecture consists of a number of interconnected heterogeneous processors. Our method allows a large design space to be explored by systematically transforming a single SAFL specification to investigate different points on the area-time spectrum.</abstract></paper>