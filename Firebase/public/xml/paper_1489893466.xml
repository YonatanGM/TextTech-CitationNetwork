<paper id="1489893466"><title>Verification Problems in Conceptual Workflow Specifications</title><year>1996</year><authors><author org="the University of Queensland" id="1987818517">Arthur H. M. ter Hofstede</author><author org="the University of Queensland" id="2123081123">Maria E. Orlowska</author><author org="the University of Queensland" id="2114534337">Jayantha Rajapakse</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>1490331809</reference><reference>1595655245</reference><reference>2015234709</reference><reference>2031673060</reference><reference>2035244158</reference><reference>2050398833</reference><reference>2057397288</reference><reference>2083567135</reference><reference>2090360773</reference></references><venue id="1176514135" type="C">International Conference on Conceptual Modeling</venue><doi>10.1007/BFb0019916</doi><keywords><keyword weight="0.55569">Specification language</keyword><keyword weight="0.61808">Workflow technology</keyword><keyword weight="0.48078">Software engineering</keyword><keyword weight="0.47304">Computer science</keyword><keyword weight="0.44558">Real-time computing</keyword><keyword weight="0.54574">Software development process</keyword><keyword weight="0.54877">Design process</keyword><keyword weight="0.62203">Workflow engine</keyword><keyword weight="0.57456">Workflow</keyword><keyword weight="0.60592">Workflow management system</keyword><keyword weight="0.54372">Goal-Driven Software Development Process</keyword><keyword weight="0.4512">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most of todayu0027s business requirements can only be accomplished through integration of various autonomous systems which were initially designed to serve the needs of particular applications. In the literature workflows are proposed to design these kinds of applications. The key tool for designing such applications is a powerful conceptual specification language. Such a language should be capable of capturing interactions and cooperation between component tasks of workflows among others. These include sequential execution, iteration, choice, parallelism and synchronisation. The central focus of this paper is the verification of such process control aspects in conceptual workflow specifications. As it is generally agreed upon that the later in the software development process an error is detected, the more it will cost to correct it, it is of vital importance to detect errors as early as possible in the systems development process. In this paper some typical verification problems in workflow specifications are identified and their complexity is addressed. It will be proven that some fundamental problems are not tractable and we will show what restriction is needed to allow termination problems to be recognized in polynomial time.</abstract></paper>