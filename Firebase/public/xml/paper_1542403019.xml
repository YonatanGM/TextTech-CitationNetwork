<paper id="1542403019"><title>Specware: Formal Support for Composing Software</title><year>1995</year><authors><author org="Kestrel Institute" id="670633399">Yellamraju V. Srinivas</author><author org="Kestrel Institute" id="1225828849">Richard JÃ¼llig</author></authors><n_citation>127</n_citation><doc_type>Conference</doc_type><references><reference>1490861245</reference><reference>1591868041</reference><reference>1756661417</reference><reference>1970495662</reference><reference>1992319579</reference><reference>2000825654</reference><reference>2030096232</reference><reference>2046489718</reference><reference>2053344396</reference><reference>2110050316</reference><reference>2129466151</reference><reference>2132371811</reference><reference>2177760151</reference></references><venue id="1159310735" type="C">Mathematics of Program Construction</venue><doi>10.1007/3-540-60117-1_22</doi><keywords><keyword weight="0.46477">Distributive property</keyword><keyword weight="0.44404">Computer science</keyword><keyword weight="0.44225">Topological sorting</keyword><keyword weight="0.44221">Categorical variable</keyword><keyword weight="0.4236">Top-down and bottom-up design</keyword><keyword weight="0.54245">Formal specification</keyword><keyword weight="0.44814">Theoretical computer science</keyword><keyword weight="0.45734">Software</keyword><keyword weight="0.49556">Software construction</keyword><keyword weight="0.42138">Small set</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Specware supports the systematic construction of formal specifications and their stepwise refinement into programs. The fundamental operations in Specware are that of composing specifications (via colimits), the corresponding refinement by composing refinements (via sheaves), and the generation of programs by composing code modules (via colimits). The concept of diagram refinement is introduced as a practical realization of composing refinements via sheaves. Sequential and parallel composition of refinements satisfy a distributive law which is a generalization of similar compatibility laws in the literature. Specware is based on a rich categorical framework with a small set of orthogonal concepts. We believe that this formal basis will enable the scaling to system-level software construction.</abstract></paper>