<paper id="1958713532"><title>Minimizing flow time nonclairvoyantly</title><year>1997</year><authors><author org="Dept. of Comput. Sci., Pittsburgh Univ., PA, USA" id="22180286">B. Kalyanasundaram</author><author org="" id="2147318369">K.R. Pruhs</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>204261080</reference><reference>230344389</reference><reference>1972868674</reference><reference>2047150311</reference><reference>2104306824</reference></references><venue id="1150208541" type="C">Foundations of Computer Science</venue><doi>10.1109/SFCS.1997.646123</doi><keywords><keyword weight="0.4263">Discrete mathematics</keyword><keyword weight="0.46144">Binary logarithm</keyword><keyword weight="0.42396">Combinatorics</keyword><keyword weight="0.47665">Scheduling (computing)</keyword><keyword weight="0.39533">Computer science</keyword><keyword weight="0.43122">Idle</keyword><keyword weight="0.43513">Minimisation (psychology)</keyword><keyword weight="0.41159">Sigma</keyword><keyword weight="0.56367">Competitive analysis</keyword><keyword weight="0.42657">Time-sharing</keyword><keyword weight="0.48844">Computational complexity theory</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>We consider the problem of scheduling a collection of dynamically arriving jobs with unknown execution times so as to minimize the average response/flow time. This is the classic CPU scheduling problem faced by time sharing operating systems. In the standard 3-field scheduling notation this is the nonclairvoyant version of 1|pmtn, r/sub j/|/spl Sigma/F/sub j/. Its easy to see that every algorithm that doesnu0027t unnecessarily idle the processor is at worst n-competitive, where n is the number of jobs. Yet there is no known nonclairvoyant algorithm, deterministic or randomized, with a competitive ratio provably o(n). We present a randomized nonclairvoyant algorithm, RMLF, that has competitive ratio /spl theta/(lognloglogn) against an adaptive adversary. RMLF is a slight variation of the multi level feedback (MLF) algorithm used by the Unix operating system, further justifying the adoption of this algorithm. R. Motwani et al. (1994) showed that every randomized nonclairvoyant algorithm is /spl Omega/2(log n)competitive, and that every deterministic nonclairvoyant algorithm is /spl Omega/2(n/sup 1/3/)-competitive.</abstract></paper>