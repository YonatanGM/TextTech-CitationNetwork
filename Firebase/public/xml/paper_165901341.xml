<paper id="165901341"><title>An automated software design methodology using CAPO</title><year>1987</year><authors><author org="University of Colorado Denver" id="2097118535">Jahangir Karimi</author></authors><n_citation>16</n_citation><doc_type>Journal</doc_type><references><reference>46073713</reference><reference>1498524687</reference><reference>1607905993</reference><reference>1966710340</reference><reference>1971522971</reference><reference>1974447437</reference><reference>1990647067</reference><reference>1992081792</reference><reference>1994354102</reference><reference>1997076110</reference><reference>2003173896</reference><reference>2010536692</reference><reference>2011762419</reference><reference>2020775305</reference><reference>2024490882</reference><reference>2046236879</reference><reference>2052557016</reference><reference>2067425461</reference><reference>2116977168</reference><reference>2117094273</reference><reference>2125705784</reference><reference>2132234187</reference><reference>2134119432</reference><reference>2167116703</reference><reference>2913217271</reference></references><venue id="9954729" type="J">Journal of Management Information Systems</venue><doi>10.1080/07421222.1986.11517771</doi><keywords><keyword weight="0.6677">Object-oriented design</keyword><keyword weight="0.70765">Software design</keyword><keyword weight="0.47067">Software engineering</keyword><keyword weight="0.67352">Software design description</keyword><keyword weight="0.45985">Computer science</keyword><keyword weight="0.44055">Simulation</keyword><keyword weight="0.65523">Computer-aided software engineering</keyword><keyword weight="0.6769">Software construction</keyword><keyword weight="0.64888">Software verification and validation</keyword><keyword weight="0.42382">Management science</keyword><keyword weight="0.64339">Software measurement</keyword><keyword weight="0.6397">Software development</keyword></keywords><publisher>M. E. Sharpe, Inc.</publisher><abstract>Abstract:Software design is the process which decomposes a set of requirement specifications into certain basic elements and partitions these decomposed specifications into modules. In this paper, important techniques for the logical design of software and the properties associated with a structured design are analyzed in order to develop a framework for an automated approach to software design. To ensure software quality, a set of matrices is developed to guide the design process and to evaluate the quality of a design for the purpose of comparing different designs. The applicability of the methodology in nonsequential and object-oriented design environments is also discussed.</abstract></paper>