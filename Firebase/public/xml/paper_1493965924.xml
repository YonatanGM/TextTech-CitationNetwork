<paper id="1493965924"><title>An extended cCSP with stable failures semantics</title><year>2010</year><authors><author org="National Laboratory for Parallel and Distributed Processing, Changsha, China#TAB#" id="2228957528">Zhenbang Chen</author><author org="International Institute for Software Technology, United Nations University, Macao, SAR China" id="2159399964">Zhiming Liu</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>850723191</reference><reference>1555143792</reference><reference>1608333380</reference><reference>1974168649</reference><reference>2030221027</reference><reference>2109375135</reference><reference>2110425399</reference><reference>2112428532</reference><reference>2149416537</reference><reference>2153074919</reference><reference>2167399349</reference><reference>2170151971</reference><reference>2460103410</reference></references><venue id="1121242901" type="C">International Colloquium on Theoretical Aspects of Computing</venue><doi>10.1007/978-3-642-14808-8_9</doi><keywords><keyword weight="0.69963">Operational semantics</keyword><keyword weight="0.46449">Programming language</keyword><keyword weight="0.44944">Computer science</keyword><keyword weight="0.67565">Denotational semantics</keyword><keyword weight="0.50139">Deadlock</keyword><keyword weight="0.45244">Theoretical computer science</keyword><keyword weight="0.47142">Operator (computer programming)</keyword><keyword weight="0.49274">Orchestration (computing)</keyword><keyword weight="0.52662">Semantics</keyword><keyword weight="0.66261">Well-founded semantics</keyword><keyword weight="0.0">Algebraic laws</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Compensating CSP (cCSP) is an extension to CSP for modeling long-running transactions. It can be used to specify programs of service orchestration written in a programming language like WS-BPEL. So far, only an operational semantics and a trace semantics are given to cCSP. In this paper, we extend cCSP with more operators and define for it a stable failures semantics in order to reason about nondeterminism and deadlock. We give some important algebraic laws for the new operators. These laws can be justified and understood from the stable failures semantics. A case study is given to demonstrate the extended cCSP.</abstract></paper>