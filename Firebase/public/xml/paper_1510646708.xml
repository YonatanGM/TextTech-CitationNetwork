<paper id="1510646708"><title>Fast and Efficient Parallel Algorithms for the Exact Inversion of Integer Matrices</title><year>1985</year><authors><author org="State University of New York at Albany" id="2442951839">Victor Y. Pan</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>152964218</reference><reference>1625115106</reference><reference>1826129482</reference><reference>1972332180</reference><reference>1979036815</reference><reference>1993310376</reference><reference>2027333436</reference><reference>2049161913</reference><reference>2056352038</reference><reference>2062881752</reference><reference>2074917087</reference><reference>2080132708</reference><reference>2082002555</reference><reference>2113097540</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-16042-6_29</doi><keywords><keyword weight="0.47745">Integer</keyword><keyword weight="0.44846">Discrete mathematics</keyword><keyword weight="0.47782">Characteristic polynomial</keyword><keyword weight="0.46003">Binary logarithm</keyword><keyword weight="0.48916">Boolean circuit</keyword><keyword weight="0.45035">Combinatorics</keyword><keyword weight="0.46977">Matrix (mathematics)</keyword><keyword weight="0.47511">Diagonally dominant matrix</keyword><keyword weight="0.46382">Invertible matrix</keyword><keyword weight="0.49799">Integer matrix</keyword><keyword weight="0.39472">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Let A = (aij) be a nonsingular n×n integer matrix such that log ∥A∥ ≤ no(1), \(\mathop {\max }\limits_{i,j}\) |aij| ≤ ∥A∥ ≤ n \(\mathop {\max }\limits_{i,j}\) |aij|. Then adj A, A−1 and all the coefficients of the characteristic polynomial of A including det A can be exactly evaluated on arithmetic circuits using O(log2n) parallel steps and M(n) processors where M(n) is the minimum number of processors required in order to multiply two n×n matrices in O(log n) steps, M(n) = o(n2.5). This substantially improves the processor bound \(\sqrt n\) M(n) of [Preparata and Sarwate, 78] and extends the recent results of [Pan and Reif, 85], where the same complexity estimates were obtained for the approximate evaluation of A−1 and under the additional assumption that A is a well-conditioned or strongly diagonally dominant matrix. All arithmetic operations can be performed with the precision of ≤ d bits so the total cost of computation is only O(log(dn))2 steps, o(n2.496d log d log log d) processors under the Boolean circuit model of parallel computation. Here d is O(n2log(n∥A∥) in the worst case; d is O(n log(n∥A∥)) with probability 1-O(1/(nh−1∥A∥h)) for arbitrary constant h. This extends our \(\sqrt n\)-improvement of the efficiency of the previously known algorithms to the case of the Boolean circuit model and consequently increases the efficiency of the known parallel algorithms for several related algebraic and combinatorial problems.</abstract></paper>