<paper id="1598068148"><title>Handling Partially Ordered Defaults in TMS</title><year>1991</year><authors><author org="GMD" id="2102523264">Ulrich Junker</author><author org="GMD" id="73842927">Gerhard Brewka</author></authors><n_citation>26</n_citation><doc_type>Conference</doc_type><references><reference>56508359</reference><reference>63858687</reference><reference>67608388</reference><reference>1534361892</reference><reference>2119887426</reference><reference>2152764793</reference><reference>2913309218</reference><reference>2915067375</reference></references><venue id="1189246982" type="C">European Conference on Symbolic and Quantitative Approaches to Reasoning and Uncertainty</venue><doi>10.1007/3-540-54659-6_91</doi><keywords><keyword weight="0.0">Inheritance hierarchy</keyword><keyword weight="0.42567">Discrete mathematics</keyword><keyword weight="0.47295">Pairwise comparison</keyword><keyword weight="0.53025">Autoepistemic logic</keyword><keyword weight="0.43047">Computer science</keyword><keyword weight="0.48867">Correctness</keyword><keyword weight="0.44072">Theoretical computer science</keyword><keyword weight="0.43416">Default</keyword><keyword weight="0.53016">Circumscription</keyword><keyword weight="0.0">Default reasoning</keyword><keyword weight="0.5024">Multiple inheritance</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>For many applications of default reasoning priorities between defaults play an important role. Generally, the introduction of priorities reduces the number of generated solutions and thus leads to more plausible results 1. For this reason a number of formalizations, e.g. prioritized circumscription [9, 5], hierarchic autoepistemic logic [8], or preferred subtheories [2] allow for the explicit representation of default priorities. Other approaches, like Geffneru0027s system [4], use the available specificity information to generate priorities automatically. Our main interest in this paper are computational techniques for partially ordered defaults. Levels of priority which can be expressed for instance in prioritized circumscription or in level default theories [2], are too inflexible for many applications and may force the user to introduce unwanted priorities. We will demonstrate this using two examples, namely inheritance and diagnosis. Consider for instance an inheritance hierarchy where, according to the general view, defaults about a subclass should override defaults about its superclasses. If multiple inheritance is allowed, that is if a subclass may be linked to multiple superclasses, then the involved priorities cannot adequately be expressed in priority levels. As an example assume three defaults dl, d2, and d3 are given, where dl states that instances of class Ci typically have property Pi [2]. Moreover, let the three defaults be pairwise conflicting, that is i r j implies -,P~(z) V "-,Pj(x). Now let C1 be a subclass of C2 and assume no other specificity information is given, dl obviously has to get higher priority than d2. But how about d37 Any assignment to a priority level will introduce a priority between d3 and either dl, or d2, or even both. These priorities, however, are not grounded in the specificity of the involved classes and therefore unwanted. When partial priority orderings between defaults are allowed this problem disappears. In this case the priority between dl and d2 can be stated without specifying the relation between these defaults and d3. Another application that can be used to illustrate the importance of partially ordered defaults is model based diagnosis. It has been shown in [6] how level default theories can be used to express priorities between correctness assumptions. For instance, one</abstract></paper>