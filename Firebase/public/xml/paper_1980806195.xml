<paper id="1980806195"><title>Concurrency of operations on B —trees</title><year>1994</year><authors><author org="Univ. Mu¨nchen, W. Germany#TAB#" id="2789927476">R. Bayer</author><author org="IBM Research Laboratory, San Jose, CA" id="2973652266">M. Schkolnick</author></authors><n_citation>350</n_citation><doc_type>Journal</doc_type><references><reference>17487755</reference><reference>50063591</reference><reference>102035798</reference><reference>2008627910</reference><reference>2088552087</reference><reference>2116436709</reference><reference>2131791649</reference><reference>2901608006</reference></references><venue id="84409463" type="J">Acta Informatica</venue><doi>10.1007/BF00263762</doi><keywords><keyword weight="0.44264">Information system</keyword><keyword weight="0.52142">Data structure</keyword><keyword weight="0.50408">Bottleneck</keyword><keyword weight="0.48826">Serialization</keyword><keyword weight="0.45855">Telecommunications network</keyword><keyword weight="0.4528">Computer science</keyword><keyword weight="0.56844">Concurrency</keyword><keyword weight="0.61296">Deadlock</keyword><keyword weight="0.64811">Deadlock prevention algorithms</keyword><keyword weight="0.46146">Distributed computing</keyword></keywords><publisher>Morgan Kaufmann Publishers Inc.</publisher><abstract>Concurrent operations on B-trees pose the problem of insuring that each operation can be carried out without interfering with other operations being performed simultaneously by other users. This problem can become critical if these structures are being used to support access paths, like indexes, to data base systems. In this case, serializing access to one of these indexes can create an unacceptable bottleneck for the entire system. Thus, there is a need for locking protocols that can assure integrity for each access while at the same time providing a maximum possible degree of concurrency. Another feature required from these protocols is that they be deadlock free, since the cost to resolve a deadlock may be there :[115],"has been some questioning on whether B-tree structures can support concurrent operations. In this paper, we examine the problem of concurrent access to B-trees. We present a deadlock free solution which can be tuned to specific requirements. An analysis is presented which allows the selection of parameters so as to satisfy these solution presented :[169],"here uses simple locking protocols. Thus, we conclude that B-trees can be used advantageously in a multi-user environment.</abstract></paper>