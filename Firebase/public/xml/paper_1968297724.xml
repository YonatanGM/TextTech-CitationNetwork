<paper id="1968297724"><title>A Note on Open Shop Preemptive Schedules</title><year>1979</year><authors><author org="Department of Computer Science, Institute of Technology" id="2679076614">Gonzalez</author></authors><n_citation>40</n_citation><doc_type>Journal</doc_type><references><reference>1965437596</reference><reference>1967955864</reference><reference>2002680893</reference><reference>2043862089</reference><reference>2093229192</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1979.1675246</doi><keywords><keyword weight="0.60717">Open shop</keyword><keyword weight="0.63387">Fixed-priority pre-emptive scheduling</keyword><keyword weight="0.47721">Preemption</keyword><keyword weight="0.53381">Scheduling (computing)</keyword><keyword weight="0.42765">Computer science</keyword><keyword weight="0.44359">Parallel computing</keyword><keyword weight="0.4233">Real-time computing</keyword><keyword weight="0.5199">Schedule</keyword><keyword weight="0.0">Polynomial complexity</keyword><keyword weight="0.56414">Time complexity</keyword><keyword weight="0.49692">Bounded function</keyword></keywords><publisher>IEEE</publisher><abstract>The problem of preemptively scheduling a set of n independent jobs on an m processor open shop is discussed. An algorithm to construct preemptive schedules with minimum-maximum finishing time is presented. The worst case time complexity is 0(r + min {m4, n4, r2}), where r is the number of nonzero tasks. The maximum number of preemptions introduced is 0(min {rn, rm, n3, m3}). The algorithm is best possible for open shops with a fixed number of processors or jobs. In this case the maximum number of preemptions introduced is bounded by some fixed constant.</abstract></paper>