<paper id="1573602196"><title>The EASY - LoadLeveler API Project</title><year>1996</year><authors><author org="International Business Machines#TAB#" id="2250576753">Joseph Skovira</author><author org="International Business Machines#TAB#" id="2568137995">Waiman Chan</author><author org="International Business Machines#TAB#" id="2485768679">Honbo Zhou</author><author org="Cornell Theory Center#TAB#" id="90127536">David A. Lifka</author></authors><n_citation>172</n_citation><doc_type>Conference</doc_type><references><reference>1532089073</reference><reference>2150074609</reference></references><venue id="1122827389" type="C">Job Scheduling Strategies for Parallel Processing</venue><doi>10.1007/BFb0022286</doi><keywords><keyword weight="0.51957">Fixed-priority pre-emptive scheduling</keyword><keyword weight="0.56254">IBM</keyword><keyword weight="0.52964">Fair-share scheduling</keyword><keyword weight="0.53204">Massively parallel</keyword><keyword weight="0.4463">Computer science</keyword><keyword weight="0.42372">Real-time computing</keyword><keyword weight="0.52278">Two-level scheduling</keyword><keyword weight="0.52317">Rate-monotonic scheduling</keyword><keyword weight="0.56408">Job scheduler</keyword><keyword weight="0.51968">Round-robin scheduling</keyword><keyword weight="0.43886">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>With the increasing use of distributed memory massively parallel machines (MPPs) such as the IBM SP, the need for improved parallel job scheduling tools has sparked many recent developments. IBMu0027s LoadLeveler is being used at the Cornell Theory Center, but problems exist with the current scheduling algorithm applied to the job mix on the 512-node SP. In order to address Cornellu0027s difficulties, Joseph Skovira began to consider enhancements to LoadLeveler. At about the same time, David Lifka, developer of the EASY parallel job scheduler, began working at CTC. With Waiman Chan and Honbo Zhou of IBM LoadLeveler development, we have developed a LoadLeveler API that allows external schedulers like EASY to control the starting and stopping of jobs through LoadLeveler.</abstract></paper>