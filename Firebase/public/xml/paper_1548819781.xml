<paper id="1548819781"><title>Fault-Tolerant Real-Time Scheduling</title><year>1997</year><authors><author org="(university of pittsburgh)" id="22180286">Bala Kalyanasundaram</author><author org="(university of pittsburgh)" id="2147318369">Kirk Pruhs</author></authors><n_citation>15</n_citation><doc_type>Conference</doc_type><references><reference>1941732106</reference><reference>1972868674</reference><reference>1980135493</reference><reference>1989350156</reference><reference>1997595976</reference><reference>2002345807</reference><reference>2044260124</reference><reference>2076364559</reference><reference>2089078077</reference><reference>2099261768</reference><reference>2116981347</reference></references><venue id="1154039276" type="C">European Symposium on Algorithms</venue><doi>10.1007/3-540-63397-9_23</doi><keywords><keyword weight="0.42864">Online algorithm</keyword><keyword weight="0.42656">Randomized algorithm</keyword><keyword weight="0.42143">Discrete mathematics</keyword><keyword weight="0.42405">Combinatorics</keyword><keyword weight="0.45342">Upper and lower bounds</keyword><keyword weight="0.36786">Scheduling (computing)</keyword><keyword weight="0.31419">Computer science</keyword><keyword weight="0.49063">Interval scheduling</keyword><keyword weight="0.43455">Omega</keyword><keyword weight="0.0">Execution time</keyword><keyword weight="0.44322">Competitive analysis</keyword><keyword weight="0.32058">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We use competitive analysis to study how to best use redundancy to achieve fault-tolerance in online real-time scheduling. We show that the optimal way to make use of spatial redundancy depends on a complex interaction of the benefits, execution times, release times, and latest start times of the jobs. We give a randomized online algorithm whose competitive ratio is \(O(\log \Phi log\Delta \tfrac{{log^2 n\log m}}{{\log \log m}})\) for transient faults. Here n is the number of jobs present in the system at any one time, m is the number of processors, Φ is the ratio of maximum value density of a job to the minimum value density of a job, and Δ the ratio of the longest possible execution time to the shortest possible execution time. We show that this bound is close to optimal by giving an \(\Omega (log\Delta \Phi (\tfrac{{logm}}{{loglogmloglog(m\Delta \Phi )}})^2 )\) lower bound on the competitive ratio of any randomized algorithm. In the case of permanent faults, there is a randomized online algorithm that has a competitive ratio of \(O(\log \Phi log\Delta \tfrac{{\log m}}{{\log \log m}})\). We also show a lower bound of \(\Omega (log\Delta \Phi \tfrac{{logm}}{{loglog(m\Delta \Phi )}})\) on the competitive ratio for interval scheduling with permanent faults.</abstract></paper>