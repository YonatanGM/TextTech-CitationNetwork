<paper id="1548662955"><title>Model Checking for Managers</title><year>1999</year><authors><author org="Telematica Instituut" id="2484873973">Wil Janssen</author><author org="INRIA-RhÃ´ne-Alpes" id="2159052863">Radu Mateescu</author><author org="CWI" id="2178563479">Sjouke Mauw</author><author org="Telematica Instituut" id="2652231185">Peter Fennema</author><author org="Telematica Instituut" id="270713926">Petra van der Stappen</author></authors><n_citation>58</n_citation><doc_type>Conference</doc_type><references><reference>31584174</reference><reference>1483422122</reference><reference>1535344947</reference><reference>1548825518</reference><reference>1984936841</reference><reference>2115309705</reference><reference>2126509366</reference></references><venue id="2760802481" type="C">International workshop on Model Checking Software</venue><doi>10.1007/3-540-48234-2_7</doi><keywords><keyword weight="0.63323">Artifact-centric business process model</keyword><keyword weight="0.61498">Model checking</keyword><keyword weight="0.54643">Business process</keyword><keyword weight="0.47481">Software engineering</keyword><keyword weight="0.47029">Computer science</keyword><keyword weight="0.57368">Modeling language</keyword><keyword weight="0.62889">Business requirements</keyword><keyword weight="0.44796">Artificial intelligence</keyword><keyword weight="0.52717">Business model</keyword><keyword weight="0.48199">Temporal logic</keyword><keyword weight="0.6145">Business process modeling</keyword><keyword weight="0.45365">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Model checking is traditionally applied to computer system design. It has proven to be a valuable technique. However, it requires detailed specifications of systems and requirements, and is therefore not very accessible. In this paper we show how model checking can be applied in the context of business modeling and analysis by people that are not trained in formal techniques. Spin is used as the model checker underlying a graphical modeling language, and requirements are specified using business requirements patterns, which are translated to LTL. We illustrate our approach using a business model of an insurance company.</abstract></paper>