<paper id="1627776297"><title>PVS: Combining Specification, Proof Checking, and Model Checking</title><year>1996</year><authors><author org="SRI, International#TAB#" id="2118526916">Natarajan Shankar</author></authors><n_citation>381</n_citation><doc_type>Conference</doc_type><references><reference>1511157305</reference><reference>1538310240</reference><reference>1540641846</reference><reference>1551406732</reference><reference>1733935619</reference><reference>1825148885</reference><reference>1979159285</reference><reference>2030670832</reference><reference>2101591864</reference><reference>2113486906</reference><reference>2128057448</reference></references><venue id="1166230065" type="C">Formal Methods in Computer-Aided Design</venue><doi>10.1007/BFb0031813</doi><keywords><keyword weight="0.55763">Prototype Verification System</keyword><keyword weight="0.43914">Abstraction</keyword><keyword weight="0.6381">Model checking</keyword><keyword weight="0.0">Proof checking</keyword><keyword weight="0.45612">Computer science</keyword><keyword weight="0.63779">Automated proof checking</keyword><keyword weight="0.47038">Automation</keyword><keyword weight="0.45144">Theoretical computer science</keyword><keyword weight="0.50231">Rewriting</keyword><keyword weight="0.0">Proof obligation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We claim that no single technique such as rewriting, BDDs, or model checking is effective for all aspects of hardware verification. Many examples need the careful integration of these techniques. We have shown some simple examples to illustrate the integration available in PVS. This combination of techniques has been applied to some larger examples such as an SRT divider and Rockwell-Collins AAMP series of processors. The automation available in PVS on these examples can be further improved through the use of more decision procedures (e.g., bit vectors) and better verification methodologies (e.g., abstraction, induction).</abstract></paper>