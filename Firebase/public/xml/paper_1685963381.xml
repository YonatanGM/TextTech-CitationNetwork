<paper id="1685963381"><title>Maximizing Job Completions Online</title><year>1998</year><authors><author org="(university of pittsburgh)" id="22180286">Bala Kalyanasundaram</author><author org="(university of pittsburgh)" id="2147318369">Kirk Pruhs</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>204261080</reference><reference>276536446</reference><reference>1980135493</reference><reference>1984034567</reference><reference>2044260124</reference><reference>2099261768</reference><reference>2116981347</reference></references><venue id="1154039276" type="C">European Symposium on Algorithms</venue><doi>10.1007/3-540-68530-8_20</doi><keywords><keyword weight="0.51976">Randomized algorithm</keyword><keyword weight="0.61825">Online algorithm</keyword><keyword weight="0.48306">Dynamic programming</keyword><keyword weight="0.45523">Mathematical optimization</keyword><keyword weight="0.43257">Notation</keyword><keyword weight="0.43588">Computer science</keyword><keyword weight="0.51973">Scheduling (computing)</keyword><keyword weight="0.43355">Algorithm</keyword><keyword weight="0.55602">Deterministic algorithm</keyword><keyword weight="0.41135">Spite</keyword><keyword weight="0.43187">Distributed computing</keyword><keyword weight="0.63861">Competitive analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We consider the problem of maximizing the number of jobs completed by their deadline in an online single processor system where the jobs are preemptable and have release times. So in the standard three field scheduling notation, this is the online version of the problem 1 | ri ;pmtn | Î£ (1 - Ui). We give a constant competitive randomized algorithm for this problem. It is known that no constant competitive deterministic algorithm exists for this problem. This is the first time that this phenomenon, the randomized competitive ratio is constant in spite of the fact that the deterministic competitive ratio is nonconstant, has been demonstrated to occur in a natural online problem. This result is also a first step toward determining how an online scheduler can use additional processors in a real-time setting to achieve competitiveness.</abstract></paper>