<paper id="1846888456"><title>A Scheme to Specify and Implement Ad-Hoc Recovery in Workflow Systems</title><year>1998</year><authors><author org="Memorial University of Newfoundland St. Johnâ€™s" id="2619761154">Jian Tang</author><author org="NATIONAL SUN-YAT-SEN UNIVERSITY" id="2181734664">San-Yih Hwang</author></authors><n_citation>15</n_citation><doc_type>Conference</doc_type><references><reference>76648683</reference><reference>81995812</reference><reference>1490331809</reference><reference>1855065956</reference><reference>2003884405</reference><reference>2015234709</reference><reference>2035244158</reference><reference>2037858626</reference><reference>2043318789</reference><reference>2062756186</reference><reference>2089174029</reference><reference>2155541789</reference><reference>2158801888</reference><reference>2164666118</reference><reference>2171166363</reference><reference>2486709646</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/BFb0101004</doi><keywords><keyword weight="0.42593">Data mining</keyword><keyword weight="0.59385">Business process management</keyword><keyword weight="0.533">Workflow technology</keyword><keyword weight="0.57601">Business process</keyword><keyword weight="0.44578">Computer science</keyword><keyword weight="0.53701">Process design</keyword><keyword weight="0.59422">Business process modeling</keyword><keyword weight="0.5503">Workflow engine</keyword><keyword weight="0.58692">Event-driven process chain</keyword><keyword weight="0.54169">Workflow</keyword><keyword weight="0.43031">Database</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Pre-defining a business process can substantially simplify the process design and the implementation of run time support. However, requiring that all the instances of the business process follow a fixed pattern (even if conditions are allowed) does not offer users sufficient flexibility to make changes to the process structures. These changes may be necessary due to the occurrence of exceptions, or other ad-hoc events. Some exceptions/events may be predictable in advance, and therefore can be incorporated into the process definition. However, not all exception/events can be predicted at the process definition time. When this happens, no corresponding exception-specific provision can be incorporated. The design and implementation of the system support for unpredictable exception/event handling is therefore a more complicated issue. In this paper, we study a special case of changing the structure of a business process in the context of unpredictable exception/event, namely, redirecting the control flow at run time in an ad-hoc manner. This phenomenon is termed ad-hoc recovery. We concentrate on two aspects in supporting ad-hoc recovery, the kind of interface that should be used and the increased functionality that must be built into the workflow database. For the latter, we also suggest implementation strategies to maximize the performance.</abstract></paper>