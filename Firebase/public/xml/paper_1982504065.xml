<paper id="1982504065"><title>Historical queries along multiple lines of time evolution</title><year>1995</year><authors><author org="Polytechnic Univ., Brooklyn, NY" id="2136913910">Gad M. Landau</author><author org="Polytechnic Univ., Brooklyn, NY" id="2413183516">Jeanette P. Schmidt</author><author org="Polytechnic Univ., Brooklyn, NY" id="8132329">Vassilis J. Tsotras</author></authors><n_citation>21</n_citation><doc_type>Conference</doc_type><references><reference>41774791</reference><reference>136079928</reference><reference>1554228447</reference><reference>1560238660</reference><reference>1572809422</reference><reference>1589223644</reference><reference>1596800979</reference><reference>1826683848</reference><reference>1971550377</reference><reference>2004788871</reference><reference>2009980092</reference><reference>2013025864</reference><reference>2014846787</reference><reference>2026511056</reference><reference>2044015456</reference><reference>2086257032</reference><reference>2090747326</reference><reference>2096527593</reference><reference>2100576135</reference><reference>2114270519</reference><reference>2126413127</reference><reference>2128317658</reference><reference>2131322424</reference><reference>2142947709</reference><reference>2154322583</reference><reference>2294081347</reference></references><venue id="1133523790" type="C">Very Large Data Bases</venue><doi>10.1007/BF01354880</doi><keywords><keyword weight="0.49895">Data structure</keyword><keyword weight="0.45658">Data mining</keyword><keyword weight="0.51549">Horizontal and vertical</keyword><keyword weight="0.47587">Access method</keyword><keyword weight="0.45667">Computer science</keyword><keyword weight="0.46149">Theoretical computer science</keyword><keyword weight="0.41114">Time evolution</keyword><keyword weight="0.46485">Database transaction</keyword><keyword weight="0.48327">Hierarchy</keyword><keyword weight="0.44483">Database</keyword><keyword weight="0.0">Cad databases</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>Traditional approaches to addressing historical queries assume a single line of time evolution; that is, a system (database, relation) evolves over time through a sequence of transactions. Each transaction always applies to the unique, current state of the system, resulting in a new current state. There are, however, complex applications where the systemu0027s state evolves into multiple lines of evolution. In general, this creates a tree (hierarchy) of evolution lines, where each tree node represents the time evolution of a particular subsystem. Multiple lines create novel historical queries, such as vertical or horizontal historical queries. The key characteristic of these problems is that portions of the history are shared; answering historical queries should not necessitate duplication of shared histories as this could increase the storage requirements dramatically. Both the vertical and horizontal historical queries have two parts: a "search" part, where the time of interest is located together with the appropriate subsystem, and a reconstruction part, where the subsystemu0027s state is reconstructed for that time. This article focuses on the search part; several reconstruction methods, designed for single evolution lines can be applied once the appropriate time of interest is located. For both the vertical and the horizontal historical queries, we present algorithms that work without duplicating shared histories. Combinations of the vertical and horizontal queries are possible, and enable searching in both dimensions of the tree of evolutions.</abstract></paper>