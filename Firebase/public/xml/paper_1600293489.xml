<paper id="1600293489"><title>Overture: An Object-Oriented Framework for Solving Partial Differential Equations</title><year>1997</year><authors><author org="Los Alamos National Laboratory, CIC-19 MS 13256" id="2276272043">David L. Brown</author><author org="Los Alamos National Laboratory, CIC-19 MS 13256" id="2167958241">William D. Henshaw</author><author org="Los Alamos National Laboratory, CIC-19 MS 13256" id="2656001890">Daniel J. Quinlan</author></authors><n_citation>61</n_citation><doc_type>Conference</doc_type><references><reference>1507805857</reference></references><venue id="1192015008" type="C">Conference on Scientific Computing</venue><doi>10.1007/3-540-63827-X_59</doi><keywords><keyword weight="0.45915">Boundary value problem</keyword><keyword weight="0.46042">Algebra</keyword><keyword weight="0.49365">Object-oriented programming</keyword><keyword weight="0.43941">Computer science</keyword><keyword weight="0.45525">Algorithm</keyword><keyword weight="0.45633">Theoretical computer science</keyword><keyword weight="0.50421">Adaptive mesh refinement</keyword><keyword weight="0.47846">Operator (computer programming)</keyword><keyword weight="0.43502">Parallel array</keyword><keyword weight="0.47523">Partial differential equation</keyword><keyword weight="0.4836">Mesh generation</keyword><keyword weight="0.49491">Grid</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Overture framework is a collection of C++ classes that can be used to solve partial differential equations (PDEs). These classes were designed to support applications in one, two and three space dimensions on geometries ranging from simple rectangular regions to complicated three dimensional domains, and to support adaptive mesh refinement and moving grids. Overture is designed to run on serial and parallel machines through the use of the A++/P++ serial/parallel array class library. The Overture classes hide the details of the underlying data-structures and hide the details of features common to many PDE solvers such as the implementation of finite-difference and finite-volume operators and boundary conditions. In addition to the Mapping and Grid classes that represent geometry, the GridFunction classes that represent solutions, and the operator classes, there are classes for high-level interactive plotting, and data-base management. Overture also includes sophisticated grid generation capabilit</abstract></paper>