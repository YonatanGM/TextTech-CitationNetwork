<paper id="1586448612"><title>A theorem proving approach to analysis of secure information flow</title><year>2005</year><authors><author org="Swiss Federal Institute of Technology (ETH) Zurich," id="2276125027">Ádám Darvas</author><author org="chalmers University of Technology, Sweden" id="2627263793">Reiner Hähnle</author><author org="chalmers University of Technology, Sweden" id="2227234978">David Sands</author></authors><n_citation>161</n_citation><doc_type>Conference</doc_type><references><reference>1499168760</reference><reference>1515803040</reference><reference>1521474031</reference><reference>1524147119</reference><reference>1554618854</reference><reference>1569728954</reference><reference>1573154295</reference><reference>1598319336</reference><reference>1748251377</reference><reference>2088488063</reference><reference>2095840868</reference><reference>2098820900</reference><reference>2116647386</reference><reference>2122049982</reference><reference>2129278597</reference><reference>2158126684</reference><reference>2162068275</reference><reference>2173102238</reference><reference>2336123333</reference></references><venue id="1184048318" type="C">International Workshop on Security</venue><doi>10.1007/978-3-540-32004-3_20</doi><keywords><keyword weight="0.5382">Domain-specific language</keyword><keyword weight="0.57202">Information flow (information theory)</keyword><keyword weight="0.47477">Programming language</keyword><keyword weight="0.48176">Computer science</keyword><keyword weight="0.51991">Object type</keyword><keyword weight="0.52872">Automated theorem proving</keyword><keyword weight="0.56563">Declassification</keyword><keyword weight="0.50106">Proof theory</keyword><keyword weight="0.54644">Java Card</keyword><keyword weight="0.45623">Artificial intelligence</keyword><keyword weight="0.54272">Software verification</keyword><keyword weight="0.46466">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most attempts at analysing secure information flow in programs are based on domain-specific logics. Though computationally feasible, these approaches suffer from the need for abstraction and the high cost of building dedicated tools for real programming languages. We recast the information flow problem in a general program logic rather than a problem-specific one. We investigate the feasibility of this approach by showing how a general purpose tool for software verification can be used to perform information flow analyses. We are able to prove security and insecurity of programs including advanced features such as method calls, loops, and object types for the target language Java Card. In addition, we can express declassification of information.</abstract></paper>