<paper id="1554174780"><title>Compensation in workflow nets</title><year>2006</year><authors><author org="Institut f체r Informatik, Humboldt-Universit채t zu Berlin, Berlin," id="2496333580">Baver Acu</author><author org="Institut f체r Informatik, Humboldt-Universit채t zu Berlin, Berlin," id="531013306">Wolfgang Reisig</author></authors><n_citation>19</n_citation><doc_type>Conference</doc_type><references><reference>1487158608</reference><reference>1515932031</reference><reference>1556531117</reference><reference>2046740290</reference><reference>2129466958</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/11767589_5</doi><keywords><keyword weight="0.46173">Programming language</keyword><keyword weight="0.62236">Petri net</keyword><keyword weight="0.54692">Concurrency</keyword><keyword weight="0.44266">Collaborative software</keyword><keyword weight="0.45108">Computer science</keyword><keyword weight="0.55229">Formal specification</keyword><keyword weight="0.0">Workflow nets</keyword><keyword weight="0.54568">Workflow</keyword><keyword weight="0.43985">Database</keyword><keyword weight="0.45108">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a formal model to specify compensation of workflows: Each acyclic workflow net W (as defined by v.d. Aalst) is canonically extended to a net W+, representing the potential occurrence of failures, and the compensation of so-far executed actions. We show that the construction is compositional and correct, i.e. meets the expected properties.</abstract></paper>