<paper id="1527534931"><title>Fast generation of secure RSA-moduli with almost maximal diversity</title><year>1990</year><authors><author org="Institute for Signal and information Processing, Swiss Federal Institute of Technology, Zurich, Switzerland" id="2068596995">Ueli M. Maurer</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1514901799</reference><reference>1964053266</reference><reference>1971263694</reference><reference>1996360405</reference><reference>1999537317</reference><reference>2031342296</reference><reference>2045664183</reference><reference>2071138842</reference><reference>2079631449</reference><reference>2081882878</reference><reference>2108834246</reference><reference>2156186849</reference></references><venue id="1140213147" type="C">Theory and Application of Cryptographic Techniques</venue><doi>10.1007/3-540-46885-4_60</doi><keywords><keyword weight="0.55534">Prime (order theory)</keyword><keyword weight="0.45328">Discrete mathematics</keyword><keyword weight="0.62123">Strong pseudoprime</keyword><keyword weight="0.64748">Prime number</keyword><keyword weight="0.59388">Permutable prime</keyword><keyword weight="0.57545">Primality test</keyword><keyword weight="0.63156">Generating primes</keyword><keyword weight="0.67373">Safe prime</keyword><keyword weight="0.62276">Probable prime</keyword><keyword weight="0.41317">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes a new method for generating primes together with a proof of their primality that is extremely efficient (for 100-digit primes the average running time is equal to the average time required for finding a “strong pseudoprime” of the same size that passes the Miller-Rabin test for only four bases), that yields primes that are nearly uniformly distributed over the set of all primes in a given interval, and that is easily modified to yield (with no additional computational effort) primes that are nearly uniformly distributed over the subset of these primes that satisfy certain security constraints for use in the RSA cryptosystem. This method is used to generate, for a given encryption exponent e, an RSA-modulus m = pq that is nearly uniformly distributed over all secure RSA-moduli in a given interval I, i.e., over the set of all integers in I that are (1) the product of exactly two primes p and q none of which is smaller than a given limit L, where (2) (p − 1, e) = (q − 1, e) = 1 and (3) p − 1 and q − 1 each contain a prime factor greater than a given limit L′, and where (4) for all but a provably (given) small fraction of plaintexts in Z*m, the minimum number of iterated encryptions with exponent e required to recover the plaintext, is provably greater than a given limit M. Our method exploits a well-known result due to Pocklington [20] that allows one to prove the primality of p when only a partial factorization of p − 1 is known. These prime factors of p − 1 are generated by recursive application of the prime generating procedure. Although the discussion is centered on the RSA system, our method can of course be used in other cryptographic systems, such as the Diffie-Hellman public key distribution system, that require large primes satisfying certain security constraints.</abstract></paper>