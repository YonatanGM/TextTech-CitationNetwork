<paper id="1980803466"><title>Formal models of communication services: a case study</title><year>1993</year><authors><author org="Sydney Univ., NSW, , Australia" id="2154123352">A. Fekete</author></authors><n_citation>13</n_citation><doc_type>Journal</doc_type><references><reference>1857327297</reference><reference>1967593930</reference><reference>1985349143</reference><reference>2000302396</reference><reference>2012988094</reference><reference>2026356804</reference><reference>2043695863</reference><reference>2048185351</reference><reference>2062111520</reference><reference>2084625197</reference><reference>2118153508</reference><reference>2121372686</reference><reference>2295903464</reference></references><venue id="178916657" type="J">IEEE Computer</venue><doi>10.1109/2.223535</doi><keywords><keyword weight="0.47082">Software engineering</keyword><keyword weight="0.46953">Computer science</keyword><keyword weight="0.54929">Correctness</keyword><keyword weight="0.51629">Models of communication</keyword><keyword weight="0.4995">Implementation</keyword><keyword weight="0.60091">Formal specification</keyword><keyword weight="0.57391">Formal methods</keyword><keyword weight="0.50827">Standardization</keyword><keyword weight="0.58754">Telecommunications service</keyword><keyword weight="0.58381">Formal verification</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>Formal methods can play an important role in exploring new communication systems services. The telecommunications and data communications communities have long accepted the need for formally describing protocols, but only recently have they considered formally describing a service by abstracting specifications from a particular protocol that provides that service. Specifying a service at an abstract level meets two important needs: standardization and customization. The author presents a simplified atomic multicast as an example service and input/output automata for the formal model. He shows how to represent the service specification, a protocol, and implementations of that protocol. He also sketches how to prove the correctness of the protocol and implementation, that is, how to show that the specified service is actually provided. u003e</abstract></paper>