<paper id="1552255008"><title>An Action Language for UML: Proposal for a Precise Execution Semantics</title><year>1998</year><authors><author org="Project Technology, Inc." id="2306259429">Stephen J. Mellor</author><author org="ROCKWELL COLLINS, INC." id="2274498273">Stephen R. Tockey</author><author org="Verilog" id="2278776830">Rodolphe Arthaud</author><author org="Verilog" id="2685735092">Philippe Leblanc</author></authors><n_citation>19</n_citation><doc_type>Journal</doc_type><references><reference>1970857825</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/978-3-540-48480-6_24</doi><keywords><keyword weight="0.64831">Specification language</keyword><keyword weight="0.62822">UML state machine</keyword><keyword weight="0.4732">Programming language</keyword><keyword weight="0.685">UML tool</keyword><keyword weight="0.45812">Computer science</keyword><keyword weight="0.64993">Action language</keyword><keyword weight="0.74951">Applications of UML</keyword><keyword weight="0.62281">Systems Modeling Language</keyword><keyword weight="0.68993">Object Constraint Language</keyword><keyword weight="0.6572">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper explores the requirements for complementing the UML with a compatible, software-platform-independent executable action language that enables mapping into efficient code. This language is henceforth referred to as an action language. The user of the action language will be able to specify the structure of the algorithms for a problem domain precisely without making unnecessary assumptions about the detailed organization of the software. An action language will enable precise specification of the structure of actions on a UML State Chart and the operations on a UML Class Diagram.</abstract></paper>