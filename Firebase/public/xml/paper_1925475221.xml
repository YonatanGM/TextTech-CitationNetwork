<paper id="1925475221"><title>An automated framework for structural test-data generation</title><year>1998</year><authors><author org="Dept of Comput. Sci., York Univ., UK" id="1974543194">N. Tracey</author><author org="" id="2104149412">J. Clark</author><author org="" id="2111568768">K. Mander</author><author org="" id="2213027448">J. McDermid</author></authors><n_citation>169</n_citation><doc_type>Conference</doc_type><references><reference>1511703676</reference><reference>1974394819</reference><reference>1986749780</reference><reference>2033072042</reference><reference>2056309769</reference><reference>2059204751</reference><reference>2059942119</reference><reference>2066536303</reference><reference>2101512909</reference><reference>2101629181</reference><reference>2109276114</reference><reference>2120552859</reference><reference>2144524990</reference><reference>2155786233</reference><reference>2207424630</reference></references><venue id="1166511975" type="C">Automated Software Engineering</venue><doi>10.1109/ASE.1998.732680</doi><keywords><keyword weight="0.67253">Test Management Approach</keyword><keyword weight="0.4533">Systems engineering</keyword><keyword weight="0.45488">Computer science</keyword><keyword weight="0.63054">Manual testing</keyword><keyword weight="0.63749">White-box testing</keyword><keyword weight="0.61377">Non-regression testing</keyword><keyword weight="0.66757">Test data</keyword><keyword weight="0.63188">Test strategy</keyword><keyword weight="0.70824">Test data generation</keyword><keyword weight="0.65002">Keyword-driven testing</keyword></keywords><publisher>IEEE</publisher><abstract>Structural testing criteria are mandated in many software development standards and guidelines. The process of generating test data to achieve 100% coverage of a given structural coverage metric is labour-intensive and expensive. This paper presents an approach to automate the generation of such test data. The test-data generation is based on the application of a dynamic optimisation-based search for the required test data. The same approach can be generalised to solve other test-data generation problems. Three such applications are discussed-boundary value analysis, assertion/run-time exception testing, and component re-use testing. A prototype tool-set has been developed to facilitate the automatic generation of test data for these structural testing problems. The results of preliminary experiments using this technique and the prototype tool-set are presented and show the efficiency and effectiveness of this approach.</abstract></paper>