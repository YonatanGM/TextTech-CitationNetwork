<paper id="1541947827"><title>Towards the automatic verification of PLC programs written in Instruction List</title><year>2000</year><authors><author org="Corp. Res. Center, Alcatel CIT, Marcoussis, France" id="2619348185">G. Canet</author><author org="" id="2974169690">S. Couffin</author><author org="" id="2975476069">J.-J. Lesage</author><author org="" id="2557666031">A. Petit</author><author org="" id="2973437659">P. Schnoebelen</author></authors><n_citation>98</n_citation><doc_type>Conference</doc_type><references><reference>2096389927</reference><reference>2134997348</reference><reference>2340735175</reference></references><venue id="1170695740" type="C">Systems, Man and Cybernetics</venue><doi>10.1109/ICSMC.2000.884359</doi><keywords><keyword weight="0.55267">Model checking</keyword><keyword weight="0.47832">Programming language</keyword><keyword weight="0.49342">Functional programming</keyword><keyword weight="0.45956">Computer science</keyword><keyword weight="0.57754">Linear temporal logic</keyword><keyword weight="0.65234">Instruction list</keyword><keyword weight="0.54691">Programmable logic controller</keyword><keyword weight="0.55063">Temporal logic</keyword><keyword weight="0.51312">Semantics</keyword><keyword weight="0.58245">Formal verification</keyword></keywords><publisher>IEEE</publisher><abstract>We propose a framework for the automatic verification of PLC (programmable logic controller) programs written in Instruction List, one of the five languages defined in the IEC 61131-3 standard. We propose a formal semantics for a significant fragment of the IL language, and a direct coding of this semantics into a model checking tool. We then automatically verify rich behavioral properties written in linear temporal logic. Our approach is illustrated on the example of the tool-holder of a turning center.</abstract></paper>