<paper id="1967415230"><title>THE COMPLEXITY OF DECISION VERSUS SEARCH</title><year>1991</year><authors><author org="University of California‐San Diego" id="2052950829">Mihir Bellare</author><author org="massachusetts institute of technology" id="1728759264">Shafi Goldwasser</author></authors><n_citation>58</n_citation><doc_type>Journal</doc_type><references><reference>1519465599</reference><reference>1593353904</reference><reference>1630273691</reference><reference>1970606468</reference><reference>1979549874</reference><reference>2002032317</reference><reference>2005390858</reference><reference>2010699490</reference><reference>2036265926</reference><reference>2036878936</reference><reference>2052936500</reference><reference>2084732248</reference><reference>2090841650</reference><reference>2113244484</reference><reference>2173249896</reference></references><venue id="153560523" type="J">SIAM Journal on Computing</venue><doi>10.1137/S0097539792228289</doi><keywords><keyword weight="0.44006">Discrete mathematics</keyword><keyword weight="0.43259">Combinatorics</keyword><keyword weight="0.49044">Existential quantification</keyword><keyword weight="0.45114">Computer science</keyword><keyword weight="0.43788">Witness</keyword><keyword weight="0.49606">Mathematical proof</keyword><keyword weight="0.58676">Time complexity</keyword><keyword weight="0.4978">Gas meter prover</keyword><keyword weight="0.55994">Theory of computation</keyword><keyword weight="0.53636">Computational complexity theory</keyword><keyword weight="0.6317">NP</keyword></keywords><publisher>Society for Industrial and Applied Mathematics</publisher><abstract>A basic question about NP is whether or not search (the problem of finding a witness) reduces in polynomial time to decision (the problem of deciding whether there exists a witness). The fact that search does reduce to decision for SAT and other NP-complete problems (self-reducibility) is among the most well known facts in the theory of computation. But the general question of whether search reduces to decision for every language in NP remains open. We indicate that the answer is negative: under a natural complexity assumption (that deterministic and non-deterministic double exponential time are unequal) we construct a language in NP for which search does not reduce to decision. These ideas extend in a natural way to interactive proofs and program checking to yield negative results about the power of the prover and the complexity of checkers. We present languages in IP for which it is harder for the prover to prove membership to a verifier than it is to decide this membership. Similarly we present languages where checking is harder than computing membership. These results are also under assumptions about double-exponential time separations. Our arguments are simple and direct. We bypass Yaou0027u0027s notion of coherence which was used to establish previous negative results in program checking, establishing stronger results by different techniques. By demonstrating-under the same assumptions-the existence of a language which is coherent but not checkable we indicate that coherence may not be the right approach to negative results in this area. The connections we establish with double-exponential time classes provide an interesting example of how complexity "high up" can shed light on properties of basic classes like NP and IP.</abstract></paper>