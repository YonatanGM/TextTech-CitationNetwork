<paper id="1617228447"><title>Exploring Summation and Product Operators in the Refinement Calculus</title><year>1995</year><authors><author org="ABO AKADEMI" id="2108467651">Ralph-Johan Back</author><author org="ABO AKADEMI" id="2114313152">Michael J. Butler</author></authors><n_citation>23</n_citation><doc_type>Conference</doc_type><references><reference>1552647623</reference><reference>1572811214</reference><reference>1576090512</reference><reference>1577885475</reference><reference>1814622354</reference><reference>1970495662</reference><reference>1996302019</reference><reference>2008212936</reference><reference>2016535383</reference><reference>2043279475</reference><reference>2073708948</reference><reference>2087713039</reference><reference>2103953153</reference><reference>2110425399</reference><reference>2117879955</reference><reference>2133922908</reference><reference>2157218677</reference></references><venue id="1159310735" type="C">Mathematics of Program Construction</venue><doi>10.1007/3-540-60117-1_8</doi><keywords><keyword weight="0.59966">Fourier integral operator</keyword><keyword weight="0.44963">Discrete mathematics</keyword><keyword weight="0.5272">Operator product expansion</keyword><keyword weight="0.5625">Refinement calculus</keyword><keyword weight="0.61027">Compact operator on Hilbert space</keyword><keyword weight="0.43927">Computer science</keyword><keyword weight="0.63441">Operator (computer programming)</keyword><keyword weight="0.67285">Operator theory</keyword><keyword weight="0.51924">Higher-order logic</keyword><keyword weight="0.60943">Spectral theorem</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Product and summation operators for predicate transformers were introduced by Naumann and by Martin using category theoretic considerations. In this paper, we formalise these operators in the higher order logic approach to the refinement calculus of Back and von Wright, and examine various algebraic properties of these operators. There are several motivating factors for this analysis. The product operator provides a model of simultaneous execution of statements, while the summation operator provides a simple model of late binding. We also generalise the product operator slightly to form an operator that corresponds to conjunction of specifications. We examine several applications of the these operators showing, for example, how a combination of the product and summation operators could be used to model inheritance in an object-oriented programming language.</abstract></paper>