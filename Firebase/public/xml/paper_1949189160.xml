<paper id="1949189160"><title>State-space support for path-based reward variables</title><year>1998</year><authors><author org="Center for Reliable &amp; High-Performance Comput., Illinois Univ., Urbana, IL, USA" id="2832195088">W.D. Obal</author><author org="" id="2280265749">W.H. Sanders</author></authors><n_citation>10</n_citation><doc_type /><references><reference>1548777301</reference><reference>1964607263</reference><reference>1992580876</reference><reference>2055418118</reference><reference>2087714503</reference><reference>2128934846</reference><reference>2129091052</reference><reference>2134976165</reference><reference>2153189672</reference><reference>2153851383</reference></references><venue id="" type="">Proceedings. IEEE International Computer Performance and Dependability Symposium. IPDS'98 (Cat. No.98TB100248)</venue><doi>10.1109/IPDS.1998.707725</doi><keywords><keyword weight="0.49817">Dependability</keyword><keyword weight="0.45345">Computer science</keyword><keyword weight="0.4832">Automaton</keyword><keyword weight="0.47751">Stochastic process</keyword><keyword weight="0.46162">Theoretical computer science</keyword><keyword weight="0.4917">Formal specification</keyword><keyword weight="0.52551">State space</keyword><keyword weight="0.489">Rotation formalisms in three dimensions</keyword><keyword weight="0.50488">System model</keyword></keywords><publisher>IEEE</publisher><abstract>Many sophisticated formalisms exist for specifying complex system behaviors, but methods for specifying performance and dependability variables have remained quite primitive. To cope with this problem, modelers often must augment system models with extra state information and event types to support particular variables. This often leads to models that are non-intuitive, and must be changed to support different variables. To address this problem, we extend the array of performance measures that may be derived from a given system model by developing new performance measure specification and model construction techniques. Specifically, we introduce a class of path-based reward variables, and show how various performance measures may be specified using these variables. Path-based reward variables extend the previous work with reward structures to allow rewards to be accumulated based on sequences of states and transitions. To maintain the relevant history, we introduce the concept of a path automaton, whose state transitions are based on the system model state and transitions. Furthermore, we present a new procedure for constructing state spaces and the associated transition rate matrices that support path-based reward variables. Our new procedure takes advantage of the path automaton to allow a single system model to be used as the basis of multiple performance measures that would otherwise require separate models or a single more complicated model.</abstract></paper>