<paper id="1970187925"><title>Cryptography against Continuous Memory Attacks</title><year>2010</year><authors><author org="New York University, New York , NY, USA#TAB#" id="1259442811">Yevgeniy Dodis</author><author org="New York University, New York , NY, USA#TAB#" id="2305507359">Kristiyan Haralambiev</author><author org="New York University, New York , NY, USA#TAB#" id="348144399">Adriana Lopez-Alt</author><author org="New York University, New York , NY, USA#TAB#" id="234122163">Daniel Wichs</author></authors><n_citation>167</n_citation><doc_type>Conference</doc_type><references><reference>19911921</reference><reference>103647506</reference><reference>111085860</reference><reference>126491009</reference><reference>150498788</reference><reference>236432643</reference><reference>276059865</reference><reference>1483290420</reference><reference>1494600236</reference><reference>1500578148</reference><reference>1508077776</reference><reference>1518187966</reference><reference>1520746637</reference><reference>1525987514</reference><reference>1535972735</reference><reference>1538463291</reference><reference>1541483074</reference><reference>1547517307</reference><reference>1548963432</reference><reference>1550901512</reference><reference>1573157032</reference><reference>1575126375</reference><reference>1576151945</reference><reference>1580920982</reference><reference>1588518948</reference><reference>1590713339</reference><reference>1592625985</reference><reference>1603601034</reference><reference>1606729219</reference><reference>1819824216</reference><reference>1970808997</reference><reference>1987129710</reference><reference>2051250911</reference><reference>2079257806</reference><reference>2096290348</reference><reference>2101458679</reference><reference>2101803085</reference><reference>2102632861</reference><reference>2128673483</reference><reference>2133701468</reference><reference>2141395382</reference><reference>2146813141</reference><reference>2146907493</reference><reference>2150044026</reference><reference>2150399720</reference><reference>2153281696</reference><reference>2169265599</reference><reference>2169985476</reference><reference>2172174332</reference><reference>2175377689</reference></references><venue id="1150208541" type="C">Foundations of Computer Science</venue><doi>10.1109/FOCS.2010.56</doi><keywords><keyword weight="0.49738">Homomorphic encryption</keyword><keyword weight="0.48977">Authentication</keyword><keyword weight="0.51897">Cryptographic protocol</keyword><keyword weight="0.44266">Computer science</keyword><keyword weight="0.52583">Cryptography</keyword><keyword weight="0.54074">Encryption</keyword><keyword weight="0.44144">Theoretical computer science</keyword><keyword weight="0.55695">Public-key cryptography</keyword><keyword weight="0.44238">Randomness</keyword><keyword weight="0.44896">Bounded function</keyword></keywords><publisher>IEEE</publisher><abstract>We say that a cryptographic scheme is Continuous Leakage-Resilient (CLR), if it allows users to refresh their secret keys, using only fresh local randomness, such that: 1. The scheme remains functional after any number of key refreshes, although the public key never changes. Thus, the â€œoutside worldu0027u0027 is neither affected by these key refreshes, nor needs to know about their frequency. 2. The scheme remains secure even if the adversary can continuously leak arbitrary information about the current secret-key, as long as the amount of leaked information is bounded in between any two successive key refreshes. There is no bound on the total amount of information that can be leaked during the lifetime of the system. In this work, we construct a variety of practical CLR schemes, including CLR one-way relations, CLR signatures, CLR identification schemes, and CLR authenticated key agreement protocols. For each of the above, we give general constructions, and then show how to instantiate them efficiently using a well established assumption on bilinear groups, called the K-Linear assumption (for any constant K greater than or equal to 1). Our constructions are highly modular, and we develop many interesting techniques and building-blocks along the way, including: leakage-indistinguishable re-randomizable relations, homomorphic NIZKs, and leakage-of-cipher text non-malleable encryption schemes.</abstract></paper>