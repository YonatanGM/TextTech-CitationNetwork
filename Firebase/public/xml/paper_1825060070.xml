<paper id="1825060070"><title>A General Resource Reservation Framework for Scientific Computing</title><year>1997</year><authors><author org=" California Institute of Technology" id="2146115641">Ravi Ramamoorthi</author><author org=" California Institute of Technology" id="2158924317">Adam Rifkin</author><author org=" California Institute of Technology" id="2503582141">Boris Dimitrov</author><author org=" California Institute of Technology" id="594049255">K. Mani Chandy</author></authors><n_citation>17</n_citation><doc_type>Conference</doc_type><references><reference>1932324423</reference><reference>2111996486</reference><reference>2116788702</reference><reference>2140332639</reference><reference>2171456057</reference></references><venue id="1192015008" type="C">Conference on Scientific Computing</venue><doi>10.1007/3-540-63827-X_72</doi><keywords><keyword weight="0.6904">Resource management</keyword><keyword weight="0.48734">Reservation</keyword><keyword weight="0.50893">Scheduling (computing)</keyword><keyword weight="0.46625">Computer science</keyword><keyword weight="0.60921">Human resource management system</keyword><keyword weight="0.44736">Theoretical computer science</keyword><keyword weight="0.62413">Resource allocation (computer)</keyword><keyword weight="0.70746">Resource allocation</keyword><keyword weight="0.59551">Distributed algorithm</keyword><keyword weight="0.47738">Java</keyword><keyword weight="0.46408">Database</keyword><keyword weight="0.46192">Distributed computing</keyword></keywords><publisher>California Institute of Technology</publisher><abstract>We describe three contributions for distributed resource allocation in scientific applications. First, we present an abstract model in which different resources are represented as tokens of different colors; processes acquire resources by acquiring these tokens. Second, we present distributed scheduling algorithms that allow multiple resource managers to determine custom policies to control allocation of the tokens representing their particular resources. These algorithms allow multiple resource managers, each with its own resource management policy, to collaborate in providing resources for the whole system. Third, we present an implementation of a distributed resource scheduling algorithm framework using our abstract model. This implementation uses Infospheres, which are Internet communication packages written in Java, and shows the benefits of distributing the task of resource allocation to multiple resource managers.</abstract></paper>