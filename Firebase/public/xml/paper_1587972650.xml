<paper id="1587972650"><title>INDISS: interoperable discovery system for networked services</title><year>2005</year><authors><author org="INRIA, Rocquencourt, Le Chesnay, France#TAB#" id="2311387113">Yérom-David Bromberg</author><author org="INRIA, Rocquencourt, Le Chesnay, France#TAB#" id="727259636">Valérie Issarny</author></authors><n_citation>83</n_citation><doc_type>Conference</doc_type><references><reference>1511122729</reference><reference>1524416637</reference><reference>2038223391</reference><reference>2124942057</reference><reference>2134570896</reference><reference>2152719056</reference><reference>2166309302</reference></references><venue id="2754386153" type="C">ACM/IFIP/USENIX international conference on Middleware</venue><doi>10.1007/11587552_9</doi><keywords><keyword weight="0.54171">Mobile computing</keyword><keyword weight="0.56316">Middleware</keyword><keyword weight="0.45976">World Wide Web</keyword><keyword weight="0.44116">Computer science</keyword><keyword weight="0.55698">Interoperability</keyword><keyword weight="0.50344">Mobile device</keyword><keyword weight="0.52322">Web service</keyword><keyword weight="0.47729">Reactive system</keyword><keyword weight="0.63428">Service discovery</keyword><keyword weight="0.47892">Software development</keyword><keyword weight="0.45432">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The emergence of handheld devices associated with wireless technologies has introduced new challenges for middleware. First, mobility is becoming a key characteristic; mobile devices may move around different areas and have to interact with different types of networks and services, and may be exposed to new communication paradigms. Second, the increasing number and diversity of devices, as in particular witnessed in the home environment, lead to the advertisement of supported services according to different service discovery protocols as they come from various manufacturers. Thus, if networked services are advertised with protocols different than those supported by client devices, the latter are unable to discover their environment and are consequently isolated. This paper presents a system based on event-based parsing techniques to provide full service discovery interoperability to any existing middleware. Our system is transparent to applications, which are not aware of the existence of our interoperable system that adapts itself to both its environment across time and its host to offer interoperability anytime anywhere. A prototype implementation of our system is further presented, enabling us to demonstrate that our approach is both lightweight in terms of resource usage and efficient in terms of response time.</abstract></paper>