<paper id="1490333790"><title>Object-Oriented Database Systems: a Framework for User Interface Development</title><year>1993</year><authors><author org="Lancaster University ()" id="2133238635">Peter Sawyer</author><author org="Lancaster University ()" id="1240672881">Andy Colebourne</author><author org="Lancaster University ()" id="2093398104">Ian Sommerville</author><author org="Lancaster University ()" id="1681287072">John A. Mariani</author></authors><n_citation>8</n_citation><doc_type /><references><reference>1499048821</reference><reference>1578357559</reference><reference>1583169995</reference><reference>1590607611</reference><reference>1965011635</reference><reference>1974597553</reference><reference>1990184250</reference><reference>1992847198</reference><reference>2001657718</reference><reference>2021570844</reference><reference>2026735162</reference><reference>2067269043</reference><reference>2077207253</reference><reference>2095436501</reference><reference>2147249222</reference><reference>2152967059</reference><reference>2176293370</reference><reference>2289666534</reference></references><venue id="" type="">IDS</venue><doi>10.1007/978-1-4471-3423-7_3</doi><keywords><keyword weight="0.57075">Relational database</keyword><keyword weight="0.45621">Computer science</keyword><keyword weight="0.56487">Database design</keyword><keyword weight="0.47269">Human–computer interaction</keyword><keyword weight="0.54875">Graphical user interface testing</keyword><keyword weight="0.62931">User interface design</keyword><keyword weight="0.64179">User interface</keyword><keyword weight="0.58512">Natural user interface</keyword><keyword weight="0.55224">Multiple document interface</keyword><keyword weight="0.56496">Interface metaphor</keyword></keywords><publisher>Springer, London</publisher><abstract>Object-oriented database management systems (OODBMSs) are emerging as commercial products. While they do not compete directly with relational databases, relational systems have established a level of usability which OODBMSs must strive to match. This is true particularly in the area of tools and user interfaces. OODBMSs pose particular problems for user interface designers but also provide some potentially exploitable characteristics. This paper identifies some of these and describes a framework for providing user interfaces for a class of OODBMS where the direct encapsulation of objects’ user interfaces in methods or views is neither possible nor desirable.</abstract></paper>