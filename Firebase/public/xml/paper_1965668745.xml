<paper id="1965668745"><title>Software tasks: intellectual, clerical ... or creative?</title><year>1994</year><authors><author org="" id="2225247879">Vessey</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>1489474344</reference><reference>2033652925</reference></references><venue id="1164519180" type="C">Hawaii International Conference on System Sciences</venue><doi>10.1109/HICSS.1994.323477</doi><keywords><keyword weight="0.43529">Computer science</keyword><keyword weight="0.42178">Humanity</keyword><keyword weight="0.45839">Knowledge management</keyword><keyword weight="0.55509">Software</keyword><keyword weight="0.64349">Software walkthrough</keyword><keyword weight="0.70317">Software construction</keyword><keyword weight="0.51149">Creativity</keyword></keywords><publisher>IEEE</publisher><abstract>Is the work of software predominantly clerical, intellectual, or creative? A number of opinions on the issue presently co-exist in the field, and they cannot all be valid: software is trivial to build; software construction is automatable; software construction is the most complex activity ever undertaken by humanity; software cannot be built without creative acts. The authors report on the continuation of a prior study into the question. They summarize the findings of the prior study/spl minus/that software work is 80% intellectual and 20% clerical/spl minus/and explore the further issue of the degree to which the work is creative. The findings, though interesting, are not definitive. They do suggest, however, that this answer is at least possible: the tasks of software require some degree of creativity. The extent of that creativity remains to be determined. u003e</abstract></paper>