<paper id="1913166775"><title>On the false path problem in hard real-time programs</title><year>1996</year><authors><author org="C-LAB, Paderborn, Germany" id="306605047">P. Altenbernd</author></authors><n_citation>82</n_citation><doc_type>Journal</doc_type><references><reference>2006950332</reference><reference>2016233710</reference><reference>2138952175</reference><reference>2161061437</reference><reference>2163847664</reference></references><venue id="183885566" type="J">Real-time Systems</venue><doi>10.1109/EMWRTS.1996.557827</doi><keywords><keyword weight="0.45596">Structured systems analysis and design method</keyword><keyword weight="0.52902">Heuristic</keyword><keyword weight="0.5726">Worst-case execution time</keyword><keyword weight="0.46038">Computer science</keyword><keyword weight="0.48986">Control flow</keyword><keyword weight="0.46423">Algorithm</keyword><keyword weight="0.44598">Real-time computing</keyword><keyword weight="0.45149">Functional dependency</keyword><keyword weight="0.56676">Symbolic execution</keyword><keyword weight="0.49727">Recursion</keyword><keyword weight="0.51209">Computational complexity theory</keyword></keywords><publisher>IEEE</publisher><abstract>The paper addresses the important subject of estimating the worst case execution time (WCET) of hard real time programs essentially needed for further evaluation of real time systems. Purely structure oriented methods, analysing the control flow of the program without taking into account functional dependencies, tend to overestimate the execution time. An exact solution of this NP complete problem is impossible for larger applications. We propose a new heuristic of finding an estimate on the WCET. It provides a reasonable tradeoff between analysis results and analysis efforts: the results will still be better than purely structure oriented methods without spending too much time on finding an exact solution. For this purpose our approach does not need any user annotations except for maximum loop counts and maximum recursion depths. The actual algorithm combines pruned path enumeration with the concept of symbolic execution.</abstract></paper>