<paper id="1511421470"><title>Procedure Implementation Through Demodulation and Related Tricks</title><year>1982</year><authors><author org="Argonne National Laboratory,#TAB#" id="2574526426">S. K. Winker</author><author org="Argonne National Laboratory,#TAB#" id="2024384555">Larry Wos</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1495859581</reference><reference>1972956465</reference><reference>1974462798</reference><reference>2009579853</reference><reference>2011948182</reference><reference>2038464985</reference><reference>2041659040</reference><reference>2044493912</reference><reference>2058514808</reference><reference>2084463114</reference><reference>2100738443</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/BFb0000054</doi><keywords><keyword weight="0.41491">Demodulation</keyword><keyword weight="0.45331">Programming language</keyword><keyword weight="0.50572">Programmer</keyword><keyword weight="0.46174">Subroutine</keyword><keyword weight="0.0">Class number</keyword><keyword weight="0.46049">Computer science</keyword><keyword weight="0.42637">Algorithm</keyword><keyword weight="0.47165">Computer program</keyword><keyword weight="0.46009">Bookkeeping</keyword><keyword weight="0.44813">Skolem normal form</keyword><keyword weight="0.43498">Mathematical logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In writing a computer program, the programmer often uses procedures or subroutines to carry out frequently-occurring subsidiary tasks. These tasks range from simple bookkeeping and updating to the seeking of the generalization of two given formulas. Problems that one wishes to solve with the assistance of an automated theorem-proving program likewise often involve subsidiary tasks and the corresponding need for procedures (or their equivalent) to accomplish them. It is reasonable to conjecture that employment of procedures either requires the use of external programs or requires substantial modification of the existing theorem-proving program itself. In this paper we give examples that show that neither is the case. Demodulation is the key to implementing the procedures that accomplish such frequently-occurring tasks.</abstract></paper>