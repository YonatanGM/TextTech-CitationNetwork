<paper id="1514430255"><title>Implementing Data Parallel Programs on Commodity Clusters</title><year>1996</year><authors><author org="University of New Hampshire *" id="2233081595">Philip J. Hatcher</author><author org="University of New Hampshire *" id="2169110334">Robert D. Russell</author><author org="Oregon State University." id="2467697656">Santhosh Kumaran</author><author org="Oregon State University." id="2806424558">Michael J. Quinn</author></authors><n_citation>1</n_citation><doc_type /><references><reference>1542985837</reference><reference>1967800745</reference><reference>2036398208</reference><reference>2048407520</reference><reference>2108167744</reference><reference>2111482908</reference><reference>2118717320</reference><reference>2120543825</reference><reference>2127547524</reference><reference>2154207621</reference><reference>2155066383</reference></references><venue id="" type="">The Data Parallel Programming Model: Foundations, HPF Realization, and Scientific Applications</venue><doi>10.1007/3-540-61736-1_47</doi><keywords><keyword weight="0.4127">Cluster (physics)</keyword><keyword weight="0.46747">Computer architecture</keyword><keyword weight="0.40614">Leverage (finance)</keyword><keyword weight="0.61747">Massively parallel</keyword><keyword weight="0.46913">Computer science</keyword><keyword weight="0.4734">Commodity</keyword><keyword weight="0.50492">Software</keyword><keyword weight="0.50471">Cluster analysis</keyword><keyword weight="0.0">Commodity hardware</keyword><keyword weight="0.52038">Virtual Processor</keyword><keyword weight="0.47086">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Parallel computing is moving rapidly from an era of “Big Iron” to a future that will be dominated by systems built from commodity components. Users will be able to construct high-performance systems by clustering off-the-shelf processors using widely available high-speed switches. A key question is how to organize the supporting software to best leverage these commodity hardware systems. We address this question by reviewing two aspects of how to best implement data parallel programs on commodity clusters. We identify research questions that arise at the interface between the network and the user program, and we also explore problems that arise when attempting to utilize multiprocessors as the basic building block for constructing clusters.</abstract></paper>