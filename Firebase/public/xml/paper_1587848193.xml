<paper id="1587848193"><title>Surfaces in an object-oriented geometric framework</title><year>1993</year><authors><author org="Universität Tübingen" id="2126764247">Reinhard Klein</author></authors><n_citation>2</n_citation><doc_type /><references><reference>1716501509</reference><reference>1968221285</reference><reference>1987076234</reference><reference>1989513862</reference><reference>1996404762</reference><reference>2010929208</reference><reference>2054030830</reference><reference>2099638983</reference><reference>2159031840</reference></references><venue id="" type="">Graphics and Robotics</venue><doi>10.1007/978-3-642-79210-6_11</doi><keywords><keyword weight="0.52814">Object-oriented programming</keyword><keyword weight="0.45166">Computer science</keyword><keyword weight="0.46075">Theoretical computer science</keyword><keyword weight="0.53958">Delaunay triangulation</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>To use the advantages of different surface representations, such as tensor-product surfaces, surfaces over triangular regions, implicitly defined surfaces, etc., it is necessary to integrate these surface types with a large variety of algorithms into one programming environment. Inheritance and polymorphism of object-oriented languages offer the opportunity to realize an implementation, which is not bound to a certain representation of the surface. The most reasonable way to benefit from such an object-oriented approach is to use existing algorithms and if necessary to develop new algorithms that are based on the functionality provided by as many surface representations as possible. An object-oriented design for surfaces is presented and the advantages of such a design are illustrated by examples.</abstract></paper>