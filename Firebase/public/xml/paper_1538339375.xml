<paper id="1538339375"><title>Expressive power of query languages</title><year>1991</year><authors><author org="Databases" id="172400696">Serge Abiteboul</author><author org="Databases" id="152493642">Victor Vianu</author></authors><n_citation>26</n_citation><doc_type /><references><reference>189149083</reference><reference>1497998981</reference><reference>1547414429</reference><reference>1761552948</reference><reference>1970629906</reference><reference>1984715534</reference><reference>1984890936</reference><reference>1993041504</reference><reference>2031929451</reference><reference>2039302045</reference><reference>2058401325</reference><reference>2065251436</reference><reference>2078643445</reference><reference>2085536555</reference><reference>2088094394</reference><reference>2134054571</reference><reference>2161609549</reference><reference>2170743240</reference></references><venue id="" type="">Theoretical studies in computer science</venue><doi>10.1016/B978-0-12-708240-0.50013-7</doi><keywords><keyword weight="0.5284">Complexity class</keyword><keyword weight="0.71601">Query language</keyword><keyword weight="0.60394">Second-generation programming language</keyword><keyword weight="0.61375">Comparison of multi-paradigm programming languages</keyword><keyword weight="0.46678">Programming language</keyword><keyword weight="0.46106">Computer science</keyword><keyword weight="0.62613">Abstract family of languages</keyword><keyword weight="0.54187">P</keyword><keyword weight="0.47155">Theoretical computer science</keyword><keyword weight="0.658">Descriptive complexity theory</keyword><keyword weight="0.60689">Spatial query</keyword></keywords><publisher>Academic Press Professional, Inc.</publisher><abstract>Abstract Recent research on query languages and their expressive power is discussed. Several query languages are described, emphasizing recursive extensions of the first-order queries based on three paradigms: logic, algebraic, and logic programming. Many of these languages converge around two central classes of queries, the fixpoint queries and the while queries. The relative expressive power of these languages is examined, as well as their connection to complexity classes of queries. The focus is on the inability of languages to express low complexity classes of queries, PTIME and below. We consider several ways to circumvent this difficulty. The first is to introduce an ordering of the domain which leads to a trade-off between complexity and the data independence principle. The cost of computing without order is formalized by defining non-standard complexity classes based on a model of database computation called Generic Machine. As an alternative to order, it is shown that the difficulty of expressing low complexity classes can be circumvented by introducing non-deterministic constructs in query languages. Expressiveness above NP is also discussed.</abstract></paper>