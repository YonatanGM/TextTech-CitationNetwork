<paper id="1970558557"><title>Dynamic weaving for aspect-oriented programming</title><year>2002</year><authors><author org="Swiss Federal Institut of Technology Zürich, CH-8092 Zürich, Switzerland" id="2010227090">Andrei Popovici</author><author org="Swiss Federal Institut of Technology Zürich, CH-8092 Zürich, Switzerland" id="2112219004">Thomas Gross</author><author org="Swiss Federal Institut of Technology Zürich, CH-8092 Zürich, Switzerland" id="2122271048">Gustavo Alonso</author></authors><n_citation>246</n_citation><doc_type>Conference</doc_type><references><reference>1502457987</reference><reference>1509514020</reference><reference>1545945520</reference><reference>1556226926</reference><reference>1596847037</reference><reference>1889873938</reference><reference>1978220811</reference><reference>1991604845</reference><reference>2033868415</reference><reference>2070552116</reference><reference>2093831601</reference><reference>2103675419</reference><reference>2117341533</reference><reference>2138363365</reference><reference>2155651624</reference></references><venue id="1194005070" type="C">Aspect-Oriented Software Development</venue><doi>10.1145/508386.508404</doi><keywords><keyword weight="0.49862">Rapid prototyping</keyword><keyword weight="0.54563">Weaving</keyword><keyword weight="0.4663">Programming language</keyword><keyword weight="0.58462">Aspect-oriented programming</keyword><keyword weight="0.47192">Software engineering</keyword><keyword weight="0.44996">Computer science</keyword><keyword weight="0.4233">Real-time computing</keyword><keyword weight="0.58531">Component-based software engineering</keyword><keyword weight="0.54357">Java</keyword><keyword weight="0.0">Component oriented programming</keyword><keyword weight="0.56639">Debugging</keyword></keywords><publisher>ACM</publisher><abstract>When using Aspect Oriented Programming in the development of software components, a developer must understand the program units actually changed by weaving, how they behave, and possibly correct the aspects used. Support for rapid AOP prototyping and debugging is therefore crucial in such situations. Rapid prototyping is difficult with current aspect weaving tools because they do not support dynamic changes. This paper describes PROSE (PROgrammable extenSions of sErvices), a platform based on Java which addresses dynamic AOP. Aspects are expressed in the same source language as the application (Java), and PROSE allows aspects to be woven, unwoven, or replaced at run-time.</abstract></paper>