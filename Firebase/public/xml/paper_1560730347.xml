<paper id="1560730347"><title>Partial Order Reductions for Timed Systems</title><year>1998</year><authors><author org=", Uppsala University," id="2166770819">Johan Bengtsson</author><author org=", Uppsala University," id="2285498729">Bengt Jonsson</author><author org="Ã•bo Akademi University" id="2149006611">Johan Lilius</author><author org=", Uppsala University," id="2124415778">Wang Yi</author></authors><n_citation>135</n_citation><doc_type>Conference</doc_type><references><reference>59365162</reference><reference>1490546070</reference><reference>1528441743</reference><reference>1540501475</reference><reference>1543690662</reference><reference>1568729458</reference><reference>1598081036</reference><reference>1773520078</reference><reference>1861370427</reference><reference>1874725288</reference><reference>2016300863</reference><reference>2118802216</reference><reference>2144362636</reference><reference>2145000217</reference><reference>2151612633</reference><reference>2173952623</reference><reference>2180475648</reference><reference>2573837267</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/BFb0055643</doi><keywords><keyword weight="0.51028">Automata theory</keyword><keyword weight="0.45271">Computer science</keyword><keyword weight="0.51301">Concurrency</keyword><keyword weight="0.499">Automaton</keyword><keyword weight="0.4661">Real-time operating system</keyword><keyword weight="0.45918">Theoretical computer science</keyword><keyword weight="0.50461">Reachability</keyword><keyword weight="0.55828">Clock synchronization</keyword><keyword weight="0.57054">Partial order reduction</keyword><keyword weight="0.46902">Semantics</keyword><keyword weight="0.45128">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we present a partial-order reduction method for timed systems based on a local-time semantics for networks of timed automata. The main idea is to remove the implicit clock synchronization between processes in a network by letting local clocks in each process advance independently of clocks in other processes, and by requiring that two processes resynchronize their local time scales whenever they communicate. A symbolic version of this new semantics is developed in terms of predicate transformers, which enjoys the desired property that two predicate transformers are independent if they correspond to disjoint transitions in different processes. Thus we can apply standard partial order reduction techniques to the problem of checking reachability for timed systems, which avoid exploration of unnecessary interleavings of independent transitions. The price is that we must introduce extra machinery to perform the resynchronization operations on local clocks. Finally, we present a variant of DBM representation of symbolic states in the local time semantics for efficient implementation of our method.</abstract></paper>