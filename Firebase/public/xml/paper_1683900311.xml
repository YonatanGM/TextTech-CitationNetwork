<paper id="1683900311"><title>Saving Space by Fully Exploiting Invisible Transitions</title><year>1999</year><authors><author org="Computer Science Department, The Technion, Haifa, Israel. katz@cs.technion.ac.il" id="2170306587">Shmuel Katz</author><author org="Motorola Semiconductors–Israel, Herzilia, Israel. hillelm@msil.sps.mot.com#TAB#" id="2589412885">Hillel Miller</author></authors><n_citation>5</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>1508152977</reference><reference>1523442991</reference><reference>1934074768</reference><reference>1967333679</reference><reference>2086147982</reference><reference>2090398333</reference><reference>2129335898</reference><reference>2131101129</reference><reference>2166158916</reference><reference>2167638509</reference><reference>2173952623</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1023/A:1008775109219</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.58423">Model checking</keyword><keyword weight="0.53009">Tree traversal</keyword><keyword weight="0.5601">Precomputation</keyword><keyword weight="0.45686">Computer science</keyword><keyword weight="0.46999">Algorithm</keyword><keyword weight="0.46744">Theoretical computer science</keyword><keyword weight="0.52181">Linear temporal logic</keyword><keyword weight="0.44118">Exploit</keyword><keyword weight="0.65491">Partial order reduction</keyword><keyword weight="0.51222">Hash table</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>Checking that a given finite state program satisfies a linear temporal logic property suffers from the state explosion problem. Often the resulting lack of available memory is more significant than any time limitations. One way to cope with this is to reduce the state graph used for model checking. We present an algorithm for constructing a state graph that is a projection of the program‘s state graph. The algorithm maintains the transitions and states that affect the truth of the property to be checked. Especially in conjunction with known partial order reduction algorithms, we show a substantial reduction in memory over using partial order methods alone, both in the precomputation stage, and in the result presented to a model checker. The price of the space reduction is a single additional traversal of the graph obtained with partial order reduction. As part of our space-saving methods, we present a new way to exploit Holzmann‘s Bit Hash Table, which assists us in solving the revisiting problem.</abstract></paper>