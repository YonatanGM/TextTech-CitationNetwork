<paper id="1521753002"><title>Model Checking LTL Using Constraint Programming</title><year>1997</year><authors><author org="Technische Universität München;" id="2123449190">Javier Esparza</author><author org="Technische Universität München;" id="2091406645">Stephan Melzer</author></authors><n_citation>19</n_citation><doc_type>Conference</doc_type><references><reference>129716784</reference><reference>1481415856</reference><reference>1604240241</reference><reference>1607782211</reference><reference>1934074768</reference><reference>1990609140</reference><reference>1994026499</reference><reference>2069672317</reference><reference>2161910549</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/3-540-63139-9_26</doi><keywords><keyword weight="0.4388">Discrete mathematics</keyword><keyword weight="0.68901">Petri net</keyword><keyword weight="0.56718">Model checking</keyword><keyword weight="0.45484">Computer science</keyword><keyword weight="0.63002">Constraint programming</keyword><keyword weight="0.75171">Stochastic Petri net</keyword><keyword weight="0.5354">Finite-state machine</keyword><keyword weight="0.5554">Temporal logic</keyword><keyword weight="0.63628">Constraint logic programming</keyword><keyword weight="0.51113">Computational complexity theory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The model-checking problem for 1-safe Petri nets and linear-time temporal logic (LTL) consists of deciding, given a 1-safe Petri net and a formula of LTL, whether the Petri net satisfies the property encoded by the formula. This paper introduces a semidecision test for this problem. By a semidecision test we understand a procedure which may answer ‘yes’, in which case the Petri net satisfies the property, or ‘donu0027t know’. The test is based on a variant of the so called automata-theoretic approach to model-checking and on the notion of T-invariant. We analyse the computational complexity of the test, implement it using 21p-a constraint programming tool, and apply it to two case studies.</abstract></paper>