<paper id="1969357318"><title>Faster scaling algorithms for network problems</title><year>1989</year><authors><author org="" id="1987182166">H. N. Gabow</author><author org="" id="350567680">R. E. Tarjan</author></authors><n_citation>333</n_citation><doc_type>Journal</doc_type><references><reference>1493391054</reference><reference>1655990431</reference><reference>1992060486</reference><reference>2001274023</reference><reference>2008292658</reference><reference>2023367804</reference><reference>2053913299</reference><reference>2061872629</reference><reference>2064284095</reference><reference>2084224084</reference><reference>2085917651</reference><reference>2090359754</reference><reference>2091299439</reference><reference>2113491433</reference><reference>2139559590</reference><reference>2149342630</reference><reference>2150154671</reference><reference>2157529519</reference></references><venue id="153560523" type="J">SIAM Journal on Computing</venue><doi>10.1137/0218069</doi><keywords><keyword weight="0.57229">Flow network</keyword><keyword weight="0.53474">Graph theory</keyword><keyword weight="0.4693">Discrete mathematics</keyword><keyword weight="0.46714">Combinatorics</keyword><keyword weight="0.50695">Vertex (geometry)</keyword><keyword weight="0.58684">Bipartite graph</keyword><keyword weight="0.45234">Algorithm</keyword><keyword weight="0.4944">Transportation theory</keyword><keyword weight="0.57047">Matching (graph theory)</keyword><keyword weight="0.62027">Assignment problem</keyword><keyword weight="0.56843">3-dimensional matching</keyword><keyword weight="0.42336">Mathematics</keyword></keywords><publisher>Society for Industrial and Applied Mathematics</publisher><abstract>This paper presents algorithms for the assignment problem, the transportation problem, and the minimum-cost flow problem of operations research. The algorithms find a minimum-cost solution, yet run in time close to the best-known bounds for the corresponding problems without costs. For example, the assignment problem (equivalently, minimum-cost matching in a bipartite graph) can be solved in $O(\sqrt {nm} \log (nN))$ time, where $n,m$, and N denote the number of vertices, number of edges, and largest magnitude of a cost; costs are assumed to be integral. The algorithms work by scaling. As in the work of Goldberg and Tarjan, in each scaled problem an approximate optimum solution is found, rather than an exact optimum.</abstract></paper>