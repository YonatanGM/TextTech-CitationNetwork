<paper id="1482955227"><title>Well-Abstracted Transition Systems</title><year>2000</year><authors><author org="LSV, ENS Cachan &amp; CNRS UMR" id="2118058895">Alain Finkel</author><author org="NC State University" id="2156495138">S. Purushothaman Iyer</author><author org="LSV, ENS Cachan &amp; CNRS UMR" id="2090879168">Grégoire Sutre</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1513444661</reference><reference>1532358383</reference><reference>1536744902</reference><reference>1574761428</reference><reference>1994564174</reference><reference>2001426769</reference><reference>2025970201</reference><reference>2043100293</reference><reference>2046895474</reference><reference>2110697379</reference><reference>2156429182</reference><reference>2565439118</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-44618-4_40</doi><keywords><keyword weight="0.51835">Transition system</keyword><keyword weight="0.46516">Discrete mathematics</keyword><keyword weight="0.49544">Regular expression</keyword><keyword weight="0.41107">Abstraction</keyword><keyword weight="0.49627">FIFO (computing and electronics)</keyword><keyword weight="0.44275">Computer science</keyword><keyword weight="0.48883">Automaton</keyword><keyword weight="0.54163">Symbolic computation</keyword><keyword weight="0.43086">Communication channel</keyword><keyword weight="0.46618">Theoretical computer science</keyword><keyword weight="0.48671">Formal methods</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Formal methods based on symbolic representations have been found to be very effective. In the case of infinite state systems, there has been a great deal of interest in accelerations - a technique for characterizing the result of iterating an execution sequence an arbitrary number of times, in a sound, but not necessarily complete, way. We propose the use of abstractions as a general framework to design accelerations. We investigate SemiLinear Regular Expressions (SLREs) as symbolic representations for FIFO automata. In particular, we show that SLREs are easy to manipulate (inclusion between two SLREs is in NP ∩ coNP), they form the core of known FIFO symbolic representations (SLREs = QDDs ∩ CQDDs), and they are usually sufficient since for FIFO automata with one channel, an arbitrary iteration of a loop is LRE representable.</abstract></paper>