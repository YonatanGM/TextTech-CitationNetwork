<paper id="164185571"><title>Quasar: a new tool for concurrent Ada programs analysis</title><year>2003</year><authors><author org="CEDRIC - CNAM Paris, rue St Martin, Paris#TAB#" id="2104999534">Sami Evangelista</author><author org="CEDRIC - CNAM Paris, rue St Martin, Paris#TAB#" id="2066804790">Claude Kaiser</author><author org="CEDRIC - CNAM Paris, rue St Martin, Paris#TAB#" id="2190769926">Jean-Fran√ßois Pradat-Peyre</author><author org="CEDRIC - CNAM Paris, rue St Martin, Paris#TAB#" id="2616023922">Pierre Rousseau</author></authors><n_citation>17</n_citation><doc_type>Conference</doc_type><references><reference>1480560681</reference><reference>1534926211</reference><reference>1541969962</reference><reference>1546606300</reference><reference>1559362703</reference><reference>1572660965</reference><reference>1974940962</reference><reference>1977102508</reference><reference>2008270639</reference><reference>2026965951</reference><reference>2048164876</reference><reference>2065513254</reference><reference>2071213760</reference><reference>2074405879</reference><reference>2095603938</reference><reference>2135274583</reference><reference>2157597221</reference><reference>2157883468</reference><reference>2159050141</reference></references><venue id="1201175904" type="C">International Conference on Reliable Software Technologies</venue><doi>10.1007/3-540-44947-7_12</doi><keywords><keyword weight="0.47098">Model checking</keyword><keyword weight="0.45927">Programming language</keyword><keyword weight="0.4458">Computer science</keyword><keyword weight="0.57313">Concurrency</keyword><keyword weight="0.53228">Deadlock</keyword><keyword weight="0.48891">Abstract syntax tree</keyword><keyword weight="0.49161">Formal specification</keyword><keyword weight="0.42337">Real-time computing</keyword><keyword weight="0.57095">Program analysis</keyword><keyword weight="0.0">Merge (version control)</keyword><keyword weight="0.45692">Software development</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Concurrency introduces a high degree of combinatory which may be the source of subtle mistakes. We present a new tool, Quasar, which is based on ASIS and which uses fully the concept of patterns. The analysis of a concurrent Ada program by our tool proceeds in four steps: automatic extraction of the concurrent part of the program; translation of the simplified program into a formal model using predefined patterns that are combined by substitution and merging constructors; analysis of the model both by structural techniques and model-checking techniques; reporting deadlock or starvation results. We demonstrate the usefulness of Quasar by analyzing several variations of a non trivial concurrent program.</abstract></paper>