<paper id="1529322076"><title>An analysis and taxonomy of unstructured workflows</title><year>2005</year><authors><author org="Smeal College of Business, Penn State University, University Park, PA#TAB#" id="2232629843">Rong Liu</author><author org="Smeal College of Business, Penn State University, University Park, PA#TAB#" id="2101253922">Akhil Kumar</author></authors><n_citation>120</n_citation><doc_type>Conference</doc_type><references><reference>1490230666</reference><reference>1519981523</reference><reference>1570265525</reference><reference>1976132482</reference><reference>2015234709</reference><reference>2057339615</reference><reference>2129466958</reference><reference>2174443976</reference><reference>2808682513</reference><reference>2911625174</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/11538394_18</doi><keywords><keyword weight="0.44024">Data mining</keyword><keyword weight="0.45225">Software engineering</keyword><keyword weight="0.4496">Computer science</keyword><keyword weight="0.45414">Collaborative software</keyword><keyword weight="0.49861">Correctness</keyword><keyword weight="0.40384">Integrated management</keyword><keyword weight="0.45548">Bisimulation</keyword><keyword weight="0.48527">Workflow</keyword><keyword weight="0.0">Expressivity</keyword><keyword weight="0.44048">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most workflow tools support structured workflows despite the fact that unstructured workflows can be more expressive. The reason for this is that unstructured workflows are more prone to errors. In this paper, we describe a taxonomy that serves as a framework for analyzing unstructured workflows. The taxonomy organizes unstructured workflows in terms of two considerations: improper nesting and mismatched split-join pairs. Based on this taxonomy we characterize situations that are well-behaved and others that are not. We also discuss well-behaved unstructured workflows that have equivalent structured mappings. Finally, we also introduce a relaxed notion of correctness called quasi-equivalence that is based on one-directional bisimulation. The results of our research will be useful for researchers investigating expressiveness and correctness issues in unstructured workflows.</abstract></paper>