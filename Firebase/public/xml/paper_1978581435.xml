<paper id="1978581435"><title>The integration of computing and routine work</title><year>1986</year><authors><author org="School of Information Sciences" id="723888417">Les Gasser</author></authors><n_citation>400</n_citation><doc_type>Journal</doc_type><references><reference>1500025880</reference><reference>2013601309</reference><reference>2027024173</reference><reference>2049409602</reference><reference>2056836078</reference><reference>2078817226</reference></references><venue id="87067389" type="J">ACM Transactions on Information Systems</venue><doi>10.1145/214427.214429</doi><keywords><keyword weight="0.47132">Data science</keyword><keyword weight="0.60165">Autonomic computing</keyword><keyword weight="0.48212">Workaround</keyword><keyword weight="0.44846">Information retrieval</keyword><keyword weight="0.46673">Computer science</keyword><keyword weight="0.45707">Knowledge management</keyword><keyword weight="0.5008">Multi-agent system</keyword><keyword weight="0.62881">Utility computing</keyword><keyword weight="0.61728">End-user computing</keyword><keyword weight="0.50494">Documentation</keyword><keyword weight="0.52298">Office automation</keyword><keyword weight="0.53796">Cognitive computing</keyword></keywords><publisher>ACM</publisher><abstract>Most computing serves as a resource or tool to support other work: performing complex analyses for engineering projects, preparing documents, or sending electronic mail using office automation equipment, etc. To improve the character, quality, and ease of computing work, we must understand how automated systems actually are integrated into the work they support. How do people actually adapt to computing as a resource? How do they deal with the unreliability in hardware, software, or operations; data inaccuracy; system changes; poor documentation; inappropriate designs; etc.; which are present in almost every computing milieu, even where computing is widely used and considered highly successful? This paper presents some results of a detailed empirical study of routine computer use in several organizations. We present a theoretical account of computing work and use it to explain a number of observed phenomena, such as: How people knowingly use “false” data to obtain desired analytical results by tricking their systems. How organizations come to rely upon complex, critical computer systems despite significant, recurrent, known errors and inaccurate data. How people work around inadequate computing systems by using manual or duplicate systems, rather than changing their systems via maintenance or enhancement. In addition, the framework for analyzing computing and routine work presented here proves useful for representing and reasoning about activity in multiactor systems in general, and in understanding how better to integrate organizations of people and computers in which work is coordinated.</abstract></paper>