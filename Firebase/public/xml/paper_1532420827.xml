<paper id="1532420827"><title>Extensions to the rippling-out tactic for guiding inductive proofs</title><year>1990</year><authors><author org="University of Edinburgh," id="2000084407">Alan Bundy</author><author org="University of Edinburgh," id="333553561">Frank van Harmelen</author><author org="University of Edinburgh," id="392909561">Alan Smaill</author><author org="University of Edinburgh," id="2119770075">Andrew Ireland</author></authors><n_citation>215</n_citation><doc_type>Conference</doc_type><references><reference>1581769579</reference><reference>1590828018</reference><reference>2034500240</reference><reference>2128057448</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-52885-7_84</doi><keywords><keyword weight="0.44536">Discrete mathematics</keyword><keyword weight="0.49693">Heuristic</keyword><keyword weight="0.45075">Computer science</keyword><keyword weight="0.53544">Automated theorem proving</keyword><keyword weight="0.50003">Induction variable</keyword><keyword weight="0.44696">Algorithm</keyword><keyword weight="0.57118">Rippling</keyword><keyword weight="0.59938">Mathematical proof</keyword><keyword weight="0.49862">Formal methods</keyword><keyword weight="0.53368">Recursive definition</keyword><keyword weight="0.64125">Proof assistant</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In earlier papers we described a technique for automatically constructing inductive proofs, using a heuristic search control tactic called rippling-out. Further testing on harder examples has shown that the rippling-out tactic significantly reduces the search for a proof of a wide variety of theorems, with relatively few cases in which all proofs were pruned. However, it also proved necessary to generalise and extend rippling-out in various ways. Each of the various extensions are described with examples to illustrate why they are needed, but it is shown that the spirit of the original rippling-out tactic has been retained.</abstract></paper>