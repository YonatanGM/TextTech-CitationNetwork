<paper id="1527903582"><title>A General Model for Event Specification in Active Database Management Systems</title><year>1997</year><authors><author org="C-LAB, Fürstenallee 11" id="2122299274">Detlef Zimmer</author><author org="C-LAB, Fürstenallee 11" id="159652037">Axel Meckenstock</author><author org="Universität -GH- Essen" id="664262605">Rainer Unland</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1579145134</reference><reference>1579525522</reference><reference>1835762651</reference><reference>2120484103</reference><reference>2982718998</reference></references><venue id="2756318837" type="C">International Conference on Deductive and Object-Oriented Databases</venue><doi>10.1007/3-540-63792-3_30</doi><keywords><keyword weight="0.42463">Data mining</keyword><keyword weight="0.43582">Programming language</keyword><keyword weight="0.45801">Negation</keyword><keyword weight="0.0">Event type</keyword><keyword weight="0.0">Active database systems</keyword><keyword weight="0.43048">Computer science</keyword><keyword weight="0.44063">Operator (computer programming)</keyword><keyword weight="0.0">Composite event</keyword><keyword weight="0.57543">Active database</keyword><keyword weight="0.41932">Management system</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Active database systems have been developed for applications needing an automatic reaction in response to certain conditions being satisfied or certain events occurring. Typically, the desired behaviour is expressed by ECA-rules (event-condition-action rules). When an event of such a rule occurs, the condition is checked and if it holds, the action is executed. Events are typed. An event type (denoted Ei) defines the occasion at which its instances, i.e. events (denoted ei), occur. Primitive event types define elementary occurrences that are of interest, e.g. method invocation. Complex event types are defined as combinations of other (simpler) event types, called component event types, using event operators of an event algebra such as a sequence (u0027;u0027), a negation (u0027-~u0027), an a-periodic operator ( u0027Au0027), and many, many more. Events can have parameters, which are bound to them at the time an event is signalled, and are passed to the condition and action part of a rule. The parameters of a complex event are build from its component events.</abstract></paper>