<paper id="1620267008"><title>A Syntax-Directed Hoare Logic for Object-Oriented Programming Concepts</title><year>2003</year><authors><author org="Utrecht University" id="1967997593">Cees Pierik</author><author org="CWI" id="2182928395">Frank S. de Boer</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>1483157468</reference><reference>1528309244</reference><reference>1544646281</reference><reference>1573258001</reference><reference>1644882639</reference><reference>1987693120</reference><reference>2028904812</reference><reference>2075350371</reference><reference>2094160561</reference><reference>2097185397</reference><reference>2111619838</reference><reference>2111706174</reference><reference>2118968163</reference><reference>2153122714</reference><reference>2159609157</reference></references><venue id="1129611459" type="C">Formal Methods for Open Object-Based Distributed Systems</venue><doi>10.1007/978-3-540-39958-2_5</doi><keywords><keyword weight="0.62208">Predicate transformer semantics</keyword><keyword weight="0.67223">Separation logic</keyword><keyword weight="0.64534">Axiomatic semantics</keyword><keyword weight="0.46997">Programming language</keyword><keyword weight="0.55209">Object-oriented programming</keyword><keyword weight="0.43987">Computer science</keyword><keyword weight="0.70407">Hoare logic</keyword><keyword weight="0.44482">Theoretical computer science</keyword><keyword weight="0.49308">Instance variable</keyword><keyword weight="0.51">Abstraction layer</keyword><keyword weight="0.49633">Recursion</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper outlines a sound and complete Hoare logic for a sequential object-oriented language with inheritance and subtyping like Java. It describes a weakest precondition calculus for assignments and object-creation, as well as Hoare rules for reasoning about (mutually recursive) method invocations with dynamic binding. Our approach enables reasoning at an abstraction level that coincides with the general abstraction level of object-oriented languages.</abstract></paper>