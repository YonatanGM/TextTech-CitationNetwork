<paper id="1966981171"><title>A short cut to deforestation</title><year>1993</year><authors><author org="#N#University of Glasgow#N#" id="2496423290">Andrew Gill</author><author org="#N#University of Glasgow#N#" id="343041661">John Launchbury</author><author org="#N#University of Glasgow#N#" id="2142246817">Simon L. Peyton Jones</author></authors><n_citation>329</n_citation><doc_type>Conference</doc_type><references><reference>326743114</reference><reference>1507693023</reference><reference>1534794563</reference><reference>1968942384</reference><reference>2023299380</reference><reference>2057292961</reference><reference>2057648994</reference><reference>2078944436</reference><reference>2138452186</reference><reference>2144037748</reference><reference>2156876717</reference><reference>2166822586</reference><reference>2208923056</reference><reference>2295914203</reference></references><venue id="1162793720" type="C">International Conference on Functional Programming</venue><doi>10.1145/165180.165214</doi><keywords><keyword weight="0.4689">Programming language</keyword><keyword weight="0.45453">Computer science</keyword><keyword weight="0.44912">Parallel computing</keyword><keyword weight="0.60446">Compiler</keyword><keyword weight="0.66781">Haskell</keyword><keyword weight="0.36268">Deforestation</keyword><keyword weight="0.47732">Parametricity</keyword></keywords><publisher>ACM</publisher><abstract>Lists are often used as \glue" to connect separate parts of a program together. We propose an automatic technique for improving the e ciency of such programs, by removing many of these intermediate lists, based on a single, simple, local transformation. We have implemented the method in the Glasgow Haskell compiler.</abstract></paper>