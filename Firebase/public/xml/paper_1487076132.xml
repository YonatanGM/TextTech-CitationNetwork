<paper id="1487076132"><title>Utilization and predictability in scheduling the IBM SP2 with backfilling</title><year>1998</year><authors><author org="Inst. of Computer Science, Hebrew University, Jerusalem, Israel" id="2137277626">D.G. Feitelson</author><author org="" id="2676635382">A.M. Weil</author></authors><n_citation>199</n_citation><doc_type>Conference</doc_type><references><reference>1541858096</reference><reference>1573602196</reference><reference>1599248213</reference><reference>2094587335</reference><reference>2108905989</reference><reference>2141704113</reference><reference>2150074609</reference><reference>2489559643</reference></references><venue id="2754176545" type="C">Merged International Parallel Processing Symposium and Symposium on Parallel and Distributed Processing</venue><doi>10.1109/IPPS.1998.669970</doi><keywords><keyword weight="0.5622">Lottery scheduling</keyword><keyword weight="0.56517">Fixed-priority pre-emptive scheduling</keyword><keyword weight="0.57608">Fair-share scheduling</keyword><keyword weight="0.57805">Scheduling (computing)</keyword><keyword weight="0.42707">Computer science</keyword><keyword weight="0.5643">Flow shop scheduling</keyword><keyword weight="0.43386">Operations research</keyword><keyword weight="0.56617">Two-level scheduling</keyword><keyword weight="0.57026">Rate-monotonic scheduling</keyword><keyword weight="0.57434">Earliest deadline first scheduling</keyword><keyword weight="0.43148">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Scheduling jobs on the IBM SP2 system is usually done by giving each job a partition of the machine for its exclusive use. Allocating such partitions in the order that the jobs arrive (FCFS scheduling) is fair and predictable, but suffers from severe fragmentation, leading to low utilization. An alternative is to use the EASY scheduler, which uses aggressive backfilling: small jobs are moved ahead to fill in holes in the schedule, provided they do not delay the first job in the queue. The authors show that a more conservative approach, in which small jobs move ahead only if they do not delay any job in the queue, produces essentially the same benefits in terms of utilization. The conservative scheme has the added advantage that queueing times can be predicted in advance, whereas in EASY the queueing time is unbounded.</abstract></paper>