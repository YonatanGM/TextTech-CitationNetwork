<paper id="1524234654"><title>Semantics of concurrent systems: a modular fixed-point trace approach</title><year>1985</year><authors><author org="Institute of Computer Science PAS, PKiN" id="2974905727">Antoni W. Mazurkiewicz</author></authors><n_citation>56</n_citation><doc_type>Conference</doc_type><references><reference>2110425399</reference><reference>2137865376</reference><reference>2175765553</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/3-540-15204-0_20</doi><keywords><keyword weight="0.49623">Synchronization</keyword><keyword weight="0.54842">Petri net</keyword><keyword weight="0.45691">Computer science</keyword><keyword weight="0.52674">Fixed-point iteration</keyword><keyword weight="0.46819">Theoretical computer science</keyword><keyword weight="0.55927">Fixed point</keyword><keyword weight="0.57381">Modular design</keyword><keyword weight="0.50154">Modularity</keyword><keyword weight="0.45593">Semantics</keyword><keyword weight="0.45972">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A method for finding the set of processes generated by a concurrent system (the behaviour of a system) in modular way is presented. A system is decomposed into modules with behaviours assumed to be known and then the behaviours are successively put together giving finally the initial system behaviour. It is shown that there is much of freedom in choice of modules; in extreme case atoms of a system, i.e. subsystems containing only one resource, can be taken as modules; each atom has its behaviour defined a proiri. The basic operation used for composing behaviours is the synchronization operation defined in the paper. The fixed point method of describing sets of processes is extensively applied, with processes regarded as traces rather than strings of actions.</abstract></paper>