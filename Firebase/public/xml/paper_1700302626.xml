<paper id="1700302626"><title>Rules and Tools for Software Evolution Planning and Management</title><year>2001</year><authors><author org="Department of Computing, Imperial College, 180 Queen's Gate, London SW7 2BZ, UK mml@doc.ic.ac.uk#TAB#" id="2614290841">Meir M. Lehman</author><author org="Department of Computing, Imperial College, 180 Queen's Gate, London SW7 2BZ, UK#TAB#" id="2067835589">Juan F. Ramil</author></authors><n_citation>231</n_citation><doc_type>Journal</doc_type><references><reference>186548905</reference><reference>1506513518</reference><reference>1518530753</reference><reference>1529699953</reference><reference>1600337181</reference><reference>1972587375</reference><reference>1985236007</reference><reference>2017198741</reference><reference>2034680605</reference><reference>2035359832</reference><reference>2054114610</reference><reference>2057622944</reference><reference>2064125159</reference><reference>2070336840</reference><reference>2074996100</reference><reference>2077383827</reference><reference>2083246256</reference><reference>2098736179</reference><reference>2101728371</reference><reference>2116693957</reference><reference>2128384711</reference><reference>2128780139</reference><reference>2132218581</reference><reference>2150098915</reference><reference>2153887189</reference><reference>2162430279</reference></references><venue id="104191512" type="J">Annals of Software Engineering</venue><doi>10.1023/A:1012535017876</doi><keywords><keyword weight="0.62832">Lehman's laws of software evolution</keyword><keyword weight="0.44989">Systems engineering</keyword><keyword weight="0.46563">Software engineering</keyword><keyword weight="0.45286">Computer science</keyword><keyword weight="0.61388">Software peer review</keyword><keyword weight="0.61495">Software system</keyword><keyword weight="0.61687">Software project management</keyword><keyword weight="0.60502">Software development process</keyword><keyword weight="0.62506">Software evolution</keyword><keyword weight="0.63286">Software construction</keyword><keyword weight="0.62126">Software development</keyword></keywords><publisher>J. C. Baltzer AG, Science Publishers</publisher><abstract>When first formulated in the early seventies, the iu003elaws of software evolution were, for a number of reasons, not widely accepted as relevant to software engineering practice. Over the years, however, they have gradually become recognised as providing useful inputs to understanding of the software process. Now eight in number, they have been supplemented by the software uncertainty principle and the FEAST (iu003eFeedback, iu003eEvolution iu003eAnd iu003eSoftware iu003eTechnology) hypothesis. Based on all these and on the further results of the FEAST research projects this paper develops and presents some fifty rules for application in software system process planning and management and indicates tools available or that could usefully be developed to support their application. The listing is structured according to the laws that encapsulate the observed phenomena and that lead to the recommendations. Each sublist is preceded by a textual discussion providing at least some of the reasoning that has led to the recommended procedures. The references direct the interested reader to the literature that records observed behaviours, interpretations, models and metrics obtained from industrially evolved systems, and from which the recommendations were derived.</abstract></paper>