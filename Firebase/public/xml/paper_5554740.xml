<paper id="5554740"><title>The K-Component Architecture Meta-model for Self-Adaptive Software</title><year>2001</year><authors><author org="*Trinity College, Dublin." id="2777926642">Jim Dowling</author><author org="*Trinity College, Dublin." id="1944145189">Vinny Cahill</author></authors><n_citation>135</n_citation><doc_type>Journal</doc_type><references><reference>53030892</reference><reference>1489800325</reference><reference>1508763736</reference><reference>1512007370</reference><reference>1668519872</reference><reference>1845623165</reference><reference>1977431221</reference><reference>2025698898</reference><reference>2096937604</reference><reference>2100653580</reference><reference>2103716111</reference><reference>2104764839</reference><reference>2153933075</reference><reference>2162366870</reference><reference>2911646362</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45429-2_6</doi><keywords><keyword weight="0.6846">Database-centric architecture</keyword><keyword weight="0.47801">Computer architecture</keyword><keyword weight="0.47797">Programming language</keyword><keyword weight="0.66477">Applications architecture</keyword><keyword weight="0.6589">Multilayered architecture</keyword><keyword weight="0.47608">Computer science</keyword><keyword weight="0.70799">Software architecture description</keyword><keyword weight="0.65442">Resource-oriented architecture</keyword><keyword weight="0.71192">Reference architecture</keyword><keyword weight="0.64868">Component-based software engineering</keyword><keyword weight="0.66262">Software architecture</keyword><keyword weight="0.47797">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Software architectures have recently emerged as a level of design concerned with specifying the overall structure of a system. Traditionally, software architectures only provide static descriptions of the participants and interaction structures in a system. Dynamic software architectures, however, can be reconfigured at runtime and therefore provide support for building dynamically adaptable applications. Software architectures can be specified using architectural reflection. In this paper we introduce an architecture meta-model that realises a dynamic software architecture. The architecture meta-model reifies the configuration graph of the architecture and is automatically generated from our component definitions and implementation language source-code. We show how graph transformations that re-write the architectureu0027s configuration graph can be implemented as reflective programs, called adaptation contracts. Adaptation contracts are written in a separate programming language, thus cleanly separating the adaptation code from the computational code. Adaptation contracts can even be replaced at run-time. They are deployed in a run-time meta-level architecture that addresses issues of system safety, integrity and overhead during graph transformation. The paper also describes a prototype implementation of our model called K-Components.</abstract></paper>