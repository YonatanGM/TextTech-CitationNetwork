<paper id="1517793941"><title>Modeling and verification of a fault-tolerant real-time startup protocol using calendar automata</title><year>2004</year><authors><author org="SRI, International#TAB#" id="108906927">Bruno Dutertre</author><author org="UniversitÃ¤t Ulm" id="263216496">Maria Sorea</author></authors><n_citation>84</n_citation><doc_type>Journal</doc_type><references><reference>1480600454</reference><reference>1486272257</reference><reference>1506458079</reference><reference>1541857193</reference><reference>1558869278</reference><reference>1582571943</reference><reference>1605381479</reference><reference>1805265119</reference><reference>1949723230</reference><reference>1989746243</reference><reference>2000947342</reference><reference>2084608278</reference><reference>2084880396</reference><reference>2101508170</reference><reference>2104978174</reference><reference>2113820327</reference><reference>2120926795</reference><reference>2137918685</reference><reference>2166752259</reference><reference>2462804359</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/978-3-540-30206-3_15</doi><keywords><keyword weight="0.40451">Architecture</keyword><keyword weight="0.51917">Model checking</keyword><keyword weight="0.44042">Abstraction</keyword><keyword weight="0.45803">Computer science</keyword><keyword weight="0.48027">Automaton</keyword><keyword weight="0.49412">Real-time operating system</keyword><keyword weight="0.51678">Fault tolerance</keyword><keyword weight="0.52237">Reactive system</keyword><keyword weight="0.46959">Distributed computing</keyword><keyword weight="0.47055">Embedded system</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We discuss the modeling and verification of real-time systems using the SAL model checker. A new modeling framework based on event calendars enables dense timed systems to be described without relying on continuously varying clocks. We present verification techniques that rely on induction and abstraction, and show how these techniques are efficiently supported by the SAL symbolic model-checking tools. The modeling and verification method is applied to the fault-tolerant real-time startup protocol used in the Timed Triggered Architecture.</abstract></paper>