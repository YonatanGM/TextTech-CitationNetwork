<paper id="22858564"><title>The differential fixpoint operator with subsumption</title><year>1993</year><authors><author org="Universität Augsburg" id="279527084">Gerhard Köstler</author><author org="Universität Augsburg" id="2218688930">Werner Kießling</author><author org="Universität Tübingen" id="2111837640">Helmut Thöne</author><author org="Universität Tübingen" id="10460767">Ulrich Güntzer</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>146663255</reference><reference>1489190625</reference><reference>1491588621</reference><reference>1572693407</reference><reference>1580453554</reference><reference>1846087057</reference><reference>1853800150</reference><reference>1969801094</reference><reference>1970102673</reference><reference>1971267722</reference><reference>1985728418</reference><reference>2006519067</reference><reference>2016531106</reference><reference>2064119752</reference><reference>2111691296</reference><reference>2128515191</reference><reference>2145067417</reference><reference>2152475379</reference><reference>2167527087</reference></references><venue id="2756318837" type="C">International Conference on Deductive and Object-Oriented Databases</venue><doi>10.1007/3-540-57530-8_3</doi><keywords><keyword weight="0.59016">Modal μ-calculus</keyword><keyword weight="0.48114">Heuristic</keyword><keyword weight="0.46523">Programming language</keyword><keyword weight="0.53897">Tuple</keyword><keyword weight="0.45605">Computer science</keyword><keyword weight="0.51028">Operator (computer programming)</keyword><keyword weight="0.47211">Software development process</keyword><keyword weight="0.59612">Logic programming</keyword><keyword weight="0.4492">Fixed point</keyword><keyword weight="0.53317">Ontology language</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Declarative languages for deductive and object-oriented databases require some high-level mechanism for specifying semantic control knowledge. This paper proposes user-supplied subsumption information as a paradigm to specify desired, prefered or useful deductions at the meta level. For this purpose we augment logic programming by subsumption relations and succeed to extend the classical theorems for least models, fixpoints and bottom-up evaluation accordingly. Moreover, we provide a differential fixpoint operator for efficient query evaluation. This operator discards subsumed tuples on the fly. We also exemplify the ease of use of this programming methodology. In particular, we demonstrate how heuristic AI search procedures can be integrated into logic programming in this way.</abstract></paper>