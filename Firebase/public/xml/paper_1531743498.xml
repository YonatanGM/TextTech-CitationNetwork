<paper id="1531743498"><title>FOIL: A Midterm Report</title><year>1993</year><authors><author org="Basser Dept. of Computer Science, University of Sydney, Sydney, Australia#TAB#" id="2283165970">J. Ross Quinlan</author><author org="Basser Dept. of Computer Science, University of Sydney, Sydney, Australia#TAB#" id="2974835645">R. Mike Cameron-Jones</author></authors><n_citation>477</n_citation><doc_type>Conference</doc_type><references><reference>158822884</reference><reference>177590838</reference><reference>1496189887</reference><reference>1518912663</reference><reference>1527200819</reference><reference>1530292612</reference><reference>1536794365</reference><reference>1565236324</reference><reference>1570286060</reference><reference>1861161664</reference><reference>1999138184</reference><reference>2037689320</reference><reference>2099908047</reference><reference>2125055259</reference><reference>2484153108</reference></references><venue id="2755314191" type="C">European conference on Machine Learning</venue><doi>10.1007/3-540-56602-3_124</doi><keywords><keyword weight="0.40343">FOIL method</keyword><keyword weight="0.61378">Horn clause</keyword><keyword weight="0.44857">Programming language</keyword><keyword weight="0.43804">Computer science</keyword><keyword weight="0.58241">Prolog</keyword><keyword weight="0.42853">Artificial intelligence</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>FOIL is a learning system that constructs Horn clause programs from examples. This paper summarises the development of FOIL from 1989 up to early 1993 and evaluates its effectiveness on a non-trivial sequence of learning tasks taken from a Prolog programming text. Although many of these tasks are handled reasonably well, the experiment highlights some weaknesses of the current implementation. Areas for further research are identified.</abstract></paper>