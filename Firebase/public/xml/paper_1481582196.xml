<paper id="1481582196"><title>Efficient Checking of Computations</title><year>1990</year><authors><author org="Princeton University *" id="2984027855">Richard J. Lipton</author></authors><n_citation>69</n_citation><doc_type>Conference</doc_type><references><reference>1528588003</reference><reference>2062934582</reference><reference>2073700765</reference><reference>2083368929</reference><reference>2096390054</reference><reference>2107371087</reference></references><venue id="1178070762" type="C">Symposium on Theoretical Aspects of Computer Science</venue><doi>10.1007/3-540-52282-4_44</doi><keywords><keyword weight="0.49456">Structured program theorem</keyword><keyword weight="0.47392">Discrete mathematics</keyword><keyword weight="0.46526">Combinatorics</keyword><keyword weight="0.42839">Computer science</keyword><keyword weight="0.57249">Turing machine</keyword><keyword weight="0.56444">Homomorphism</keyword><keyword weight="0.49319">Probabilistic logic</keyword><keyword weight="0.43929">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show how to efficiently check computations using only logspace even if they are only given once. This result implies that a polynomial-time verifier can also be restricted to be logspace with essentially no loss in performance. We also use this result to show that every set in N P is equal to h(L) where h is a homomorphism and L is accepted by a one-way probabilistic logspace machine.</abstract></paper>