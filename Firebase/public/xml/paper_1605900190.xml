<paper id="1605900190"><title>Multiparty protocols tolerating half faulty processors</title><year>1989</year><authors><author org="Harvard University" id="2124380882">Donald Beaver</author></authors><n_citation>79</n_citation><doc_type>Conference</doc_type><references><reference>1970606468</reference><reference>2016443801</reference><reference>2060928064</reference><reference>2077315235</reference><reference>2990399857</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/0-387-34805-0_49</doi><keywords><keyword weight="0.53593">Secret sharing</keyword><keyword weight="0.45775">Authentication</keyword><keyword weight="0.45252">Polynomial</keyword><keyword weight="0.47823">Cryptography</keyword><keyword weight="0.42352">Computer science</keyword><keyword weight="0.45322">Broadcasting (networking)</keyword><keyword weight="0.43062">Computer network</keyword><keyword weight="0.42885">Theoretical computer science</keyword><keyword weight="0.46488">Digital signature</keyword><keyword weight="0.55581">Verifiable secret sharing</keyword><keyword weight="0.49427">Oblivious transfer</keyword><keyword weight="0.42395">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We show that a complete broadcast network of n processors can evaluate any function f(x1,..., xn) at private inputs supplied by each processor, revealing no information other than the result of the function, while tolerating up to t maliciously faulty parties for 2t u003c n. This improves the previous bound of 3t u003c n on the tolerable number of faults [BG W88, CCD88]. We demonstrate a resilient method to multiply secretly shared values without using unproven cryptographic assumptions. The crux of our method is a new, non-cryptographic zero-knowledge technique which extends verifiable secret sharing to allow proofs based on secretly shared values. Under this method, a single party can secretly share values v1,...vm along with another secret w = P(v1,...,vm), where P is any polynomial size circuit; and she can prove to all other parties that w = P(v1,..., vm), without revealing w or any other information. Our protocols allow an exponentially small chance of error, but are provably optimal in their resilience against Byzantine faults. Furthermore, our solutions use operations over exponentially large fields, greatly reducing the amount of interaction necessary for computing natural functions.</abstract></paper>