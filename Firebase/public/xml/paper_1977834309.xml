<paper id="1977834309"><title>Logic Programming and Prolog: A Tutorial</title><year>1985</year><authors><author org="University of Santa Clara" id="2974091698">R.E. Davis</author></authors><n_citation>36</n_citation><doc_type>Journal</doc_type><references><reference>1766332311</reference><reference>2034034435</reference><reference>2054358146</reference></references><venue id="6725529" type="J">IEEE Software</venue><doi>10.1109/MS.1985.231760</doi><keywords><keyword weight="0.6261">Functional logic programming</keyword><keyword weight="0.60739">Fifth-generation programming language</keyword><keyword weight="0.46777">Programming language</keyword><keyword weight="0.4516">Software engineering</keyword><keyword weight="0.44528">Computer science</keyword><keyword weight="0.61447">Constraint programming</keyword><keyword weight="0.61167">Inductive programming</keyword><keyword weight="0.6029">Fifth generation computer</keyword><keyword weight="0.66275">Prolog</keyword><keyword weight="0.62957">Declarative programming</keyword><keyword weight="0.69466">Logic programming</keyword></keywords><publisher>IEEE</publisher><abstract>Logic programming offers significant advantages for the massively parallel computer systems of tomorrow. This tutorial examines the potential of Prolog to implement those advantages.</abstract></paper>