<paper id="1981404401"><title>Lua—an extensible extension language</title><year>1996</year><authors><author org="TeCGraf, Computer Science Department, PUC–Rio, Rua M.S. Vincente 225, Rio de Janeiro, Brazil." id="258599510">Roberto Ierusalimschy</author><author org="TeCGraf, Computer Science Department, PUC–Rio, Rua M.S. Vincente 225, Rio de Janeiro, Brazil." id="2294797006">Luiz Henrique de Figueiredo</author><author org="TeCGraf, Computer Science Department, PUC–Rio, Rua M.S. Vincente 225, Rio de Janeiro, Brazil." id="2132949412">Waldemar Celes Filho</author></authors><n_citation>374</n_citation><doc_type>Journal</doc_type><references><reference>1487895014</reference><reference>1965105464</reference><reference>2045723688</reference><reference>2134342348</reference></references><venue id="122199241" type="J">Software - Practice and Experience</venue><doi>10.1002/(SICI)1097-024X(199606)26:6&lt;635::AID-SPE26&gt;3.0.CO;2-P</doi><keywords><keyword weight="0.51478">Pointer (computer programming)</keyword><keyword weight="0.48112">Programming language</keyword><keyword weight="0.42181">Polygon mesh</keyword><keyword weight="0.52815">Object-oriented programming</keyword><keyword weight="0.46347">Computer science</keyword><keyword weight="0.50269">Data type</keyword><keyword weight="0.53118">User interface</keyword><keyword weight="0.40896">Extensibility</keyword><keyword weight="0.4707">Recursion</keyword><keyword weight="0.49122">Semantics</keyword></keywords><publisher>John Wiley &amp; Sons, Inc.</publisher><abstract>This paper describes Lua, a language for extending applications. Lua combines procedural features with powerful data description facilities, by using a simple, yet powerful, mechanism of tables . This mechanism implements the concepts of records, arrays and recursive data types (pointers), and adds some object-oriented facilities, such as methods with dynamic :[51],"presents a mechanism of fallbacks that allows programmers to extend the semantics of the language in some unconventional ways. As a noteworthy example, fallbacks allow the user to add different kinds of inheritance to the Lua :[87],"is being extensively used in production for several tasks, including user configuration, general-purpose data-entry, description of user interfaces, storage of structured graphical metafiles, and generic attribute configuration for finite element meshes.</abstract></paper>