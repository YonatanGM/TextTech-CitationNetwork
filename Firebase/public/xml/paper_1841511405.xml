<paper id="1841511405"><title>An architecture for dynamically extensible operating systems</title><year>1998</year><authors><author org="Dept. of Comput., Lancaster Univ., UK#TAB#" id="2990140869">M. Clarke</author><author org="" id="1966456890">G. Coulson</author></authors><n_citation>59</n_citation><doc_type>Conference</doc_type><references><reference>1577455888</reference><reference>2079029390</reference><reference>2083469471</reference><reference>2084776520</reference><reference>2122960384</reference><reference>2130121613</reference><reference>2150769115</reference><reference>2241531943</reference><reference>2546110583</reference></references><venue id="1187089339" type="C">Cooperative Distributed Systems</venue><doi>10.1109/CDS.1998.675768</doi><keywords><keyword weight="0.45646">Kernel (linear algebra)</keyword><keyword weight="0.0">Application specific</keyword><keyword weight="0.44155">Architecture</keyword><keyword weight="0.0">On demand</keyword><keyword weight="0.40508">Abstraction</keyword><keyword weight="0.46181">Computer science</keyword><keyword weight="0.45705">Real-time computing</keyword><keyword weight="0.50204">Configuration management</keyword><keyword weight="0.49236">Extensibility</keyword><keyword weight="0.46478">Operating system</keyword><keyword weight="0.47329">Kernel (statistics)</keyword><keyword weight="0.47354">Distributed computing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>Operating system design has traditionally followed a philosophy in which the system is structured as a fixed set of abstractions and mechanisms. This approach, however, is now showing its limitations in the face of new application areas which demand extensibility and configurability. We describe the design of a dynamically extensible operating system called DEIMOS. DEIMOS is unique in that it does not define a kernel entity. Instead, both traditional kernel functions and application specific services are encapsulated as modules which can be loaded, configured and unloaded on demand (i.e. at run time) by a base system component called the Configuration Manager (which can itself be unloaded). The lack of a kernel gives DEIMOS great scope for flexibility as applications have complete freedom to tailor their execution environment in accordance with their particular needs. Furthermore, applications can dynamically adapt their environment on an ongoing basis and the differing needs of diverse applications can, in many case, be met simultaneously. The paper discusses the architecture of DEIMOS and gives examples of its scope and applicability.</abstract></paper>