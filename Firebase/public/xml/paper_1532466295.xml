<paper id="1532466295"><title>Superimposition for Interacting Processes</title><year>1990</year><authors><author org="Microelectronics and Computer Technology Corp." id="20141768">Nissim Francez</author><author org="Microelectronics and Computer Technology Corp." id="722850541">Ira R. Forman</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>14652063</reference><reference>1559723191</reference><reference>1857327297</reference><reference>1989583463</reference><reference>1989877393</reference><reference>2005952505</reference><reference>2008576712</reference><reference>2013173096</reference><reference>2042981544</reference><reference>2059563369</reference><reference>2066210260</reference><reference>2077371116</reference><reference>2110425399</reference><reference>2117526806</reference><reference>2131053137</reference><reference>2137738995</reference><reference>2144579789</reference><reference>2296352387</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/BFb0039063</doi><keywords><keyword weight="0.58049">Operational semantics</keyword><keyword weight="0.46323">Synchronization</keyword><keyword weight="0.47366">Superimposition</keyword><keyword weight="0.47096">Programming language</keyword><keyword weight="0.46915">Computer science</keyword><keyword weight="0.46614">Theoretical computer science</keyword><keyword weight="0.4185">Transformational leadership</keyword><keyword weight="0.53809">Inter-process communication</keyword><keyword weight="0.4918">Operator (computer programming)</keyword><keyword weight="0.0">Safety property</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper defines an operator for superimposition, in contrast to previous transformational views. It does so in the context of the multiparty interaction as the primitive for synchronization and interprocess communication in distributed programs. The operator is given a (structured) operational semantics, and some aspects of its methodological importance are discussed. The papers distills the essentials of superimposition, in contrast to other approaches where its role is mixed with other programming aspects. A simple example of its use is provided. Large design examples and more details are presented elsewhere.</abstract></paper>