<paper id="1595292352"><title>Similarity for Analogical Software Reuse: A Conceptual Modelling Approach</title><year>1993</year><authors><author org="university of crete" id="45285231">George Spanoudakis</author><author org="university of crete" id="367411046">Panos Constantopoulos</author></authors><n_citation>23</n_citation><doc_type>Conference</doc_type><references><reference>83492694</reference><reference>1528261040</reference><reference>1547337510</reference><reference>1983992202</reference><reference>2003150360</reference><reference>2004817736</reference><reference>2026161499</reference><reference>2050206309</reference><reference>2061954183</reference><reference>2069234241</reference><reference>2079814255</reference><reference>2082810026</reference><reference>2094848746</reference><reference>2106507817</reference><reference>2110414574</reference><reference>2113672047</reference><reference>2138782822</reference><reference>2149159012</reference><reference>2157799908</reference></references><venue id="1134069326" type="C">Conference on Advanced Information Systems Engineering</venue><doi>10.1007/3-540-56777-1_26</doi><keywords><keyword weight="0.46369">Data mining</keyword><keyword weight="0.45219">Systems engineering</keyword><keyword weight="0.67473">Feature-oriented domain analysis</keyword><keyword weight="0.66439">Software analysis pattern</keyword><keyword weight="0.46698">Computer science</keyword><keyword weight="0.49712">Reuse</keyword><keyword weight="0.61565">Software</keyword><keyword weight="0.5025">Analogy</keyword><keyword weight="0.70753">Software construction</keyword><keyword weight="0.56596">Conceptual model (computer science)</keyword><keyword weight="0.45411">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present our approach to defining similarity between software artifacts and discuss its potential exploitation in software reuse by analogy. We first establish properties of similarity which support its role in retrieving and mapping software descriptions. Then we develop a systematic basis for comparison within a fairly general conceptual modelling framework, whereby comparable elements of the descriptions of software objects and corresponding similarity criteria are identified. Finally, a general form of distance metrics for the computation of similarity measures is defined.</abstract></paper>