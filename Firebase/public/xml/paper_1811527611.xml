<paper id="1811527611"><title>On the estimation of reliability of a software system using reliabilities of its components</title><year>1997</year><authors><author org="Software Eng. Res. Center, Purdue Univ., West Lafayette, IN, USA" id="2142779410">S. Krishnamurthy</author><author org="" id="2150536169">A.P. Mathur</author></authors><n_citation>169</n_citation><doc_type>Conference</doc_type><references><reference>1554758995</reference><reference>2149614712</reference><reference>2164482879</reference></references><venue id="1157832733" type="C">International Symposium on Software Reliability Engineering</venue><doi>10.1109/ISSRE.1997.630860</doi><keywords><keyword weight="0.41928">Computer science</keyword><keyword weight="0.4675">System testing</keyword><keyword weight="0.42653">Unix</keyword><keyword weight="0.42796">Real-time computing</keyword><keyword weight="0.46866">Software system</keyword><keyword weight="0.50749">Test case</keyword><keyword weight="0.45893">Software quality</keyword><keyword weight="0.0">Program testing</keyword><keyword weight="0.44933">Reliability engineering</keyword><keyword weight="0.0">Software testing</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>We report an experiment to evaluate a method, known as component based reliability estimation (CBRE), for the estimation of reliability of a software system using reliabilities of its components. CBRE involves computing path reliability estimates based on the sequence of components executed for each test input. Path reliability estimates are averaged over all test runs to obtain an estimate of the system reliability. In the experiment reported, three components of a Unix utility were seeded with errors and the reliability of each component was measured. The faulty components were then introduced systematically into the utility, in various combinations, to produce several faulty versions of the utility. For each faulty version, test cases were drawn from an operational profile to measure the component-based reliability. The true reliability of the faulty version was estimated using the frequency count approach. The goodness of CBRE was assessed in terms of the accuracy and efficiency of the estimates with respect to the true reliability. Results from this experiment suggest that CBRE yields reasonably accurate results at an efficient rate. However, the accuracy and efficiency of CBRE is sensitive to the dependency among successive calls to a component.</abstract></paper>