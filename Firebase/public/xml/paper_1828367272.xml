<paper id="1828367272"><title>Program Analysis Using Mixed Term and Set Constraints</title><year>1997</year><authors><author org="University of California" id="2916618018">Manuel Fähndrich</author><author org="University of California" id="2067453598">Alexander Aiken</author></authors><n_citation>45</n_citation><doc_type>Conference</doc_type><references><reference>1507723317</reference><reference>1535216022</reference><reference>1703087989</reference><reference>1829244603</reference><reference>1886159700</reference><reference>1890547763</reference><reference>1963954367</reference><reference>1969093922</reference><reference>1986334602</reference><reference>2002866920</reference><reference>2009911326</reference><reference>2017381819</reference><reference>2022443117</reference><reference>2043100293</reference><reference>2046137117</reference><reference>2051981528</reference><reference>2052804469</reference><reference>2057085278</reference><reference>2102389857</reference><reference>2131135493</reference><reference>2142174207</reference><reference>2161100976</reference><reference>2166822586</reference></references><venue id="1137552346" type="C">Static Analysis Symposium</venue><doi>10.1007/BFb0032737</doi><keywords><keyword weight="0.47057">Parameterized complexity</keyword><keyword weight="0.46759">Mathematical optimization</keyword><keyword weight="0.47341">Functional programming</keyword><keyword weight="0.5119">Expression (mathematics)</keyword><keyword weight="0.45003">Computer science</keyword><keyword weight="0.4806">Unification</keyword><keyword weight="0.46289">Algorithm</keyword><keyword weight="0.47477">Type inference</keyword><keyword weight="0.58308">Program analysis</keyword><keyword weight="0.46476">Rule of inference</keyword><keyword weight="0.45638">Type constructor</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>There is a tension in program analysis between precision and efficiency. In constraint-based program analysis, at one extreme methods based on unification of equality constraints over terms are very fast but often imprecise. At the other extreme, methods based on the resolution of inclusion constraints over set expressions are quite precise, but are often inefficient in practice. We describe a parameterized framework for constraint-based program analyses that allows the analysis designer to embed terms and set expressions within each other. Constraints over these mixed expressions are partially between equality and inclusion, which enables an entire spectrum of program analyses with varying degrees of precision and efficiency to be expressed. We also show that there are interesting analyses that take advantage of this mixture. In particular, we report on the design and implementation of an uncaught exception analysis for core ML. Our results show that the analysis approaches the efficiency of algorithm W.</abstract></paper>