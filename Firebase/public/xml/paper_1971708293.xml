<paper id="1971708293"><title>Expressing structural hypertext queries in graphlog</title><year>1989</year><authors><author org="Computer Systems Research Institute, University of Toronto, Toronto, Canada M5S 1A4" id="258318981">M. P. Consens</author><author org="Computer Systems Research Institute, University of Toronto, Toronto, Canada M5S 1A4" id="1969282344">A. O. Mendelzon</author></authors><n_citation>127</n_citation><doc_type>Conference</doc_type><references><reference>1485060056</reference><reference>1506691924</reference><reference>1587166076</reference><reference>1770006921</reference><reference>1964364438</reference><reference>1986832527</reference><reference>1992810975</reference><reference>2035159691</reference><reference>2047646731</reference><reference>2056889883</reference><reference>2121739066</reference><reference>2135282325</reference></references><venue id="2532863000" type="C">ACM Conference on Hypertext</venue><doi>10.1145/74224.74247</doi><keywords><keyword weight="0.55117">Hypertext</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.44761">World Wide Web</keyword><keyword weight="0.56012">Deductive database</keyword><keyword weight="0.47976">Inference</keyword><keyword weight="0.46116">Computer science</keyword><keyword weight="0.44358">Usability</keyword><keyword weight="0.46071">Naturalness</keyword><keyword weight="0.46478">Theoretical computer science</keyword><keyword weight="0.49937">Descriptive complexity theory</keyword><keyword weight="0.41826">Computation</keyword></keywords><publisher>ACM</publisher><abstract>GraphLog is a visual query language in which queries are formulated by drawing graph patterns. The hyperdocument graph is searched for all occurrences of these patterns. The language is powerful enough to allow the specification and manipulation of arbitrary subsets of the network and supports the computation of aggregate functions on subgraphs of the hyperdocument. It can support dynamically defined structures as well as inference capabilities, going beyond current static and passive hypertext systems. The expressive power of the language is a fundamental issue: too little power limits the applications of the language, while too much makes efficient implementation difficult and probably affects ease of use. The complexity and expressive power of GraphLog can be characterized precisely by using notions from deductive database theory and descriptive complexity. In this paper, from a practical point of view, we present examples of GraphLog queries applied to several different hypertext systems, providing evidence for the expressive power of the language, as well as for the convenience and naturalness of its graphical representation. We also describe an ongoing implementation of the language.</abstract></paper>