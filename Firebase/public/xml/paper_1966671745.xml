<paper id="1966671745"><title>Teaching a Software Design Methodology</title><year>1987</year><authors><author org="Software Productivity Consortium" id="2618245063">D.M. Weiss</author></authors><n_citation>6</n_citation><doc_type>Journal</doc_type><references><reference>1482384235</reference><reference>2096360482</reference><reference>2913217271</reference></references><venue id="8351582" type="J">IEEE Transactions on Software Engineering</venue><doi>10.1109/TSE.1987.232864</doi><keywords><keyword weight="0.64424">Software design</keyword><keyword weight="0.47158">Software engineering</keyword><keyword weight="0.45179">Computer science</keyword><keyword weight="0.45245">Higher education</keyword><keyword weight="0.6389">Software development</keyword></keywords><publisher>IEEE</publisher><abstract>This paper describes an approach to teaching a software design methodology used at The Wang Institute of Graduate Studies. The approach is general enough to be used with any of the currently popular design methodologies. Students are first taught the principles underlying the methodology, and the standards used with it. This phase is done in a series of lectures. In the second phase, students are presented with a real design problem, and asked to solve it using the methodology. They are monitored in this process by an expert in the methodology whose job is to assure that the students adhere to the methodology, but who makes no design decisions.</abstract></paper>