<paper id="1480790918"><title>Origin Functions in Lambda-Calculus and Term Rewriting Systems</title><year>1992</year><authors><author org="Inria - Sophia Antipolis" id="22202220">Yves Bertot</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>1523047387</reference><reference>1979101142</reference><reference>1992452788</reference><reference>2003432901</reference><reference>2027836624</reference><reference>2079978872</reference><reference>2098036931</reference><reference>2295866357</reference><reference>2585501834</reference></references><venue id="2756386172" type="C">Colloquium on trees in Algebra and Programming</venue><doi>10.1007/3-540-55251-0_3</doi><keywords><keyword weight="0.61937">Lambda calculus</keyword><keyword weight="0.64891">Normalisation by evaluation</keyword><keyword weight="0.70789">Typed lambda calculus</keyword><keyword weight="0.68236">Simply typed lambda calculus</keyword><keyword weight="0.41066">Computer science</keyword><keyword weight="0.65425">Fixed-point combinator</keyword><keyword weight="0.4231">Algorithm</keyword><keyword weight="0.60692">Critical pair</keyword><keyword weight="0.57401">Rewriting</keyword><keyword weight="0.59629">Confluence</keyword><keyword weight="0.452">Calculus</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We use Origin functions to describe the notions of descendance and residuals in reduction systems such as the λ-calculus and linear term rewriting systems. We compare the origin functions for the λ-calculus and for term rewriting systems that implement this calculus, λσ and λEnv. We show that the notions of origin do not correspond exactly, but we describe an extension of the notion of origin that permits the correct computation of λ-calculus origins for derivations of λEnv. We show that this extension is not sufficient to give the same result for λσ and we give another extension for that system. This work is interesting as it provides a distinction between the two term rewriting systems. This work has applications in the debugging of languages based on the λ-calculus or environments.</abstract></paper>