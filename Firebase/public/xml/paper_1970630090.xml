<paper id="1970630090"><title>Property testing and its connection to learning and approximation</title><year>1998</year><authors><author org="Weizmann Institute of Science, Rehovot, ISRAEL" id="65538393">Oded Goldreich</author><author org="Weizmann Institute of Science, Rehovot, Israel; and Massachusetts Institute of Technology, Cambridge#TAB#" id="1728759264">Shari Goldwasser</author><author org="Massachusetts Institute of Technology, Cambridge" id="2146939727">Dana Ron</author></authors><n_citation>908</n_citation><doc_type>Journal</doc_type><references><reference>1898653522</reference><reference>1947397138</reference><reference>1968069760</reference><reference>1977600272</reference><reference>1978916077</reference><reference>1982381767</reference><reference>1983593474</reference><reference>1991006936</reference><reference>1991875133</reference><reference>2002864099</reference><reference>2006491084</reference><reference>2012523798</reference><reference>2014071862</reference><reference>2016606569</reference><reference>2018706164</reference><reference>2018925011</reference><reference>2019363670</reference><reference>2019807548</reference><reference>2027048490</reference><reference>2033361557</reference><reference>2034336150</reference><reference>2041763757</reference><reference>2053086236</reference><reference>2056168287</reference><reference>2069816168</reference><reference>2074010768</reference><reference>2080132708</reference><reference>2081254453</reference><reference>2083580384</reference><reference>2087226760</reference><reference>2093979815</reference><reference>2094878497</reference><reference>2095374884</reference><reference>2096430557</reference><reference>2097206148</reference><reference>2101724873</reference><reference>2109694798</reference><reference>2111385661</reference><reference>2117049614</reference><reference>2128865943</reference><reference>2129604579</reference><reference>2141072246</reference><reference>2152221184</reference><reference>2154952480</reference><reference>2156397150</reference><reference>2165100639</reference><reference>2202947145</reference><reference>2294022756</reference><reference>2398840648</reference></references><venue id="118992489" type="J">Journal of the ACM</venue><doi>10.1145/285055.285060</doi><keywords><keyword weight="0.47675">Discrete mathematics</keyword><keyword weight="0.69979">Strength of a graph</keyword><keyword weight="0.47658">Combinatorics</keyword><keyword weight="0.68582">Line graph</keyword><keyword weight="0.71819">Graph property</keyword><keyword weight="0.68152">Graph power</keyword><keyword weight="0.70349">Clique graph</keyword><keyword weight="0.42945">Computer science</keyword><keyword weight="0.69009">Simplex graph</keyword><keyword weight="0.69438">Null graph</keyword><keyword weight="0.69053">Complement graph</keyword></keywords><publisher>ACM</publisher><abstract>In this paper, we consider the question of determining whether a function f has property P or is e-far from any function with property P. A property testing algorithm is given a sample of the value of f on instances drawn according to some distribution. In some cases, it is also allowed to query f on instances of its choice. We study this question for different properties and establish some connections to problems in learning theory and approximation. In particular, we focus our attention on testing graph properties. Given access to a graph G in the form of being able to query whether an edge exists or not between a pair of vertices, we devise algorithms to test whether the underlying graph has properties such as being bipartite, k -Colorable, or having a p -Clique (clique of density p with respect to the vertex set). Our graph property testing algorithms are probabilistic and make assertions that are correct with high probability, while making a number of queries that is independent of the size of the graph. Moreover, the property testing algorithms can be used to efficiently (i.e., in time linear in the number of vertices) construct partitions of the graph that correspond to the property being tested, if it holds for the input graph.</abstract></paper>