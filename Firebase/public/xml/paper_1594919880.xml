<paper id="1594919880"><title>A New Control Structure for Transformation-Based Generators</title><year>2000</year><authors><author org="" id="2673642764">Ted J. Biggerstaff</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>84258820</reference><reference>195277938</reference><reference>2015926075</reference><reference>2116666680</reference><reference>2128419413</reference><reference>2138363365</reference><reference>2170427614</reference><reference>2208923056</reference></references><venue id="2756309959" type="C">International Conference on Software Reuse</venue><doi>10.1007/978-3-540-44995-9_1</doi><keywords><keyword weight="0.52257">Program optimization</keyword><keyword weight="0.53017">Common Lisp</keyword><keyword weight="0.53098">Program transformation</keyword><keyword weight="0.51017">Partial evaluation</keyword><keyword weight="0.46659">Computer science</keyword><keyword weight="0.47117">Operand</keyword><keyword weight="0.45389">Operator (computer programming)</keyword><keyword weight="0.48321">Software architecture</keyword><keyword weight="0.50243">Software development</keyword><keyword weight="0.46309">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A serious problem of most transformation-based generators is that they are trying to achieve three mutually antagonistic goals simultaneously: 1) deeply factored operators and operands to gain the combinatorial programming leverage provided by composition, 2) high performance code in the generated program, and 3) small (i.e., practical) generation search spaces. The hypothesis of this paper is that current generator control structures are inadequate and a new control structure is required. To explore architectural variations needed to address this quandary, I have implemented a generator in Common LISP. It is called the Anticipatory Optimization Generator (AOG) because it allows programmers to anticipate optimization opportunities and to prepare an abstract, distributed plan that attempts to achieve them. The AOG system introduces a new control structure that allows differing kinds of knowledge (e.g., optimization knowledge) to be anticipated, placed where it will be needed, and triggered when the time is right for its use.</abstract></paper>