<paper id="1884521777"><title>Automatic testing of reactive systems</title><year>1998</year><authors><author org="Verimag, Univ. Joseph Fourier, Grenoble, France" id="2127406978">P. Raymond</author><author org="" id="2974187549">X. Nicollin</author><author org="" id="2257050880">N. Halbwachs</author><author org="" id="2578147318">D. Weber</author></authors><n_citation>103</n_citation><doc_type>Conference</doc_type><references><reference>1510782929</reference><reference>1591643794</reference><reference>1663179985</reference><reference>2018347567</reference><reference>2068896853</reference><reference>2080267935</reference><reference>2081938726</reference><reference>2135784828</reference><reference>2147253199</reference><reference>2151250735</reference><reference>2160031970</reference><reference>2165338722</reference><reference>2171571285</reference><reference>2737433617</reference></references><venue id="1124527938" type="C">Real-Time Systems Symposium</venue><doi>10.1109/REAL.1998.739746</doi><keywords><keyword weight="0.4665">Programming language</keyword><keyword weight="0.40933">Orthogonal array testing</keyword><keyword weight="0.47061">Computer science</keyword><keyword weight="0.56137">Correctness</keyword><keyword weight="0.46761">Theoretical computer science</keyword><keyword weight="0.44892">Real-time computing</keyword><keyword weight="0.49815">Non-regression testing</keyword><keyword weight="0.53802">White-box testing</keyword><keyword weight="0.54244">Lustre (programming language)</keyword><keyword weight="0.49623">Boolean algebra</keyword><keyword weight="0.54222">Reactive system</keyword><keyword weight="0.48308">Observer (quantum physics)</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The paper addresses the problem of automatizing the production of test sequences for reactive systems. We particularly focus on two points: (1) generating relevant inputs, with respect to some knowledge about the environment in which the system is intended to run; (2) checking the correctness of the test results, according to the expected behavior of the system. We propose to use synchronous observers to express both the relevance and the correctness of the test sequences. In particular, the relevance observer is used to randomly choose inputs satisfying temporal assumptions about the environment. These assumptions may involve both Boolean and linear numerical constraints. A prototype tool called LURETTE has been developed and experimented with, which works on observers written in the LUSTRE programming language.</abstract></paper>