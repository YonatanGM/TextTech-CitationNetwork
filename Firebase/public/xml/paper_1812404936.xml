<paper id="1812404936"><title>On the Semantics of Fair Parallelism</title><year>1979</year><authors><author org="University of Warwick *" id="2279403687">David Park</author></authors><n_citation>188</n_citation><doc_type /><references><reference>1542605821</reference><reference>1546746643</reference><reference>2015709431</reference><reference>2023309117</reference><reference>2062024564</reference><reference>2103953153</reference><reference>2104624174</reference></references><venue id="" type="">Proceedings of the Abstract Software Specifications, 1979 Copenhagen Winter School</venue><doi>10.1007/3-540-10007-5_47</doi><keywords><keyword weight="0.46257">Programming language</keyword><keyword weight="0.50305">Sequence</keyword><keyword weight="0.44065">Computer science</keyword><keyword weight="0.51017">Relation algebra</keyword><keyword weight="0.52916">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Suppose that a programming language involves, among other familiar ways of composing commands Ci, a "parallel" construct (C1 par C2) :[21],"expects, when using this language, that a sequence such as :[32],":= O; y :[32],":= 1; (x :[32],":= 1 par (while x=0 do y :[32],":= y+1)) should be guaranteed to terminate in whatever context it is executed.</abstract></paper>