<paper id="1588518948"><title>Leakage-Resilient Public-Key Cryptography in the Bounded-Retrieval Model</title><year>2009</year><authors><author org="Department of Computer Science, New York University," id="2966804837">Joël Alwen</author><author org="Department of Computer Science, New York University," id="1259442811">Yevgeniy Dodis</author><author org="Department of Computer Science, New York University," id="234122163">Daniel Wichs</author></authors><n_citation>217</n_citation><doc_type>Conference</doc_type><references><reference>60616127</reference><reference>89553247</reference><reference>111085860</reference><reference>131640530</reference><reference>203500824</reference><reference>236432643</reference><reference>1508077776</reference><reference>1511843316</reference><reference>1520746637</reference><reference>1535972735</reference><reference>1541483074</reference><reference>1547517307</reference><reference>1554259298</reference><reference>1573157032</reference><reference>1589034595</reference><reference>1591813095</reference><reference>1592625985</reference><reference>1603601034</reference><reference>1606729219</reference><reference>1610688607</reference><reference>1613874182</reference><reference>1663689473</reference><reference>1724890242</reference><reference>1968372742</reference><reference>2007661134</reference><reference>2049918060</reference><reference>2060474153</reference><reference>2061949491</reference><reference>2070616660</reference><reference>2091020476</reference><reference>2096290348</reference><reference>2097079400</reference><reference>2102632861</reference><reference>2104965768</reference><reference>2117455301</reference><reference>2124926080</reference><reference>2133701468</reference><reference>2133817484</reference><reference>2134475940</reference><reference>2137072047</reference><reference>2140805804</reference><reference>2146813141</reference><reference>2153281696</reference><reference>2154300278</reference><reference>2157679418</reference><reference>2163122958</reference><reference>2167765756</reference><reference>2169985476</reference><reference>2170489924</reference><reference>2175377689</reference><reference>2232070551</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/978-3-642-03356-8_3</doi><keywords><keyword weight="0.65861">Key distribution</keyword><keyword weight="0.50993">Authentication</keyword><keyword weight="0.44282">Computer science</keyword><keyword weight="0.44694">Computer security</keyword><keyword weight="0.56656">Encryption</keyword><keyword weight="0.52523">Cryptographic primitive</keyword><keyword weight="0.53692">Ciphertext</keyword><keyword weight="0.54455">Security parameter</keyword><keyword weight="0.57706">Public-key cryptography</keyword><keyword weight="0.55744">Key size</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We study the design of cryptographic primitives resilient to key-leakage attacks, where an attacker can repeatedly and adaptively learn information about the secret key, subject only to the constraint that the overall amount of such information is bounded by some parameter ?. We construct a variety of leakage-resilient public-key systems including the first known identification schemes (ID), signature schemes and authenticated key agreement protocols (AKA). Our main result is an efficient three-round AKA in the Random-Oracle Model, which is resilient to key-leakage attacks that can occur prior-to and after a protocol execution. Our AKA protocol can be used as an interactive encryption scheme with qualitatively stronger privacy guarantees than non-interactive encryption schemes (constructed in prior and concurrent works), which are inherently insecure if the adversary can perform leakage attacks after seing a :[132],"our schemes can be flexibly extended to the Bounded-Retrieval Model, allowing us to tolerate very large absolute amount of adversarial leakage ? (potentially many gigabytes of information), only by increasing the size of the secret key and without any other loss of efficiency in communication or computation. Concretely, given any leakage parameter ?, security parameter ?, and any desired fraction 0 u003c ? ≤ 1, :[132],"our schemes have the following properties: key size is :[204],"?(1 + ?) + key size is :[212],"O(?), and independent of :[220],"complexity is O(?/?), and independent of :[227],"reads O(?/? 2) locations of the secret key, independent of :[238],"we show that :[132],"our schemes allow for repeated "invisible updates" of the secret key, allowing us to tolerate up to ? bits of leakage in between any two updates, and an unlimited amount of leakage overall. These updates require that the parties can securely store a short "master update key" (e.g. on a separate secure device protected against leakage), which is only used for updates and not during protocol execution. The updates are invisible in the sense that a party can update its secret key at any point in time, without modifying the public key or notifying the other users.</abstract></paper>