<paper id="1520479992"><title>Petri Nets as a Formalism for Comparing Expressiveness of Workflow-Based Clinical Guideline Languages</title><year>2008</year><authors><author org="University of Edinburgh," id="2623148884">Mar√≠a Adela Grando</author><author org="University of Edinburgh," id="297978837">David W. Glasspool</author><author org="University of Oxford" id="2116017949">John Fox</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>1561027652</reference><reference>1603799276</reference><reference>1825564995</reference><reference>1947800718</reference><reference>2028652935</reference><reference>2057397288</reference><reference>2087542833</reference><reference>2129466958</reference><reference>2131918784</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/978-3-642-00328-8_35</doi><keywords><keyword weight="0.61225">Petri net</keyword><keyword weight="0.42295">Systems engineering</keyword><keyword weight="0.44462">Computer science</keyword><keyword weight="0.57102">Process architecture</keyword><keyword weight="0.47874">Mathematical proof</keyword><keyword weight="0.0">Workflow patterns</keyword><keyword weight="0.45156">Formalism (philosophy)</keyword><keyword weight="0.42735">Guideline</keyword><keyword weight="0.58592">Workflow</keyword><keyword weight="0.0">Expressivity</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>There has been relatively little work on formal analysis of expressiveness and verification of properties in clinical workflow. In this paper we discuss Coloured Petri nets (CPNs) as a formalism to support such analysis. We show in detail how a typical clinical guideline language (PROforma) may be formally mapped to a CPN representation, then show how such a mapping allows formal proofs that a guideline language is capable or is not capable of expressing a standardised workflow pattern. We argue that the strategies of proof presented here to study the expressiveness of PROforma can be generalized to an arbitrary workflow-based language.</abstract></paper>