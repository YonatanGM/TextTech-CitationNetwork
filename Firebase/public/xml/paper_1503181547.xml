<paper id="1503181547"><title>High-Speed Pseudorandom Number Generation with Small Memory</title><year>1999</year><authors><author org="ATT Labs. Research" id="1971187209">William Aiello</author><author org="Telcordia Technologies &lt;caruso@research.telcordia.com&gt;" id="2284609316">Sivaramakrishnan Rajagopalan</author><author org="Microsoft Research, One Microsoft Way," id="2126319880">Ramarathnam Venkatesan</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>206097255</reference><reference>1519080809</reference><reference>1552402248</reference><reference>1588297800</reference><reference>1631603072</reference><reference>1636750413</reference><reference>1909955916</reference><reference>1961257075</reference><reference>2015826302</reference><reference>2024279477</reference><reference>2026522166</reference><reference>2048958388</reference><reference>2099785391</reference><reference>2107324709</reference><reference>2131300413</reference><reference>2144560442</reference><reference>2148555789</reference><reference>2172433705</reference></references><venue id="2758283624" type="C">Fast Software Encryption</venue><doi>10.1007/3-540-48519-8_21</doi><keywords><keyword weight="0.67206">Pseudorandom function family</keyword><keyword weight="0.6386">Pseudorandomness</keyword><keyword weight="0.43341">Computer science</keyword><keyword weight="0.58395">Cryptographic hash function</keyword><keyword weight="0.44416">Arithmetic</keyword><keyword weight="0.43474">Theoretical computer science</keyword><keyword weight="0.59093">Random seed</keyword><keyword weight="0.62185">Pseudorandom permutation</keyword><keyword weight="0.63451">Pseudorandom generator</keyword><keyword weight="0.67451">Pseudorandom generator theorem</keyword><keyword weight="0.58832">Pseudorandom number generator</keyword><keyword weight="0.43043">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present constructions for a family of pseudorandom generators that are very fast in practice, yet possess provable strong cryptographic and statistical unpredictability properties. While such constructions were previously known, our constructions here have much smaller memory requirements, e.g., small enough for smart cards, etc. Our memory improvements are achieved by using variants of pseudorandom functions. The security requirements of this primitive are a weakening of the security requirements of a pseudorandom function. We instantiate this primitive by a keyed secure hash function. A sample construction based on DES and MD5 was found to run at about 20 megabits per second on a Pentium II.</abstract></paper>