<paper id="1524332517"><title>Efficient Model Checking Using Tabled Resolution</title><year>1997</year><authors><author org="SUNY at Stony Brook" id="2088174689">Y. S. Ramakrishna</author><author org="SUNY at Stony Brook" id="2165621803">C. R. Ramakrishnan</author><author org="SUNY at Stony Brook" id="1990835124">I. V. Ramakrishnan</author><author org="SUNY at Stony Brook" id="2212808945">Scott A. Smolka</author><author org="SUNY at Stony Brook" id="2291248690">Terrance Swift</author><author org="SUNY at Stony Brook" id="2163362677">David Scott Warren</author></authors><n_citation>171</n_citation><doc_type>Conference</doc_type><references><reference>12636371</reference><reference>1488778643</reference><reference>1501731334</reference><reference>1503973138</reference><reference>1507985299</reference><reference>1511336169</reference><reference>1522225310</reference><reference>1535168632</reference><reference>1540180001</reference><reference>1551406732</reference><reference>1571819235</reference><reference>1572167134</reference><reference>1575118279</reference><reference>1593428110</reference><reference>1598757143</reference><reference>1604495149</reference><reference>1695437353</reference><reference>1934513401</reference><reference>1971941065</reference><reference>2012001501</reference><reference>2034717157</reference><reference>2070598037</reference><reference>2087276283</reference><reference>2117189826</reference><reference>2133045600</reference><reference>2173952623</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-63166-6_16</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.4623">Programming language</keyword><keyword weight="0.52162">Model checking</keyword><keyword weight="0.43942">Computer science</keyword><keyword weight="0.43892">Algorithm</keyword><keyword weight="0.46421">Computability</keyword><keyword weight="0.44118">Theoretical computer science</keyword><keyword weight="0.53671">Logic programming</keyword><keyword weight="0.50754">Temporal logic</keyword><keyword weight="0.48991">Constraint logic programming</keyword><keyword weight="0.4645">Modal</keyword><keyword weight="0.43515">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We demonstrate the feasibility of using the XSB tabled logic programming system as a programmable fixed-point engine for implementing efficient local model checkers. In particular, we present XMC, an XSB-based local model checker for a CCS-like value-passing language and the alternation-free fragment of the modal mu-calculus. XMC is written in under 200 lines of XSB code, which constitute a declarative specification of CCS and the modal mu-calculus at the level of semantic equations.</abstract></paper>