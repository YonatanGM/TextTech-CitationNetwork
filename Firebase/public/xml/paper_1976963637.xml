<paper id="1976963637"><title>A high-level data manipulation language for hierarchical data structures</title><year>1976</year><authors><author org="IBM Research Laboratory, 5600 Cottle Rd., San Jose, Ca." id="1971891077">Barron C. Housel</author><author org="IBM Research Laboratory, 5600 Cottle Rd., San Jose, Ca." id="2103707287">Nan C. Shu</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>1985838169</reference><reference>2012056301</reference><reference>2031030227</reference><reference>2043571746</reference><reference>2047499522</reference><reference>2111869173</reference><reference>2145343598</reference><reference>2165467455</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/942574.807134</doi><keywords><keyword weight="0.4575">Data mining</keyword><keyword weight="0.64953">Data hierarchy</keyword><keyword weight="0.47805">Programming language</keyword><keyword weight="0.45675">Abstraction</keyword><keyword weight="0.47196">Computer science</keyword><keyword weight="0.5265">Path expression</keyword><keyword weight="0.53767">Complex data type</keyword><keyword weight="0.47034">Theoretical computer science</keyword><keyword weight="0.5778">Data type</keyword><keyword weight="0.6939">Data manipulation language</keyword><keyword weight="0.54693">Hierarchical database model</keyword><keyword weight="0.6496">Data independence</keyword><keyword weight="0.45557">Database</keyword></keywords><publisher>ACM</publisher><abstract>In this paper we assert that the hierarchical view of data will continue to be popular for a broad class of applications and users. In particular, some of these applications require complex data manipulation which, heretofore, has been dealt with procedurally. In this light, a nonprocedural language, CONVERT, is proposed as a high-level DBMS interface. CONVERT is meant to provide users with a tool for performing complex data manipulation and query of hierarchical data abstractions, called “Forms”. Included in the paper are a description of the Form data abstraction and the CONVERT language, as well as a complete illustrative sample application.</abstract></paper>