<paper id="1984840780"><title>Testing of a large-scale network optimization program</title><year>1978</year><authors><author org="Harvard University, Cambridge, USA," id="2102319059">John M. Mulvey</author></authors><n_citation>45</n_citation><doc_type>Journal</doc_type><references><reference>1965767699</reference><reference>1970135106</reference><reference>1973385223</reference><reference>2003203603</reference><reference>2006752333</reference><reference>2013327579</reference><reference>2027649264</reference><reference>2037209059</reference><reference>2053993781</reference><reference>2056178482</reference><reference>2066375037</reference><reference>2068562608</reference><reference>2089845419</reference><reference>2146706354</reference></references><venue id="193920097" type="J">Mathematical Programming</venue><doi>10.1007/BF01609034</doi><keywords><keyword weight="0.55471">Flow network</keyword><keyword weight="0.47177">Transshipment</keyword><keyword weight="0.46683">Mathematical optimization</keyword><keyword weight="0.56529">Revised simplex method</keyword><keyword weight="0.53072">Source code</keyword><keyword weight="0.46516">Computer science</keyword><keyword weight="0.50949">Core Storage</keyword><keyword weight="0.53102">Linear programming</keyword><keyword weight="0.0">Computer processing</keyword><keyword weight="0.49935">Auxiliary memory</keyword></keywords><publisher>Springer Science and Business Media LLC</publisher><abstract>This paper describes the experimental results of testing a “large-scale” program for solving minimum-cost network flow problems. With this program, general structure transshipment problems with over ten thousand nodes and thirty thousand arcs have been easily solved without resorting to auxiliary storage. The algorithm is a variant of the primal revised simplex method; the computer code is called LPNET illustrating the close connection between linear programming and network graphs. This approach substantially improves computer processing timeand core storage, especially for relatively large network problems. The results of these experiments are provided. It is emphasized that an organized experimental design and a detailed series of empirical tests are crucial for an efficient implementation.</abstract></paper>