<paper id="1560238660"><title>On Optimal Multiversion Access Structures</title><year>1993</year><authors><author org="Universit채t Freiburg," id="2104798602">Bruno Becker</author><author org="Universit채t Freiburg," id="2022946863">Stephan Gschwind</author><author org="ETH Zentrum" id="2310448304">Thomas Ohler</author><author org="Universit채t M체nchen" id="2151325580">Bernhard Seeger</author><author org="ETH Zentrum" id="70450096">Peter Widmayer</author></authors><n_citation>43</n_citation><doc_type /><references><reference>1545155892</reference><reference>1554228447</reference><reference>1581321178</reference><reference>1779898155</reference><reference>2013025864</reference><reference>2044015456</reference><reference>2074429597</reference><reference>2096527593</reference><reference>2100576135</reference><reference>2118269922</reference><reference>2121047005</reference><reference>2142947709</reference><reference>2144167783</reference><reference>2150145391</reference><reference>2151135734</reference><reference>2151521932</reference><reference>2154322583</reference></references><venue id="" type="">SSD '93 Proceedings of the Third International Symposium on Advances in Spatial Databases</venue><doi>10.1007/3-540-56869-7_8</doi><keywords><keyword weight="0.45445">Data mining</keyword><keyword weight="0.4536">Computer science</keyword><keyword weight="0.52524">Range query (data structures)</keyword><keyword weight="0.46253">Theoretical computer science</keyword><keyword weight="0.51346">Asymptotically optimal algorithm</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We propose an asymptotically optimal multiversion B-tree. In our setting, insertions and deletions of data items are allowed only for the present version, whereas range queries and exact match queries are allowed for any version, present or past. The technique we present for transforming a (usual single version) B-tree into a multiversion B-tree is more general: it applies to a number of spatial and non-spatial hierarchical external access structures with certain properties directly, and it can be modified for others. For the B-tree and several other hierarchical external access structures, multiversion capabilities come at no extra cost, neither for storage space nor for runtime, asymptotically in the worst case. The analysis of the behavior of the multiversion B-tree shows that the constant loss of efficiency is low enough to make our suggestion not only a theoretical, but also a practical one.</abstract></paper>