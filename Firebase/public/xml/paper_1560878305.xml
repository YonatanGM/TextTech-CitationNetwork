<paper id="1560878305"><title>Adding Active Functionality to an Object-Oriented Database System - a Layered Approach</title><year>1993</year><authors><author org="UBILAB (UBS Informatics Laboratory)" id="2940473005">Angelika Kotz Dittrich</author></authors><n_citation>26</n_citation><doc_type /><references><reference>151700203</reference><reference>192407326</reference><reference>1527259867</reference><reference>1527509133</reference><reference>1538367602</reference><reference>1599271424</reference><reference>2116133297</reference></references><venue id="" type="">BTW</venue><doi>10.1007/978-3-642-86096-6_4</doi><keywords><keyword weight="0.51552">Black box (phreaking)</keyword><keyword weight="0.45103">Computer science</keyword><keyword weight="0.4579">Database</keyword><keyword weight="0.0">Object oriented databases</keyword><keyword weight="0.53123">Multitier architecture</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes how active functionality was integrated into an existing commercial object-oriented database system. We describe the layered architecture approach taken and the components of the various system layers. It will be shown which advantages and problems arise when adding triggers and operational rules to an ooDBMS which has to be treated as a black box.</abstract></paper>