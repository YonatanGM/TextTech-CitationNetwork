<paper id="1971043386"><title>Multimodal logic programming using equational and order-sorted logic</title><year>1992</year><authors><author org="Université de Caen" id="2562609811">Françoise Debart</author><author org="Université de Caen" id="2216114824">Patrice Enjalbert</author><author org="Université de Caen" id="2149467786">Madeleine Lescot</author></authors><n_citation>37</n_citation><doc_type>Journal</doc_type><references><reference>87862204</reference><reference>1530999579</reference><reference>1545815294</reference><reference>1556743088</reference><reference>1571267585</reference><reference>1582842241</reference><reference>1605538682</reference><reference>1996656410</reference><reference>2008276941</reference><reference>2017094488</reference><reference>2029176884</reference><reference>2063582240</reference><reference>2079384024</reference><reference>2088374045</reference><reference>2110491962</reference><reference>2115499179</reference><reference>2134592706</reference></references><venue id="90727058" type="J">Theoretical Computer Science</venue><doi>10.1016/0304-3975(92)90290-V</doi><keywords><keyword weight="0.45162">Discrete mathematics</keyword><keyword weight="0.72069">Computational logic</keyword><keyword weight="0.71839">Horn clause</keyword><keyword weight="0.74356">Normal modal logic</keyword><keyword weight="0.78043">Multimodal logic</keyword><keyword weight="0.71473">Logic programming</keyword><keyword weight="0.41958">Mathematics</keyword><keyword weight="0.71046">Higher-order logic</keyword><keyword weight="0.75908">Dynamic logic (modal logic)</keyword><keyword weight="0.71153">Intermediate logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In previous work [2] we proposed a method for automated modal theorem proving based on algebraic concepts and equational techniques. Basically, it uses the translation of Modal Logic into a specially tailored multi-sorted logic called Path Logic. In this paper we extend the method for Multi-Modal logic and apply it to Multi-Modal Logic Programming. The Multi-Modal systems we consider are arbitrary mixing of first order modal systems of type KD,KT,KD4 or KT4, with interaction axioms of the form □iA - □jA. Roughly, with each modal subsystem is associated a sort in Path Logic and a specific set of equations, and the interaction axioms are captured by the order relation between sorts. Hence, again, all the modal-logical rules are coded in the unification algorithm. If one considers Horn clauses (in the usual sense) we get a Logic Programming system — PATHLOG- for which standard theoretical results apply. In PATHLOG one can either write programs directly in the language of Path Logic or in various Multi-Modal Logics, the modal formulas being automatically translated and put in clausal form. For instance we obtain as a particular case a system for Temporal Logic Programming which subsumes TEMPLOG of [1], and whose completeness results immediately from our general theorems.</abstract></paper>