<paper id="1575126375"><title>All-or-Nothing Encryption and the Package Transform</title><year>1997</year><authors><author org="MIT — Laboratory for Computer Science" id="695545146">Ronald L. Rivest</author></authors><n_citation>311</n_citation><doc_type>Conference</doc_type><references><reference>1490586645</reference><reference>1552695147</reference><reference>1552810527</reference><reference>1759918341</reference><reference>2022407856</reference><reference>2100265784</reference><reference>2168581558</reference></references><venue id="2758283624" type="C">Fast Software Encryption</venue><doi>10.1007/BFb0052348</doi><keywords><keyword weight="0.76641">Multiple encryption</keyword><keyword weight="0.4333">Computer science</keyword><keyword weight="0.73644">Attribute-based encryption</keyword><keyword weight="0.74673">All-or-nothing transform</keyword><keyword weight="0.75455">Encryption</keyword><keyword weight="0.43109">Theoretical computer science</keyword><keyword weight="0.7522">Probabilistic encryption</keyword><keyword weight="0.73577">40-bit encryption</keyword><keyword weight="0.75351">Filesystem-level encryption</keyword><keyword weight="0.76696">On-the-fly encryption</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a new mode of encryption for block ciphers, which we call all-or-nothing encryption. This mode has the interesting defining property that one must decrypt the entire ciphertext before one can determine even one message block. This means that brute-force searches against all-or-nothing encryption are slowed down by a factor equal to the number of blocks in the ciphertext. We give a specific way of implementing all-or-nothing encryption using a “package transform≓ as a pre-processing step to an ordinary encryption mode. A package transform followed by ordinary codebook encryption also has the interesting property that it is very efficiently implemented in parallel. All-or-nothing encryption can also provide protection against chosen-plaintext and related-message attacks.</abstract></paper>