<paper id="1985236007"><title>On understanding laws, evolution, and conservation in the large-program life cycle</title><year>1984</year><authors><author org="Imperial College of Science and Technology, LondonU.K.#TAB#" id="2614290841">M. M. Lehman</author></authors><n_citation>279</n_citation><doc_type>Journal</doc_type><references><reference>2034680605</reference></references><venue id="37879656" type="J">Journal of Systems and Software</venue><doi>10.1016/0164-1212(79)90022-0</doi><keywords><keyword weight="0.60752">Lehman's laws of software evolution</keyword><keyword weight="0.41381">Computer science</keyword><keyword weight="0.0">Program development</keyword><keyword weight="0.47232">Dependant</keyword><keyword weight="0.44608">Phenomenon</keyword><keyword weight="0.0">Programming process</keyword><keyword weight="0.48781">Modern physics</keyword><keyword weight="0.0">Program evolution</keyword><keyword weight="0.41913">Law</keyword></keywords><publisher>Elsevier Science Inc.</publisher><abstract>The paper presents interpretations of some recently discovered laws of evolution and conservation in the largeprogram life cycle. Program development and maintenance processes are managed and implemented by people; thus in the long term they could be expected to be unpredictable, dependant on the judgments, whims, and actions of programming process participants (e.g., managers, programmers, and product users). Yet, observed, measured, and modeled regularities suggest laws that are closer to biological laws or those of modern physics than to those currently formulated in other areas subject to human influence (e.g., economics and sociology). After a brief discussion of the first four laws, to highlight underlying phenomena and natural attributes of the program evolution process, the paper concentrates on a fifth law and shows how, and why, this law represents a conservation phenomenon: the Conservation of Familiarity.</abstract></paper>