<paper id="1493892051"><title>Finding Frequent Items in Data Streams</title><year>2002</year><authors><author org="Department of Computer Science, Princeton University, Princeton NJ" id="2003165903">Moses Charikar</author><author org="Computer Science Division, University of California Berkeley, CA" id="2420350212">Kevin Chen</author><author org="Department of Computer Science, Rutgers University Piscataway, NJ" id="246373776">Martin Farach-Colton</author></authors><n_citation>1019</n_citation><doc_type>Conference</doc_type><references><reference>1558846832</reference><reference>1761167196</reference><reference>1970730593</reference><reference>1993482412</reference><reference>2003262311</reference><reference>2039100193</reference><reference>2045533739</reference><reference>2047424291</reference><reference>2053171205</reference><reference>2054081892</reference><reference>2069980026</reference><reference>2080745194</reference><reference>2100369465</reference><reference>2113139394</reference><reference>2130417465</reference><reference>2163964823</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1016/S0304-3975(03)00400-6</doi><keywords><keyword weight="0.44604">Data mining</keyword><keyword weight="0.50308">Data structure</keyword><keyword weight="0.51386">Approximation algorithm</keyword><keyword weight="0.57994">Data stream mining</keyword><keyword weight="0.56634">Streaming algorithm</keyword><keyword weight="0.42618">Computer science</keyword><keyword weight="0.5089">Data stream</keyword><keyword weight="0.44875">Algorithm</keyword><keyword weight="0.4531">Coding (social sciences)</keyword><keyword weight="0.46936">Hash function</keyword><keyword weight="0.46253">Hash table</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a 1-pass algorithm for estimating the most frequent items in a data stream using limited storage space. Our method relies on a data structure called a COUNT SKETCH, which allows us to reliably estimate the frequencies of frequent items in the stream. Our algorithm achieves better space bounds than the previously known best algorithms for this problem for several natural distributions on the item frequencies. In addition, our algorithm leads directly to a 2-pass algorithm for the problem of estimating the items with the largest (absolute) change in frequency between two data streams. To our knowledge, this latter problem has not been previously studied in the literature.</abstract></paper>