<paper id="1521679698"><title>The All-or-Nothing Nature of Two-Party Secure Computation</title><year>1999</year><authors><author org="Harvard University" id="349121767">Amos Beimel</author><author org="massachusetts institute of technology" id="2138775625">Tal Malkin</author><author org="massachusetts institute of technology" id="699581604">Silvio Micali</author></authors><n_citation>58</n_citation><doc_type>Conference</doc_type><references><reference>340987026</reference><reference>1488169517</reference><reference>1489286008</reference><reference>1607225066</reference><reference>1970606468</reference><reference>1978670538</reference><reference>1984332407</reference><reference>1987667503</reference><reference>1998058955</reference><reference>2004881597</reference><reference>2005900892</reference><reference>2011112377</reference><reference>2012045293</reference><reference>2015880590</reference><reference>2016443801</reference><reference>2081533283</reference><reference>2125247191</reference><reference>2168957864</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48405-1_6</doi><keywords><keyword weight="0.39778">The All</keyword><keyword weight="0.58761">Secure multi-party computation</keyword><keyword weight="0.45666">Nothing</keyword><keyword weight="0.52693">Cryptography</keyword><keyword weight="0.45017">Computer science</keyword><keyword weight="0.45088">Theoretical computer science</keyword><keyword weight="0.55033">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A function f is computationally securely computable if two computationally-bounded parties Alice, having a secret input x, and Bob, having a secret input y, can talk back and forth so that (even if one of them is malicious) (1) Bob learns essentially only f(x, y) while (2) Alice learns essentially :[50],"prove that, if any non-trivial function can be so computed, then so can every function. Consequently, the complexity assumptions sufficient and/or required for computationally securely computing f are the same for every non-trivial function f.</abstract></paper>