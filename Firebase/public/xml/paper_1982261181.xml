<paper id="1982261181"><title>Partially specified nearest neighbor searches using k-d treesâ˜†</title><year>1982</year><authors><author org="Department of Mathematics and Computer Science, Florida State University, Tallahassee, FL 32306, U.S.A." id="2151426012">Caroline M. Eastman</author><author org="Department of Mathematics and Computer Science, Florida State University, Tallahassee, FL 32306, U.S.A." id="2635966132">Maria Zemankova</author></authors><n_citation>9</n_citation><doc_type>Journal</doc_type><references><reference>2024668293</reference><reference>2084223159</reference><reference>2117541587</reference><reference>2138078746</reference><reference>2155631901</reference><reference>2165558283</reference></references><venue id="147953040" type="J">Information Processing Letters</venue><doi>10.1016/0020-0190(82)90106-5</doi><keywords><keyword weight="0.58966">R-tree</keyword><keyword weight="0.43554">Combinatorics</keyword><keyword weight="0.60393">Fixed-radius near neighbors</keyword><keyword weight="0.61849">Best bin first</keyword><keyword weight="0.58837">Ball tree</keyword><keyword weight="0.61941">Nearest neighbor graph</keyword><keyword weight="0.58099">Large margin nearest neighbor</keyword><keyword weight="0.60222">Cover tree</keyword><keyword weight="0.39152">Mathematics</keyword><keyword weight="0.63459">Nearest neighbor search</keyword></keywords><publisher>Elsevier</publisher><abstract>A partially specified nearest neighbor query is a nearest neighbor search in which only some of the possible keys are specified. An algorithm that uses k-d trees to perform such searching is described. The expected time complexity is O(N1-jk). where k is the total number of keys and j the number of keys specified in the query. Experimental results, which are consistent with the theoretical predictions, are also presented.</abstract></paper>