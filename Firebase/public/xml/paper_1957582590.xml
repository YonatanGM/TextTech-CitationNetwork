<paper id="1957582590"><title>PAST: a large-scale, persistent peer-to-peer storage utility</title><year>2001</year><authors><author org="Rice University , Houston , TX , USA" id="62967857">P. Druschel</author><author org=", Microsoft" id="2338340454">A. Rowstron</author></authors><n_citation>572</n_citation><doc_type /><references><reference>1580004440</reference><reference>2104210894</reference><reference>2115599946</reference><reference>2118428193</reference><reference>2123820820</reference><reference>2147587452</reference><reference>2158049821</reference><reference>2163059190</reference><reference>2167898414</reference><reference>2169840105</reference><reference>2171294352</reference><reference>2174507869</reference></references><venue id="" type="">Proceedings Eighth Workshop on Hot Topics in Operating Systems</venue><doi>10.1109/HOTOS.2001.990064</doi><keywords><keyword weight="0.51992">Load management</keyword><keyword weight="0.52977">Pastry</keyword><keyword weight="0.52699">Peer-to-peer</keyword><keyword weight="0.44604">Computer science</keyword><keyword weight="0.53674">Load balancing (computing)</keyword><keyword weight="0.45951">Computer security</keyword><keyword weight="0.4665">Computer network</keyword><keyword weight="0.47301">Resource allocation</keyword><keyword weight="0.52828">High availability</keyword><keyword weight="0.53593">Scalability</keyword><keyword weight="0.49312">The Internet</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>This paper sketches the design of PAST, a large-scale, Internet-based, global storage utility that provides scalability, high availability, persistence and security. PAST is a peer-to-peer Internet application and is entirely self-organizing. PAST nodes serve as access points for clients, participate in the routing of client requests, and contribute storage to the system. Nodes are not trusted, they may join the system at any time and may silently leave the system without warning. Yet, the system is able to provide strong assurances, efficient storage access, load balancing and scalability. Among the most interesting aspects of PASTu0027s design are (1) the Pastry location and routing scheme, which reliably and efficiently routes client requests among the PAST nodes, has good network locality properties and automatically resolves node failures and node additions; (2) the use of randomization to ensure diversity in the set of nodes that store a fileu0027s replicas and to provide load balancing; and (3) the optional use of smartcards, which are held by each PAST user and issued by a third party called a broker The smartcards support a quota system that balances supply and demand of storage in the system.</abstract></paper>