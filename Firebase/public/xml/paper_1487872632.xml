<paper id="1487872632"><title>Space Efficient Reachability Analysis Through Use of Pseudo-Root States</title><year>1997</year><authors><author org="#N#        University of Adelaide" id="2570811297">Atanas N. Parashkevov</author><author org="#N#        University of Adelaide" id="2344741347">Jay Yantchev</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1508152977</reference><reference>1523442991</reference><reference>1525928754</reference><reference>1604339875</reference><reference>1700671362</reference><reference>2030224590</reference><reference>2076878931</reference><reference>2080267935</reference><reference>2099120582</reference><reference>2110425399</reference><reference>2131101129</reference><reference>2144362636</reference><reference>2147539576</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/BFb0035380</doi><keywords><keyword weight="0.0">Space requirements</keyword><keyword weight="0.45339">Computer science</keyword><keyword weight="0.46388">Theoretical computer science</keyword><keyword weight="0.56976">Reachability</keyword><keyword weight="0.50189">Garbage collection</keyword><keyword weight="0.62371">State space</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a novel reachability analysis technique which, while still maintaining a set of reached states, significantly reduces the size of this set through excluding a specific subset of those states, referred to as pseudo-root states. Pseudo-root states are states which are not reachable from the unexplored state space of the finite model. Such states may be safely discarded from state storage. The modified reachability analysis algorithm identifies and discards pseudo-root states at each iteration of the state search. For a set of three example problems, the presented algorithm results in 2 to 16 fold improvements in space requirements, while increasing the run time at most twice.</abstract></paper>