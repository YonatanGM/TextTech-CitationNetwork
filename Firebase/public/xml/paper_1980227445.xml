<paper id="1980227445"><title>Zero-knowledge from secure multiparty computation</title><year>2007</year><authors><author org="Technion , Haifa, Israel" id="114908009">Yuval Ishai</author><author org="Technion , Haifa, Israel" id="307687659">Eyal Kushilevitz</author><author org="UCLA, Los Angeles, CA" id="1482108584">Rafail Ostrovsky</author><author org="UCLA, Los Angeles, CA" id="2159933393">Amit Sahai</author></authors><n_citation>106</n_citation><doc_type>Conference</doc_type><references><reference>59079490</reference><reference>1487501992</reference><reference>1490590996</reference><reference>1517916985</reference><reference>1526979127</reference><reference>1542382722</reference><reference>1548159703</reference><reference>1560201081</reference><reference>1574535057</reference><reference>1582319069</reference><reference>1587274254</reference><reference>1590713339</reference><reference>1604074479</reference><reference>1625658248</reference><reference>1970606468</reference><reference>1970808997</reference><reference>1984685443</reference><reference>1987667503</reference><reference>1996888795</reference><reference>1997859100</reference><reference>2004881597</reference><reference>2005900892</reference><reference>2012045293</reference><reference>2015880590</reference><reference>2016443801</reference><reference>2019807548</reference><reference>2028483198</reference><reference>2032133054</reference><reference>2037038890</reference><reference>2038517014</reference><reference>2040438296</reference><reference>2049761975</reference><reference>2055863940</reference><reference>2067596507</reference><reference>2069002101</reference><reference>2069717895</reference><reference>2070678975</reference><reference>2080123784</reference><reference>2080975816</reference><reference>2103230338</reference><reference>2125247191</reference><reference>2146099890</reference><reference>2158596367</reference><reference>2914525031</reference></references><venue id="1190910084" type="C">Symposium on the Theory of Computing</venue><doi>10.1145/1250790.1250794</doi><keywords><keyword weight="0.45701">Discrete mathematics</keyword><keyword weight="0.44675">Combinatorics</keyword><keyword weight="0.52095">Secure multi-party computation</keyword><keyword weight="0.49567">Cryptography</keyword><keyword weight="0.42922">Computer science</keyword><keyword weight="0.55828">Communication complexity</keyword><keyword weight="0.55706">Secure two-party computation</keyword><keyword weight="0.53309">Security parameter</keyword><keyword weight="0.53332">Zero-knowledge proof</keyword><keyword weight="0.57889">Universal composability</keyword><keyword weight="0.48295">Bounded function</keyword></keywords><publisher>ACM</publisher><abstract>We present a general construction of a zero-knowledge proof for an NP relation R(x,w) which only makes a black-box use of a secure protocol for a related multi-partyfunctionality f. The latter protocol is only required to be secure against a small number of "honest but curious" players. As an application, we can translate previous results on the efficiency of secure multiparty computation to the domain of zero-knowledge, improving over previous constructions of efficient zero-knowledge proofs. In particular, if verifying R on a witness of length m can be done by a circuit C of size s, and assuming one-way functions exist, we get the following types of zero-knowledge proof protocols. Approaching the witness length. If C has constant depth over ∧,∨,⊕, - gates of unbounded fan-in, we get a zero-knowledge protocol with communication complexity m·poly(k)·polylog(s), where k is a security parameter. Such a protocol can be implemented in either the standard interactive model or, following a trusted setup, in a non-interactive model. "Constant-rate" zero-knowledge. For an arbitrary circuit C of size s and a bounded fan-in, we geta zero-knowledge protocol with communication complexity O(s)+poly(k). Thus, for large circuits, the ratio between the communication complexity and the circuit size approaches a constant. This improves over the O(ks) complexity of the best previous protocols.</abstract></paper>