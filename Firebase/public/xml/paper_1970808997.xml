<paper id="1970808997"><title>Computationally Sound Proofs</title><year>2000</year><authors><author org="" id="699581604">Silvio Micali</author></authors><n_citation>245</n_citation><doc_type>Journal</doc_type><references><reference>1484557542</reference><reference>1566345534</reference><reference>1589034595</reference><reference>1596412683</reference><reference>1964053266</reference><reference>1967415230</reference><reference>1970606468</reference><reference>1984685443</reference><reference>1996360405</reference><reference>1996839061</reference><reference>2002032317</reference><reference>2002930326</reference><reference>2011112377</reference><reference>2017899870</reference><reference>2029859729</reference><reference>2033361557</reference><reference>2036265926</reference><reference>2051250911</reference><reference>2052267638</reference><reference>2053086236</reference><reference>2080578129</reference><reference>2082647621</reference><reference>2096390054</reference><reference>2117362057</reference><reference>2132605415</reference><reference>2137883105</reference><reference>2143391442</reference><reference>2144675047</reference><reference>2148957455</reference><reference>2151413173</reference><reference>2151433956</reference><reference>2151715405</reference><reference>2293988196</reference><reference>2916302273</reference></references><venue id="153560523" type="J">SIAM Journal on Computing</venue><doi>10.1137/S0097539795284959</doi><keywords><keyword weight="0.53447">Verifiable computing</keyword><keyword weight="0.44629">Combinatorics</keyword><keyword weight="0.45804">Algebra</keyword><keyword weight="0.44129">Computer science</keyword><keyword weight="0.49506">Automated theorem proving</keyword><keyword weight="0.50804">Correctness</keyword><keyword weight="0.48361">Oracle</keyword><keyword weight="0.49658">Random oracle</keyword><keyword weight="0.4572">Theoretical computer science</keyword><keyword weight="0.49609">Recursive language</keyword><keyword weight="0.52805">Mathematical proof</keyword><keyword weight="0.50374">Computational complexity theory</keyword></keywords><publisher>Society for Industrial and Applied Mathematics</publisher><abstract>This paper puts forward a new notion of a proof based on computational complexity and explores its implications for computation at large. :[22],"sound proofs provide, in a novel and meaningful framework, answers to old and new questions in complexity theory. In particular, given a random oracle or a new complexity assumption, they enable us to :[56],"that verifying is easier than deciding for all theorems; provide a quite effective way to prove membership in computationally hard languages (such as ${\cal C}o$-$\cal N \cal P$-complete ones); and show :[56],"that every computation possesses a short certificate vouching its correctness. :[98],"if a special type of computationally :[22],"sound proof exists, we show :[56],"that Blumu0027s notion of program checking can be meaningfully broadened so as to prove :[56],"that $\cal N \cal P$-complete languages are checkable.</abstract></paper>