<paper id="1764756492"><title>Enumerating maximal frequent sets using irredundant dualization</title><year>2003</year><authors><author org="National Institute of informatics" id="2017128800">Ken Satoh</author><author org="National Institute of informatics" id="2100790447">Takeaki Uno</author></authors><n_citation>28</n_citation><doc_type>Conference</doc_type><references><reference>73169011</reference><reference>1501399373</reference><reference>1553696291</reference><reference>1576562444</reference><reference>1603162376</reference><reference>1676134498</reference><reference>2080947358</reference><reference>2141115288</reference></references><venue id="1132231445" type="C">Discovery Science</venue><doi>10.1007/978-3-540-39644-4_22</doi><keywords><keyword weight="0.44115">Discrete mathematics</keyword><keyword weight="0.44257">Combinatorics</keyword><keyword weight="0.4199">Computer science</keyword><keyword weight="0.48437">Hypergraph</keyword><keyword weight="0.42623">Transversal (geometry)</keyword><keyword weight="0.46456">Association rule learning</keyword><keyword weight="0.46511">Multiplication</keyword><keyword weight="0.42747">Transaction data</keyword><keyword weight="0.43048">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we give a new algorithm for enumerating all maximal frequent sets using dualization. Frequent sets in transaction data has been used for computing association rules. Maximal frequent sets are important in representing frequent sets in a compact form, thus many researchers have proposed algorithms for enumerating maximal frequent sets. Among these algorithms, some researchers proposed algorithms for enumerating both maximal frequent sets and minimal infrequent sets in a primal-dual way by using a computation of the minimal transversal for a hypergraph, or in other words, hypergraph dualization. We give an improvement for this kind of algorithms in terms of the number of queries of frequency and the space complexity. Our algorithm checks each minimal infrequent set just once, while the existing algorithms check more than once, possibly so many times. Our algorithm does not store the minimal infrequent sets in memory, while the existing algorithms have to store them. The main idea of the improvement is that minimal infrequent sets computed from maximal frequent sets by dualization is still minimal infrequent even if we add a set to the current maximal frequent sets. We analyze the query complexity and the space complexity of our algorithm theoretically, and experimentally evaluate the algorithm to show that the computation time on average is in the order of the multiplication of the number of maximal frequent sets and the number of minimal infrequent sets.</abstract></paper>