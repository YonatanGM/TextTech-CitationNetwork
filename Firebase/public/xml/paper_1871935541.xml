<paper id="1871935541"><title>Parallel Simulation of Data Parallel Programs</title><year>1995</year><authors><author org="University of California" id="2118421755">Sundeep Prakash</author><author org="University of California" id="2293596591">Rajive Bagrodia</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>8399591</reference><reference>106099067</reference><reference>1924765577</reference><reference>1994270484</reference><reference>2018352428</reference><reference>2036474549</reference><reference>2041330544</reference><reference>2101007051</reference><reference>2118900647</reference><reference>2151210596</reference><reference>2296636214</reference></references><venue id="1198129048" type="C">Languages and Compilers for Parallel Computing</venue><doi>10.1007/BFb0014203</doi><keywords><keyword weight="0.60757">Massively parallel</keyword><keyword weight="0.46243">Computer science</keyword><keyword weight="0.59809">Parallel algorithm</keyword><keyword weight="0.48438">Parallel computing</keyword><keyword weight="0.49374">Basic block</keyword><keyword weight="0.61136">Parallel programming model</keyword><keyword weight="0.49439">Gaussian elimination</keyword><keyword weight="0.61923">Bulk synchronous parallel</keyword><keyword weight="0.47396">Matrix multiplication</keyword><keyword weight="0.48972">Clock rate</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Accurate simulations of parallel programs for large datasets can often be slow; parallel execution has been shown to offer significant potential in reducing the execution time of many discrete-event simulators. In this paper, we describe the design and implementation of a parallel simulator called DPSIM that simulates the execution of data parallel programs on contemporary message-passing parallel architectures. The simulator has been implemented on the IBM SPx using a conservative synchronization algorithm. This paper also describes the use of the simulator in evaluating the impact of architectural characteristics like processor speed and message communication latency on the performance of scientific applications including Gauss Jordan elimination and matrix multiplication.</abstract></paper>