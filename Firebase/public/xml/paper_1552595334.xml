<paper id="1552595334"><title>From goals to aspects: discovering aspects from requirements goal models</title><year>2004</year><authors><author org="Dept. of Comput. Sci., Toronto Univ., Ont., Canada#TAB#" id="2145198186">Yijun Yu</author><author org="Dept. of Comput. Sci., Toronto Univ., Ont., Canada#TAB#" id="2169434849">J.C.S.P. Leite</author><author org="Dept. of Comput. Sci., Toronto Univ., Ont., Canada#TAB#" id="2161153869">J. Mylopoulos</author></authors><n_citation>153</n_citation><doc_type>Conference</doc_type><references><reference>260598494</reference><reference>1530145372</reference><reference>1624528677</reference><reference>1977357195</reference><reference>2051028605</reference><reference>2105539612</reference><reference>2110157102</reference><reference>2112021951</reference><reference>2112430808</reference><reference>2113435553</reference><reference>2117818414</reference><reference>2126536832</reference><reference>2129873712</reference><reference>2134971985</reference><reference>2139310769</reference><reference>2145605190</reference><reference>2145973309</reference><reference>2177007941</reference><reference>2301605390</reference></references><venue id="2606605052" type="C">IEEE International Conference on Requirements Engineering</venue><doi>10.1109/RE.2004.23</doi><keywords><keyword weight="0.57707">Personal software process</keyword><keyword weight="0.57956">Software design</keyword><keyword weight="0.44528">Systems engineering</keyword><keyword weight="0.46416">Software engineering</keyword><keyword weight="0.44725">Computer science</keyword><keyword weight="0.59988">Software development process</keyword><keyword weight="0.5898">Requirement</keyword><keyword weight="0.57955">Software construction</keyword><keyword weight="0.62051">Software development</keyword><keyword weight="0.5854">Goal-Driven Software Development Process</keyword><keyword weight="0.59433">Social software engineering</keyword></keywords><publisher>IEEE</publisher><abstract>Aspect-oriented programming (AOP) has been attracting much attention in the software engineering community by advocating that programs should be structured according to programmer concerns, such as "efficient use of memory". However, like other programming paradigms in their early days, AOP hasnu0027t addressed yet earlier phases of software development. In particular, it is still an open question how one identifies aspects early on in the software development process. This work proposes an answer to this question. Specifically, we show that aspects can be discovered during goal-oriented requirements analysis. Our proposal includes a systematic process for discovering aspects from relationships between functional and nonfunctional goals. We illustrate the proposed process with a case study adapted from the literature.</abstract></paper>