<paper id="1766332311"><title>Negation as failure</title><year>1987</year><authors><author org="Queen Mary College," id="2101796117">K. L. Clark</author></authors><n_citation>1918</n_citation><doc_type /><references><reference>10948978</reference><reference>155951062</reference><reference>329483354</reference><reference>1530765221</reference><reference>1592959421</reference><reference>1593077566</reference><reference>2021473914</reference><reference>2105486835</reference><reference>2165467455</reference></references><venue id="" type="">Logic and Data Bases</venue><doi>10.1007/978-1-4684-3384-5_11</doi><keywords><keyword weight="0.59562">SLD resolution</keyword><keyword weight="0.61482">Double negation</keyword><keyword weight="0.55537">Horn clause</keyword><keyword weight="0.56489">Negation</keyword><keyword weight="0.43216">Computer science</keyword><keyword weight="0.64173">Negation introduction</keyword><keyword weight="0.44016">Theoretical computer science</keyword><keyword weight="0.60627">Negation as failure</keyword><keyword weight="0.55488">Stable model semantics</keyword><keyword weight="0.56501">Rule of inference</keyword></keywords><publisher>Springer, Boston, MA</publisher><abstract>A query evaluation process for a logic data base comprising a set of clauses is described. It is essentially a Horn clause theorem prover augmented with a special inference rule for dealing with negation. This is the negation as failure inference rule whereby ~ P can be inferred if every possible proof of P fails. The chief advantage of the query evaluator described is the effeciency with which it can be implemented. Moreover, we show that the negation as failure rule only allows us to conclude negated facts that could be inferred from the axioms of the completed data base, a data base of relation definitions and equality schemas that we consider is implicitly given by the data base of clauses. We also show that when the clause data base and the queries satisfy certain constraints, which still leaves us with a data base more general than a conventional relational data base, the query evaluation process will find every answer that is a logical consequence of the completed data base.</abstract></paper>