<paper id="1583487553"><title>An Analysis of Bitstate Hashing</title><year>1998</year><authors><author org="Bell Laboratories, 600 Mountain Avenue, Murray Hill, NJ 07974, USA#TAB#" id="2028047182">Gerard J. Holzmann</author></authors><n_citation>186</n_citation><doc_type>Conference</doc_type><references><reference>13989923</reference><reference>98889874</reference><reference>195082763</reference><reference>1508152977</reference><reference>1513380414</reference><reference>1536867677</reference><reference>1563242841</reference><reference>2115309705</reference><reference>2131101129</reference><reference>2138620071</reference><reference>2166158916</reference><reference>2169628884</reference><reference>2179375849</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1023/A:1008696026254</doi><keywords><keyword weight="0.46205">Data mining</keyword><keyword weight="0.50109">Model checking</keyword><keyword weight="0.40071">Empirical evidence</keyword><keyword weight="0.46768">Computer science</keyword><keyword weight="0.5057">Concurrency</keyword><keyword weight="0.4694">Theoretical computer science</keyword><keyword weight="0.48097">Reachability</keyword><keyword weight="0.53031">Hash function</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>The bitstate hashing, or supertrace, technique was introduced in 1987 as a method to increase the quality of verification by reachability analyses for applications that defeat analysis by traditional means because of their size. Since then, the technique has been included in many research verification tools, and was adopted in tools that are marketed commercially. It is therefore important that we understand well how and why the method works, what its limitations are, and how it compares with alternative methods over a broad range of problem :[86],"original motivation for the bitstate hashing technique was based on empirical evidence of its effectiveness. In this paper we provide an analytical argument. We compare the technique with two alternatives that have been proposed in the recent literature. We also describe a sequential bitstate hashing technique that can be of value when confronted with very large problem sizes.</abstract></paper>