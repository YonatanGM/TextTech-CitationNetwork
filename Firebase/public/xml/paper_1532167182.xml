<paper id="1532167182"><title>Algebraic Formalisation of Program Development by Transformation</title><year>1988</year><authors><author org="Universitat Bremen." id="20948077">Bernd Krieg-Br√ºckner</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>69241320</reference><reference>1493366620</reference><reference>1534654265</reference><reference>1582602829</reference><reference>1963842623</reference><reference>1967501773</reference><reference>1970554275</reference><reference>2001195305</reference><reference>2019712414</reference><reference>2043586883</reference><reference>2045323411</reference><reference>2067978181</reference><reference>2110846749</reference></references><venue id="1136861413" type="C">European Symposium on Programming</venue><doi>10.1007/3-540-19027-9_3</doi><keywords><keyword weight="0.64644">Algebraic specification</keyword><keyword weight="0.48611">Algebraic number</keyword><keyword weight="0.54927">Transformation (function)</keyword><keyword weight="0.46992">Programming language</keyword><keyword weight="0.45419">Computer science</keyword><keyword weight="0.0">Concrete syntax</keyword><keyword weight="0.0">Transformation algorithm</keyword><keyword weight="0.459">Theoretical computer science</keyword><keyword weight="0.0">Program development</keyword><keyword weight="0.60573">Abstract syntax</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A uniform treatment of algebraic specification is proposed to formalise data, programs, transformation rules, and program developments. It is shown by example that the development of an efficient transformation algorithm incorporating the effect of a set of transformation rules is analogous to program development: the transformation rules act as specifications for the transformation algorithms.</abstract></paper>