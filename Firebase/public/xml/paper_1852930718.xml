<paper id="1852930718"><title>Algorithms for a Multiple Algebraic Extension II</title><year>1991</year><authors><author org="Royal Institute of Tech." id="2253323909">Lars Langemyr</author></authors><n_citation>19</n_citation><doc_type>Journal</doc_type><references><reference>1484431959</reference><reference>1583935850</reference><reference>1655990431</reference><reference>1966711586</reference><reference>1967644849</reference><reference>2029317328</reference><reference>2029382063</reference><reference>2040904008</reference><reference>2062435542</reference><reference>2067705970</reference><reference>2083503213</reference></references><venue id="44535979" type="J">Applicable Algebra in Engineering, Communication and Computing</venue><doi>10.1007/978-1-4612-0441-1_16</doi><keywords><keyword weight="0.47805">Discrete mathematics</keyword><keyword weight="0.50371">Inverse</keyword><keyword weight="0.47244">Combinatorics</keyword><keyword weight="0.55815">Rational number</keyword><keyword weight="0.58707">Algebraic number</keyword><keyword weight="0.51723">Divisor (algebraic geometry)</keyword><keyword weight="0.55968">Polynomial</keyword><keyword weight="0.46034">Algorithm</keyword><keyword weight="0.51698">Greatest common divisor</keyword><keyword weight="0.64186">Algebraic extension</keyword><keyword weight="0.42827">Mathematics</keyword><keyword weight="0.4916">Binary operation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We give fast algorithms for computing product and inverse in a multiple algebraic extension of the rational numbers. The algorithms are almost linear in terms of the output length, i.e. they work in time O(d 1+δ), for all δ u003e 0, where d is an a priori bound on the length of the output. Since we require time Ω(d) just to write down the output the algorithms are close to optimal. The algorithm for inverse uses a technique referred to as dynamic evaluation for computing in algebraic extensions defined by reducible polynomials.</abstract></paper>