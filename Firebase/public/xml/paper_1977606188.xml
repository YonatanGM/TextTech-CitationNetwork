<paper id="1977606188"><title>Interprocedural constant propagation: an empirical study</title><year>1993</year><authors><author org="CONVEX Computer Corp., Richardson, TX" id="2495479374">Robert Metzger</author><author org="CONVEX Computer Corp., Richardson, TX" id="2225450522">Sean Stroud</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>1964714157</reference><reference>2102890180</reference><reference>2143659699</reference></references><venue id="185931187" type="J">ACM Letters on Programming Languages and Systems</venue><doi>10.1145/176454.176526</doi><keywords><keyword weight="0.47031">Program optimization</keyword><keyword weight="0.60562">Constant folding</keyword><keyword weight="0.6344">Interprocedural optimization</keyword><keyword weight="0.48394">Control flow graph</keyword><keyword weight="0.46125">Abstract interpretation</keyword><keyword weight="0.41889">Computer science</keyword><keyword weight="0.4421">Parallel computing</keyword><keyword weight="0.45081">Imperative programming</keyword><keyword weight="0.44229">Algorithm</keyword><keyword weight="0.46619">Fortran</keyword><keyword weight="0.43063">Theoretical computer science</keyword><keyword weight="0.40941">Regular polygon</keyword></keywords><publisher>ACM</publisher><abstract>Constant propagation is an optimization that substitutes values for names. Interprocedural constant propagation performs this substitution throughout an entire program, propagating constant values across procedure boundaries. CONVEX Computer Corporation has developed an interprocedural optimizer for imperative languages, which is available to users of its C-series supercomputers. An aggressive interprocedural constant propagation algorithm, such as the one implemented in this optimizer, can find many constants to propagate into procedures in scientific FORTRAN applications. Detailed statistics derived from compiling a large set of real scientific applications characterize both the opportunities for interprocedural constant propagation in these codes and the effectivenss of algorithm described. These statistics include the frequency of interprocedural constant propagation, the different types of interprocedural constant propagation, which constants are most frequently propagated, and the relationship between interprocedural constant propagation and other interprocedural optimizations.</abstract></paper>