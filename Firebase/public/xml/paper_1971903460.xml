<paper id="1971903460"><title>The nesC language: a holistic approach to networked embedded systems</title><year>2003</year><authors><author org="University of California, Berkeley, Berkeley, CA." id="2052109716">Philip Levis</author><author org="University of California, Berkeley, Berkeley, CA." id="2567982197">Robert von Behren</author><author org="Intel Res. Berkeley, Berkeley, CA" id="2149657484">Matt Welsh</author><author org="University of California, Berkeley, Berkeley, CA." id="1975802069">Eric Brewer</author><author org="University of California, Berkeley, Berkeley, CA and Intel Research, Berkeley, Berkeley, CA" id="348251026">David Culler</author></authors><n_citation>1655</n_citation><doc_type>Conference</doc_type><references><reference>85177704</reference><reference>1500975741</reference><reference>1516859107</reference><reference>1595601404</reference><reference>1595905761</reference><reference>1972544179</reference><reference>1996931099</reference><reference>1998070736</reference><reference>2019952623</reference><reference>2022185456</reference><reference>2043261859</reference><reference>2055295051</reference><reference>2063942383</reference><reference>2093415968</reference><reference>2096396200</reference><reference>2100505193</reference><reference>2104532741</reference><reference>2107995193</reference><reference>2124705135</reference><reference>2127949150</reference><reference>2143160644</reference><reference>2148691391</reference><reference>2151157922</reference><reference>2155066383</reference><reference>2156874421</reference><reference>2157000966</reference><reference>2158904888</reference><reference>2160275438</reference><reference>2163661874</reference><reference>2167396179</reference><reference>2170200862</reference><reference>2492503310</reference><reference>2611598995</reference></references><venue id="1127352206" type="C">Programming Language Design and Implementation</venue><doi>10.1145/2641638.2641652</doi><keywords><keyword weight="0.4649">Programming language</keyword><keyword weight="0.59855">Programming paradigm</keyword><keyword weight="0.54348">Concurrency</keyword><keyword weight="0.46622">Computer science</keyword><keyword weight="0.51335">Systems design</keyword><keyword weight="0.45918">Real-time computing</keyword><keyword weight="0.7904">nesC</keyword><keyword weight="0.55764">Compiler</keyword><keyword weight="0.54552">Concurrent computing</keyword><keyword weight="0.49598">Reactive system</keyword><keyword weight="0.55832">Wireless sensor network</keyword><keyword weight="0.47764">Embedded system</keyword></keywords><publisher>ACM</publisher><abstract>We present nesC, a programming language for networked embedded systems that represent a new design space for application developers. An example of a networked embedded system is a sensor network, which consists of (potentially) thousands of tiny, low-power "motes," each of which execute concurrent, reactive programs that must operate with severe memory and power constraints.nesCu0027s contribution is to support the special needs of this domain by exposing a programming model that incorporates event-driven execution, a flexible concurrency model, and component-oriented application design. Restrictions on the programming model allow the nesC compiler to perform whole-program analyses, including data-race detection (which improves reliability) and aggressive function inlining (which reduces resource consumption).nesC has been used to implement TinyOS, a small operating system for sensor networks, as well as several significant sensor applications. nesC and TinyOS have been adopted by a large number of sensor network research groups, and our experience and evaluation of the language shows that it is effective at supporting the complex, concurrent programming style demanded by this new class of deeply networked systems.</abstract></paper>