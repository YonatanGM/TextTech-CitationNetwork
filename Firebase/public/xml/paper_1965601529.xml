<paper id="1965601529"><title>A method for overlapping and erasure of lists</title><year>1960</year><authors><author org="IBM Corp., Yorktown Heighs, NY" id="2140331667">George E. Collins</author></authors><n_citation>244</n_citation><doc_type>Journal</doc_type><references><reference>2033068324</reference><reference>2045255985</reference></references><venue id="103482838" type="J">Communications of The ACM</venue><doi>10.1145/367487.367501</doi><keywords><keyword weight="0.45902">Programming language</keyword><keyword weight="0.46166">Computer science</keyword><keyword weight="0.46862">Computer data storage</keyword><keyword weight="0.59727">Lisp</keyword><keyword weight="0.45481">Theoretical computer science</keyword><keyword weight="0.50256">Reference counting</keyword><keyword weight="0.47942">Hazard pointer</keyword><keyword weight="0.60214">Difference list</keyword><keyword weight="0.55997">Erasure</keyword></keywords><publisher>ACM</publisher><abstract>An important property of the Newell Shaw-Simon scheme for computer storage of lists is that data having multiple occurrences need not be stored at more than one place in the computer. That is, lists may be “overlapped.” Unfortunately, overlapping poses a problem for subsequent erasure. Given a list that is no longer needed, it is desired to erase just those parts that do not overlap other lists. In LISP, McCarthy employs an elegant but inefficient solution to the problem. The present paper describes a general method which enables efficient erasure. The method employs interspersed reference counts to describe the extent of the overlapping.</abstract></paper>