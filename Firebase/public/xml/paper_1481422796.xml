<paper id="1481422796"><title>Expressing UML Class Diagrams Properties with OCL</title><year>2002</year><authors><author org="University of Bremen, FB 3" id="2162885025">Martin Gogolla</author><author org="University of Bremen, FB 3" id="1736775477">Mark Richters</author></authors><n_citation>75</n_citation><doc_type>Journal</doc_type><references><reference>118084495</reference><reference>172403954</reference><reference>1486558948</reference><reference>1495380017</reference><reference>1518566442</reference><reference>1571075905</reference><reference>1574837706</reference><reference>1786024619</reference><reference>1923262203</reference><reference>1969250262</reference><reference>2111915847</reference><reference>2157585155</reference><reference>2160019730</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45669-4_6</doi><keywords><keyword weight="0.61979">UML state machine</keyword><keyword weight="0.45393">Programming language</keyword><keyword weight="0.6905">UML tool</keyword><keyword weight="0.43319">Computer science</keyword><keyword weight="0.62659">Communication diagram</keyword><keyword weight="0.61925">Association Class</keyword><keyword weight="0.76816">Applications of UML</keyword><keyword weight="0.66398">Story-driven modeling</keyword><keyword weight="0.66802">Object Constraint Language</keyword><keyword weight="0.67108">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Unified Modeling Language UML is a complex language offering many modeling features. Especially the description of static structures with class diagrams is supported by a rich set of primitives. This paper shows how to transfrom UML class diagrams involving cardinality constraints, qualifiers, association classes, aggregations, compositions, and generalizations into equivalent UML class diagrams employing only binary associations and OCL constraints. Thus we provide a better understanding of UML features. By reducing more complex features in terms of basic ones, we suggest an easy way users can gradually extend the set of UML elements they commonly apply in the modeling process.</abstract></paper>