<paper id="1761584321"><title>On the Computational Cost of Approximating and Recognizing Noise-Perturbed Straight Lines and Quadratic Arcs in the Plane</title><year>1976</year><authors><author org="Division of Engineering Brown University" id="2672783215">Cooper</author><author org="" id="898434858">Yalabik</author></authors><n_citation>51</n_citation><doc_type>Journal</doc_type><references><reference>2019363722</reference><reference>2030492942</reference><reference>2043735243</reference><reference>2162348049</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1976.1674543</doi><keywords><keyword weight="0.49651">Data point</keyword><keyword weight="0.58007">Line (geometry)</keyword><keyword weight="0.42351">Mathematical optimization</keyword><keyword weight="0.66248">Curve fitting</keyword><keyword weight="0.45719">Mathematical analysis</keyword><keyword weight="0.54201">CPU time</keyword><keyword weight="0.41311">Parallel computing</keyword><keyword weight="0.50079">Quadratic equation</keyword><keyword weight="0.55133">Quadratic function</keyword><keyword weight="0.49047">Hyperbolic function</keyword><keyword weight="0.51814">Data compaction</keyword><keyword weight="0.40238">Mathematics</keyword></keywords><publisher>IEEE</publisher><abstract>Approximation of noisy data in the plane by straight line or elliptic or single-branch hyperbolic curve segments arises in pattern recognition, data compaction, and other problems. A number of questions concerning the efficient search for and approximation of data by such curves are examined. Recursive least-squares linear curve fitting is applied to the original or to transformed data in the plane to provide computationally simple algorithms for sequentially searching out appropriate data points and fitting straight line segments or quadratic arcs to the data found. The error minimized by the algorithms is interpreted. Central processing unit (CPU) times for estimating parameters for fitting straight lines and quadratic curves are determined and compared. CPU time for data search is also determined for the case of straight line fitting. Quadratic curve fitting is shown to require about six times as much CPU time as does straight line fitting. Curves relating CPU time and fitting error are determined for straight line fitting. A number of the preceding results are extended by using maximum likelihood curve estimation, and the modification of the classical least-squares curve fit resulting from the use of an a priori probability density function for the unknown curve parameters is determined.</abstract></paper>