<paper id="1515542122"><title>Verifying out-of-order executions</title><year>1997</year><authors><author org="OFFIS#TAB#" id="2950800745">Werner Damm</author><author org="Weizmann institute of Science" id="2171343426">Amir Pnueli</author></authors><n_citation>39</n_citation><doc_type /><references><reference>1504192541</reference><reference>1505631339</reference><reference>1546119015</reference><reference>1555915743</reference><reference>1741528175</reference><reference>2033941027</reference><reference>2065846678</reference><reference>2095899592</reference><reference>2107503612</reference><reference>2123445625</reference></references><venue id="" type="">Proceedings of the IFIP WG 10.5 International Conference on Correct Hardware Design and Verification Methods: Advances in Hardware Design and Verification</venue><doi>10.1007/978-0-387-35190-2_3</doi><keywords><keyword weight="0.57601">Uninterpreted function</keyword><keyword weight="0.0">Sequential machine</keyword><keyword weight="0.46806">Computer science</keyword><keyword weight="0.4702">Parallel computing</keyword><keyword weight="0.60888">Correctness</keyword><keyword weight="0.5299">Out-of-order execution</keyword><keyword weight="0.57251">Dependency graph</keyword><keyword weight="0.53167">Reservation station</keyword></keywords><publisher>Chapman &amp; Hall, Ltd.</publisher><abstract>The paper presents an approach to the specification and verification of out-of-order execution in the design of micro-processors. Ultimately, the appropriate statement of correctness is that the out-of-order execution produces the same final state as a purely sequential machine running the same program.</abstract></paper>