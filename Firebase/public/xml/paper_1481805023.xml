<paper id="1481805023"><title>Algebraic optimization of object-oriented query languages</title><year>1990</year><authors><author org="The Hebrew University" id="345432764">Catriel Beeri</author><author org="The Hebrew University" id="2666369487">Yoram Kornatzky</author></authors><n_citation>95</n_citation><doc_type>Conference</doc_type><references><reference>16887288</reference><reference>143933384</reference><reference>1481223853</reference><reference>1492804197</reference><reference>1506761546</reference><reference>1536956095</reference><reference>1545776462</reference><reference>1562571738</reference><reference>1564646625</reference><reference>1565429491</reference><reference>1576853379</reference><reference>1597313856</reference><reference>1606820587</reference><reference>1608052467</reference><reference>1694233656</reference><reference>1825341804</reference><reference>1968945891</reference><reference>1976607278</reference><reference>1980322057</reference><reference>1985464228</reference><reference>1991448647</reference><reference>2003576072</reference><reference>2004482302</reference><reference>2008116177</reference><reference>2023299380</reference><reference>2033368934</reference><reference>2036862988</reference><reference>2045058631</reference><reference>2060849841</reference><reference>2063014766</reference><reference>2065419751</reference><reference>2074429597</reference><reference>2077005267</reference><reference>2080806970</reference><reference>2110338707</reference><reference>2113906833</reference><reference>2116436709</reference><reference>2121968126</reference><reference>2132254404</reference><reference>2133418877</reference><reference>2152149667</reference><reference>2153329411</reference><reference>2158141386</reference><reference>2163940882</reference><reference>2172307690</reference><reference>2205031991</reference><reference>2295562782</reference><reference>2295596515</reference></references><venue id="1165285842" type="C">International Conference on Database Theory</venue><doi>10.1016/0304-3975(93)90220-N</doi><keywords><keyword weight="0.65225">Query optimization</keyword><keyword weight="0.61873">Data structure</keyword><keyword weight="0.61263">Data modeling</keyword><keyword weight="0.64204">Query language</keyword><keyword weight="0.47855">Programming language</keyword><keyword weight="0.59852">Relational database</keyword><keyword weight="0.47335">Computer science</keyword><keyword weight="0.6446">View</keyword><keyword weight="0.63083">Database design</keyword><keyword weight="0.47835">Theoretical computer science</keyword><keyword weight="0.62546">Data model</keyword></keywords><publisher>Elsevier Science Publishers Ltd.</publisher><abstract>Advanced database applications demand new data modeling constructs beyond those available in relational databases. These include both new data structures, e.g. arrays and quadtrees, and an integration with the object-oriented programming paradigm. Declarative object-oriented languages transfer the burden of choosing an efficient execution plan to the database query optimizer. The lack of a generally accepted object-oriented data model and the trend towards extensible systems demand an extensible framework for object-oriented query optimization. We suggest such an algebraic optimization framework which is based on the computational metaphor of processing bulk data. Bulk data is defined using an abstract definition of the notion of data collection which includes familiar and novel types of bulk data. In particular, we neatly integrate object-oriented notions such as object-identity and user-defined methods. To obtain generally applicable results we use an FP-like language in which programs are constructed from primitive functions using a fixed set of functional forms. The latter abstract common patterns of processing data collections. The resulting algebra of programs generalizes for any data collection known laws for transforming relational queries.</abstract></paper>