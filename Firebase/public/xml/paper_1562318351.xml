<paper id="1562318351"><title>Adaptive and Automated Index Selection in RDBMS</title><year>1992</year><authors><author org="Georgia Institute of technology;" id="2305004773">Martin R. Frank</author><author org="Georgia Institute of technology;" id="2174003361">Edward Omiecinski</author><author org="Georgia Institute of technology;" id="2065325028">Shamkant B. Navathe</author></authors><n_citation>57</n_citation><doc_type>Conference</doc_type><references><reference>61341327</reference><reference>1967627943</reference><reference>1972072126</reference><reference>1999407826</reference><reference>2001111520</reference><reference>2012056301</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/BFb0032437</doi><keywords><keyword weight="0.4723">Data mining</keyword><keyword weight="0.46368">Computer science</keyword><keyword weight="0.50583">Workload</keyword><keyword weight="0.0">Execution time</keyword><keyword weight="0.62436">Database administrator</keyword><keyword weight="0.57682">Relational database management system</keyword><keyword weight="0.46915">Index selection</keyword><keyword weight="0.46968">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a novel approach for a tool that assists the database administrator in designing an index configuration for a relational database system. A new methodology for collecting usage statistics at run time is developed which lets the optimizer estimate query execution costs for alternative index configurations. Defining the workload specification required by existing index design tools may be very complex for a large integrated database system. Our tool automatically derives the workload statistics. These statistics are then used to efficiently compute an index configuration. Execution of a prototype of the tool against a sample database demonstrates that the proposed index configuration is reasonably close to the optimum for test query sets.</abstract></paper>