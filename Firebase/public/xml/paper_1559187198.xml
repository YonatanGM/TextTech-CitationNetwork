<paper id="1559187198"><title>Enforcing workflow authorization constraints using triggers</title><year>1998</year><authors><author org="" id="2145207705">Fabio Casati</author><author org="" id="2131050340">Silvana Castano</author><author org="" id="11395355">Maria Grazia Fugini</author></authors><n_citation>5</n_citation><doc_type>Journal</doc_type><references><reference>2088024675</reference><reference>2166602595</reference><reference>2615164812</reference></references><venue id="106992369" type="J">Journal of Computer Security</venue><doi>10.3233/JCS-1998-6403</doi><keywords><keyword weight="0.74598">Workflow technology</keyword><keyword weight="0.55637">Business process</keyword><keyword weight="0.45974">Software engineering</keyword><keyword weight="0.44616">Computer science</keyword><keyword weight="0.63348">Workflow application</keyword><keyword weight="0.52107">Security policy</keyword><keyword weight="0.65891">XPDL</keyword><keyword weight="0.7528">Workflow engine</keyword><keyword weight="0.64122">Workflow</keyword><keyword weight="0.74547">Workflow management system</keyword><keyword weight="0.4454">Database</keyword><keyword weight="0.44551">Distributed computing</keyword></keywords><publisher>IOS Press</publisher><abstract>Workflow design involves modeling different aspects of a business process. Among these aspects, workflow design should consider also security requirements. These relate to the authorizations for the users in the organization to execute workflow tasks according to the security policies about handling business processes and workflow data. This paper presents an approach based on triggers to specify and enforce workflow authorization constraints for a flexible assignment of tasks to roles and agents. The approach has been conceived in the framework of the WIDE Workflow Management System. Authorization triggers specify when and how the set of authorizations for a given workflow should be changed and which actions should be taken by the system or by the administrator. A basic set of triggers is provided enforcing security policies common to workflow systems, such as need-to-know and task confinement. Methodological issues related to trigger design for a given workflow application are discussed and an approach based on authorization patterns is illustrated. The paper shows how authorization patterns can be instantiated into triggers and briefly discusses aspects related to the analysis of a set of authorization triggers defined for a given workflow application.</abstract></paper>