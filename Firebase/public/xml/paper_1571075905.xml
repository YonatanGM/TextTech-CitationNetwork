<paper id="1571075905"><title>Analysing UML Active Classes and Associated State Machines - A Lightweight Formal Approach</title><year>2000</year><authors><author org="Università di Genova" id="2117491823">Gianna Reggio</author><author org="Università di Genova" id="699984054">Egidio Astesiano</author><author org="Universite Paris XIII." id="125011739">Christine Choppy</author><author org="Dresden University of Technology" id="2559349117">Heinrich Hußmann</author></authors><n_citation>71</n_citation><doc_type>Conference</doc_type><references><reference>1487621334</reference><reference>1512705448</reference><reference>1570069626</reference><reference>1982962901</reference><reference>1998017916</reference><reference>2117062409</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-46428-X_10</doi><keywords><keyword weight="0.53617">Algebraic specification</keyword><keyword weight="0.46909">Programming language</keyword><keyword weight="0.63944">UML state machine</keyword><keyword weight="0.69721">UML tool</keyword><keyword weight="0.52605">Unified Modeling Language</keyword><keyword weight="0.45912">Computer science</keyword><keyword weight="0.53094">Finite-state machine</keyword><keyword weight="0.77748">Applications of UML</keyword><keyword weight="0.63996">Object Constraint Language</keyword><keyword weight="0.61545">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We propose a precise definition of UML active classes through associated labelled transition systems using the algebraic specification language Casl. We are convinced that the first step to make UML precise is to find an underlying formal model for the systems modelled by UML, and we argue that labelled transition systems are a sensible choice. This modelization will help understanding the UML constructs and will improve their use in practice. One of our aims is, in the future, to use the powerful animation and verification tools available for algebraic specifications with UML specifications. We simplify the problem of the applicability of our semantics by restricting the state machine constructs considered. This restriction does not, however, narrow the UML subset in study because the restricted constructs can be replaced by equivalent combinations of other constructs. Because of some ambiguities in the UML official semantics, we discuss the several options at hand and choose, for each ambiguous case, the semantics that either makes more sense or that allows to simplify the problem the most.</abstract></paper>