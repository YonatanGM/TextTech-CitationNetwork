<paper id="1560319744"><title>A Superjoin Algorithm for Deductive Databases</title><year>1986</year><authors><author org="Dept. of Computer Science, Royal Melbourne Institute of Technology, Australia" id="2923997131">James A. Thom</author><author org="Dept. of Computer Science, University of Melbourne, Australia" id="123309386">Kotagiri Ramamohanarao</author><author org="Dept. of Computer Science, University of Melbourne, Australia" id="155976146">Lee Naish</author></authors><n_citation>21</n_citation><doc_type>Conference</doc_type><references><reference>52405575</reference><reference>147900504</reference><reference>172945512</reference><reference>174191681</reference><reference>1484813121</reference><reference>1487591965</reference><reference>1552837293</reference><reference>1570025952</reference><reference>1590937195</reference><reference>1604663342</reference><reference>1766332311</reference><reference>1855365115</reference><reference>2012286840</reference><reference>2013579120</reference><reference>2036240164</reference><reference>2036684138</reference><reference>2039187793</reference><reference>2043934800</reference><reference>2053595138</reference><reference>2070553391</reference><reference>2074687738</reference><reference>2091467328</reference><reference>2105486835</reference><reference>2143526228</reference><reference>2155631901</reference><reference>2167679350</reference><reference>2169012378</reference><reference>2169486917</reference></references><venue id="1133523790" type="C">Very Large Data Bases</venue><doi>10.1016/B978-0-934613-40-8.50017-8</doi><keywords><keyword weight="0.46037">Data mining</keyword><keyword weight="0.53857">Joins</keyword><keyword weight="0.55686">Relational database</keyword><keyword weight="0.46888">Computer science</keyword><keyword weight="0.4479">Algorithm</keyword><keyword weight="0.47126">Theoretical computer science</keyword><keyword weight="0.53648">Prolog</keyword><keyword weight="0.50852">Hash function</keyword><keyword weight="0.45518">Database</keyword><keyword weight="0.4742">Computation</keyword></keywords><publisher>Morgan Kaufmann Publishers Inc.</publisher><abstract>This paper describes a join algorithm suitable for deductive as well as relational databases that are accessed by computers with large main memories. Using multi-key hashing and appropriate buffering, joins can be performed on very large relations more efficiently than with existing methods. This algorithm fits naturally into PROLOG top-down computations and can be made very flexible by incorporating additional PROLOG features. It can also be used with bottom-up query evaluation strategies.</abstract></paper>