<paper id="1964187625"><title>Dynamic slicing in the presence of unconstrained pointers</title><year>1991</year><authors><author org="Bellcore, 445 South Street, Morristown, NJ" id="2471362268">Hiralal Agrawal</author><author org="Software Engineering Research Center, Purdue University, W. Lafayette, IN" id="85310976">Richard A. DeMillo</author><author org="Software Engineering Research Center, Purdue University, W. Lafayette, IN" id="171783842">Eugene H. Spafford</author></authors><n_citation>77</n_citation><doc_type /><references><reference>1578662211</reference><reference>1829244603</reference><reference>1970061809</reference><reference>1975914482</reference><reference>1980767016</reference><reference>1984248430</reference><reference>1997493115</reference><reference>2035726034</reference><reference>2064625489</reference><reference>2083796365</reference><reference>2110066339</reference><reference>2111695742</reference><reference>2135988257</reference><reference>2141109493</reference><reference>2144344516</reference><reference>2147088720</reference><reference>2293624369</reference></references><venue id="" type="">Proceedings of the symposium on Testing, analysis, and verification</venue><doi>10.1145/120807.120813</doi><keywords><keyword weight="0.72005">Program slicing</keyword><keyword weight="0.55537">Pointer (computer programming)</keyword><keyword weight="0.4707">Programming language</keyword><keyword weight="0.0">Program behavior</keyword><keyword weight="0.45978">Computer science</keyword><keyword weight="0.51709">Static analysis</keyword><keyword weight="0.49151">Slicing</keyword><keyword weight="0.42095">Scalar (physics)</keyword><keyword weight="0.54125">Debugging</keyword></keywords><publisher>ACM</publisher><abstract>Program slices are useful in debugging. Most work on program slicing to date has concentrated on nding slices of programs involving only scalar variables. Pointers and composite variables do not lend themselves well to static analysis, especially when the language involved is not strongly-typed. When debugging a program, however, we are interested in analyzing the program behavior for testcases that reveal a fault. In this paper, we present a uniform approach to handling pointers and composite variables such as arrays, records, and unions for the purpose of obtaining dynamic program slices. The dynamic approach proposed works well even when the language involved allows unconstrained pointers and performs no runtime checks, as in C.</abstract></paper>