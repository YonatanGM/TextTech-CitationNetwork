<paper id="1720340001"><title>Linear Time and Branching Time Semantics for Recursion with Merge</title><year>1983</year><authors><author org="Mathematical Centre" id="2172040901">J. W. de Bakker</author><author org="Mathematical Centre" id="2144792310">Jan A. Bergstra</author><author org="Mathematical Centre" id="2310247031">Jan Willem Klop</author><author org="Free University" id="2706429832">John-Jules Ch. Meyer</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>76842558</reference><reference>1544564247</reference><reference>1982161448</reference><reference>2020890916</reference><reference>2062024564</reference><reference>2093541252</reference><reference>2140920629</reference><reference>2402104012</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0036896</doi><keywords><keyword weight="0.46529">Discrete mathematics</keyword><keyword weight="0.55932">Semantic domain</keyword><keyword weight="0.5371">Nondeterministic algorithm</keyword><keyword weight="0.43022">Computer science</keyword><keyword weight="0.51097">Closed set</keyword><keyword weight="0.48354">Cauchy sequence</keyword><keyword weight="0.5019">Time complexity</keyword><keyword weight="0.49366">Trace theory</keyword><keyword weight="0.5421">Recursion</keyword><keyword weight="0.4995">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We consider two ways of assigning semantics to a class of statements built from a set of atomic actions (the ‘alphabet‘), by means of sequential composition, nondeterministic choice, recursion and merge (arbitrary interleaving). The first is linear time semantics (LT), stated in terms of trace theory; the semantic domain is the collection of all closed sets of finite and infinite words. The second is branching time semantics (BT), as introduced by de Bakker and Zucker; here the semantic domain is the metric completion of the collection of finite processes. For LT we prove the continuity of the operations (merge, sequential composition) in a direct, combinatorial way.</abstract></paper>