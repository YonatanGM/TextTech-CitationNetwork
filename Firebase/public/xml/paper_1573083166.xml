<paper id="1573083166"><title>A metamodel for OCL</title><year>1999</year><authors><author org="University of Bremen, Computer Science Department, Bremen, Germany#TAB#" id="1736775477">Mark Richters</author><author org="University of Bremen, Computer Science Department, Bremen, Germany#TAB#" id="2162885025">Martin Gogolla</author></authors><n_citation>53</n_citation><doc_type>Journal</doc_type><references><reference>1495380017</reference><reference>1509485343</reference><reference>1537161110</reference><reference>1566214218</reference><reference>1574837706</reference><reference>1879346405</reference><reference>2117062409</reference><reference>2160417078</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-46852-8_12</doi><keywords><keyword weight="0.46645">Metaprogramming</keyword><keyword weight="0.44488">Programming language</keyword><keyword weight="0.45446">Object-oriented programming</keyword><keyword weight="0.45693">Expression (mathematics)</keyword><keyword weight="0.48567">Unified Modeling Language</keyword><keyword weight="0.41624">Computer science</keyword><keyword weight="0.52641">Abstract syntax</keyword><keyword weight="0.65448">Object Constraint Language</keyword><keyword weight="0.54383">Metamodeling</keyword><keyword weight="0.51786">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Object Constraint Language (OCL) allows the extension of UML models with constraints in a formal way. While the UML itself is defined by following a metamodeling approach, there is currently no equivalent definition for the OCL. We propose a metamodel for OCL that fills this gap. The benefit of a metamodel for OCL is that it precisely defines the syntax of all OCL concepts like types, expressions, and values in an abstract way and by means of UML features. Thus, all legal OCL expressions can be systematically derived and instantiated from the metamodel. We also show that our metamodel smoothly integrates with the UML metamodel. The focus of this work lies on the syntax of OCL; the metamodel does not include a definition of the semantics of constraints.</abstract></paper>