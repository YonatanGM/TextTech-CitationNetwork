<paper id="1553814243"><title>Modularity for Timed and Hybrid Systems</title><year>1997</year><authors><author org="University of California" id="689646243">Rajeev Alur</author><author org="University of California" id="2707196735">Thomas A. Henzinger</author></authors><n_citation>122</n_citation><doc_type>Conference</doc_type><references><reference>1491037212</reference><reference>1521052220</reference><reference>1569051713</reference><reference>1604669786</reference><reference>1641346184</reference><reference>1796678419</reference><reference>1874725288</reference><reference>1989877393</reference><reference>2004463571</reference><reference>2026533872</reference><reference>2101508170</reference><reference>2117087357</reference><reference>2124778357</reference><reference>2125779951</reference><reference>2130773092</reference><reference>2152744148</reference><reference>2163151383</reference><reference>2293400264</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-63141-0_6</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.48428">EXPTIME</keyword><keyword weight="0.45357">Computer science</keyword><keyword weight="0.45705">Theoretical computer science</keyword><keyword weight="0.43666">Fixed point</keyword><keyword weight="0.0">Modular specification</keyword><keyword weight="0.53619">Hybrid system</keyword><keyword weight="0.47597">Modularity</keyword><keyword weight="0.45275">Distributed computing</keyword><keyword weight="0.54979">Hybrid automaton</keyword><keyword weight="0.55197">Liveness</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In a trace-based world, the modular specification, verification, and control of live systems require each module to be receptive; that is, each module must be able to meet its liveness assumptions no matter how the other modules behave. In a real-time world, liveness is automatically present in the form of diverging time. The receptiveness condition, then, translates to the requirement that a module must be able to let time diverge no matter how the environment behaves. We study the receptiveness condition for real-time systems by extending the model of reactive modules to timed and hybrid modules. We define the receptiveness of such a module as the existence of a winning strategy in a game of the module against its environment. By solving the game on region graphs, we present an (optimal) Exptime algorithm for checking the receptiveness of prepositional timed modules. By giving a fixpoint characterization of the game, we present a symbolic procedure for checking the receptiveness of linear hybrid modules. Finally, we present an assume-guarantee principle for reasoning about timed and hybrid modules, and a method for synthesizing receptive controllers of timed and hybrid modules.</abstract></paper>