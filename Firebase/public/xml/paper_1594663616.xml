<paper id="1594663616"><title>An Extension of Dynamic Logic for Modelling OCL's @pre Operator</title><year>2001</year><authors><author org="Universität karlsruhe" id="2923479089">Thomas Baar</author><author org="Universität karlsruhe" id="2038785220">Bernhard Beckert</author><author org="Universität karlsruhe" id="2124643958">Peter H. Schmitt</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1499168760</reference><reference>1510723842</reference><reference>1574129634</reference><reference>1611281168</reference><reference>2068106852</reference><reference>2111619838</reference><reference>2336123333</reference></references><venue id="2753988958" type="C">International Andrei Ershov Memorial Conference on Perspectives of System Informatics</venue><doi>10.1007/3-540-45575-2_7</doi><keywords><keyword weight="0.47802">Programming language</keyword><keyword weight="0.50535">Unified Modeling Language</keyword><keyword weight="0.46153">Symbol</keyword><keyword weight="0.46531">Computer science</keyword><keyword weight="0.57792">First-order logic</keyword><keyword weight="0.50679">Operator (computer programming)</keyword><keyword weight="0.6099">Dynamic logic (digital electronics)</keyword><keyword weight="0.62982">Object Constraint Language</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We consider first-order Dynamic Logic (DL) with non-rigid functions, which can be used to model certain features of programming languages such as array variables and object attributes. We extend this logic by introducing, for each non-rigid function symbol f, a new function symbol f@pre that after program execution refers to the old value of f before program execution. We show that DL formulas with @pre can be transformed into equivalent formulas without @pre. We briefly describe the motivation for this extension coming from a related concept in the Object Constraint Language (OCL).</abstract></paper>