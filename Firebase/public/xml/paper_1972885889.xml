<paper id="1972885889"><title>Automatic selection of load balancing parameters using compile‐time and run‐time information</title><year>1997</year><authors><author org="Department of Electrical and Computer Engineering, Carnegie Mellon University, Pittsburgh, PA 15213, USA" id="691892264">Bruce S. Siegell</author><author org="School of Computer Science, Carnegie Mellon University, 5000 Forbes Avenue, Pittsburgh, PA 15213‐3891, USA" id="2203016445">Peter Steenkiste</author></authors><n_citation>12</n_citation><doc_type>Journal</doc_type><references><reference>1576974478</reference><reference>1967798408</reference><reference>1974470587</reference><reference>1982166853</reference><reference>2010418442</reference><reference>2014071176</reference><reference>2022078144</reference><reference>2026368956</reference><reference>2038481157</reference><reference>2057658156</reference><reference>2063249715</reference><reference>2077265102</reference><reference>2083734282</reference><reference>2092309910</reference><reference>2098688018</reference><reference>2107050493</reference><reference>2108167744</reference><reference>2109092883</reference><reference>2118717320</reference><reference>2123064163</reference><reference>2130039250</reference><reference>2130613569</reference><reference>2138906015</reference><reference>2139117737</reference><reference>2139571722</reference><reference>2142501884</reference><reference>2148760199</reference><reference>2150303942</reference><reference>2152408640</reference><reference>2152506070</reference><reference>2152727523</reference><reference>2153801723</reference><reference>2162939714</reference><reference>2165104827</reference></references><venue id="11065456" type="J">Concurrency and Computation: Practice and Experience</venue><doi>10.1002/(SICI)1096-9128(199704)9:4&lt;275::AID-CPE251&gt;3.0.CO;2-Y</doi><keywords><keyword weight="0.40371">Architecture</keyword><keyword weight="0.63149">Network Load Balancing Services</keyword><keyword weight="0.61579">Load balancing (computing)</keyword><keyword weight="0.56016">Compile time</keyword><keyword weight="0.46304">Computer science</keyword><keyword weight="0.4666">Parallel computing</keyword><keyword weight="0.49668">Workstation</keyword><keyword weight="0.51223">Compiler</keyword><keyword weight="0.0">Dynamic load balancing</keyword><keyword weight="0.47783">Distributed computing</keyword><keyword weight="0.44957">Computation</keyword></keywords><publisher>John Wiley &amp; Sons, Ltd</publisher><abstract>Clusters of workstations are emerging as an important architecture. Programming tools that aid in distributing applications on workstation clusters must address problems of mapping the application, heterogeneity and maximizing system utilization in the presence of varying resource availability. Both computation and communication capabilities may vary with time due to other applications competing for resources, so dynamic load balancing is a key requirement. For greatest benefit, the tool must support a relatively wide class of applications running on clusters with a range of computation and communication capabilities. We have developed a system that supports dynamic load balancing of distributed applications consisting of parallelized DOALL and DOACROSS loops. The focus of the paper is on how the system automatically determines key load balancing parameters using run-time information and information provided by programming tools such as a parallelizing compiler. The parameters discussed are the grain size of the application, the frequency of load balancing, and the parameters that control work movement. Our results are supported by measurements on an implementation for the Nectar system at Carnegie Mellon University and by simulation. © 1997 by John Wiley u0026 Sons, Ltd.</abstract></paper>