<paper id="1527032490"><title>Formal Techniques for Java-like Programs</title><year>2006</year><authors><author org="No Affiliation" id="2097229627">Davide Ancona</author><author org="No Affiliation" id="152419205">Sophia Drossopoulou</author><author org="No Affiliation" id="2097080023">Atsushi Igarashi</author><author org="No Affiliation" id="2308881956">Gary T. Leavens</author><author org="No Affiliation" id="2343845410">Arnd Poetzsch-Heffter</author><author org="No Affiliation" id="2442926778">Elena Zucca</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1546460551</reference><reference>2135785452</reference><reference>2159484187</reference><reference>2732199723</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/978-3-642-02047-6_8</doi><keywords><keyword weight="0.47168">Programming language</keyword><keyword weight="0.53664">Object-oriented programming</keyword><keyword weight="0.46192">Computer science</keyword><keyword weight="0.55384">Abstract state machines</keyword><keyword weight="0.52569">Software portability</keyword><keyword weight="0.678">Formal methods</keyword><keyword weight="0.5886">Program analysis</keyword><keyword weight="0.53821">Java</keyword><keyword weight="0.57912">Type safety</keyword><keyword weight="0.53502">Software development</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Formal techniques can help analyze programs, precisely describe program behavior, and verify program properties. Newer languages such as Java and C# provide good platforms to bridge the gap between formal techniques and practical program development, because of their reasonably clear semantics and standardized libraries. Moreover, these languages are interesting targets for formal techniques, because the novel paradigm for program deployment introduced with Java, with its improved portability and mobility, opens up new possibilities for abuse and causes concern about :[79],"on formal techniques and tools for programs and work :[79],"on the formal underpinnings of programming languages themselves naturally complement each other. This workshop aims to bring together people working in both these fields, :[79],"on topics such as: specification techniques and interface specification languages, specification of software components and library packages, automated checking and verification of program pro perties, verification logics, language semantics, program analysis, type systems, security.</abstract></paper>