<paper id="1606385043"><title>Highly Parallel Cryptographic Attacks</title><year>1997</year><authors><author org="German National Research Center for Information Technology (GMD)#TAB#" id="2123463638">Marcus Peinado</author><author org="One Microsoft Way" id="2126319880">Ramarathnam Venkatesan</author></authors><n_citation>1</n_citation><doc_type>Conference</doc_type><references><reference>1482548307</reference><reference>1589034595</reference><reference>1639145229</reference><reference>1974299554</reference><reference>2096221624</reference><reference>2098801947</reference><reference>2105175890</reference><reference>2226303357</reference><reference>2916302273</reference></references><venue id="2756308493" type="C">European PVM/MPI Users Group Meeting on Recent Advances in Parallel Virtual Machine and Message Passing Interface</venue><doi>10.1007/3-540-63697-8_106</doi><keywords><keyword weight="0.59963">Parallel algorithm</keyword><keyword weight="0.50007">Cryptography</keyword><keyword weight="0.44273">Computer science</keyword><keyword weight="0.46849">Parallel computing</keyword><keyword weight="0.59961">Birthday attack</keyword><keyword weight="0.58246">Message Passing Interface</keyword><keyword weight="0.55176">External sorting</keyword><keyword weight="0.53046">MD5</keyword><keyword weight="0.49975">Pseudorandom number generator</keyword><keyword weight="0.45478">Distributed computing</keyword><keyword weight="0.5446">Auxiliary memory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We report on a large-scale statistical evaluation of pseudorandom properties of certain cryptographic functions such as DEs and md5. The evaluation is based on the well-known birthday attack. The attack requires large amounts of memory. We describe a parallel algorithm which can exploit the large amounts of secondary memory (local disks) available on many workstation clusters and parallel machines. The overheads due to communication and disk accesses can be minimized by techniques similar to those used in parallel data bases for parallel external sorting. We have implemented the algorithm using the message passing interface MPI. We display performance measurements on an IBM SP2 which show that the costs for communication and disk accesses are negligible.</abstract></paper>