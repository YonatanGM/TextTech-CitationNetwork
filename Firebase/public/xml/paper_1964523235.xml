<paper id="1964523235"><title>Human factors comparison of a procedural and a nonprocedural query language</title><year>1981</year><authors><author org="University of Southern Maine, Portland#TAB#" id="2141916538">Charles Welty</author><author org="University of Massachusetts-Amherst" id="2170832848">David W. Stemple</author></authors><n_citation>131</n_citation><doc_type>Journal</doc_type><references><reference>1964754464</reference><reference>1969138016</reference><reference>1971715890</reference><reference>1989678938</reference><reference>2012056301</reference><reference>2013012235</reference><reference>2014243053</reference><reference>2026299058</reference><reference>2029241887</reference><reference>2030435654</reference><reference>2047499522</reference><reference>2054922473</reference><reference>2064578359</reference><reference>2072031888</reference><reference>2077207253</reference><reference>2077817373</reference><reference>2085832100</reference><reference>2096431252</reference><reference>2138709157</reference><reference>2165467455</reference><reference>2207139411</reference></references><venue id="90119964" type="J">ACM Transactions on Database Systems</venue><doi>10.1145/319628.319656</doi><keywords><keyword weight="0.67063">Query language</keyword><keyword weight="0.44468">Programming language</keyword><keyword weight="0.42235">Computer science</keyword><keyword weight="0.56018">Fourth-generation programming language</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.44967">Natural language processing</keyword><keyword weight="0.59209">Ontology language</keyword><keyword weight="0.57277">Domain-specific language</keyword><keyword weight="0.59454">Fifth-generation programming language</keyword><keyword weight="0.60609">Second-generation programming language</keyword><keyword weight="0.6144">Comparison of multi-paradigm programming languages</keyword><keyword weight="0.59632">Third-generation programming language</keyword><keyword weight="0.40623">Database</keyword></keywords><publisher>ACM</publisher><abstract>Two experiments testing the ability of subjects to write queries in two different query languages were run. The two languages, SQL and TABLET, differ primarily in their procedurality; both languages use the relational data model, and their Halstead levels are similar. Constructs in the languages which do not affect their procedurality are identical. The two languages were learned by the experimental subjects almost exclusively from manuals presenting the same examples and problems ordered identically for both languages. The results of the experiments show that subjects using the more procedural language wrote difficult queries better than subjects using the less procedural language. The results of the experiments are also used to compare corresponding constructs in the two languages and to recommend improvements for these constructs.</abstract></paper>