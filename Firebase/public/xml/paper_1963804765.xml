<paper id="1963804765"><title>A Search Technique for Clause Interconnectivity Graphs</title><year>1976</year><authors><author org="Department of Information Sciences, University of California#TAB#" id="1607529919">Sickel</author></authors><n_citation>76</n_citation><doc_type>Journal</doc_type><references><reference>1817451992</reference><reference>1970045008</reference><reference>2003287551</reference><reference>2010405422</reference><reference>2021473914</reference><reference>2062032114</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1976.1674701</doi><keywords><keyword weight="0.46322">Discrete mathematics</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.46028">Combinatorics</keyword><keyword weight="0.45462">Negation</keyword><keyword weight="0.5201">Axiom</keyword><keyword weight="0.43677">Computer science</keyword><keyword weight="0.40046">Interconnectivity</keyword><keyword weight="0.56631">Automated theorem proving</keyword><keyword weight="0.62428">Unit propagation</keyword><keyword weight="0.58881">Proof complexity</keyword><keyword weight="0.57426">Planar graph</keyword></keywords><publisher>IEEE</publisher><abstract>This paper presents a new representation and technique for proving theorems automatically that is both computationally more effective than resolution and permits a clear and concise formal description. A problem in automatic theorem proving can be specified by a set of clauses, containing literals, that represents a set of axioms and the negation of a theorem to be proved. The set of clauses can be replaced by a graph in which the nodes represent literals and the edges link unifiable complements. The nodes are partitioned by clause membership, and the edges are labeled with a most general unifying substitution. Given this representation, theorem proving becomes a graph-searching problem. The search technique presented here, in effect, unrolls the graph into sets of solution trees. The trees grow in a well-defined breadth-first way that defines a measure of proof complexity.</abstract></paper>