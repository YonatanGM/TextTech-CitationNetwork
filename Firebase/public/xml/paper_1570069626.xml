<paper id="1570069626"><title>Formalising UML state machines for model checking</title><year>1999</year><authors><author org="Turku Centre for Computer Science, Turku, Finland" id="2149006611">Johan Lilius</author><author org="Turku Centre for Computer Science, Turku, Finland" id="2020549310">Iv√°n Porres Paltor</author></authors><n_citation>162</n_citation><doc_type>Journal</doc_type><references><reference>1480560656</reference><reference>1497879578</reference><reference>1551331198</reference><reference>1574570499</reference><reference>1758496109</reference><reference>1998017916</reference><reference>2018568588</reference><reference>2100500368</reference><reference>2115309705</reference><reference>2129395888</reference><reference>2159720139</reference><reference>2159765281</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-46852-8_31</doi><keywords><keyword weight="0.58333">Operational semantics</keyword><keyword weight="0.46637">Programming language</keyword><keyword weight="0.52224">Model checking</keyword><keyword weight="0.67609">UML state machine</keyword><keyword weight="0.68623">UML tool</keyword><keyword weight="0.50781">Unified Modeling Language</keyword><keyword weight="0.449">Computer science</keyword><keyword weight="0.56207">Finite-state machine</keyword><keyword weight="0.74298">Applications of UML</keyword><keyword weight="0.52768">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper discusses a complete formalisation of UML state machine semantics. This formalisation is given in terms of an operational semantics and it can be used as the basis for code-generation, simulation and verification tools for UML Statecharts diagrams. The formalisation is done in two steps. First, the structure of a UML state machine is translated into a term rewriting system. In the second step, the operational semantics of state machines is defined. In addition, some problematic situations that may arise are discussed. Our formalisation is able to deal with all the features of UML state machines and it has been implemented in the vUML tool, a tool for model-checking UML models.</abstract></paper>