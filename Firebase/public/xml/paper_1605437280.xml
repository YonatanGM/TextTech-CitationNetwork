<paper id="1605437280"><title>Verification and optimization of a PLC control schedule</title><year>2002</year><authors><author org="Formal Methods and Tools" id="2075578308">Ed Brinksma</author><author org="" id="2014122510">Angelika Mader</author><author org="" id="329898262">Ansgar Fehnker</author></authors><n_citation>29</n_citation><doc_type>Journal</doc_type><references><reference>1820192350</reference><reference>1878516677</reference><reference>1984093640</reference><reference>2000947342</reference><reference>2023499821</reference><reference>2060095702</reference><reference>2101508170</reference><reference>2131983024</reference><reference>2146446489</reference></references><venue id="122567160" type="J">International Journal on Software Tools for Technology Transfer</venue><doi>10.1007/s10009-002-0079-0</doi><keywords><keyword weight="0.53204">Control theory</keyword><keyword weight="0.57757">Model checking</keyword><keyword weight="0.45645">Computer science</keyword><keyword weight="0.45326">Real-time computing</keyword><keyword weight="0.51648">Schedule</keyword><keyword weight="0.51315">Process control</keyword><keyword weight="0.53277">Programmable logic controller</keyword><keyword weight="0.6557">Promela</keyword><keyword weight="0.50643">Formal methods</keyword><keyword weight="0.53745">Formal verification</keyword></keywords><publisher>Springer</publisher><abstract>We report on the use of model checking techniques for both the verification of a process control program and the derivation of optimal control schedules. Most of this work has been carried out as part of a case study for the EU VHS project (Verification of Hybrid Systems), in which the program for a Programmable Logic Controller (PLC) of an experimental chemical plant had to be designed and verified. The original intention of our approach was to see how much could be achieved here using the standard model checking environment of SPIN/Promela. As the symbolic calculations of real-time model checkers can be quite expensive it is interesting to try and exploit the efficiency of established non-real-time model checkers like SPIN in those cases where promising work-arounds seem to exist. In our case we handled the relevant real-time properties of the PLC controller using a time-abstraction technique; for the scheduling we implemented in Promela a so-called variable time advance procedure. To compare and interpret the results we carried out the same case study with the aid of the real-time model checker Uppaal, enhanced with facilities for cost-guided state space exploration. Both approaches proved sufficiently powerful to verify the design of the controller and/or derive (time-)optimal schedules within reasonable time and space requirements.</abstract></paper>