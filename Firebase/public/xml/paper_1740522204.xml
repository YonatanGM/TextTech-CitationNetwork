<paper id="1740522204"><title>Synthesizing Monitors for Safety Properties</title><year>2002</year><authors><author org="Kestrel Technology" id="690502127">Klaus Havelund</author><author org="Research Institute for Advanced Computer Science, NASA Ames Research Center" id="96492545">Grigore Rosu</author></authors><n_citation>269</n_citation><doc_type>Conference</doc_type><references><reference>298244054</reference><reference>1576866974</reference><reference>1825148885</reference><reference>1996804992</reference><reference>2023808162</reference><reference>2040060046</reference><reference>2059224852</reference><reference>2088655521</reference><reference>2104717300</reference><reference>2111419012</reference><reference>2119965246</reference><reference>2126509366</reference><reference>2132150351</reference><reference>2135274583</reference><reference>2171480813</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-46002-0_24</doi><keywords><keyword weight="0.51813">Dynamic programming</keyword><keyword weight="0.45239">Computer science</keyword><keyword weight="0.46638">Algorithm</keyword><keyword weight="0.60283">Linear temporal logic</keyword><keyword weight="0.46205">Theoretical computer science</keyword><keyword weight="0.46853">Software</keyword><keyword weight="0.48985">Operator (computer programming)</keyword><keyword weight="0.50712">Linear logic</keyword><keyword weight="0.52288">Temporal logic</keyword><keyword weight="0.53916">Time complexity</keyword><keyword weight="0.4097">Time constant</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The problem of testing a linear temporal logic (LTL) formula on a finite execution trace of events, generated by an executing program, occurs naturally in runtime analysis of software. An algorithm which takes a past time LTL formula and generates an efficient dynamic programming algorithm is presented. The generated algorithm tests whether the formula is satisfied by a finite trace of events given as input and runs in linear time, its constant depending on the size of the LTL formula. The memory needed is constant, also depending on the size of the formula. Further optimizations of the algorithm are suggested. Past time operators suitable for writing succinct specifications are introduced and shown definitionally equivalent to the standard operators. This work is part of the PathExplorer project, the objective of which it is to construct a flexible framework for monitoring and analyzing program executions.</abstract></paper>