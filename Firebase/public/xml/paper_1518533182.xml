<paper id="1518533182"><title>A Type-Based Approach to Program Security</title><year>1997</year><authors><author org="Naval Postgraduate School,," id="199750138">Dennis M. Volpano</author><author org="Florida International University" id="2159366204">Geoffrey Smith</author></authors><n_citation>207</n_citation><doc_type>Conference</doc_type><references><reference>1507045691</reference><reference>1581472742</reference><reference>1964476601</reference><reference>1977764760</reference><reference>1990048025</reference><reference>1993302007</reference><reference>2052822938</reference><reference>2054696368</reference><reference>2058279444</reference><reference>2094873755</reference><reference>2112976841</reference><reference>2129278597</reference><reference>2150174204</reference><reference>2151156765</reference><reference>2293278021</reference></references><venue id="2756386172" type="C">Colloquium on trees in Algebra and Programming</venue><doi>10.1007/BFb0030629</doi><keywords><keyword weight="0.58216">Procedural programming</keyword><keyword weight="0.46854">Programming language</keyword><keyword weight="0.0">Security level</keyword><keyword weight="0.6782">Software security assurance</keyword><keyword weight="0.47369">Computer science</keyword><keyword weight="0.62284">Concrete security</keyword><keyword weight="0.53993">Type variable</keyword><keyword weight="0.65712">Logical security</keyword><keyword weight="0.73834">Computer security model</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper presents a type system which guarantees that well-typed programs in a procedural programming language satisfy a noninterference security property. With all program inputs and outputs classified at various security levels, the property basically states that a program output, classified at some level, can never change as a result of modifying only inputs classified at higher levels. Intuitively, this means the program does not “leak” sensitive data. The property is similar to a notion introduced years ago by Goguen and Meseguer to model security in multi-level computer systems [7]. We also give an algorithm for inferring and simplifying principal types, which document the security requirements of programs.</abstract></paper>