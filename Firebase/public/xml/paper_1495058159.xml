<paper id="1495058159"><title>Hidden Collisions on DSS</title><year>1996</year><authors><author org="Ecole Normale SupÃ©rieure-DMI" id="22805272">Serge Vaudenay</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>1580913585</reference><reference>1646354800</reference><reference>2095708839</reference><reference>2108834246</reference><reference>2166462813</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-68697-5_7</doi><keywords><keyword weight="0.45911">Computer science</keyword><keyword weight="0.4492">Computer security</keyword><keyword weight="0.45349">Theoretical computer science</keyword><keyword weight="0.72841">Birthday attack</keyword><keyword weight="0.52979">Collision</keyword><keyword weight="0.55186">Digital Signature Algorithm</keyword><keyword weight="0.58951">Hash function</keyword><keyword weight="0.69855">Collision attack</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We explain how to forge public parameters for the Digital Signature Standard with two known messages which always produce the same set of valid signatures (what we call a collision). This attack is thwarted by using the generation algorithm suggested in the specifications of the Standard, so it proves one always need to check proper generation. We also present a similar attack when using this generation algorithm within a complexity 274, which is better than the birthday attack which seeks for collisions on the underlying hash function.</abstract></paper>