<paper id="1483370895"><title>Prioritized Traversal: Efficient Reachability Analysis for Verification and Falsification</title><year>2000</year><authors><author org="INTEL Corporation" id="291354261">Ranan Fraer</author><author org="INTEL Corporation" id="2974653350">Gila Kamhi</author><author org="INTEL Corporation" id="2500689349">Barukh Ziv</author><author org="Rice University" id="1970575723">Moshe Y. Vardi</author><author org="INTEL Corporation" id="2953179371">Limor Fix</author></authors><n_citation>27</n_citation><doc_type>Conference</doc_type><references><reference>1503206383</reference><reference>1551256212</reference><reference>1970126536</reference><reference>1975112016</reference><reference>1979520342</reference><reference>2011778465</reference><reference>2080267935</reference><reference>2099120582</reference><reference>2101481392</reference><reference>2109356398</reference><reference>2125119073</reference><reference>2132815291</reference><reference>2133143481</reference><reference>2145343136</reference><reference>2146663969</reference><reference>2163401477</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/10722167_30</doi><keywords><keyword weight="0.43825">Distributed File System</keyword><keyword weight="0.50821">Approximation algorithm</keyword><keyword weight="0.59849">Tree traversal</keyword><keyword weight="0.46612">Computer science</keyword><keyword weight="0.47555">Usability</keyword><keyword weight="0.46003">Algorithm</keyword><keyword weight="0.51685">Binary decision diagram</keyword><keyword weight="0.46906">Theoretical computer science</keyword><keyword weight="0.52578">Reachability</keyword><keyword weight="0.52332">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Our experience with semi-exhaustive verification shows a severe degradation in usability for the corner-case bugs, where the tuning effort becomes much higher and recovery from dead-ends is more and more difficult. Moreover, when there are no bugs at all, shifting semi-exhaustive traversal to exhaustive traversal is very expensive, if not impossible. This makes the output of semi-exhaustive verification on non-buggy designs very ambiguous. Furthermore, since after the design fixes each falsification task needs to converge to full verification, there is a strong need for an algorithm that can handle efficiently both verification and falsification. We address these shortcomings with an enhanced reachability algorithm that is more robust in detecting corner-case bugs and that can potentially converge to exhaustive reachability. Our approach is similar to that of Cabodi et al. in partitioning the frontiers during the traversal, but differs in two respects. First, our partitioning algorithm trades quality for time resulting in a significantly faster traversal. Second, the subfrontiers are processed according to some priority function resulting in a mixed BFS/DFS traversal. It is this last feature that makes our algorithm suitable for both falsification and verification.</abstract></paper>