<paper id="1556886986"><title>Partial Evaluation of C and Automatic Compiler Generation (Extended Abstract)</title><year>1992</year><authors><author org="DIKU" id="2946493658">Lars Ole Andersen</author></authors><n_citation>21</n_citation><doc_type>Conference</doc_type><references><reference>132956763</reference><reference>1577610794</reference><reference>1816220807</reference><reference>1973312887</reference><reference>1987632834</reference><reference>2109419963</reference></references><venue id="1162239172" type="C">Compiler Construction</venue><doi>10.1007/3-540-55984-1_23</doi><keywords><keyword weight="0.49785">Residual</keyword><keyword weight="0.48089">Programming language</keyword><keyword weight="0.4597">Computer science</keyword><keyword weight="0.61239">Partial evaluation</keyword><keyword weight="0.61331">Compiler</keyword><keyword weight="0.51624">Interpreter</keyword><keyword weight="0.0">C programming language</keyword><keyword weight="0.57743">Executable</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A partial evaluator is a program transformator which as input take a program and parts of its input, and as output produce a specialized residual program. When applied to the rest of the input data, the residual program yields same result as the orignal program. The aim is efficiency: the residual program often run an order of magnitude faster. We have developed a self-applicable partial evaluator for a substantial subset of the C programming language. The possibility of self-application enables generation of stand-alone compilers from executable specifications, for example interpreters.</abstract></paper>