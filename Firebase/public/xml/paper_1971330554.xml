<paper id="1971330554"><title>The errors of TEX</title><year>1989</year><authors><author org="Stanford Univ., Stanford, CA" id="2137000881">D. E. Knuth</author></authors><n_citation>118</n_citation><doc_type>Journal</doc_type><references><reference>1584102434</reference><reference>1977304153</reference><reference>2063013240</reference><reference>2066459581</reference><reference>2070334217</reference><reference>2126538733</reference><reference>2143232930</reference><reference>2342082360</reference></references><venue id="122199241" type="J">Software - Practice and Experience</venue><doi>10.1002/spe.4380190702</doi><keywords><keyword weight="0.44393">Numbering</keyword><keyword weight="0.41411">Software engineering</keyword><keyword weight="0.41184">Computer science</keyword><keyword weight="0.32203">Petroleum engineering</keyword><keyword weight="0.42793">Software</keyword><keyword weight="0.42368">Software portability</keyword><keyword weight="0.46023">Software quality</keyword><keyword weight="0.0">Program evolution</keyword><keyword weight="0.39029">Operating system</keyword><keyword weight="0.44531">Software development</keyword><keyword weight="0.44979">Debugging</keyword></keywords><publisher>John Wiley &amp; Sons, Inc.</publisher><abstract>This paper is a case study of program evolution. The author kept track of all changes made to TEX during a period of ten years, including the changes made when the original program was first debugged in 1978. The log book of these errors, numbering more than 850 items, appears as an appendix to this paper. The errors have been classified into fifteen categories for purposes of analysis, and some of the noteworthy bugs are discussed in detail. The history of the TEX project can teach valuable lessons about the preparation of highly portable software and the maintenance of programs that aspire to high standards of reliability.</abstract></paper>