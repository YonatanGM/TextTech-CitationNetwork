<paper id="1984283136"><title>Recent directions in netlist partitioning: a survey</title><year>1995</year><authors><author org="UCLA Computer Science Department, Los Angeles, CA 90024-1596, USA" id="1898738976">Charles J. Alpert</author><author org="UCLA Computer Science Department, Los Angeles, CA 90024-1596, USA" id="2067629764">Andrew B. Kahng</author></authors><n_citation>525</n_citation><doc_type>Journal</doc_type><references><reference>338375802</reference><reference>1530768763</reference><reference>1546457065</reference><reference>1550835699</reference><reference>1574733291</reference><reference>1592319213</reference><reference>1592838885</reference><reference>1607375598</reference><reference>1750273152</reference><reference>1900591845</reference><reference>1966461475</reference><reference>1970296212</reference><reference>1971680255</reference><reference>1973113780</reference><reference>1976887498</reference><reference>1977126770</reference><reference>1977545325</reference><reference>1980746862</reference><reference>1981893977</reference><reference>1982882434</reference><reference>1982952634</reference><reference>1984954427</reference><reference>1987786682</reference><reference>1988118342</reference><reference>1994314035</reference><reference>1996470228</reference><reference>2001066707</reference><reference>2002482371</reference><reference>2003346537</reference><reference>2005228957</reference><reference>2005314985</reference><reference>2010346244</reference><reference>2011039300</reference><reference>2013696754</reference><reference>2015889898</reference><reference>2017658843</reference><reference>2021709993</reference><reference>2023296518</reference><reference>2027626714</reference><reference>2029853052</reference><reference>2032431794</reference><reference>2033885342</reference><reference>2033954061</reference><reference>2034706203</reference><reference>2035228443</reference><reference>2035470297</reference><reference>2039698161</reference><reference>2065705918</reference><reference>2068084624</reference><reference>2069037000</reference><reference>2069440513</reference><reference>2071801046</reference><reference>2084528420</reference><reference>2086629796</reference><reference>2095117703</reference><reference>2095284441</reference><reference>2099237065</reference><reference>2100382302</reference><reference>2103051842</reference><reference>2103486643</reference><reference>2104670598</reference><reference>2104796877</reference><reference>2105715355</reference><reference>2106812271</reference><reference>2107846009</reference><reference>2108086219</reference><reference>2108717395</reference><reference>2109539905</reference><reference>2110002672</reference><reference>2115653324</reference><reference>2117152251</reference><reference>2118017427</reference><reference>2120377775</reference><reference>2122289218</reference><reference>2125278290</reference><reference>2125306180</reference><reference>2125531986</reference><reference>2126641717</reference><reference>2126674396</reference><reference>2128193809</reference><reference>2128987859</reference><reference>2129637459</reference><reference>2130045784</reference><reference>2130563646</reference><reference>2130804120</reference><reference>2134085311</reference><reference>2135665983</reference><reference>2140680764</reference><reference>2141129382</reference><reference>2141523221</reference><reference>2142252848</reference><reference>2145374351</reference><reference>2147071478</reference><reference>2148037438</reference><reference>2148219318</reference><reference>2148896501</reference><reference>2150815183</reference><reference>2151092733</reference><reference>2152768770</reference><reference>2153769574</reference><reference>2153873308</reference><reference>2154805642</reference><reference>2155112903</reference><reference>2155576314</reference><reference>2155754954</reference><reference>2157261547</reference><reference>2157661053</reference><reference>2157761128</reference><reference>2158598102</reference><reference>2158744529</reference><reference>2159054071</reference><reference>2161455936</reference><reference>2161510137</reference><reference>2161675672</reference><reference>2161759964</reference><reference>2162548825</reference><reference>2162932413</reference><reference>2164710184</reference><reference>2165977309</reference><reference>2168114038</reference><reference>2170236666</reference><reference>2171470054</reference><reference>2296763987</reference><reference>2404588985</reference><reference>2405219083</reference></references><venue id="139392130" type="J">Integration</venue><doi>10.1016/0167-9260(95)00008-4</doi><keywords><keyword weight="0.49797">Simulated annealing</keyword><keyword weight="0.485">Flow network</keyword><keyword weight="0.60382">Netlist</keyword><keyword weight="0.45512">Vector space</keyword><keyword weight="0.5101">Evolutionary algorithm</keyword><keyword weight="0.45516">Computer science</keyword><keyword weight="0.46057">Computer Aided Design</keyword><keyword weight="0.46246">Algorithm</keyword><keyword weight="0.47095">Theoretical computer science</keyword><keyword weight="0.4552">Operator (computer programming)</keyword><keyword weight="0.53806">Cluster analysis</keyword></keywords><publisher>Elsevier Science Publishers B. V.</publisher><abstract>This survey describes research directions in netlist partitioning during the past two decades in terms of both problem formulations and solution approaches. We discuss the traditional min-cut and ratio cut bipartitioning formulations along with multi-way extensions and newer problem formulations, e.g., constraint-driven partitioning (for FPGAs) and partitioning with module replication. Our discussion of solution approaches is divided into four major categories: move-based approaches, geometric representations, combinatorial formulations, and clustering approaches. Move-based algorithms iteratively explore the space of feasible solutions according to a neighborhood operator; such methods include greed, iterative exchange, simulated annealing, and evolutionary algorithms. Algorithms based on geometric representations embed the circuit netlist in some type of “geometry”, e.g., a 1-dimensional linear ordering or a multi-dimensional vector space; the embeddings are commonly constructed using spectral methods. Combinatorial methods transform the partitioning problem into another type of optimization, e.g., based on network flows or mathematical programming. Finally, clustering algorithms merge the netlist modules into many small clusters; we discuss methods which combine clustering with existing algorithms (e.g., two-phase partitioning). The paper concludes with a discussion of benchmarking in the VLSI CAD partitioning literature and some perspectives on more promising directions for future work.</abstract></paper>