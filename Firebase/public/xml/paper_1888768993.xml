<paper id="1888768993"><title>Two Party RSA Key Generation</title><year>1999</year><authors><author org="TECHNION" id="1971609238">Niv Gilboa</author></authors><n_citation>106</n_citation><doc_type>Conference</doc_type><references><reference>59079490</reference><reference>1492989663</reference><reference>1493501268</reference><reference>1498896551</reference><reference>1745686190</reference><reference>1963094505</reference><reference>2009432965</reference><reference>2017464959</reference><reference>2065265824</reference><reference>2129033453</reference><reference>2154654620</reference><reference>2165621523</reference><reference>2230112138</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48405-1_8</doi><keywords><keyword weight="0.56653">Key generation</keyword><keyword weight="0.53676">Cryptography</keyword><keyword weight="0.41115">Computer security</keyword><keyword weight="0.40206">Computer science</keyword><keyword weight="0.54882">Encryption</keyword><keyword weight="0.63374">Key-agreement protocol</keyword><keyword weight="0.6591">Threshold cryptosystem</keyword><keyword weight="0.57333">Public-key cryptography</keyword><keyword weight="0.5976">Key (cryptography)</keyword><keyword weight="0.4988">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a protocol for two parties to generate an RSA key in a distributed manner. At the end of the protocol the public key: a modulus N = PQ, and an encryption exponent e are known to both parties. Individually, neither party obtains information about the decryption key d and the prime factors of N: P and Q. However, d is shared among the parties so that threshold decryption is possible.</abstract></paper>