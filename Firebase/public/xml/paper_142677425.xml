<paper id="142677425"><title>Synthesizing Processes and Schedulers from Temporal Specifications</title><year>1990</year><authors><author org="Stanford, University" id="582745287">Howard Wong-Toi</author><author org="Stanford, University" id="2148325455">David L. Dill</author></authors><n_citation>58</n_citation><doc_type>Conference</doc_type><references><reference>59365162</reference><reference>1491037212</reference><reference>1590266960</reference><reference>1737156267</reference><reference>2016206563</reference><reference>2061841985</reference><reference>2163151383</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BFb0023741</doi><keywords><keyword weight="0.44904">Exponential function</keyword><keyword weight="0.45827">Computer science</keyword><keyword weight="0.54156">Scheduling (computing)</keyword><keyword weight="0.57457">Concurrency</keyword><keyword weight="0.42662">Spacetime</keyword><keyword weight="0.46786">Theoretical computer science</keyword><keyword weight="0.0">Finite state</keyword><keyword weight="0.52383">Tree automaton</keyword><keyword weight="0.51633">Reactive system</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>We examine two closely related problems: synthesizing processes to satisfy temporal specifications of reactive systems, and the synthesis of a scheduler to interact with and control a group of processes in order to meet a specification. Processes communicate through shared and distributed variables, either synchronously or asynchronously. In the finite state case, processes and specifications are arbitrary Ï‰-regular languages, and both synthesis problems are solvable in doubly exponential time and space. The framework we present is flexible enough to incorporate dense real time into the model of concurrency, thereby allowing us to study the synthesis of real-time processes and schedulers. Real-time implementability and scheduling are also doubly exponential.</abstract></paper>