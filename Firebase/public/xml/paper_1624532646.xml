<paper id="1624532646"><title>Access control in an open distributed environment</title><year>1998</year><authors><author org="APM Ltd., Cambridge, UK" id="1992099035">R.J. Hayton</author><author org="" id="2162937838">J.M. Bacon</author><author org="" id="2258298444">K. Moody</author></authors><n_citation>145</n_citation><doc_type>Conference</doc_type><references><reference>1828926712</reference><reference>1928533667</reference><reference>1989649788</reference><reference>2165065735</reference><reference>2166602595</reference></references><venue id="1163618098" type="C">IEEE Symposium on Security and Privacy</venue><doi>10.1109/SECPRI.1998.674819</doi><keywords><keyword weight="0.5358">Authentication</keyword><keyword weight="0.49557">Distributed Computing Environment</keyword><keyword weight="0.48938">Message authentication code</keyword><keyword weight="0.46183">Computer security</keyword><keyword weight="0.45126">Computer science</keyword><keyword weight="0.49416">Revocation</keyword><keyword weight="0.54636">Access control</keyword><keyword weight="0.50889">Delegation</keyword><keyword weight="0.51152">Credential</keyword><keyword weight="0.51417">Certificate</keyword></keywords><publisher>IEEE</publisher><abstract>We describe an architecture for secure, independent, interworking services (Oasis). Each service is made responsible for the classification of its clients into named roles, using a formal logic to specify precise conditions for entering each role. A client becomes authenticated by presenting credentials to a service that enable the service to prove that the client conforms to its policy for entry to a particular role. During authentication a data structure is created that embodies the proof. An authenticated client is issued a role membership certificate (RMC) for its subsequent use with that service. An RMC is an encryption-protected capability which includes the role name, the identity of the principal to which it was issued and a reference to the issuing service. A proof rule of one service may refer to an authenticated user of another; that is, an RMC issued by one service may be required as a credential during authentication by another. A dynamic proof tree may thus be built which exhibits amongst other things the trust relationships between the services which the client has entered. The paper shows how a service may define a set of proof rules (Horn clauses) that specify who may use it and in what way. Delegation of rights may be expressed naturally within these rules. It goes on to present the design details of the system. The system is inherently decentralised and has a tuneable reaction to network or server failure which allows services to make appropriate decisions when authorization or revocation information is unavailable. A prototype system has been implemented and tested.</abstract></paper>