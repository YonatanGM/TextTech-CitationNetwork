<paper id="1876057874"><title>Correctness of Generic Modules</title><year>1992</year><authors><author org="UniversitÃ¤t karlsruhe" id="2139633246">Wolfgang Reif</author></authors><n_citation>17</n_citation><doc_type>Conference</doc_type><references><reference>1503412205</reference><reference>1518667287</reference><reference>1541153481</reference><reference>1558059851</reference><reference>1587847854</reference><reference>1590828018</reference><reference>1600950634</reference><reference>1603788080</reference><reference>1857327297</reference><reference>1930570670</reference><reference>1967975156</reference><reference>1984464989</reference><reference>2103005030</reference><reference>2110050316</reference><reference>2111706174</reference><reference>2123596219</reference><reference>2150726636</reference></references><venue id="1150208541" type="C">Foundations of Computer Science</venue><doi>10.1007/BFb0023893</doi><keywords><keyword weight="0.40576">Discrete mathematics</keyword><keyword weight="0.55332">Functional verification</keyword><keyword weight="0.47874">Programming language</keyword><keyword weight="0.46454">Computer science</keyword><keyword weight="0.64176">Correctness</keyword><keyword weight="0.5288">Imperative programming</keyword><keyword weight="0.54274">Concolic testing</keyword><keyword weight="0.53066">Dynamic logic (digital electronics)</keyword><keyword weight="0.549">High-level verification</keyword><keyword weight="0.59894">Formal verification</keyword><keyword weight="0.55016">Software verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Modularization is the central design paradigm for large software systems, and the correctness of modules is one of the basic building blocks for the verification of large systems. In this paper we investigate the correctness problem for generic modules. The export- and import interfaces of a generic module are parameterized first-order specifications, and its implementation is written in an imperative programming language. We define the semantics and the correctness of generic modules, and present a logical characterization of correctness in terms of Dynamic Logic. This characterization paves the way for automated verification of generic modules in the KIV system (Karlsruhe Interactive Verifier), a tactical theorem prover for Dynamic Logic.</abstract></paper>