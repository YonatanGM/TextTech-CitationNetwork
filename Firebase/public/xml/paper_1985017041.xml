<paper id="1985017041"><title>Asking questions to minimize errors</title><year>1993</year><authors><author org="Department of Computer Science, The University of Calgary, 2500 University Drive N.W. Calgary, Alberta, Canada, T2N 1N4#TAB#" id="2923455134">Nader H. Bshouty</author><author org="Department of Computer Science, Washington University, St. Louis, Missouri" id="2161482269">Sally A. Goldman</author><author org="Siemens Corporate Research, Inc. 755 College Road East, Princeton, New Jersey, 08540#TAB#" id="1991052618">Thomas R. Hancock</author><author org="Department of Computer Science, The University of Calgary, 2500 University Drive N.W. Calgary, Alberta, Canada, T2N 1N4#TAB#" id="2171225145">Sleiman Matar</author></authors><n_citation>40</n_citation><doc_type>Conference</doc_type><references><reference>1989445634</reference><reference>2012982765</reference><reference>2019363670</reference><reference>2019807548</reference><reference>2020240363</reference><reference>2056329899</reference><reference>2060778732</reference><reference>2067220985</reference><reference>2071210909</reference><reference>2085492672</reference><reference>2088181725</reference><reference>2129113961</reference><reference>2139709458</reference><reference>2140606869</reference><reference>2167871522</reference></references><venue id="1177622950" type="C">Conference on Learning Theory</venue><doi>10.1145/168304.168310</doi><keywords><keyword weight="0.46668">Discrete mathematics</keyword><keyword weight="0.46348">Combinatorics</keyword><keyword weight="0.48876">Deterministic automaton</keyword><keyword weight="0.50933">Polynomial</keyword><keyword weight="0.51211">Upper and lower bounds</keyword><keyword weight="0.50286">Deterministic finite automaton</keyword><keyword weight="0.43422">Computer science</keyword><keyword weight="0.56052">Equivalence (measure theory)</keyword><keyword weight="0.48896">Counterexample</keyword><keyword weight="0.53012">Time complexity</keyword><keyword weight="0.48222">Monotone polygon</keyword></keywords><publisher>ACM</publisher><abstract>A number of efficient learning algorithms achieve exact identification of an unknown function from some class using membership and equivalence queries. Using a standard transformation such algorithms can easily be converted to on-line learning algorithms that use membership queries. Under such a transformation the number of equivalence queries made by the query algorithm directly corresponds to the number of mistakes made by the on-line algorithm. In this paper we consider several of the natural classes known to be learnable in this setting, and investigate the minimum number of equivalence queries with accompanying counterexamples (or equivalently the minimum number of mistakes in the on-line model) that can be made by a learning algorithm that makes a polynomial number of membership queries and uses polynomial computation time. We are able both to reduce the number of equivalence queries used by the previous algorithms and often to prove matching lower bounds. As an example, consider the class of DNF formulas over n variables with at mostk=O(logn) terms. Previously, the algorithm of Blum and Rudich provided the best known upper bound of 2O(k)lognfor the minimum number of equivalence queries needed for exact identification. We greatly improve on this upper bound showing that exactlykcounterexamples are needed if the learner knowska priori and exactlyk+1 counterexamples are needed if the learner does not knowka priori. This exactly matches known lower bounds of Bshouty and Cleve. For many of our results we obtain a complete characterization of the trade-off between the number of membership and equivalence queries needed for exact identification. The classes we consider here are monotone DNF formulas, Horn sentences,O(logn)-term DNF formulas, read-ksat-jDNF formulas, read-once formulas over various bases, and deterministic finite automata.</abstract></paper>