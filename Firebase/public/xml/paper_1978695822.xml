<paper id="1978695822"><title>Real-time system = discrete system + clock variables</title><year>1994</year><authors><author org="University of Pennsylvania" id="689646243">Rajeev Alur</author><author org="&quot;University of California, Berkeley&quot;" id="2707196735">Thomas A. Henzinger</author></authors><n_citation>54</n_citation><doc_type>Journal</doc_type><references><reference>80787065</reference><reference>1482233117</reference><reference>1488948284</reference><reference>1490985464</reference><reference>1491037212</reference><reference>1500239546</reference><reference>1501731334</reference><reference>1515514400</reference><reference>1540180001</reference><reference>1560527899</reference><reference>1585621368</reference><reference>1605121006</reference><reference>1690546704</reference><reference>1755579963</reference><reference>1796678419</reference><reference>1823037702</reference><reference>1857327297</reference><reference>1874725288</reference><reference>1875492031</reference><reference>1885037678</reference><reference>1928422391</reference><reference>1968057948</reference><reference>1981808971</reference><reference>1989877393</reference><reference>2004463571</reference><reference>2011694130</reference><reference>2015688007</reference><reference>2025835812</reference><reference>2026533872</reference><reference>2030263557</reference><reference>2039025680</reference><reference>2066210260</reference><reference>2084880396</reference><reference>2093916942</reference><reference>2101508170</reference><reference>2130773092</reference><reference>2160883697</reference><reference>2163590987</reference><reference>2293400264</reference><reference>2569361512</reference></references><venue id="122567160" type="J">International Journal on Software Tools for Technology Transfer</venue><doi>10.1007/s100090050007</doi><keywords><keyword weight="0.45756">Notation</keyword><keyword weight="0.49603">Logical conjunction</keyword><keyword weight="0.47274">Programming language</keyword><keyword weight="0.51921">Model checking</keyword><keyword weight="0.4678">Computer science</keyword><keyword weight="0.46365">Theoretical computer science</keyword><keyword weight="0.44117">Real-time computing</keyword><keyword weight="0.45874">Real-time operating system</keyword><keyword weight="0.61049">Timed automaton</keyword><keyword weight="0.53082">Formal methods</keyword><keyword weight="0.41271">Technical report</keyword><keyword weight="0.47295">Discrete system</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper introduces, gently but rigorously, the clock approach to real-time programming. We present with mathematical precision, assuming no prerequisites other than familiarity with logical and programming notations, the concepts that are necessary for understanding, writing, and executing clock programs. In keeping with an expository style, all references are clustered in bibliographic remarks at the end of each section. The first appendix presents proof rules for verifying temporal properties of clock programs. The second appendix points to selected literature on formal methods and tools for programming with clocks. In particular, the timed automaton, which is a finite-state machine equipped with clocks, has become a standard paradigm for real-time model checking; it underlies the tools HyTech, Kronos, and Uppaal, which are discussed elsewhere in this volume.</abstract></paper>