<paper id="1524288918"><title>Efficient Multiparty Protocols Using Circuit Randomization</title><year>1991</year><authors><author org="Penn-State Univ" id="2124380882">Donald Beaver</author></authors><n_citation>204</n_citation><doc_type>Conference</doc_type><references><reference>1540442590</reference><reference>1603973540</reference><reference>1605900190</reference><reference>2033766329</reference><reference>2077315235</reference><reference>2142222275</reference><reference>2161670619</reference><reference>2990399857</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-46766-1_34</doi><keywords><keyword weight="0.46095">Broadcasting</keyword><keyword weight="0.56835">Secret sharing</keyword><keyword weight="0.45487">Polynomial</keyword><keyword weight="0.44315">Computer science</keyword><keyword weight="0.44266">Theoretical computer science</keyword><keyword weight="0.40506">Creating shared value</keyword><keyword weight="0.44076">Mathematical proof</keyword><keyword weight="0.51876">Multiplication</keyword><keyword weight="0.40477">Adversary</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The difference between theory and practice often rests on one major factor: efficiency. In distributed systems, communication is usually expensive, and protocols designed for practical use must require as few rounds of communication and as small messages as possible.A secure multiparty protocol to compute function F is a protocol that, when each player i of n players starts with private input xi, provides each participant i with F(x1,...xn) without revealing more information than what can be derived from learning the function value. Some number l of players may be corrupted by an adversary who may then change the messages they send. Recent solutions to this problem have suffered in practical terms: while theoretically using only polynomially-many rounds, in practice the constants and exponents of such polynomials are too great. Normally, such protocols express F as a circuit CF, call on each player to secretly share xi, and proceed to perform "secret addition and multiplication" on secretly shared values. The cost is proportional to the depth of CF times the cost of secret multiplication; and multiplication requires several rounds of interaction.We present a protocol that simplifies the body of such a protocol and significantly reduces the number of rounds of interaction. The steps of our protocol take advantage of a new and counterintuitive technique for evaluating a circuit: set every input to every gate in the circuit completely at random, and then make corrections. Our protocol replaces each secret multiplication -- multiplication that requires further sharing, addition, zero-knowledge proofs, and secret reconstruction -- that is used during the body of a standard protocol by a simple reconstruction of secretly shared values, thereby reducing rounds by an order of magnitude. Furthermore, these reconstructions require only broadcast messages (but do not require Byzantine Agreement). The simplicity of broadcast and reconstruction provides efficiency and ease of implementation. Our transformation is simple and compatible with other techniques for reducing rounds.</abstract></paper>