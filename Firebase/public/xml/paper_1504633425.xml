<paper id="1504633425"><title>Ownership Domains: Separating Aliasing Policy from Mechanism</title><year>2004</year><authors><author org="Carnegie - Mellon University#TAB#" id="2128636885">Jonathan Aldrich</author><author org="University of Washington," id="2133284789">Craig Chambers</author></authors><n_citation>165</n_citation><doc_type>Conference</doc_type><references><reference>1483872283</reference><reference>1507902915</reference><reference>1526771983</reference><reference>1552313422</reference><reference>2003539206</reference><reference>2030601112</reference><reference>2049984112</reference><reference>2052087935</reference><reference>2073407646</reference><reference>2116318340</reference><reference>2131309111</reference><reference>2135868037</reference><reference>2136839747</reference><reference>2137628566</reference><reference>2146934772</reference><reference>2149244483</reference><reference>2156428492</reference><reference>2158067240</reference><reference>2168986107</reference><reference>2295471304</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/978-3-540-24851-4_1</doi><keywords><keyword weight="0.52654">Abstract data type</keyword><keyword weight="0.735">Aliasing (computing)</keyword><keyword weight="0.44996">Programming language</keyword><keyword weight="0.50956">Object-oriented programming</keyword><keyword weight="0.45501">Computer science</keyword><keyword weight="0.48204">Type theory</keyword><keyword weight="0.44769">Theoretical computer science</keyword><keyword weight="0.52742">Aliasing</keyword><keyword weight="0.0">Encapsulation (computer programming)</keyword><keyword weight="0.50881">Software development</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Ownership types promise to provide a practical mechanism for enforcing stronger encapsulation by controlling aliasing in object-oriented languages. However, previous ownership type proposals have tied the aliasing policy of a system to the mechanism of ownership. As a result, these proposals are too weak to express many important aliasing constraints, yet also so restrictive that they prohibit many useful programming idioms.</abstract></paper>