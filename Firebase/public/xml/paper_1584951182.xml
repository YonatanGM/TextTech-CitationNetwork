<paper id="1584951182"><title>Standard ML of New Jersey</title><year>1991</year><authors><author org="Princeton University *" id="2120329599">Andrew W. Appel</author><author org="AT&amp;T Bell Lab.#TAB#" id="2618847259">David B. MacQueen</author></authors><n_citation>219</n_citation><doc_type>Conference</doc_type><references><reference>1534508664</reference><reference>1557045049</reference><reference>1580664042</reference><reference>1829244603</reference><reference>1966975259</reference><reference>1973162794</reference><reference>1973165589</reference><reference>1979240050</reference><reference>2047869411</reference><reference>2058821858</reference><reference>2059895047</reference><reference>2079978872</reference><reference>2083697466</reference><reference>2093107912</reference><reference>2110135416</reference><reference>2113757735</reference><reference>2133979298</reference><reference>2141157907</reference><reference>2144714835</reference><reference>2151156765</reference><reference>2912126004</reference></references><venue id="2754504537" type="C">International Symposium on Programming Language Implementation and Logic Programming</venue><doi>10.1007/3-540-54444-5_83</doi><keywords><keyword weight="0.4529">Programming language</keyword><keyword weight="0.61412">Standard ML</keyword><keyword weight="0.4378">Computer science</keyword><keyword weight="0.58916">Code generation</keyword><keyword weight="0.60099">Compiler</keyword><keyword weight="0.49689">Software system</keyword><keyword weight="0.73074">Standard ML of New Jersey</keyword><keyword weight="0.48154">Concurrent computing</keyword><keyword weight="0.49497">Pattern matching</keyword><keyword weight="0.48128">Runtime system</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Standard ML of New Jersey compiler has been under development for five years now. We have developed a robust and complete environment for Standard ML that supports the implementation of large software systems and generates efficient code. The compiler has also served as a laboratory for developing novel implementation techniques for a sophisticated type and module system, continuation based code generation, efficient pattern matching, and concurrent programming features.</abstract></paper>