<paper id="1590873771"><title>A Key-schedule Weakness in SAFER K-64</title><year>1995</year><authors><author org="ÉCOLE NORMALE SUPÉRIEURE" id="2035224540">Lars R. Knudsen</author></authors><n_citation>29</n_citation><doc_type>Conference</doc_type><references><reference>1531810027</reference><reference>1543271574</reference><reference>1547537489</reference><reference>1564295073</reference><reference>1597936869</reference><reference>1606884796</reference><reference>1926480282</reference><reference>1991897749</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-44750-4_22</doi><keywords><keyword weight="0.52518">Byte</keyword><keyword weight="0.5962">Key schedule</keyword><keyword weight="0.57279">Block cipher</keyword><keyword weight="0.40075">Existential quantification</keyword><keyword weight="0.60068">Chosen-plaintext attack</keyword><keyword weight="0.4246">Computer science</keyword><keyword weight="0.42138">Computer security</keyword><keyword weight="0.64131">SAFER</keyword><keyword weight="0.41928">Theoretical computer science</keyword><keyword weight="0.56208">Encryption</keyword><keyword weight="0.52916">Hash function</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we analyse SAFER K-64 and show a weakness in the key schedule. It has the effect that for almost every key K, there exists at least one different key K*, such that for many plaintexts the outputs after 6 rounds of encryption are equal. The output transformation causes the ciphertexts to differ in one of the 8 bytes. Also, the same types of keys encrypt even more pairs of plaintexts different in one byte to ciphertexts different only in the same byte. This enables us to do a related-key chosen plaintext attack on SAFER K-64, which finds 8 bits of the key requiring from 244 to about 247 chosen plaintexts.While our observations may have no greater impact on the security of SAFER K-64 when used for encryption in practice, it greatly reduces the security of the algorithm when used in hashing modes, which is illustrated. We give collisions for the well-known secure hash modes using a block cipher. Also we give a suggestion of how to improve the key schedule, such that our attacks are no longer possible.</abstract></paper>