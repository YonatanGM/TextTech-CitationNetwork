<paper id="1508763736"><title>Using Reflection to Support Dynamic Adaptation of System Software: A Case Study Driven Evaluation</title><year>1999</year><authors><author org="*Trinity College, Dublin." id="2777926642">Jim Dowling</author><author org="*Trinity College, Dublin." id="2275747842">Tilman Sch√§fer</author><author org="*Trinity College, Dublin." id="1944145189">Vinny Cahill</author><author org="*Trinity College, Dublin." id="2362952266">Peter Haraszti</author><author org="*Trinity College, Dublin." id="2044153384">Barry Redmond</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>1554409865</reference><reference>1861383510</reference><reference>1977431221</reference><reference>2077562230</reference><reference>2108216688</reference><reference>2125680420</reference><reference>2137753370</reference><reference>2140654308</reference><reference>2156013704</reference></references><venue id="1138732554" type="C">Conference on Object-Oriented Programming Systems, Languages, and Applications</venue><doi>10.1007/3-540-45046-7_10</doi><keywords><keyword weight="0.51369">Resource management</keyword><keyword weight="0.56448">System software</keyword><keyword weight="0.56189">Middleware</keyword><keyword weight="0.51029">Object-oriented programming</keyword><keyword weight="0.47256">Software engineering</keyword><keyword weight="0.46688">Computer science</keyword><keyword weight="0.56701">Software design pattern</keyword><keyword weight="0.52251">Software</keyword><keyword weight="0.52839">Software architecture</keyword><keyword weight="0.4543">Database</keyword><keyword weight="0.58811">Software development</keyword><keyword weight="0.46575">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A number of researchers have recently suggested the use of reflection as a means of supporting dynamic adaptation of object-oriented software especially systems software including both middleware and operating systems. In order to evaluate the use of reflection in this context we have implemented a resource manager that can be adapted to use different resource management strategies on behalf of its clients using three distinct technologies: design patterns, dynamic link libraries, and reflection. In this paper we report on this experiment and compare the three approaches under performance, ability to separate functional code from code concerned with adaptation, and programming effort. We conclude that although the overhead of using reflection may be high, reflection offers significant advantages in terms of the ability to separate functional and adaptation code.</abstract></paper>