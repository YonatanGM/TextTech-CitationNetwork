<paper id="1910503282"><title>Architecture-Centric Software Development Based on Extended Design Spaces</title><year>1998</year><authors><author org="Univ. of Kaiserslautern#TAB#" id="2055776088">Lothar Baum</author><author org="Univ. of Kaiserslautern#TAB#" id="2101496528">Lars Geyer</author><author org="Univ. of Kaiserslautern#TAB#" id="2017429442">Georg Molter</author><author org=" University of Trier" id="251674474">Steffen Rothkugel</author><author org=" University of Trier" id="2942271224">Peter Sturm</author></authors><n_citation>15</n_citation><doc_type>Journal</doc_type><references><reference>124025979</reference><reference>205741818</reference><reference>1550925250</reference><reference>2030150828</reference><reference>2052982904</reference><reference>2069234241</reference><reference>2070310954</reference><reference>2077318760</reference><reference>2096973649</reference><reference>2106632203</reference><reference>2111164171</reference><reference>2124876378</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-68383-6_28</doi><keywords><keyword weight="0.64741">Software design</keyword><keyword weight="0.48062">Software engineering</keyword><keyword weight="0.65127">Software design description</keyword><keyword weight="0.46611">Computer science</keyword><keyword weight="0.42624">Simulation</keyword><keyword weight="0.64292">Package development process</keyword><keyword weight="0.65701">Resource-oriented architecture</keyword><keyword weight="0.6794">Software construction</keyword><keyword weight="0.65625">Architectural pattern</keyword><keyword weight="0.6595">Software development</keyword><keyword weight="0.65786">Software framework</keyword><keyword weight="0.4637">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>The realization of software projects can be significantly eased by extending the focus of reuse to architectural aspects instead of concentrating on separate software elements. Yet in any case, operational techniques are required to support the retrieval and selection of reusable items. To this end, we extend on the concept of design spaces which allows to describe the relevant properties of software elements in a semi-formal way. Moreover, we show how the concept of extended design spaces can be deployed in tools supporting component-and framework-based software development.</abstract></paper>