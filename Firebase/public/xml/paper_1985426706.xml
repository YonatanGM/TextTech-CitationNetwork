<paper id="1985426706"><title>A Framework for Generating Distributed-Memory Parallel Programs for Block Recursive Algorithms</title><year>1986</year><authors><author org="Department of Computer Science, Duke University, Durham, North Carolina#TAB#" id="2147421545">S.K.S. Gupta</author><author org="Department of Computer and Information Science, The Ohio State University, Columbus, Ohio" id="2286403301">C.-H. Huang</author><author org="Department of Computer and Information Science, The Ohio State University, Columbus, Ohio" id="1966094299">P. Sadayappan</author><author org="Department of Computer Science, St. Cloud State University, St. Cloud, Minnesota" id="2974028225">R.W. Johnson</author></authors><n_citation>22</n_citation><doc_type>Journal</doc_type><references><reference>117986637</reference><reference>1692686251</reference><reference>2023195086</reference><reference>2041351581</reference><reference>2048332769</reference><reference>2084248338</reference><reference>2089086379</reference><reference>2090731375</reference><reference>2094711531</reference><reference>2143377704</reference><reference>2153329411</reference><reference>2155166680</reference><reference>2169884383</reference><reference>2181107873</reference></references><venue id="157146593" type="J">Journal of Parallel and Distributed Computing</venue><doi>10.1006/jpdc.1996.0051</doi><keywords><keyword weight="0.46142">Computer science</keyword><keyword weight="0.4758">Theoretical computer science</keyword><keyword weight="0.49741">Recursion</keyword><keyword weight="0.46208">Distributed computing</keyword><keyword weight="0.49155">Kronecker delta</keyword><keyword weight="0.52389">Shared memory</keyword><keyword weight="0.53889">Parallel algorithm</keyword><keyword weight="0.47729">Parallel computing</keyword><keyword weight="0.51469">Distributed memory</keyword><keyword weight="0.47569">Algorithm</keyword><keyword weight="0.53174">Fast Fourier transform</keyword><keyword weight="0.56839">Strassen algorithm</keyword><keyword weight="0.55579">Matrix multiplication</keyword></keywords><publisher>Academic Press, Inc.</publisher><abstract>A framework for synthesizing communication-efficient distributed-memory parallel programs for block recursive algorithms such as the fast Fourier transform (FFT) and Strassenu0027s matrix multiplication is presented. This framework is based on an algebraic representation of the algorithms, which involves the tensor (Kronecker) product and other matrix operations. This representation is useful in analyzing the communication implications of computation partitioning and data distributions. The programs are synthesized under two different target program models. These two models are based on different ways of managing the distribution of data for optimizing communication. The first model uses point-to-point interprocessor communication primitives, whereas the second model uses data redistribution primitives involving collective all-to-many communication. These two program models are shown to be suitable for different ranges of problem size. The methodology is illustrated by synthesizing communication-efficient programs for the FFT. This framework has been incorporated into the EXTENT system for automatic generation of parallel/vector programs for block recursive algorithms.</abstract></paper>