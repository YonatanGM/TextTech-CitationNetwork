<paper id="105601597"><title>Security Considerations for Peer-to-Peer Distributed Hash Tables</title><year>2002</year><authors><author org="mit" id="2005445772">Emil Sit</author><author org="mit" id="2112752255">Robert Morris</author></authors><n_citation>393</n_citation><doc_type>Conference</doc_type><references><reference>1829786294</reference><reference>2110158792</reference><reference>2118428193</reference><reference>2123820820</reference><reference>2129437800</reference><reference>2143351500</reference><reference>2150676586</reference><reference>2158049821</reference><reference>2163059190</reference><reference>2163674653</reference><reference>2167898414</reference></references><venue id="1148841353" type="C">International Workshop on Peer-to-Peer Systems</venue><doi>10.1007/3-540-45748-8_25</doi><keywords><keyword weight="0.0">Design elements and principles</keyword><keyword weight="0.46846">Complex system</keyword><keyword weight="0.52132">Peer-to-peer</keyword><keyword weight="0.0">Network routing</keyword><keyword weight="0.4735">Computer science</keyword><keyword weight="0.46441">Computer network</keyword><keyword weight="0.65444">Hash function</keyword><keyword weight="0.58185">Hash table</keyword><keyword weight="0.46624">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Recent peer-to-peer research has focused on providing efficient hash lookup systems that can be used to build more complex systems. These systems have good properties when their algorithms are executed correctly but have not generally considered how to handle misbehaving nodes. This paper looks at what sorts of security problems are inherent in large peer-to-peer systems based on distributed hash lookup systems. We examine the types of problems that such systems might face, drawing examples from existing systems, and propose some design principles for detecting and preventing these problems.</abstract></paper>