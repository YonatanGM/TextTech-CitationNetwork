<paper id="1597956772"><title>On the difficulty of software key escrow</title><year>1996</year><authors><author org="Katholieke Universiteit Leuven Belgium" id="2035224540">Lars R. Knudsen</author><author org="Cryptomathic, Denmark#TAB#" id="2806998957">Torben P. Pedersen</author></authors><n_citation>18</n_citation><doc_type>Conference</doc_type><references><reference>2108834246</reference><reference>2156186849</reference><reference>2157075838</reference></references><venue id="1140213147" type="C">Theory and Application of Cryptographic Techniques</venue><doi>10.1007/3-540-68339-9_21</doi><keywords><keyword weight="0.60939">Key distribution</keyword><keyword weight="0.46452">Computer science</keyword><keyword weight="0.46824">Computer security</keyword><keyword weight="0.54726">Encryption</keyword><keyword weight="0.48528">Software</keyword><keyword weight="0.66176">Key escrow</keyword><keyword weight="0.57642">Public-key cryptography</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>At Eurocryptu002795, Desmedt suggested a scheme which allows individuals to encrypt in such a way that the receiver can be traced by an authority having additional information. This paper shows that the proposed scheme does not have the required properties, by devising three non-specified protocols misleading the authority. We also discuss how to repair Desmedtu0027s scheme, such that our attacks are no longer possible. However, by allowing slightly more general, but absolutely realistic attacks also this improved system can be broken. In fact, we argue that software key escrow as proposed by Desmedt will be very hard to implement as it requires that the distributed public key can only be used in few, well-defincd systems. Furthermore, even if this is achieved, most applications to key distribution can be broken.</abstract></paper>