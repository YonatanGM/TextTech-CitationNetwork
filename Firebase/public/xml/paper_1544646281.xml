<paper id="1544646281"><title>Java Program Verification via a Hoare Logic with Abrupt Termination</title><year>2000</year><authors><author org="University of Nijmegen" id="2148094435">Marieke Huisman</author><author org="University of Nijmegen" id="2105127320">Bart Jacobs</author></authors><n_citation>111</n_citation><doc_type>Conference</doc_type><references><reference>101802158</reference><reference>1507766766</reference><reference>1530632793</reference><reference>1533109738</reference><reference>1541380194</reference><reference>1573258001</reference><reference>1627776297</reference><reference>1644882639</reference><reference>1659048632</reference><reference>1783835563</reference><reference>1918806322</reference><reference>1975551945</reference><reference>2057835515</reference><reference>2094160561</reference><reference>2097185397</reference><reference>2104506944</reference><reference>2111619838</reference><reference>2113486906</reference><reference>2126097181</reference><reference>2131664385</reference><reference>2131700069</reference><reference>2142018213</reference><reference>2147543351</reference><reference>2569787747</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-46428-X_20</doi><keywords><keyword weight="0.63305">Separation logic</keyword><keyword weight="0.62209">Axiomatic semantics</keyword><keyword weight="0.44414">Programming language</keyword><keyword weight="0.4198">Computer science</keyword><keyword weight="0.65326">Hoare logic</keyword><keyword weight="0.49675">Imperative programming</keyword><keyword weight="0.42353">Theoretical computer science</keyword><keyword weight="0.49495">While loop</keyword><keyword weight="0.52">Logic programming</keyword><keyword weight="0.59311">Java Modeling Language</keyword><keyword weight="0.49538">Java</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper formalises a semantics for statements and expressions (in sequential imperative languages) which includes non-termination, normal termination and abrupt termination (e.g. because of an exception, break, return or continue). This extends the traditional semantics underlying e.g. Hoare logic, which only distinguishes termination and non-termination. An extension of Hoare logic is elaborated that includes means for reasoning about abrupt termination (and side-effects). It prominently involves rules for reasoning about while loops, which may contain exceptions, breaks, continues and returns. This extension applies in particular to Java. As an example, a standard pattern search algorithm in Java (involving a while loop with returns) is proven correct using the proof-tool PVS.</abstract></paper>