<paper id="1549128618"><title>Aspect-Oriented Logic Meta Programming</title><year>1999</year><authors><author org="Vrije Universiteit Brussel" id="2952585542">Kris De Volder</author><author org="Vrije Universiteit Brussel" id="2018012834">Theo D'Hondt</author></authors><n_citation>70</n_citation><doc_type>Journal</doc_type><references><reference>84258820</reference><reference>1479857163</reference><reference>1490997606</reference><reference>1550435668</reference><reference>1590740917</reference><reference>1621114820</reference><reference>1626106834</reference><reference>1934235886</reference><reference>1976879398</reference><reference>1980471701</reference><reference>2025590657</reference><reference>2078434561</reference><reference>2096187766</reference><reference>2138363365</reference><reference>2152834103</reference><reference>2155024699</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-48443-4_22</doi><keywords><keyword weight="0.67141">Functional logic programming</keyword><keyword weight="0.61296">Fifth-generation programming language</keyword><keyword weight="0.48042">Programming language</keyword><keyword weight="0.61716">Horn clause</keyword><keyword weight="0.6232">Programming paradigm</keyword><keyword weight="0.46973">Computer science</keyword><keyword weight="0.63097">Inductive programming</keyword><keyword weight="0.6206">First-generation programming language</keyword><keyword weight="0.66895">Logic programming</keyword><keyword weight="0.62347">Programming domain</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We propose to use a logic meta-system as a general framework for aspect-oriented programming. We illustrate our approach with the implementation of a simplified version of the cool aspect language for expressing synchronization of Java programs. Using this case as an example we illustrate the principle of aspect-oriented logic meta programming and how it is useful for implementing weavers on the one hand and on the other hand also allows users of aop to fine-tune, extend and adapt an aspect language to their specific needs.</abstract></paper>