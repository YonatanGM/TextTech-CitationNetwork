<paper id="1985454260"><title>TCP congestion control with a misbehaving receiver</title><year>1999</year><authors><author org="University of Washington-Seattle," id="2171030022">Stefan Savage</author><author org="University of Washington-Seattle," id="2126418785">Neal Cardwell</author><author org="University of Washington-Seattle," id="2064270007">David Wetherall</author><author org="University of Washington-Seattle," id="2148869393">Tom Anderson</author></authors><n_citation>203</n_citation><doc_type>Conference</doc_type><references><reference>1627919342</reference><reference>1714781699</reference><reference>1779735989</reference><reference>1995173604</reference><reference>2023427800</reference><reference>2046727832</reference><reference>2097913369</reference><reference>2121667323</reference><reference>2126880366</reference><reference>2133671968</reference><reference>2140471436</reference><reference>2144601611</reference><reference>2161334035</reference><reference>2753542457</reference></references><venue id="1152462849" type="C">ACM Special Interest Group on Data Communication</venue><doi>10.1145/505696.505704</doi><keywords><keyword weight="0.61919">TCP Westwood plus</keyword><keyword weight="0.40997">Computer science</keyword><keyword weight="0.41466">Computer security</keyword><keyword weight="0.43529">Computer network</keyword><keyword weight="0.60492">Transmission Control Protocol</keyword><keyword weight="0.61872">Zeta-TCP</keyword><keyword weight="0.6375">TCP acceleration</keyword><keyword weight="0.6244">TCP tuning</keyword><keyword weight="0.6527">TCP Friendly Rate Control</keyword><keyword weight="0.66102">TCP global synchronization</keyword><keyword weight="0.61517">HSTCP</keyword><keyword weight="0.42228">Distributed computing</keyword></keywords><publisher>ACM</publisher><abstract>In this paper, we explore the operation of TCP congestion control when the receiver can misbehave, as might occur with a greedy Web client. We first demonstrate that there are simple attacks that allow a misbehaving receiver to drive a standard TCP sender arbitrarily fast, without losing end-to-end reliability. These attacks are widely applicable because they stem from the sender behavior specified in RFC 2581 rather than implementation bugs. We then show that it is possible to modify TCP to eliminate this undesirable behavior entirely, without requiring assumptions of any kind about receiver behavior. This is a strong result: with our solution a receiver can only reduce the data transfer rate by misbehaving, thereby eliminating the incentive to do so.</abstract></paper>