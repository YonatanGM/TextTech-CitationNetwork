<paper id="1969118259"><title>A conceptual model of cognitive complexity of elements of the programming process</title><year>1995</year><authors><author org="School of Information Systems, University of New South Wales, P.O. Box 1, Kensington, New South Wales 2033 U.K." id="2396782494">SN Cant</author><author org="School of Information Systems, University of New South Wales, P.O. Box 1, Kensington, New South Wales 2033 U.K." id="2640486762">Jeffery</author><author org="School of Information Systems, University of New South Wales, P.O. Box 1, Kensington, New South Wales 2033 U.K." id="452259182">B Henderson-Sellers</author></authors><n_citation>80</n_citation><doc_type>Journal</doc_type><references><reference>43406559</reference><reference>590961618</reference><reference>1497388113</reference><reference>1608590154</reference><reference>1735280056</reference><reference>1964962870</reference><reference>1966460148</reference><reference>1969215739</reference><reference>1976344771</reference><reference>1976511128</reference><reference>1989935340</reference><reference>1995258570</reference><reference>1997941062</reference><reference>1997949427</reference><reference>1998407312</reference><reference>2004065351</reference><reference>2004830196</reference><reference>2007201275</reference><reference>2013210184</reference><reference>2016823619</reference><reference>2018912833</reference><reference>2020151262</reference><reference>2025043404</reference><reference>2029682038</reference><reference>2030419700</reference><reference>2032221556</reference><reference>2036983429</reference><reference>2038214150</reference><reference>2039603939</reference><reference>2042129356</reference><reference>2051174844</reference><reference>2058100898</reference><reference>2059330801</reference><reference>2061237339</reference><reference>2068483578</reference><reference>2069355638</reference><reference>2069478742</reference><reference>2077450684</reference><reference>2082205765</reference><reference>2082922085</reference><reference>2083695969</reference><reference>2087945583</reference><reference>2100196607</reference><reference>2100376445</reference><reference>2100479995</reference><reference>2108265600</reference><reference>2110621571</reference><reference>2110762996</reference><reference>2122000464</reference><reference>2123448920</reference><reference>2127409400</reference><reference>2130332717</reference><reference>2131578189</reference><reference>2133247167</reference><reference>2135093973</reference><reference>2137816760</reference><reference>2139506929</reference><reference>2142526507</reference><reference>2148423957</reference><reference>2151205503</reference><reference>2158335989</reference><reference>2167422972</reference><reference>2170699450</reference><reference>2293624369</reference></references><venue id="205010575" type="J">Information &amp; Software Technology</venue><doi>10.1016/0950-5849(95)91491-H</doi><keywords><keyword weight="0.4522">Systems engineering</keyword><keyword weight="0.53213">Conceptual model</keyword><keyword weight="0.46477">Computer science</keyword><keyword weight="0.57149">Cognitive complexity</keyword><keyword weight="0.54221">Software system</keyword><keyword weight="0.52637">Chunking (psychology)</keyword><keyword weight="0.57381">Software construction</keyword><keyword weight="0.51395">Conceptual framework</keyword><keyword weight="0.58174">Software development</keyword><keyword weight="0.5384">Debugging</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract A new approach to complexity metrics is described based not on empirical analysis of the final product, viz. the code, but on an understanding of the cognitive processes of the analyst or programmer as they approach and undertake the challenges of program development, modification and debugging. The resulting metric, the Cognitive Complexity Model, involves quantification of a number of cognitive processes, focused on descriptions of comprehension resulting from the twin processes of ‘chunking’ and ‘tracing’ used by software developers in an attempt to reach a cognition of a software system at the code level. A conceptual framework is given as well as some illustrative indicators of likely component measures together with areas needing further research.</abstract></paper>