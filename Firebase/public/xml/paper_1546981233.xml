<paper id="1546981233"><title>From use cases to system operation specifications</title><year>2000</year><authors><author org="Swiss Federal Institute of Technology Lausanne, Department of Computer Science, Software Engineering Laboratory, Lausanne EPFL, Switzerland#TAB#" id="146296462">Shane Sendall</author><author org="Swiss Federal Institute of Technology Lausanne, Department of Computer Science, Software Engineering Laboratory, Lausanne EPFL, Switzerland#TAB#" id="1830595871">Alfred Strohmeier</author></authors><n_citation>40</n_citation><doc_type>Journal</doc_type><references><reference>1543262385</reference><reference>1543667518</reference><reference>1970495662</reference><reference>1998017916</reference><reference>2294861651</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-40011-7_1</doi><keywords><keyword weight="0.57523">Specification language</keyword><keyword weight="0.46784">Programming language</keyword><keyword weight="0.53638">Use case</keyword><keyword weight="0.52452">Unified Modeling Language</keyword><keyword weight="0.48791">Object-oriented programming</keyword><keyword weight="0.45778">Computer science</keyword><keyword weight="0.42718">Granularity</keyword><keyword weight="0.61409">Object Constraint Language</keyword><keyword weight="0.47143">Schema (psychology)</keyword><keyword weight="0.48763">Software development</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The purpose of this paper is to first showcase the concept of an operation schema a precise form of system-level operation specification and secondly show how operation schemas enhance development when they are used as a supplement to use case descriptions. An operation schema declaratively describes the effects of a system operation by pre- and postconditions using the Object Constraint Language (OCL), as defined by the Unified Modeling Language (UML). In particular, the paper highlights techniques to map use cases to operation schemas and discusses the advantages of doing so in terms of clarifying the granularity and purpose of use cases and providing a precise specification of system behavior.</abstract></paper>