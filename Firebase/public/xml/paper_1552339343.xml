<paper id="1552339343"><title>Compiler Reduction of Invalidation Traffic in Virtual Shared Memory Systems</title><year>1996</year><authors><author org="Umist" id="1998751379">Michael F. P. O'Boyle</author><author org="University of Manchester" id="2117824457">Rupert W. Ford</author><author org="University of Manchester" id="2941059017">Andy Nisbet</author></authors><n_citation>67</n_citation><doc_type>Conference</doc_type><references><reference>51420359</reference><reference>1482605929</reference><reference>1491790529</reference><reference>1985055327</reference><reference>2004578231</reference><reference>2066691060</reference><reference>2068526133</reference><reference>2081644593</reference><reference>2119532564</reference></references><venue id="1163264588" type="C">European Conference on Parallel Processing</venue><doi>10.1007/3-540-61626-8_58</doi><keywords><keyword weight="0.53928">Shared memory</keyword><keyword weight="0.45254">Computer science</keyword><keyword weight="0.46224">Parallel computing</keyword><keyword weight="0.55815">Memory ordering</keyword><keyword weight="0.53678">Distributed memory</keyword><keyword weight="0.54301">Compiler</keyword><keyword weight="0.55866">Data diffusion machine</keyword><keyword weight="0.53767">Memory management</keyword><keyword weight="0.53821">Execution model</keyword><keyword weight="0.57607">Distributed shared memory</keyword><keyword weight="0.45798">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents new compiler analysis for the elimination of invalidation traffic in virtual shared memory, using a hybrid distributed invalidation coherence scheme. The invalidation and acknowledgement messages are removed; this reduces both network invalidation traffic and the latency of a write fault. It aggressively exploits the SPMD execution model and uses array section analysis to accurately determine only those instances when invalidation is necessary, thus avoiding the additional read misses of previous schemes. Equations determining precisely what data should be invalidated are presented and translated into a form amenable to compiler analysis. Preliminary experimental results on a 30 node prototype architecture demonstrate the performance attainable using this scheme.</abstract></paper>