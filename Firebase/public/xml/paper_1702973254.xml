<paper id="1702973254"><title>Fixed priority scheduling periodic tasks with varying execution priority</title><year>1991</year><authors><author org="Dept. de Electron., Cantabria Univ., Santander, Spain" id="2088262011">M.G. Harbour</author><author org="" id="2713055929">M.H. Klein</author><author org="" id="2974494059">J.P. Lehoczky</author></authors><n_citation>167</n_citation><doc_type>Conference</doc_type><references><reference>1578961151</reference><reference>1905332030</reference><reference>2010894613</reference><reference>2039403325</reference><reference>2064207294</reference><reference>2109488193</reference><reference>2145132630</reference><reference>2160293203</reference><reference>2169031192</reference><reference>2169147056</reference></references><venue id="1124527938" type="C">Real-Time Systems Symposium</venue><doi>10.1109/REAL.1991.160365</doi><keywords><keyword weight="0.70224">Priority ceiling protocol</keyword><keyword weight="0.47292">Synchronization</keyword><keyword weight="0.44588">Computer science</keyword><keyword weight="0.50288">Scheduling (computing)</keyword><keyword weight="0.44973">Parallel computing</keyword><keyword weight="0.71752">Deadline-monotonic scheduling</keyword><keyword weight="0.44582">Real-time computing</keyword><keyword weight="0.67913">Priority inversion</keyword><keyword weight="0.67256">Priority inheritance</keyword><keyword weight="0.65098">Dynamic priority scheduling</keyword><keyword weight="0.68818">Earliest deadline first scheduling</keyword><keyword weight="0.45218">Distributed computing</keyword></keywords><publisher>IEEE</publisher><abstract>The problem of fixed priority scheduling of periodic tasks where each tasku0027s execution priority may vary is considered. Periodic tasks are decomposed into serially executed subtasks, where each subtask is characterized by an execution time and a fixed priority and is permitted to have a deadline. A method for determining the schedulability of each task is presented along with its theoretical underpinnings. This method can be used to analyze the schedulability of complex task sets which involve interrupts, certain synchronization protocols, nonpreemptible sections and, in general, any mechanism that contributes to a complex priority structure. The authors introduce a simple but realistic real-time robotics application and illustrate how one uses the schedulability equations presented. u003e</abstract></paper>