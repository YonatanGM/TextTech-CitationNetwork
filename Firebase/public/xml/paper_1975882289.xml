<paper id="1975882289"><title>Protection in programming languages</title><year>1973</year><authors><author org="&quot;University of California, Berkeley&quot;" id="2101173072">James H. Morris</author></authors><n_citation>156</n_citation><doc_type>Journal</doc_type><references><reference>2109798037</reference><reference>2113350481</reference><reference>2134112335</reference><reference>2165986112</reference></references><venue id="103482838" type="J">Communications of The ACM</venue><doi>10.1145/361932.361937</doi><keywords><keyword weight="0.65581">Computer access control</keyword><keyword weight="0.46456">World Wide Web</keyword><keyword weight="0.44968">Programming language</keyword><keyword weight="0.53054">Authentication</keyword><keyword weight="0.46125">Computer science</keyword><keyword weight="0.47032">Computer security</keyword><keyword weight="0.49689">Secrecy</keyword><keyword weight="0.59889">Access control</keyword></keywords><publisher>ACM</publisher><abstract>Linguistic mechanisms which can be used to protect one subprogram from anotheru0027s malfunctioning are described. Function-producing functions and various type-tagging schemes are considered. An attempt is made to distinguish between access limitation and authentication.</abstract></paper>