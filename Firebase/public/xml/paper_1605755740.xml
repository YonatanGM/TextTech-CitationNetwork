<paper id="1605755740"><title>Multi-Action Process Algebra</title><year>1995</year><authors><author org="Université de Paris-Sud, LRI" id="2566157001">Wojciech Fraczak</author></authors><n_citation>2</n_citation><doc_type /><references><reference>1503456243</reference><reference>1503973138</reference><reference>1528519543</reference><reference>1604240241</reference><reference>1979462141</reference><reference>2001748564</reference><reference>2102097307</reference><reference>2103148887</reference><reference>2137865376</reference></references><venue id="" type="">ACSC '95 Proceedings of the 1995 Asian Computing Science Conference on Algorithms, Concurrency and Knowledge</venue><doi>10.1007/3-540-60688-2_40</doi><keywords><keyword weight="0.52057">Subalgebra</keyword><keyword weight="0.451">Algebra</keyword><keyword weight="0.48797">Combinatory logic</keyword><keyword weight="0.5351">Filtered algebra</keyword><keyword weight="0.5338">Cellular algebra</keyword><keyword weight="0.5062">Process calculus</keyword><keyword weight="0.46609">Congruence relation</keyword><keyword weight="0.53047">Simultaneity</keyword><keyword weight="0.39439">Mathematics</keyword><keyword weight="0.53802">Algebra representation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we propose a new process algebra based upon only three combinators: prefixing, composition, and restriction, but whose events (visible aspects of an evolution step) are structured as finite bags of actions. These structured events, called multi-actions, represent simultaneous execution of their actions and allow to handle the “simultaneity dependence” on events. This approach gives rise to a non trivial notion of communication channels, which parameterize composition and restriction operations. Multi-actions allow to avoid the “choice” as a primitive operation without loss of expressiveness of the algebra, which in turn ensures that all the defined equivalences are congruences.</abstract></paper>