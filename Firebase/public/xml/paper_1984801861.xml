<paper id="1984801861"><title>Refinement of actions and equivalence notions for concurrent systems</title><year>2001</year><authors><author org="Computer Science Department, Stanford University, Stanford, CA 94305-9045, USA (e-mail: rvg@cs.stanford.edu), US" id="2168271037">Rob van Glabbeek</author><author org="Institut für Informatik, Universität Hildesheim, Postfach 10 13 63, 31113 Hildesheim, Germany (e-mail: goltz@informatik.uni-hildesheim.de), DE" id="20849977">Ursula Goltz</author></authors><n_citation>210</n_citation><doc_type>Journal</doc_type><references><reference>27763718</reference><reference>30921532</reference><reference>122760469</reference><reference>140793526</reference><reference>183980248</reference><reference>274618036</reference><reference>1451198746</reference><reference>1494367567</reference><reference>1504590953</reference><reference>1507160831</reference><reference>1524031113</reference><reference>1548353879</reference><reference>1560779502</reference><reference>1565429054</reference><reference>1568442991</reference><reference>1571377821</reference><reference>1572904664</reference><reference>1578158424</reference><reference>1584463625</reference><reference>1587299948</reference><reference>1602232868</reference><reference>1608432125</reference><reference>1724419839</reference><reference>1755492414</reference><reference>1793309813</reference><reference>1885186328</reference><reference>1971253273</reference><reference>1978469611</reference><reference>1980926994</reference><reference>1981404622</reference><reference>1991052229</reference><reference>1998563363</reference><reference>2003499082</reference><reference>2008678428</reference><reference>2021173961</reference><reference>2039290601</reference><reference>2039389554</reference><reference>2043801088</reference><reference>2057403696</reference><reference>2061743024</reference><reference>2063465006</reference><reference>2070422211</reference><reference>2078105844</reference><reference>2095504289</reference><reference>2096241545</reference><reference>2098981343</reference><reference>2099404217</reference><reference>2102059747</reference><reference>2102097307</reference><reference>2110425399</reference><reference>2129402326</reference><reference>2140920629</reference><reference>2142919644</reference><reference>2144545266</reference><reference>2146485104</reference><reference>2148817888</reference><reference>2150320481</reference><reference>2157144873</reference><reference>2169194613</reference><reference>2179445399</reference><reference>2276107297</reference><reference>2468179198</reference><reference>2911550362</reference><reference>2912084748</reference><reference>2914421362</reference><reference>2914851216</reference></references><venue id="84409463" type="J">Acta Informatica</venue><doi>10.1007/s002360000041</doi><keywords><keyword weight="0.43118">Discrete mathematics</keyword><keyword weight="0.42327">Combinatorics</keyword><keyword weight="0.53098">Concurrency</keyword><keyword weight="0.50738">Deadlock</keyword><keyword weight="0.49687">Equivalence (measure theory)</keyword><keyword weight="0.48998">Invariant (mathematics)</keyword><keyword weight="0.52562">Bisimulation</keyword><keyword weight="0.48596">Operator (computer programming)</keyword><keyword weight="0.46449">Time complexity</keyword><keyword weight="0.40106">Mathematics</keyword><keyword weight="0.47175">Partially ordered set</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>We study an operator for refinement of actions to be used in the design of concurrent systems. Actions on a given level of abstraction are replaced by more complicated processes on a lower level. This is done in such a way that the behaviour of the refined system may be inferred compositionally from the behaviour of the original system and from the behaviour of the processes substituted for actions. We recall that interleaving models of concurrent systems are not suited for defining such an operator in its general form. Instead, we define this operator on several causality based, event oriented models, taking into account the distinction between deadlock and successful termination. Then we investigate the interplay of action refinement with abstraction in terms of equivalence notions for concurrent systems, considering both linear time and branching time approaches. We show that besides the interleaving equivalences, also the equivalences based on steps are not preserved under refinement of actions. We prove that linear time partial order semantics are invariant under refinement. Finally we consider various bisimulation equivalences based on partial orders and show that the finest two of them are preserved under refinement whereas the others are not. Termination sensitive versions of these equivalences are even congruences for action refinement.</abstract></paper>