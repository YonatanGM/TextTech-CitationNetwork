<paper id="1734979789"><title>Dynamic bin packing of unit fractions items</title><year>2005</year><authors><author org="Department of Computer Science, University of Hong Kong, Hong Kong" id="2079442930">Wun-Tat Chan</author><author org="Department of Computer Science, University of Hong Kong, Hong Kong" id="2110842241">Tak-Wah Lam</author><author org="Department of Computer Science, University of Liverpool, UK;" id="2148789325">Prudence W. H. Wong</author></authors><n_citation>8</n_citation><doc_type>Conference</doc_type><references><reference>1510501660</reference><reference>1549010977</reference><reference>1552828154</reference><reference>1975216035</reference><reference>1984027871</reference><reference>1987566992</reference><reference>1994442196</reference><reference>2001696621</reference><reference>2011039300</reference><reference>2037728500</reference><reference>2078659331</reference><reference>2088072844</reference><reference>2098128029</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/11523468_50</doi><keywords><keyword weight="0.48332">Integer</keyword><keyword weight="0.4468">Discrete mathematics</keyword><keyword weight="0.44799">Combinatorics</keyword><keyword weight="0.50857">Upper and lower bounds</keyword><keyword weight="0.50877">Unit fraction</keyword><keyword weight="0.0">Minimum time</keyword><keyword weight="0.65626">Bin packing problem</keyword><keyword weight="0.4232">Mathematics</keyword><keyword weight="0.53112">Competitive analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper studies the dynamic bin packing problem, in which items arrive and depart at arbitrary time. We want to pack a sequence of unit fractions items (i.e., items with sizes 1/w for some integer w â‰¥ 1) into unit-size bins such that the maximum number of bins used over all time is minimized. Tight and almost-tight performance bounds are found for the family of any-fit algorithms, including first-fit, best-fit, and worst-fit. We show that the competitive ratio of best-fit and worst-fit is 3, which is tight, and the competitive ratio of first-fit lies between 2.45 and 2.4985. We also show that no on-line algorithm is better than 2.428-competitive. This result improves the lower bound of dynamic bin packing problem even for general items.</abstract></paper>