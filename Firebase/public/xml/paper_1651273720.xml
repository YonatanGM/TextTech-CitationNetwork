<paper id="1651273720"><title>Realms: A Foundation for Spatial Data Types in Database Systems</title><year>1993</year><authors><author org="FernuniversitÄt Hagen" id="172506059">Ralf Hartmut Güting</author><author org="FernuniversitÄt Hagen" id="2146069521">Markus Schneider</author></authors><n_citation>72</n_citation><doc_type /><references><reference>29157314</reference><reference>1486187394</reference><reference>1560538750</reference><reference>1562735428</reference><reference>1603382969</reference><reference>1874694348</reference><reference>1987099710</reference><reference>2000654499</reference><reference>2015612071</reference><reference>2023538518</reference><reference>2030844359</reference><reference>2047175801</reference><reference>2085827136</reference><reference>2086916990</reference><reference>2110867479</reference><reference>2118269922</reference><reference>2166087176</reference><reference>2169056238</reference></references><venue id="" type="">SSD '93 Proceedings of the Third International Symposium on Advances in Spatial Databases</venue><doi>10.1007/3-540-56869-7_2</doi><keywords><keyword weight="0.51792">Spatial analysis</keyword><keyword weight="0.54065">Database model</keyword><keyword weight="0.52902">Set operations</keyword><keyword weight="0.45471">Computer science</keyword><keyword weight="0.55557">Database design</keyword><keyword weight="0.46796">Theoretical computer science</keyword><keyword weight="0.5083">Data type</keyword><keyword weight="0.58648">Object-based spatial database</keyword><keyword weight="0.53584">Data model</keyword><keyword weight="0.61711">Spatial database</keyword><keyword weight="0.43135">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Spatial data types or algebras for database systems should (i) be fully general (which means, closed under set operations, hence e.g. a region value can be a set of polygons with holes), (ii) have formally defined semantics, (iii) be defined in terms of finite representations available in computers, (iv) offer facilities to enforce geometric consistency of related spatial objects, and (v) be independent of a particular DBMS data model, but cooperate with any. We offer such a definition in two papers. The central idea, introduced in this (first) paper, is to use realms as geometric domains underlying spatial data types. A realm as a general database concept is a finite, dynamic, user-defined structure underlying one or more system data types. A geometric realm defined here is a planar graph over a finite resolution grid. Problems of numerical robustness and topological correctness are solved below and within the realm layer so that spatial algebras defined above a realm enjoy very nice algebraic properties. Realms also interact with a DBMS to enforce geometric consistency on object creation or update.</abstract></paper>