<paper id="1984958950"><title>Automatic verification of database transaction safety</title><year>1989</year><authors><author org="University of Massachusetts-Amherst" id="2579668299">Tim Sheard</author><author org="University of Massachusetts-Amherst" id="2170832848">David Stemple</author></authors><n_citation>117</n_citation><doc_type>Journal</doc_type><references><reference>1515968026</reference><reference>1590828018</reference><reference>1853643178</reference><reference>2005973420</reference><reference>2028074529</reference><reference>2031127972</reference><reference>2031448219</reference><reference>2060531066</reference><reference>2061850638</reference><reference>2073186727</reference><reference>2081251433</reference><reference>2095182415</reference><reference>2096531311</reference><reference>2111706174</reference><reference>2112055472</reference><reference>2130681969</reference><reference>2146998551</reference><reference>2152036154</reference></references><venue id="90119964" type="J">ACM Transactions on Database Systems</venue><doi>10.1145/68012.68014</doi><keywords><keyword weight="0.6325">Transaction processing</keyword><keyword weight="0.46168">Computer science</keyword><keyword weight="0.63726">Online transaction processing</keyword><keyword weight="0.64854">Database schema</keyword><keyword weight="0.66163">Consistency (database systems)</keyword><keyword weight="0.65988">Database transaction</keyword><keyword weight="0.63219">Rollback</keyword><keyword weight="0.64931">Distributed transaction</keyword><keyword weight="0.62668">Transaction processing system</keyword><keyword weight="0.46146">Database</keyword></keywords><publisher>ACM</publisher><abstract>Maintaining the integrity of databases is one of the promises of database management systems. This includes assuring that integrity constraints are invariants of database transactions. This is very difficult to accomplish efficiently in the presence of complex constraints and large amounts of data. One way to minimize the amount of processing required to maintain database integrity over transaction processing is to prove at compile-time that transactions cannot, if run atomically, disobey integrity constraints. We report on a system that performs such verification for a robust set of constraint and transaction classes. The system accepts database schemas written in a more or less traditional style and accepts programs in a high-level programming language. Automatic verification fast enough to be effective on current workstation hardware is performed.</abstract></paper>