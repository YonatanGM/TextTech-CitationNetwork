<paper id="1532639618"><title>Modular System Design Applying Graph Grammars Techniques</title><year>1989</year><authors><author org="Universita' degli Studi â€” L'Aquila" id="2986026963">Francesco Parisi-Presicce</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>1487123027</reference><reference>1508002722</reference><reference>1522209613</reference><reference>1541153481</reference><reference>1551368431</reference><reference>1574796876</reference><reference>1590835706</reference><reference>1756661417</reference><reference>1963498955</reference><reference>1965970196</reference><reference>1967975156</reference><reference>2000825654</reference><reference>2035301332</reference><reference>2041356625</reference><reference>2536118580</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0035788</doi><keywords><keyword weight="0.578">Modular decomposition</keyword><keyword weight="0.41783">Combinatorics</keyword><keyword weight="0.46604">Computer science</keyword><keyword weight="0.51482">Systems design</keyword><keyword weight="0.53411">Software system</keyword><keyword weight="0.46841">Theoretical computer science</keyword><keyword weight="0.51105">Data type</keyword><keyword weight="0.50783">Wait-for graph</keyword><keyword weight="0.57081">Graph rewriting</keyword><keyword weight="0.56709">Modular design</keyword><keyword weight="0.564">Graph (abstract data type)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we combine notions from the well known theory of algebraic graph grammars with the theory of large software system specifications based on modules. The intent is to tackle the problem of designing a modular system (if it exists) which realizes a given goal specification using a library of module specifications and a collection of "primitive" realized data type specifications. The interfaces of the module are treated as productions and direct derivations and operations on productions are converted into system design.</abstract></paper>