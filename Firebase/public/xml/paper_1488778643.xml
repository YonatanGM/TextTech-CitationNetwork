<paper id="1488778643"><title>Toupie = µ-Calculus + Constraints</title><year>1995</year><authors><author org="Université Bordeaux I" id="2498220235">Antoine Rauzy</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>1495704961</reference><reference>1580989609</reference><reference>1637976039</reference><reference>1970185999</reference><reference>1978469611</reference><reference>1988095917</reference><reference>1992006255</reference><reference>1998132813</reference><reference>2030224590</reference><reference>2080267935</reference><reference>2135453964</reference><reference>2137108108</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-60045-0_44</doi><keywords><keyword weight="0.45759">Timing diagram</keyword><keyword weight="0.47635">Finite set</keyword><keyword weight="0.44263">Computer science</keyword><keyword weight="0.50167">Binary decision diagram</keyword><keyword weight="0.46248">Theoretical computer science</keyword><keyword weight="0.47747">Finite-state machine</keyword><keyword weight="0.48867">Influence diagram</keyword><keyword weight="0.49642">Symbolic execution</keyword><keyword weight="0.50371">Solver</keyword><keyword weight="0.44954">Elementary diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents some of the features of the constraint language Toupie (version 0.26). Toupie is basically a μ-calculus intepreter. Variables takes their values in finite domains, i.e. finite sets of symbolic or numerical constants. Toupie integrates a solver for systems of linear inequations over finite domains and uses an extension of Bryantu0027s binary decision diagrams to encode relations. Combination of μ-calculus expressiveness, efficient coding and manipulation of relations through the use of n-ary decision diagrams and constraint solving technics make Toupie a powerfull tool to perform system of communicating processes analyses.</abstract></paper>