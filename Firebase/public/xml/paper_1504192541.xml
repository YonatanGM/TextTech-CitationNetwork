<paper id="1504192541"><title>Verification Using Uninterpreted Functions and Finite Instantiations</title><year>1996</year><authors><author org="" id="2135689897">Ramin Hojati</author><author org="" id="1999548822">Adrian J. Isles</author><author org="" id="2983538032">Desmond Kirkpatrick</author><author org="" id="2038038819">Robert K. Brayton</author></authors><n_citation>27</n_citation><doc_type>Conference</doc_type><references><reference>1494257722</reference><reference>1499323045</reference><reference>1555915743</reference><reference>1577772892</reference><reference>1741528175</reference><reference>1986558678</reference><reference>2006120207</reference><reference>2009653580</reference><reference>2010927194</reference><reference>2107916517</reference><reference>2116141893</reference><reference>2137331557</reference></references><venue id="1166230065" type="C">Formal Methods in Computer-Aided Design</venue><doi>10.1007/BFb0031810</doi><keywords><keyword weight="0.47867">Integer</keyword><keyword weight="0.4814">Datapath</keyword><keyword weight="0.4395">Of the form</keyword><keyword weight="0.43714">Computer science</keyword><keyword weight="0.52756">Correctness</keyword><keyword weight="0.45468">Theoretical computer science</keyword><keyword weight="0.51857">Reachability problem</keyword><keyword weight="0.44238">Reservation station</keyword><keyword weight="0.46821">Hardware description language</keyword><keyword weight="0.49407">Undecidable problem</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>One approach to address the state explosion problem in verification of microprocessors with wide datapaths is to model variables as integers and datapath functions as uninterpreted ones. Verification then proceeds by either symbolically simulating this abstract model, or creating a small finite instantiation which contains all possible behaviors. In this paper, we first prove that the reachability problem for models with uninterpreted functions and predicates only of the form x=y, where both x and y are integer variables, is undecidable. However, such predicates are generally only needed in the property being checked and not in the model. For properties involving predicates of the forms x=term and x=y, we provide complete and partial verification techniques using finite instantiations respectively. Applications of these result to the verification of the control circuitry of superscalar microprocessors are provided, where one can verify various correctness properties using models with one or a few bit integers.</abstract></paper>