<paper id="1600253083"><title>Testing and Tracing Lazy Functional Programs Using QuickCheck and Hat</title><year>2002</year><authors><author org="Chalmers University of Technology" id="540517650">Koen Claessen</author><author org="†University of York" id="711150104">Colin Runciman</author><author org="†University of York" id="301443495">Olaf Chitil</author><author org="Chalmers University of Technology" id="2776037189">John Hughes</author><author org="†University of York" id="2464682470">Malcolm Wallace</author></authors><n_citation>26</n_citation><doc_type /><references><reference>1490584728</reference><reference>1511173062</reference><reference>1743041603</reference><reference>1841915623</reference><reference>1980818933</reference><reference>2071112258</reference><reference>2119717320</reference><reference>2163915218</reference><reference>2491270812</reference></references><venue id="" type="">International School on Advanced Functional Programming</venue><doi>10.1007/978-3-540-44833-4_3</doi><keywords><keyword weight="0.51525">Functional reactive programming</keyword><keyword weight="0.52631">Functional logic programming</keyword><keyword weight="0.43711">Programming language</keyword><keyword weight="0.51001">Programming paradigm</keyword><keyword weight="0.43269">Computer science</keyword><keyword weight="0.51592">Reactive programming</keyword><keyword weight="0.51314">Strict programming language</keyword><keyword weight="0.50652">Declarative programming</keyword><keyword weight="0.51267">Higher-order programming</keyword><keyword weight="0.53153">Programming language implementation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>It is a very undesirable situation that today’s software often contains errors. One motivation for using a functional programming language is that it is more difficult (or even impossible) to make low-level mistakes, and it is easier to reason about programs. But even the most advanced functional programmers are not infallible; they misunderstand the properties of their own programs, or those of others, and so commit errors.</abstract></paper>