<paper id="1979726029"><title>Storing a sparse table with O(1) worst case access time</title><year>1982</year><authors><author org="" id="2571260672">Michael L. Fredman</author><author org="" id="2056463664">Janos Komlos</author><author org="" id="2138667172">Endre Szemeredi</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>1993022201</reference><reference>2034428381</reference><reference>2051049045</reference><reference>2084325555</reference></references><venue id="1150208541" type="C">Foundations of Computer Science</venue><doi>10.1109/SFCS.1982.89</doi><keywords><keyword weight="0.43821">Discrete mathematics</keyword><keyword weight="0.52583">Data structure</keyword><keyword weight="0.43667">Combinatorics</keyword><keyword weight="0.48487">Algorithm design</keyword><keyword weight="0.44252">Polynomial</keyword><keyword weight="0.49794">Access time</keyword><keyword weight="0.42228">Computer science</keyword><keyword weight="0.4305">Block code</keyword><keyword weight="0.43858">Theoretical computer science</keyword><keyword weight="0.4359">Memory management</keyword><keyword weight="0.42138">Computer-aided software engineering</keyword></keywords><publisher>IEEE</publisher><abstract>We describe a data structure for representing a set of n items from a universe of m items, which uses space n+o(n) and accommodates membership queries in constant time. Both the data structure and the query algorithm are easy to implement.</abstract></paper>