<paper id="1801905373"><title>Programming Language Specification and Prototyping Using the MAX System</title><year>1993</year><authors><author org="Cornell University;" id="2343845410">Arnd Poetzsch-Heffter</author></authors><n_citation>3</n_citation><doc_type>Conference</doc_type><references><reference>1505313788</reference><reference>1510094545</reference><reference>1535411527</reference><reference>1596741474</reference><reference>1966340850</reference><reference>1974588568</reference><reference>1980217707</reference><reference>2026098209</reference><reference>2031307565</reference><reference>2037005852</reference><reference>2063925147</reference><reference>2069543555</reference><reference>2080825531</reference><reference>2088604010</reference><reference>2089218800</reference><reference>2105505307</reference><reference>2109853339</reference><reference>2112478749</reference><reference>2165847992</reference><reference>2614279894</reference></references><venue id="2754504537" type="C">International Symposium on Programming Language Implementation and Logic Programming</venue><doi>10.1007/3-540-57186-8_76</doi><keywords><keyword weight="0.58661">Specification language</keyword><keyword weight="0.63587">Attribute grammar</keyword><keyword weight="0.47658">Programming language</keyword><keyword weight="0.58053">Programming language specification</keyword><keyword weight="0.46831">Computer science</keyword><keyword weight="0.6065">Abstract syntax tree</keyword><keyword weight="0.54029">Very high-level programming language</keyword><keyword weight="0.54178">High-level programming language</keyword><keyword weight="0.57128">Abstract syntax</keyword><keyword weight="0.53591">Low-level programming language</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper describes the MAX system, a tool for specification and prototyping of language processors. The MAX system is based on a first-order framework generalizing attribute grammar like frameworks. It allows to refer to syntax tree nodes and “distant” attribute occurrences. Attributes may have tree nodes as values, so that global relations between distant tree nodes can be expressed. This enables more compact and readable specifications for a wide class of complex problems. Within the presented framework, context conditions can be globally formulated by first-order predicate formulae.</abstract></paper>