<paper id="1981962444"><title>Region-based memory management in cyclone</title><year>2002</year><authors><author org="Cornell University, Ithaca -- NY" id="2241310076">Dan Grossman</author><author org="Cornell University, Ithaca -- NY" id="683339272">Greg Morrisett</author><author org="AT&amp;T Labs- Research, Florham Park, NJ" id="2090299724">Trevor Jim</author><author org="Cornell University, Ithaca -- NY" id="2130756752">Michael Hicks</author><author org="Cornell University, Ithaca -- NY" id="2134942087">Yanling Wang</author><author org="Cornell University, Ithaca -- NY" id="2109605623">James Cheney</author></authors><n_citation>297</n_citation><doc_type>Conference</doc_type><references><reference>46492264</reference><reference>1496940124</reference><reference>1602573351</reference><reference>1825457006</reference><reference>1973326708</reference><reference>1976499711</reference><reference>1998070736</reference><reference>2005192022</reference><reference>2005907808</reference><reference>2006638707</reference><reference>2007181618</reference><reference>2017416744</reference><reference>2038677544</reference><reference>2040070287</reference><reference>2053401988</reference><reference>2070111977</reference><reference>2074003683</reference><reference>2087466192</reference><reference>2087875803</reference><reference>2089139117</reference><reference>2104204098</reference><reference>2114771706</reference><reference>2118227920</reference><reference>2140611647</reference><reference>2151480972</reference><reference>2152432695</reference><reference>2163365446</reference><reference>2170800927</reference><reference>2294928125</reference></references><venue id="1127352206" type="C">Programming Language Design and Implementation</venue><doi>10.1145/512529.512563</doi><keywords><keyword weight="0.48296">Metaprogramming</keyword><keyword weight="0.45447">Programming language</keyword><keyword weight="0.47381">External Data Representation</keyword><keyword weight="0.44656">Computer science</keyword><keyword weight="0.52887">Type inference</keyword><keyword weight="0.53939">Memory management</keyword><keyword weight="0.55287">Garbage collection</keyword><keyword weight="0.47127">Porting</keyword><keyword weight="0.46418">Macro</keyword><keyword weight="0.6265">Region-based memory management</keyword></keywords><publisher>ACM</publisher><abstract>Cyclone is a type-safe programming language derived from C. The primary design goal of Cyclone is to let programmers control data representation and memory management without sacrificing type-safety. In this paper, we focus on the region-based memory management of Cyclone and its static typing discipline. The design incorporates several advancements, including support for region subtyping and a coherent integration with stack allocation and a garbage collector. To support separate compilation, Cyclone requires programmers to write some explicit region annotations, but a combination of default annotations, local type inference, and a novel treatment of region effects reduces this burden. As a result, we integrate C idioms in a region-based framework. In our experience, porting legacy C to Cyclone has required altering about 8% of the code; of the changes, only 6% (of the 8%) were region annotations.</abstract></paper>