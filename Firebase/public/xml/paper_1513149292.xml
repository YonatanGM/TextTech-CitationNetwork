<paper id="1513149292"><title>MCTL - An Extension of CTL for Modular Verification of Concurrent Systems</title><year>1987</year><authors><author org="University of Oldenburg ," id="2050131096">Bernhard Josko</author></authors><n_citation>16</n_citation><doc_type /><references><reference>7710831</reference><reference>1487373862</reference><reference>1504706001</reference><reference>1607877490</reference><reference>1666015432</reference><reference>2003227046</reference><reference>2004306067</reference><reference>2042087007</reference><reference>2067441543</reference><reference>2080641824</reference></references><venue id="" type="">Temporal Logic in Specification</venue><doi>10.1007/3-540-51803-7_25</doi><keywords><keyword weight="0.69961">Computation tree logic</keyword><keyword weight="0.57206">Functional verification</keyword><keyword weight="0.57618">Model checking</keyword><keyword weight="0.46297">Programming language</keyword><keyword weight="0.54251">Intelligent verification</keyword><keyword weight="0.44979">Computer science</keyword><keyword weight="0.53225">Description logic</keyword><keyword weight="0.45601">Theoretical computer science</keyword><keyword weight="0.55625">Temporal logic</keyword><keyword weight="0.58793">High-level verification</keyword><keyword weight="0.55406">CTL*</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We are interested in modular specification and verification of digital circuits. Hence we asked for an appropriate description logic. In [MC85,BCDM85] the temporal logic CTL has successfully been used to verify some circuits. This logic was choosen as it has a linear model checking algorithm, and thus proving specifications in models consisting of hundreds or thousands of states can be done efficiently. But, unfortunately, CTL does not support modular specification and verification. As other logics as CTL* or PTL, which are suitable for modular verification, have exponential model checking algorithms we looked for an extension of CTL which allows modular specifications and whose model checking algorithm is faster than that of CTL*. In this paper we present such a logic, called MCTL. Formulae of MCTL are given by two parts, one describing a property of a module — this is done by a CTL formula — and one describing some assumptions on the environment — this is done by a special kind of path formulae. The interpretation of such a formula is in such a way that the assumptions restrict the paths which are relevant for the path quantifiers in the CTL formula. We show how this logic can be used in a modular verification system using proof principles given in [Pn85].</abstract></paper>