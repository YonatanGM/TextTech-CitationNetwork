<paper id="1968655270"><title>Poems: end-to-end performance design of large parallel adaptive computational systems</title><year>1998</year><authors><author org="" id="220773886">Ewa Deelman</author><author org="" id="2974700312">Aditya Dube</author><author org="" id="259292195">Adolfy Hoisie</author><author org="" id="2149174043">Yong Luo</author><author org="" id="2235810699">Richard L. Oliver</author><author org="" id="1996195565">David Sundaram-Stukel</author><author org="" id="2508012910">Harvey Wasserman</author><author org="" id="1990061224">Vikram S. Adve</author><author org="" id="2293596591">Rajive Bagrodia</author><author org="" id="2104477647">James C. Browne</author><author org="" id="271170014">Elias Houstis</author><author org="" id="307715464">Olaf Lubeck</author><author org="" id="2119205101">John Rice</author><author org="" id="618576870">Patricia J. Teller</author><author org="" id="2098205087">Mary K. Vernon</author></authors><n_citation>40</n_citation><doc_type>Conference</doc_type><references><reference>1871935541</reference><reference>1966285605</reference><reference>1972908970</reference><reference>1973501242</reference><reference>1975718050</reference><reference>1998857607</reference><reference>2004114641</reference><reference>2018881780</reference><reference>2032094184</reference><reference>2036750897</reference><reference>2038774992</reference><reference>2042120213</reference><reference>2077828271</reference><reference>2100536025</reference><reference>2100761285</reference><reference>2101007051</reference><reference>2102061396</reference><reference>2123693663</reference><reference>2127746706</reference><reference>2129094586</reference><reference>2138180780</reference><reference>2141342364</reference><reference>2154938675</reference><reference>2156431302</reference><reference>2157108859</reference><reference>2159765281</reference></references><venue id="1202990997" type="C">Workshop on Software and Performance</venue><doi>10.1145/287318.292468</doi><keywords><keyword weight="0.46815">Recommender system</keyword><keyword weight="0.54064">Specification language</keyword><keyword weight="0.47696">Computer science</keyword><keyword weight="0.55724">Compiler</keyword><keyword weight="0.48154">Knowledge base</keyword><keyword weight="0.54215">Application software</keyword><keyword weight="0.51389">Message passing</keyword><keyword weight="0.56543">System model</keyword><keyword weight="0.54057">Hardware architecture</keyword><keyword weight="0.48033">Distributed computing</keyword></keywords><publisher>ACM</publisher><abstract>The POEMS project is creating an environment for end-to-end performance modeling of complex parallel and distributed systems, spanning the domains of application software, runtime and operating system software, and hardware architecture. Toward this end, the POEMS framework supports composition of component models from these different domains into an end-to-end system model. This composition can be specified using a generalized graph model of a parallel system, together with interface specifications that carry information about component behaviors and evaluation methods. The POEMS Specification Language compiler, under development, will generate an end-to-end system model automatically from such a specification. The components of the target system may be modeled using different modeling paradigms (analysis, simulation, or direct measurement) and may be modeled at various levels of detail. As a result, evaluation of a POEMS end-to-end system model may require a variety of evaluation tools including specialized equation solvers, queuing network solvers, and discrete-event simulators. A single application representation based on static and dynamic task graphs serves as a common workload representation for all these modeling approaches. Sophisticated parallelizing compiler techniques allow this representation to be generated automatically for a given parallel program. POEMS includes a library of predefined analytical and simulation component models of the different domains and a knowledge base that describes performance properties of widely used algorithms. This paper provides an overview of the POEMS methodology and illustrates several of its key components. The methodology and modeling capabilities are demonstrated by predicting the performance of alternative configurations of Sweep3D, a complex benchmark for evaluating wavefront application technologies and high-performance, parallel architectures. Index Termsâ€”Performance modeling, parallel system, message passing, analytical modeling, parallel simulation, processor simulation, task graph, parallelizing compiler, compositional modeling, recommender system.</abstract></paper>