<paper id="1981599076"><title>Program transformations and algebraic semantics</title><year>1979</year><authors><author org="U.E.R. de Mathematiques, Université de Paris, 75221 Paris Cedex 05 France" id="213948082">Irène Guessarian</author></authors><n_citation>12</n_citation><doc_type>Journal</doc_type><references><reference>45526117</reference><reference>1768003599</reference><reference>1964838474</reference><reference>1970197772</reference><reference>1973187217</reference><reference>1977571320</reference><reference>2010927194</reference><reference>2019738397</reference><reference>2023299380</reference><reference>2066126160</reference><reference>2122330398</reference></references><venue id="90727058" type="J">Theoretical Computer Science</venue><doi>10.1016/0304-3975(79)90005-7</doi><keywords><keyword weight="0.46093">Discrete mathematics</keyword><keyword weight="0.44983">Combinatorics</keyword><keyword weight="0.48146">Algebra</keyword><keyword weight="0.4687">Theoretical computer science</keyword><keyword weight="0.55457">Equivalence (measure theory)</keyword><keyword weight="0.0">Optimization algorithm</keyword><keyword weight="0.45764">Syntax</keyword><keyword weight="0.54759">Recursion</keyword><keyword weight="0.42827">Mathematics</keyword><keyword weight="0.54373">Algebraic semantics</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract We study transformations and equivalences of recursive program schemes. We give an optimization algorithm which recognizes and removes all parts of a program scheme which do not affect its final output. This result leads to a syntactic way of suppressing some erroneous loops in programs and can be used to prove that equivalence of recursive program schemes is solvable under particular conditions.</abstract></paper>