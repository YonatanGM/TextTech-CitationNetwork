<paper id="1548099010"><title>Learning hierarchies of abstraction spaces</title><year>1989</year><authors><author org="School of Computer Science, Carnegie Mellon Univ., Pittsburgh, PA" id="1991211814">Craig A. Knoblock</author></authors><n_citation>20</n_citation><doc_type>Conference</doc_type><references><reference>1981627423</reference><reference>2020149918</reference><reference>2021337406</reference></references><venue id="1180662882" type="C">International Conference on Machine Learning</venue><doi>10.1016/B978-1-55860-036-2.50069-2</doi><keywords><keyword weight="0.51506">Abstraction</keyword><keyword weight="0.46914">Computer science</keyword><keyword weight="0.45016">Operator (computer programming)</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.5246">Solver</keyword><keyword weight="0.44875">Hierarchy</keyword><keyword weight="0.46015">Machine learning</keyword><keyword weight="0.45362">Performance improvement</keyword></keywords><publisher>Morgan Kaufmann Publishers Inc.</publisher><abstract>ABSTRACT Hierarchical planning is an effective technique for reducing search in planning. Previous work on hierarchical planning has primarily focused on using abstraction spaces; the question of how the abstractions are formed remained largely unexplored. This paper describes A lpine , a system for learning abstraction spaces for use in hierarchical planning. Starting from only an axiomatization of the operators and example problems this system can learn detailed abstraction spaces for a domain. This is done using a theory of what makes a good abstraction space for hierarchical planning and then learning abstractions with the desired properties. The learned abstractions provide a significant performance improvement in PRODIGY, a domain-independent problem solver. The paper shows that A lpine can produce more detailed and effective abstractions using less knowledge than ABSTRIPS, a well-known system that partially automated the formation of abstraction spaces.</abstract></paper>