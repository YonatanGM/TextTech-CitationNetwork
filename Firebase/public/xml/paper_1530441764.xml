<paper id="1530441764"><title>A new method for establishing refutational completeness in theorem proving</title><year>1986</year><authors><author org="SUNY at Stony Brook" id="2160390459">Jieh Hsiang</author><author org="CRIN" id="1576783085">MichaÃ«l Rusinowitch</author></authors><n_citation>43</n_citation><doc_type>Conference</doc_type><references><reference>1506018160</reference><reference>1530765221</reference><reference>1966048066</reference><reference>2048748607</reference><reference>2051518991</reference><reference>2086747974</reference><reference>2100738443</reference><reference>2912009403</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-16780-3_86</doi><keywords><keyword weight="0.44463">Discrete mathematics</keyword><keyword weight="0.53879">Axiom</keyword><keyword weight="0.42158">Computer science</keyword><keyword weight="0.62063">Automated theorem proving</keyword><keyword weight="0.56281">Mathematical induction</keyword><keyword weight="0.57057">Fundamental theorem</keyword><keyword weight="0.47465">Predicate (grammar)</keyword><keyword weight="0.5496">Transfinite number</keyword><keyword weight="0.55889">Completeness (statistics)</keyword><keyword weight="0.51644">Rule of inference</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present here a new technique for establishing completeness of refutational theorem proving strategies. This method employs semantic trees and, in contrast to most of the semantic tree methods, is based on proof by refutation instead of proof by induction. Thus, it works well on transfinite semantic trees as well as on finite ones. This method is particularly useful for proving the completeness of strategies with the presence of the equality predicate. We have used the method to prove the completeness of the following strategies (without the need of the functional reflexive axioms), where the precise definition of oriented paramodulation will be given later.</abstract></paper>