<paper id="1969857501"><title>The denotational semantics of programming languages</title><year>1976</year><authors><author org="Queen's Univ., kingston, Ont., Canada#TAB#" id="2973750528">R. D. Tennent</author></authors><n_citation>231</n_citation><doc_type>Journal</doc_type><references><reference>1523016082</reference><reference>1595372275</reference><reference>1970197772</reference><reference>2029010801</reference><reference>2034128345</reference><reference>2035152990</reference><reference>2043416466</reference><reference>2045255985</reference><reference>2071312301</reference><reference>2073847551</reference><reference>2095224573</reference><reference>2104416102</reference><reference>2109798037</reference><reference>2113074643</reference><reference>2113757735</reference><reference>2124141583</reference><reference>2127421847</reference><reference>2134112335</reference><reference>2542647517</reference></references><venue id="103482838" type="J">Communications of The ACM</venue><doi>10.1145/360303.360308</doi><keywords><keyword weight="0.66142">Specification language</keyword><keyword weight="0.661">Operational semantics</keyword><keyword weight="0.4733">Programming language</keyword><keyword weight="0.66887">Programming language specification</keyword><keyword weight="0.45324">Computer science</keyword><keyword weight="0.66767">Object language</keyword><keyword weight="0.45218">Theoretical computer science</keyword><keyword weight="0.66173">Very high-level programming language</keyword><keyword weight="0.67165">First-generation programming language</keyword><keyword weight="0.67241">Programming language theory</keyword><keyword weight="0.66746">Semantics (computer science)</keyword></keywords><publisher>ACM</publisher><abstract>This paper is a tutorial introduction to the theory of programming language semantics developed by D. Scott and C. Strachey. The application of the theory to formal language specification is demonstrated and other applications are surveyed. The first language considered, LOOP, is very elementary and its definition merely introduces the notation and methodology of the approach. Then the semantic concepts of environments, stores, and continuations are introduced to model classes of programming language features and the underlying mathematical theory of computation due to Scott is motivated and outlined. Finally, the paper presents a formal definition of the language GEDANKEN.</abstract></paper>