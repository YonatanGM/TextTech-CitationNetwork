<paper id="1841523394"><title>Secure implementation of channel abstractions</title><year>1998</year><authors><author org="Syst. Res. Center, Digital Equip. Corp., USA" id="2162106674">M. Abadi</author><author org="" id="1819774294">C. Fournet</author><author org="" id="2112563238">G. Gonthier</author></authors><n_citation>59</n_citation><doc_type>Conference</doc_type><references><reference>79652917</reference><reference>1503973138</reference><reference>1505578292</reference><reference>1511688825</reference><reference>1551693317</reference><reference>1557260581</reference><reference>1564764333</reference><reference>1591752798</reference><reference>1660562555</reference><reference>1894198336</reference><reference>1966212263</reference><reference>1966219798</reference><reference>1988698742</reference><reference>1994386233</reference><reference>1994676271</reference><reference>2050942832</reference><reference>2055378322</reference><reference>2063986339</reference><reference>2067580212</reference><reference>2072048176</reference><reference>2095952082</reference><reference>2110050316</reference><reference>2127625071</reference><reference>2128932399</reference><reference>2146973388</reference><reference>2150735864</reference><reference>2157144873</reference><reference>2159897734</reference><reference>2163684994</reference><reference>2167059259</reference><reference>2169011679</reference><reference>2170626879</reference><reference>2294165883</reference><reference>2911862439</reference></references><venue id="1171002971" type="C">Logic in Computer Science</venue><doi>10.1109/LICS.1998.705647</doi><keywords><keyword weight="0.54726">Remote procedure call</keyword><keyword weight="0.46503">Programming language</keyword><keyword weight="0.59249">Cryptographic protocol</keyword><keyword weight="0.52583">Cryptography</keyword><keyword weight="0.46769">Computer science</keyword><keyword weight="0.50283">Correctness</keyword><keyword weight="0.46592">Communication channel</keyword><keyword weight="0.59834">Cryptographic primitive</keyword><keyword weight="0.46036">Theoretical computer science</keyword><keyword weight="0.52902">Encryption</keyword><keyword weight="0.53398">Controlled Cryptographic Item</keyword></keywords><publisher>IEEE</publisher><abstract>Communication in distributed systems often relies on useful abstractions such as channels, remote procedure calls, and remote method invocations. The implementations of these abstractions sometimes provide security properties, in particular through encryption. In this paper we study those security properties, focusing on channel abstractions. We introduce a simple high-level language that includes constructs for creating and using secure channels. The language is a variant of the join-calculus and belongs to the same family as the pi-calculus. We show how to translate the high-level language into a lower-level language that includes cryptographic primitives. In this translation, we map communication on secure channels to encrypted communication on public channels. We obtain a correctness theorem for our translation; this theorem implies that one can reason about programs in the high-level language without mentioning the subtle cryptographic protocols used in their lower-level implementation.</abstract></paper>