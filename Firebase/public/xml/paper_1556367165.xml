<paper id="1556367165"><title>Managing Technical Processes Using Smart Workflows</title><year>2008</year><authors><author org="Institute of Architecture of Application Systems, Universität Stuttgart,#TAB#" id="2141883682">Matthias Wieland</author><author org="Computer Science Department, Carl von Ossietzky Universität Oldenburg,#TAB#" id="687622127">Daniela Nicklas</author><author org="Institute of Architecture of Application Systems, Universität Stuttgart,#TAB#" id="2127483189">Frank Leymann</author></authors><n_citation>13</n_citation><doc_type /><references><reference>1488709044</reference><reference>1506229097</reference><reference>1967661515</reference><reference>2099127141</reference><reference>2102094334</reference><reference>2119358510</reference><reference>2122768161</reference><reference>2129773848</reference><reference>2131415946</reference><reference>2153074919</reference><reference>2158668473</reference></references><venue id="" type="">ServiceWave '08 Proceedings of the 1st European Conference on Towards a Service-Based Internet</venue><doi>10.1007/978-3-540-89897-9_25</doi><keywords><keyword weight="0.48749">Business process</keyword><keyword weight="0.51453">Subject-matter expert</keyword><keyword weight="0.45958">Computer science</keyword><keyword weight="0.4913">Provisioning</keyword><keyword weight="0.51127">Context model</keyword><keyword weight="0.51132">Process architecture</keyword><keyword weight="0.46497">Granularity</keyword><keyword weight="0.52465">Web service</keyword><keyword weight="0.52217">Workflow</keyword><keyword weight="0.47296">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Technical processes that are crossing the boundary to the physical world can be found in many application domains, like logistics or in Smart Factory environments. We show how these processes can be realized by so-called Smart Workflows. To integrate external information sources like context provisioning services, we introduce the Integration Process architecture pattern. This pattern generally solves the problem of integrating different complex systems that provide functional similar services with non-fitting interfaces into workflows. The pattern allows that workflows use simple domain specific interfaces that are the same for any of these systems and by that allow the exchange of underlying systems without changing the workflows. This is accomplished by reducing the interface complexity of the systems via a hierarchical Web Service stack that reaches from the lowest technical granularity needed by IT experts to the domain specific granularity needed by the domain experts. Furthermore the paper presents a concrete realization of the pattern for integrating different context provisioning systems into workflows.</abstract></paper>