<paper id="1964714157"><title>Interprocedural dependence analysis and parallelization</title><year>1986</year><authors><author org="IBM T. J. Watson Research Lab, Yorktown Heights, NY" id="2547328848">Michael G. Burke</author><author org="Washington Univ, St Louis, MO;" id="2227405667">Ron K. Cytron</author></authors><n_citation>219</n_citation><doc_type>Conference</doc_type><references><reference>1966449927</reference><reference>1981577498</reference><reference>2032854624</reference><reference>2045818721</reference><reference>2090286414</reference><reference>2096139068</reference><reference>2102890180</reference><reference>2124153277</reference></references><venue id="1162239172" type="C">Compiler Construction</venue><doi>10.1145/989393.989411</doi><keywords><keyword weight="0.44228">Programming language</keyword><keyword weight="0.44467">Computer science</keyword><keyword weight="0.51852">Dependence analysis</keyword><keyword weight="0.45515">Algorithm</keyword><keyword weight="0.42689">Look-ahead</keyword><keyword weight="0.4648">Aliasing</keyword><keyword weight="0.5093">Program analysis</keyword><keyword weight="0.43">Parsing</keyword><keyword weight="0.44345">Strongly connected component</keyword><keyword weight="0.42039">Digraph</keyword><keyword weight="0.47204">Data flow diagram</keyword></keywords><publisher>ACM</publisher><abstract>We present a method that combines a deep analysis of program dependences with a broad analysis of the interaction among procedures. The method is more efficient than existing methods: we reduce many tests, performed separately by existing methods, to a single test. The method is more precise than existing methods with respect to references to multi-dimensional arrays and dependence information hidden by procedure calls. The method is more general than existing methods: we accommodate potentially aliased variables and structures of differing shapes that share storage. We accomplish the above through a unified approach that integrates subscript analysis with aliasing and interprocedural information.</abstract></paper>