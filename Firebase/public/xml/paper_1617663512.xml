<paper id="1617663512"><title>Efficient Computation Modulo a Shared Secret with Application to the Generation of Shared Safe-Prime Products</title><year>2002</year><authors><author org="(IBM Research)" id="2071312613">Joy Algesheimer</author><author org="(IBM Research)" id="2001749418">Jan Camenisch</author><author org="(IBM Research)" id="2294259183">Victor Shoup</author></authors><n_citation>99</n_citation><doc_type>Conference</doc_type><references><reference>1492989663</reference><reference>1493614564</reference><reference>1498896551</reference><reference>1591954407</reference><reference>1600823322</reference><reference>1655990431</reference><reference>1721341781</reference><reference>1746297759</reference><reference>1862740493</reference><reference>1928188623</reference><reference>1979215153</reference><reference>1997859100</reference><reference>2036133214</reference><reference>2054458282</reference><reference>2077315235</reference><reference>2105807578</reference><reference>2112138431</reference><reference>2135656098</reference><reference>2165210192</reference><reference>2230112138</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-45708-9_27</doi><keywords><keyword weight="0.54119">Prime (order theory)</keyword><keyword weight="0.55327">Secret sharing</keyword><keyword weight="0.50596">Modulo</keyword><keyword weight="0.48645">Cryptography</keyword><keyword weight="0.43338">Computer science</keyword><keyword weight="0.4368">Theoretical computer science</keyword><keyword weight="0.63797">Safe prime</keyword><keyword weight="0.6123">Shared secret</keyword><keyword weight="0.51846">Public-key cryptography</keyword><keyword weight="0.42081">Computation</keyword></keywords><publisher>Springer Verlag</publisher><abstract>We present a new protocol for efficient distributed computation modulo a shared secret. We further present a protocol to distributively generate a random shared prime or safe prime that is much more efficient than previously known methods. This allows one to distributively compute shared RSA keys, where the modulus is the product of two safe primes, much more efficiently than was previously known.</abstract></paper>