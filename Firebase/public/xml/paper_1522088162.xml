<paper id="1522088162"><title>A Programmer Friendly Modular Definition of the Semantics of Java</title><year>1999</year><authors><author org="Universita di Pisa" id="2026252948">Egon Börger</author><author org="UniversitÄt Ulm" id="2115070196">Wolfram Schulte</author></authors><n_citation>72</n_citation><doc_type /><references><reference>91768790</reference><reference>99916501</reference><reference>1512874973</reference><reference>1514691125</reference><reference>1539030153</reference><reference>1541972627</reference><reference>1543787834</reference><reference>1551705173</reference><reference>1553537175</reference><reference>1567557053</reference><reference>1570258731</reference><reference>1584935955</reference><reference>1644882639</reference><reference>1969402593</reference><reference>1983346515</reference><reference>2031506023</reference><reference>2095851537</reference><reference>2105360973</reference><reference>2131540458</reference><reference>2154978557</reference><reference>2156765622</reference><reference>2161825580</reference><reference>2169735850</reference><reference>2234536257</reference><reference>2614279894</reference><reference>2913158420</reference></references><venue id="" type="">Formal Syntax and Semantics of Java</venue><doi>10.1007/3-540-48737-9_10</doi><keywords><keyword weight="0.48069">Programming language</keyword><keyword weight="0.72982">Java annotation</keyword><keyword weight="0.46021">Computer science</keyword><keyword weight="0.71951">Java concurrency</keyword><keyword weight="0.72355">Real time Java</keyword><keyword weight="0.71692">Generics in Java</keyword><keyword weight="0.7385">strictfp</keyword><keyword weight="0.70249">Java applet</keyword><keyword weight="0.73875">Java Modeling Language</keyword><keyword weight="0.69585">Java</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We propose in this paper a definition of the semantics of Java programs which can be used as a basis for the standardization of the language and of its implementation on the Java Virtual Machine. The definition provides a machine and system independent view of the language as it is seen by the Java programmer. It takes care to directly reflect the description in the Java language reference manual so that the basic design decisions can be checked by standardizers and implementors against a mathematical definition is the basis for a :[85],"related definition we give in a sequel to this paper for the implementation of Java on the Java Virtual Machine as described in the language and in the Virtual Machine reference manuals.</abstract></paper>