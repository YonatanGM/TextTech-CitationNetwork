<paper id="1634168340"><title>Transforming BPEL to petri nets</title><year>2005</year><authors><author org="Institut für Informatik, Humboldt-Universität zu Berlin, Berlin," id="2477894307">Sebastian Hinz</author><author org="Institut für Informatik, Humboldt-Universität zu Berlin, Berlin," id="2100931371">Karsten Schmidt</author><author org="Institut für Informatik, Humboldt-Universität zu Berlin, Berlin," id="2283650355">Christian Stahl</author></authors><n_citation>269</n_citation><doc_type>Conference</doc_type><references><reference>151984927</reference><reference>1492729957</reference><reference>1500350767</reference><reference>1506229097</reference><reference>1509607930</reference><reference>1513999490</reference><reference>1551401137</reference><reference>1556566737</reference><reference>1564354068</reference><reference>1974910756</reference><reference>1991316285</reference><reference>2083091245</reference><reference>2122948231</reference><reference>2128433357</reference><reference>2129466958</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/11538394_15</doi><keywords><keyword weight="0.51648">Specification language</keyword><keyword weight="0.50081">Model checking</keyword><keyword weight="0.45942">Programming language</keyword><keyword weight="0.61074">Petri net</keyword><keyword weight="0.43764">Computer science</keyword><keyword weight="0.63029">Business Process Execution Language</keyword><keyword weight="0.48233">Parsing</keyword><keyword weight="0.47222">Web service</keyword><keyword weight="0.50044">Semantics</keyword><keyword weight="0.0">Computer aided verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a Petri net semantics for the Business Process Execution Language for Web Services (BPEL). Our semantics covers the standard behaviour of BPEL as well as the exceptional behaviour (e.g. faults, events, compensation). The semantics is implemented as a parser that translates BPEL specifications into the input language of the Petri net model checking tool LoLA. We demonstrate that the semantics is well suited for computer aided verification purposes.</abstract></paper>