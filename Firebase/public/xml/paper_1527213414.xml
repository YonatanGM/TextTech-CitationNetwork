<paper id="1527213414"><title>Generic feature-based software composition</title><year>2007</year><authors><author org="Centrum voor Wiskunde en Informatica, GB Amsterdam, The Netherlands#TAB#" id="621424736">Tijs Van Der Storm</author></authors><n_citation>20</n_citation><doc_type /><references><reference>306273264</reference><reference>1509367797</reference><reference>1512095083</reference><reference>1521033571</reference><reference>1528851149</reference><reference>1572289412</reference><reference>1591471358</reference><reference>1608654004</reference><reference>1610570299</reference><reference>2030224590</reference><reference>2082677523</reference><reference>2094810043</reference><reference>2101730275</reference><reference>2142874510</reference><reference>2143556329</reference><reference>2145505903</reference></references><venue id="" type="">SC'07 Proceedings of the 6th international conference on Software composition</venue><doi>10.1007/978-3-540-77351-1_6</doi><keywords><keyword weight="0.46587">Data mining</keyword><keyword weight="0.62983">Domain engineering</keyword><keyword weight="0.57357">Problem domain</keyword><keyword weight="0.46867">Computer science</keyword><keyword weight="0.48859">Bridging (networking)</keyword><keyword weight="0.46918">Theoretical computer science</keyword><keyword weight="0.48732">Automation</keyword><keyword weight="0.53832">Function composition (computer science)</keyword><keyword weight="0.67696">Software product line</keyword><keyword weight="0.0">Feature based</keyword><keyword weight="0.53906">Dependency graph</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Bridging problem domain and solution in product line engineering is a time-consuming and error-prone process. Since both domains are structured differently (features vs. artifacts), there is no natural way to map one to the other. Using an explicit and formal mapping creates opportunities for consistency checking and automation. This way both the configuration and the composition of product instances can be more robust, support more product variants and be performed more often.</abstract></paper>