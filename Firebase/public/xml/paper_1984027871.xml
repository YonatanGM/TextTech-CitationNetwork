<paper id="1984027871"><title>Bin packing with divisible item sizes</title><year>1987</year><authors><author org="AT&amp;T Bell Lab, Murray Hill, NJ" id="2461074888">E. G. Coffman</author><author org="AT&amp;T Bell Lab, Murray Hill, NJ" id="2063302323">M. R. Garey</author><author org="AT&amp;T Bell Lab, Murray Hill, NJ" id="2984891692">D. S. Johnson</author></authors><n_citation>81</n_citation><doc_type>Journal</doc_type><references><reference>1975216035</reference><reference>1997370889</reference><reference>1997959089</reference><reference>2006671706</reference><reference>2012067948</reference><reference>2025787252</reference><reference>2027743714</reference><reference>2043862089</reference><reference>2057764247</reference><reference>2068426617</reference><reference>2104680817</reference></references><venue id="42286584" type="J">Journal of Complexity</venue><doi>10.1016/0885-064X(87)90009-4</doi><keywords><keyword weight="0.45049">Discrete mathematics</keyword><keyword weight="0.45062">Combinatorics</keyword><keyword weight="0.50997">Multiprocessor scheduling</keyword><keyword weight="0.62713">Bin</keyword><keyword weight="0.0">Vector packing</keyword><keyword weight="0.50854">Divisibility rule</keyword><keyword weight="0.67067">Square packing in a square</keyword><keyword weight="0.67457">Bin packing problem</keyword><keyword weight="0.42023">Mathematics</keyword></keywords><publisher>Academic Press, Inc.</publisher><abstract>Abstract We study a variety of NP-hard bin packing problems under a divisibility constraint that generalizes the often encountered situation in which all item sizes are powers of 2. For ordinary one-dimensional bin packing, we show that First Fit Decreasing produces optimal packings under this restriction, and that if in addition the largest item size divides the bin capacity, then even the less powerful First Fit algorithm is optimal. Similar results are obtained for two-dimensional bin packing and multiprocessor scheduling, along with several other simple variants. For more complicated problems, like vector packing and dynamic bin packing, the improvement is less substantial, and we indicate why.</abstract></paper>