<paper id="1553537175"><title>Proving Java Type Soundness</title><year>1999</year><authors><author org="University of Cambridge Computer Laboratory#TAB#" id="2136386745">Don Syme</author></authors><n_citation>89</n_citation><doc_type /><references><reference>1485127463</reference><reference>1497011154</reference><reference>1627776297</reference><reference>1644882639</reference><reference>1659048632</reference><reference>1661076342</reference><reference>2005090804</reference><reference>2065141544</reference><reference>2913795799</reference></references><venue id="" type="">Formal Syntax and Semantics of Java</venue><doi>10.1007/3-540-48737-9_3</doi><keywords><keyword weight="0.55341">Formal system</keyword><keyword weight="0.56294">Formal semantics (linguistics)</keyword><keyword weight="0.59862">Operational semantics</keyword><keyword weight="0.46954">Programming language</keyword><keyword weight="0.45394">Computer science</keyword><keyword weight="0.58825">Formal specification</keyword><keyword weight="0.55519">Mathematical proof</keyword><keyword weight="0.59561">Formal methods</keyword><keyword weight="0.60416">Formal verification</keyword><keyword weight="0.61464">Formal proof</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This chapter describes a machine checked proof of the type soundness of a subset of Java (we call this subset JavaS). In Chapter 3, a formal semantics for approximately the same subset was presented by Drossopoulou and Eisenbach. The work presented here serves two roles: it complements the written semantics by correcting and clarifying some details; and it demonstrates the utility of formal, machine checking when exploring a large and detailed proof based on operational semantics.1 This work contributes to three distinct fields of formal reasoning: :[86],"Formal Study of Java: We contribute a detailed analysis of a significant property of Java, and provide corrections to proofs that are interesting in their own for :[86],"Formal :[113],"Methods: This work is a major case study in so-called ‘declarative’ proof techniques. The tool we use, called DECLARE [Sym97], has been developed by the author to demonstrate the utility of these :[148],"Checked Properties of Languages: This work contributes a tool and a methodology for the general task of machine checking properties of languages.</abstract></paper>