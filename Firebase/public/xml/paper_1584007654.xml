<paper id="1584007654"><title>Branching Time Temporal Logic and Amorphous Tree Automata</title><year>1993</year><authors><author org="The Technion," id="1974724047">Orna Bernholtz</author><author org="AT&amp;T Bell Lab.#TAB#" id="1993734283">Orna Grumberg</author></authors><n_citation>18</n_citation><doc_type>Conference</doc_type><references><reference>1501731334</reference><reference>1875868519</reference><reference>2022228153</reference><reference>2023808162</reference><reference>2033071128</reference><reference>2072887965</reference><reference>2085533703</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-57208-2_19</doi><keywords><keyword weight="0.59984">Computation tree logic</keyword><keyword weight="0.59403">Quantum finite automata</keyword><keyword weight="0.45727">Discrete mathematics</keyword><keyword weight="0.59212">Automata theory</keyword><keyword weight="0.45264">Combinatorics</keyword><keyword weight="0.59065">Continuous spatial automaton</keyword><keyword weight="0.57728">Nested word</keyword><keyword weight="0.41555">Computer science</keyword><keyword weight="0.56415">Linear temporal logic</keyword><keyword weight="0.67921">Tree automaton</keyword><keyword weight="0.62555">ω-automaton</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>An automata-theoretic framework for branching-time temporal logics is presented. We introduce a new type of finite automata on infinite trees, the amorphous automata, and use them as a formalism to represent efficiently CTL formulas. In addition, we introduce simultaneous trees, and associate with every model for CTL, a simultaneous tree that enables a tree automaton to visit different nodes on the same path of the tree simultaneously. With every formula ψ, we associate an amorphous automaton Uψ, that accepts exactly those simultaneous trees (of any branching degree) that originate from models that satisfy ψ. This enables to use the automaton both for model checking which is reduced to the membership problem, and for satisfiability decision, which is reduced to testing the nonemptiness of an extension of Uψ that does not assume simultaneous input trees.</abstract></paper>