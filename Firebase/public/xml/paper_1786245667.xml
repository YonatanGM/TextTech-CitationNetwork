<paper id="1786245667"><title>Permutation Polynomials in RSA-Cryptosystems</title><year>1984</year><authors><author org="University of Tasmania" id="305212409">Rudolf Lidl</author><author org="University of Tasmania" id="2138830454">Winfried B. Müller</author></authors><n_citation>70</n_citation><doc_type>Conference</doc_type><references><reference>1590771330</reference><reference>1970241935</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/978-1-4684-4730-9_23</doi><keywords><keyword weight="0.39688">Discrete mathematics</keyword><keyword weight="0.38907">Polynomial</keyword><keyword weight="0.36879">Computer science</keyword><keyword weight="0.42833">Permutation</keyword><keyword weight="0.41363">Communication source</keyword><keyword weight="0.47331">Cryptosystem</keyword><keyword weight="0.45552">Pseudorandom permutation</keyword><keyword weight="0.40832">Symmetric polynomial</keyword><keyword weight="0.50063">Public-key cryptography</keyword></keywords><publisher>Springer, Boston, MA</publisher><abstract>For the transmission of information in public-key cryptosystems a receiver R makes an enciphering key ER public and keeps a deciphering key DR secret. A sender S can read R’s public key ER and enciphers a message M as ER(M). Only the authorised receiver R knows the correct key DR to reproduce the massage M by forming DR(ER(M)) = M. Here the key ER has to be computationally easy to handle, but it has to be computationally infeasible to derive DR from the knowledge of ER above. If sender S wants to “sign” the message, she sends ER(DS (M)) and the receiver deciphers it as ES(DR(ER(DS (M)))) = M. Here ES and DS are the enciphering and deciphering keys, respectively, of S.</abstract></paper>