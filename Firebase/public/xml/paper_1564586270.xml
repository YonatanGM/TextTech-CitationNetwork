<paper id="1564586270"><title>Strong and Explicit Negation in Non-Monotonic Reasoning and Logic Programming</title><year>1996</year><authors><author org="DM, U. Évora and CITIA" id="2304619042">José Júlio Alferes</author><author org="DCS and CITIA" id="2104852094">Luís Moniz Pereira</author><author org="University of California" id="85587412">Teodor C. Przymusinski</author></authors><n_citation>21</n_citation><doc_type /><references><reference>75962216</reference><reference>96687712</reference><reference>99071911</reference><reference>115237046</reference><reference>185907670</reference><reference>197853367</reference><reference>1505455772</reference><reference>1511711492</reference><reference>1524362910</reference><reference>1524811847</reference><reference>1550404019</reference><reference>1556256464</reference><reference>1559309754</reference><reference>1581707906</reference><reference>1608734032</reference><reference>1672891595</reference><reference>1766332311</reference><reference>1966552757</reference><reference>1968513265</reference><reference>1971492645</reference><reference>1984715534</reference><reference>1986999264</reference><reference>2001794777</reference><reference>2008294142</reference><reference>2028245171</reference><reference>2085084839</reference><reference>2105486835</reference><reference>2155322595</reference><reference>2945259913</reference></references><venue id="" type="">JELIA '96 Proceedings of the European Workshop on Logics in Artificial Intelligence</venue><doi>10.1007/3-540-61630-6_10</doi><keywords><keyword weight="0.62859">Default logic</keyword><keyword weight="0.43489">Discrete mathematics</keyword><keyword weight="0.63402">Autoepistemic logic</keyword><keyword weight="0.57662">Negation</keyword><keyword weight="0.5821">Multimodal logic</keyword><keyword weight="0.59077">Negation as failure</keyword><keyword weight="0.61441">Stable model semantics</keyword><keyword weight="0.60191">Non-monotonic logic</keyword><keyword weight="0.60207">Predicate functor logic</keyword><keyword weight="0.40019">Mathematics</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Logic programs, deductive databases, and more generally non-monotonic theories, use various forms of default negation, not F , whose major distinctive feature is that not F is assumed “by default”, i.e., it is assumed in the absence of sufficient evidence to the contrary. The meaning of “sufficient evidence” depends on the specific semantics used. For example, in Reiter’s Closed World Assumption, CWA [32], not A is assumed for atomic A if A is not provable, or, equivalently, if there is a minimal model in which A is false. On the other hand, in Minker’s Generalized Closed World Assumption, GCWA [18, 16], or in McCarthy’s Circumscription, CIRC [17], not A is assumed only if A is false in all minimal models. In Clark’s Predicate Completion semantics for logic programs [7], this form of negation is called negation-as-failure because not A is derivable whenever attempts to prove A finitely fail. The more recent semantics proposed for logic programs and deductive databases, such as the stable semantics [14], well-founded semantics [34], partial stable or stationary semantics [27] and static semantics [30], propose even more sophisticated meanings for default negation, closely related to more general nonmonotonic formalisms such as Default Logic, DL [33], AutoEpistemic Logic, AEL [19], and AutoEpistemic logic of Beliefs, AEB [29]. Under all of these semantics, however, default negation “not ” significantly differs from classical negation “¬”. For example, the formula charged(x) ∧ ¬guilty(x) ⊃ acquitted(x) says that a person charged with a crime should be acquitted if he or she is actually proven to be not guilty. On the other hand, the formula charged(x) ∧ not guilty(x) ⊃ acquitted(x) says that one should be acquitted of any charges by default unless sufficient evidence of that person’s guilt is demonstrated.</abstract></paper>