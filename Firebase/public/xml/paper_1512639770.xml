<paper id="1512639770"><title>Model-driven development of model transformations</title><year>2008</year><authors><author org="University of Antwerp" id="2065759435">Pieter Van Gorp</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>2168532110</reference></references><venue id="1202305278" type="C">International Conference on Graph Transformation</venue><doi>10.1007/978-3-540-87405-8_51</doi><keywords><keyword weight="0.39721">Discrete mathematics</keyword><keyword weight="0.5968">Model transformation</keyword><keyword weight="0.51221">Unified Modeling Language</keyword><keyword weight="0.44552">Computer science</keyword><keyword weight="0.5698">Transformation language</keyword><keyword weight="0.51807">Language construct</keyword><keyword weight="0.5602">Activity diagram</keyword><keyword weight="0.45133">Theoretical computer science</keyword><keyword weight="0.51641">Graph rewriting</keyword><keyword weight="0.43936">Artificial intelligence</keyword><keyword weight="0.44656">Constructed language</keyword><keyword weight="0.56716">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The "model-driven development of model transformations" requires both a technique to modelmodel transformations as well as a means to transformtransformation models. Therefore, the thesis underlying this paper evaluates and extends state-of-the-art model transformation approaches. For example, the thesis contributes a new language construct for modeling subgraph-copy operations. Perhaps surprisingly, this thesis intentionally does notpropose a fundamentally new transformation language and toolset. Instead, the thesis is based on a small UML profile for controlled graph transformation. The profile only relies on class diagrams, activity diagrams, and the UMLu0027s extension mechanism. The proposed techniques have emerged from several case studies that involve model evolution, model refinement, as well as model synchronization.</abstract></paper>