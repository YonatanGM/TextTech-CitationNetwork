<paper id="1499277620"><title>On Logical Constraints in Logic Programming</title><year>1995</year><authors><author org="University of Kentucky" id="2027206797">V. Wiktor Marek</author><author org="Cornell University;" id="321207788">Anil Nerode</author><author org="UniversityÂ of California" id="2103011650">Jeffrey B. Remmel</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>65937437</reference><reference>1766332311</reference><reference>2056976608</reference><reference>2063727779</reference><reference>2073247139</reference><reference>2108911687</reference><reference>2111353076</reference><reference>2155322595</reference></references><venue id="1201110412" type="C">International Conference on Logic Programming</venue><doi>10.1007/3-540-59487-6_4</doi><keywords><keyword weight="0.65848">Computational logic</keyword><keyword weight="0.66389">Horn clause</keyword><keyword weight="0.45199">Computer science</keyword><keyword weight="0.64626">Multimodal logic</keyword><keyword weight="0.45996">Theoretical computer science</keyword><keyword weight="0.64739">Prolog</keyword><keyword weight="0.71911">Concurrent constraint logic programming</keyword><keyword weight="0.69844">Logic programming</keyword><keyword weight="0.76407">Constraint logic programming</keyword><keyword weight="0.64346">Predicate logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We introduce a new form of logic programming with constraints. The constraints that we consider are not restricted to statements on real numbers as in CLP(R), see Jaffar and Lassez [10]. Instead our constraints are arbitrary global constraints. The basic idea is that the applicability of a given rule is not predicated on the fact that individual variables satisfy certain constraints, but rather on the fact that the least model of the set rules that are ultimately applicable satisfy the constraint of the rule. Thus the role of clauses is slightly different than in the usual Logic Programming with constraints. In fact, the paradigm we present is closely related to stable model semantics of general logic programming, Gelfond and Lifschitz [9]. We define the notion of a constraint model of a constraint logic program and show that stable models of logic programs as well as the supported models of logic programs are just special cases of constraint models of constraint logic programs. In the general definition of a constraint logic program, the constraint of a clause is not restricted to be of a certain form or even to be expressible in the underlying language of the logic program. This feature is useful for certain applications in hybrid control systems and database applications that we have in mind. In this paper, however, we focus on the properties of constraint programs and constraint models in the simplest case where the constraints arc expressible in the language of underlying program.</abstract></paper>