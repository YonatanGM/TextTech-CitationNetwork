<paper id="1968128450"><title>Managing inconsistent specifications: reasoning, analysis, and action</title><year>1998</year><authors><author org="University College London, London, UK;" id="2105909224">Anthony Hunter</author><author org="â€¡Imperial College, London, UK" id="2207023792">Bashar Nuseibeh</author></authors><n_citation>170</n_citation><doc_type>Journal</doc_type><references><reference>54180190</reference><reference>163012990</reference><reference>165478191</reference><reference>1509271294</reference><reference>1529749645</reference><reference>1534361892</reference><reference>1554618854</reference><reference>1593245090</reference><reference>1594285439</reference><reference>1689813061</reference><reference>1938613683</reference><reference>1979290877</reference><reference>1982882427</reference><reference>2009117193</reference><reference>2020153579</reference><reference>2024303905</reference><reference>2034717157</reference><reference>2035382654</reference><reference>2046131379</reference><reference>2047395595</reference><reference>2054097655</reference><reference>2062883440</reference><reference>2072230809</reference><reference>2081689954</reference><reference>2105603754</reference><reference>2107316243</reference><reference>2117870171</reference><reference>2133978627</reference><reference>2135920852</reference><reference>2142255038</reference><reference>2142616542</reference><reference>2142634407</reference><reference>2144369124</reference><reference>2147096558</reference><reference>2147454307</reference><reference>2171278366</reference><reference>2294967233</reference><reference>2296388507</reference><reference>2478175895</reference><reference>2912451708</reference></references><venue id="142627899" type="J">ACM Transactions on Software Engineering and Methodology</venue><doi>10.1145/292182.292187</doi><keywords><keyword weight="0.46441">Programming language</keyword><keyword weight="0.45125">Viewpoints</keyword><keyword weight="0.46286">Computer science</keyword><keyword weight="0.46138">Theoretical computer science</keyword><keyword weight="0.62791">Classical logic</keyword><keyword weight="0.0">Logical analysis</keyword></keywords><publisher>ACM</publisher><abstract>In previous work, we advocated continued development of specifications in the presence of inconsistency. To support this, we used classical logic to represent partial specifications and to identify inconsistencies between them. We now present an adaptation of classical logic, which we term quasi-classical (QC) logic, that allows continued reasoning in the presence of inconsistency. The adaptation is a weakening of classical logic that prohibits all trivial derivations, but still allows all resolvants of the assumptions to be derived. Furthermore, the connectives behave in a classical manner. We then present a development called labeled QC logic that records and tracks assumptions used in reasoning. This facilitates a logical analysis of inconsistent information. We discuss that application of labeled QC logic in the analysis of multiperspective specifications. Such specifications are developed by multiple particpants who hold overlapping, often inconsistent, views of the systems they are developing.</abstract></paper>