<paper id="1600689686"><title>Algebraic Operational Semantics and Occam</title><year>1990</year><authors><author org="University of Michigan" id="2154094381">Yuri Gurevich</author><author org="IBM T.J. Watson research center" id="2120107391">Lawrence S. Moss</author></authors><n_citation>39</n_citation><doc_type>Conference</doc_type><references><reference>1487966966</reference><reference>2107100996</reference><reference>2110425399</reference><reference>2131377110</reference><reference>2137865376</reference></references><venue id="1165958984" type="C">Computer Science Logic</venue><doi>10.1007/3-540-52753-2_39</doi><keywords><keyword weight="0.53529">Formal semantics (linguistics)</keyword><keyword weight="0.64341">Operational semantics</keyword><keyword weight="0.47014">Programming language</keyword><keyword weight="0.44815">Computer science</keyword><keyword weight="0.54439">Computational semantics</keyword><keyword weight="0.6458">Communicating sequential processes</keyword><keyword weight="0.65031">Denotational semantics</keyword><keyword weight="0.63132">Action semantics</keyword><keyword weight="0.45068">Theoretical computer science</keyword><keyword weight="0.67322">occam</keyword><keyword weight="0.57545">Well-founded semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We generalize algebraic operational semantics from sequential languages to distributed, concurrent languages using Occam as an example. Elsewhere, we will discuss applications to the study of verification and transformation of programs.</abstract></paper>