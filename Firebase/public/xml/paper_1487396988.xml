<paper id="1487396988"><title>Optimality in Abstractions of Model Checking</title><year>1995</year><authors><author org="North-Carolina State University" id="2090782985">Rance Cleaveland</author><author org="North-Carolina State University" id="2156495138">S. Purushothaman Iyer</author><author org="University of Buenos Aires" id="2087657908">Daniel Yankelevich</author></authors><n_citation>56</n_citation><doc_type>Conference</doc_type><references><reference>1534067655</reference><reference>1564947547</reference><reference>1568478782</reference><reference>1593428110</reference><reference>2004306067</reference><reference>2014764321</reference><reference>2114092850</reference><reference>2117189826</reference><reference>2914011863</reference></references><venue id="1137552346" type="C">Static Analysis Symposium</venue><doi>10.1007/3-540-60360-3_32</doi><keywords><keyword weight="0.47955">Programming language</keyword><keyword weight="0.44301">Abstraction</keyword><keyword weight="0.61665">Model checking</keyword><keyword weight="0.47492">Computer science</keyword><keyword weight="0.53471">Abstract interpretation</keyword><keyword weight="0.47627">Theoretical computer science</keyword><keyword weight="0.59214">Temporal logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper investigates the use of abstract-interpretationinspired techniques for improving the performance of procedures for determining when systems satisfy formulas in branching-time temporal logic. A framework for abstracting system descriptions is developed, and a particular method for generating abstract systems from given abstractions on system states is defined and shown to be both safe and optimal, in the sense that concrete systems satisfy all the temporal formulas enjoyed by their abstracted counterparts. One may then use a model checker on an abstracted (and hence smaller) system in order to infer properties of a concrete system.</abstract></paper>