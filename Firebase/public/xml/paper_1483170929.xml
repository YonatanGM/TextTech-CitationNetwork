<paper id="1483170929"><title>Low Communication 2-Prover Zero-Knowledge Proofs for NP</title><year>1992</year><authors><author org="Almaden Research Center" id="208343995">Cynthia Dwork</author><author org="T. J. Watson Research Center" id="672946669">Uriel Feige</author><author org="NEC Research" id="2130358780">Joe Kilian</author><author org="Almaden Research Center" id="1023361224">Moni Naor</author><author org="Almaden Research Center" id="2500639597">Muli Safra</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1545320387</reference><reference>2016232593</reference><reference>2053086236</reference><reference>2067596507</reference><reference>2080578129</reference><reference>2081533283</reference><reference>2095844287</reference><reference>2097206148</reference><reference>2104952158</reference><reference>2124331805</reference><reference>2132605415</reference><reference>2134839489</reference><reference>2143391442</reference><reference>2144675047</reference><reference>2156867528</reference><reference>2158170224</reference><reference>2163710432</reference><reference>2622192510</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48071-4_15</doi><keywords><keyword weight="0.6861">Probabilistically checkable proof</keyword><keyword weight="0.45771">Discrete mathematics</keyword><keyword weight="0.66868">Interactive proof system</keyword><keyword weight="0.42682">Computer science</keyword><keyword weight="0.56532">Mathematical proof</keyword><keyword weight="0.53425">Gas meter prover</keyword><keyword weight="0.55004">Zero-knowledge proof</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We exhibit a two-prover perfect zero-knowledge proof system for 3-SAT. In this protocol, the verifier asks a single message to each prover, whose size grows logarithmically in the size of the 3-SAT formula. Each proveru0027s answer consists of only a constant number of bits. The verifier will always accept correct proofs. Given an unsatisfiable formula S the verifier will reject with probability at least ?((|S| - max-sat(S))/|S|, where max-sat(S) denotes the maximum number of clauses of S that may be simultaneously satisfied, and |S| denotes the total number of clauses of S. Using a recent result by Arora et al [2], we can construct for any language in NP a protocol with the property that any nonmember of the language be rejected with constant probability.</abstract></paper>