<paper id="1982006319"><title>Fast modular multiplication using 2-power radix</title><year>1991</year><authors><author org="Computation Department , UMIST , Manchester, M60 IQD, UK" id="2170406325">Colin D. Walter</author></authors><n_citation>15</n_citation><doc_type>Journal</doc_type><references><reference>1540582803</reference><reference>1991036539</reference><reference>1996360405</reference><reference>2036085017</reference><reference>2131256658</reference></references><venue id="124867444" type="J">International Journal of Computer Mathematics</venue><doi>10.1080/00207169108803976</doi><keywords><keyword weight="0.50623">Parallel algorithm</keyword><keyword weight="0.4995">Cryptography</keyword><keyword weight="0.56011">Modular arithmetic</keyword><keyword weight="0.45726">Arithmetic</keyword><keyword weight="0.54216">Radix</keyword><keyword weight="0.51147">Encryption</keyword><keyword weight="0.53343">Multiplication</keyword><keyword weight="0.51017">Modular design</keyword><keyword weight="0.48935">Public-key cryptography</keyword><keyword weight="0.38542">Mathematics</keyword></keywords><publisher>Gordon and Breach Science Publishers</publisher><abstract>Details are given here of how to generalise Brickellu0027s fast modular multiplication algorithm to when the number representations have a general 2-power radix. Correct action depends upon the satisfaction of a complicated inequality and speed upon the use of a redundant number system to enable parallel digit operations. The effect of varying the radix on the efficiency of hardware implementations is considered. Improved efficiency has repercussions in public key cryptography where the RSA encryption scheme may use this type of algorithm for its modular exponentiations. However, it is shown that there is no advantage in taking a very large radix, although a small increase above 2 is beneficial.</abstract></paper>