<paper id="1890547763"><title>Inclusion Constraints over Non-empty Sets of Trees</title><year>1997</year><authors><author org="Universität des Saarlandes" id="2118980363">Martin Müller</author><author org="Universität des Saarlandes" id="218987050">Joachim Niehren</author><author org="Max Planck Institut für Informatik,#TAB#" id="2284941451">Andreas Podelski</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>30151932</reference><reference>63829728</reference><reference>1539211927</reference><reference>1548151249</reference><reference>1563226317</reference><reference>1602567617</reference><reference>1941645576</reference><reference>1963954367</reference><reference>1973745704</reference><reference>1999968383</reference><reference>2022443117</reference><reference>2033074970</reference><reference>2056241458</reference><reference>2089769176</reference><reference>2098994345</reference><reference>2102389857</reference><reference>2120254577</reference><reference>2125402034</reference><reference>2142423074</reference><reference>2163545305</reference><reference>2165243410</reference><reference>2953726733</reference></references><venue id="2756386172" type="C">Colloquium on trees in Algebra and Programming</venue><doi>10.1007/BFb0030609</doi><keywords><keyword weight="0.46519">Discrete mathematics</keyword><keyword weight="0.54568">Empty set</keyword><keyword weight="0.4532">Negation</keyword><keyword weight="0.52294">Boolean satisfiability problem</keyword><keyword weight="0.61034">Constraint programming</keyword><keyword weight="0.49636">Operator (computer programming)</keyword><keyword weight="0.45318">If and only if</keyword><keyword weight="0.431">Mathematics</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>We present a new constraint system called Ines. Its constraints are conjunctions of inclusions \(t_1 \subseteq t_2\)between first-order terms (without set operators) which are interpreted over non-empty sets of trees. The existing systems of set constraints can express Ines constraints only if they include negation. Their satisfiability problem is NEXPTIME-complete. We present an incremental algorithm that solves the satisfiability problem of Ines constraints in cubic time. We intend to apply Ines constraints for type analysis for a concurrent constraint programming language.</abstract></paper>