<paper id="1541380194"><title>A Monad for Basic Java Semantics</title><year>2000</year><authors><author org="University of Nijmegen" id="2105127320">Bart Jacobs</author><author org="University of Nijmegen" id="2149911619">Erik Poll</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>1486988856</reference><reference>1509854283</reference><reference>1544646281</reference><reference>1551355572</reference><reference>1566009901</reference><reference>1644882639</reference><reference>1661076342</reference><reference>1923766689</reference><reference>1985275803</reference><reference>1997143185</reference><reference>2057835515</reference><reference>2104506944</reference><reference>2113486906</reference><reference>2131664385</reference></references><venue id="1191172908" type="C">Algebraic Methodology and Software Technology</venue><doi>10.1007/3-540-45499-3_12</doi><keywords><keyword weight="0.66442">Denotational semantics of the Actor model</keyword><keyword weight="0.64759">Operational semantics</keyword><keyword weight="0.46316">Programming language</keyword><keyword weight="0.61889">Normalisation by evaluation</keyword><keyword weight="0.42954">Computer science</keyword><keyword weight="0.65564">Denotational semantics</keyword><keyword weight="0.63607">Action semantics</keyword><keyword weight="0.43349">Theoretical computer science</keyword><keyword weight="0.61396">Generics in Java</keyword><keyword weight="0.63017">Java Modeling Language</keyword><keyword weight="0.56746">Java</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes the role of a computational monad in the denotational semantics of sequential Java and investigates some of its properties. This denotational semantics is an abstraction of the one used for the verification of (sequential) Java programs using proof tools, see [11,15].</abstract></paper>