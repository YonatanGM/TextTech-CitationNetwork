<paper id="1603994548"><title>Tool support for object-oriented patterns</title><year>1997</year><authors><author org="Utrecht University" id="2056978407">Gert Florijn</author><author org="Utrecht University" id="2084933316">Marco Meijers</author><author org="Utrecht University" id="2060432334">Pieter van Winsen</author></authors><n_citation>176</n_citation><doc_type>Conference</doc_type><references><reference>2086970510</reference><reference>2095444212</reference><reference>2121984483</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/BFb0053391</doi><keywords><keyword weight="0.0">Design elements and principles</keyword><keyword weight="0.4499">Programming language</keyword><keyword weight="0.54374">Object-oriented programming</keyword><keyword weight="0.5803">Adapter pattern</keyword><keyword weight="0.44076">Computer science</keyword><keyword weight="0.65631">Structural pattern</keyword><keyword weight="0.63764">Software design pattern</keyword><keyword weight="0.44528">Theoretical computer science</keyword><keyword weight="0.47429">Software</keyword><keyword weight="0.59826">Architectural pattern</keyword><keyword weight="0.5805">Design pattern</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A software (design) pattern describes a general solution for a recurring design problem. The solution is mostly described in terms of an abstract design structure expressed in design elements such as classes, methods and relationships (inheritance, associations).</abstract></paper>