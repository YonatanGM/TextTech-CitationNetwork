<paper id="1484630028"><title>Scheduling System Verification</title><year>1999</year><authors><author org="Institute of Information science, Academia Sinica" id="1991423812">Pao-Ann Hsiung</author><author org="Institute of Information science, Academia Sinica" id="2128555674">Farn Wang</author><author org="Institute of Information science, Academia Sinica" id="2643446860">Yue-Sun Kuo</author></authors><n_citation>5</n_citation><doc_type>Conference</doc_type><references><reference>1702973254</reference><reference>2109488193</reference><reference>2117087357</reference><reference>2117189826</reference><reference>2145132630</reference><reference>2145680671</reference><reference>2147904999</reference><reference>2153439859</reference><reference>2155198478</reference><reference>2166071597</reference><reference>2166440675</reference><reference>2169147056</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-49059-0_2</doi><keywords><keyword weight="0.71357">Fair-share scheduling</keyword><keyword weight="0.56571">Scheduling (computing)</keyword><keyword weight="0.4689">Computer science</keyword><keyword weight="0.61661">Flow shop scheduling</keyword><keyword weight="0.52089">Real-time operating system</keyword><keyword weight="0.67952">Two-level scheduling</keyword><keyword weight="0.68104">Rate-monotonic scheduling</keyword><keyword weight="0.68197">Dynamic priority scheduling</keyword><keyword weight="0.47561">Distributed computing</keyword><keyword weight="0.583">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A formal framework is proposed for the verification of complex real-time systems, modeled as client-server scheduling systems, using the popular model-checking approach. Model-checking is often restricted by the large state-space of complex real-time systems. The scheduling of tasks in such systems can be taken advantage of for model-checking. Our implementation and experiments corroborate the feasibility of such an approach. Wide-applicability, significant state-space reduction, and several scheduling semantics are some of the important features in our theory and implementation.</abstract></paper>