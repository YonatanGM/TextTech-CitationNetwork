<paper id="1833013272"><title>Topology B-Trees and Their Applications</title><year>1995</year><authors><author org="the Johns Hopkins University" id="2140125629">Paul B. Callahan</author><author org="the Johns Hopkins University" id="2135853928">Michael T. Goodrich</author><author org="the Johns Hopkins University" id="950640609">Kumar Ramaiyer</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>1536890784</reference><reference>1994101999</reference><reference>1999166624</reference><reference>2032660345</reference><reference>2038142281</reference><reference>2058384352</reference><reference>2068027817</reference><reference>2070991879</reference><reference>2071390192</reference><reference>2071866949</reference><reference>2097890715</reference><reference>2103893986</reference><reference>2115135558</reference><reference>2161694911</reference><reference>2169351022</reference><reference>2170933505</reference></references><venue id="1149998698" type="C">Workshop on Algorithms and Data Structures</venue><doi>10.1007/3-540-60220-8_78</doi><keywords><keyword weight="0.4546">Topology</keyword><keyword weight="0.64646">Succinct data structure</keyword><keyword weight="0.44167">Computer science</keyword><keyword weight="0.59938">Linked data structure</keyword><keyword weight="0.6029">Tree (data structure)</keyword><keyword weight="0.5899">Self-balancing binary search tree</keyword><keyword weight="0.63964">Binary tree</keyword><keyword weight="0.46187">Theoretical computer science</keyword><keyword weight="0.57685">Fractal tree index</keyword><keyword weight="0.58642">K-D-B-tree</keyword><keyword weight="0.58521">Quad-edge</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The well-known B-tree data structure provides a mechanism for dynamically maintaining balanced binary trees in external memory. We present an external-memory dynamic data structure for maintaining arbitrary binary trees. Our data structure, which we call the topology B-tree, is an external-memory analogue to the internal-memory topology tree data structure of Frederickson. It allows for dynamic expression evaluation and updates as well as various tree searching and evaluation queries. We show how to apply this data structure to a number of external-memory dynamic problems, including approximate nearest-neighbor searching and closest-pair maintenance.</abstract></paper>