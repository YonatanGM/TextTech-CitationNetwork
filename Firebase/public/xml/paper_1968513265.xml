<paper id="1968513265"><title>The well-founded semantics for general logic programs</title><year>1991</year><authors><author org="University of California at Santa Cruz, Santa Cruz," id="2155530763">Allen Van Gelder</author><author org="Sanford Univ., Stanford, CA" id="2116418223">Kenneth A. Ross</author><author org="Univ of Cincinnati, Cincinnati, OH" id="2004860627">John S. Schlipf</author></authors><n_citation>1505</n_citation><doc_type>Journal</doc_type><references><reference>56448634</reference><reference>194816663</reference><reference>203410698</reference><reference>1494051470</reference><reference>1524811847</reference><reference>1526625950</reference><reference>1533846661</reference><reference>1568715102</reference><reference>1600378632</reference><reference>1672891595</reference><reference>1766332311</reference><reference>1924904173</reference><reference>1966552757</reference><reference>1967701834</reference><reference>1981961379</reference><reference>1984890936</reference><reference>1985819576</reference><reference>1989783863</reference><reference>2003531456</reference><reference>2020077247</reference><reference>2024612361</reference><reference>2031868932</reference><reference>2057124712</reference><reference>2059144726</reference><reference>2088094394</reference><reference>2108911687</reference><reference>2111353076</reference><reference>2120465900</reference><reference>2132745831</reference><reference>2143382644</reference><reference>2157221482</reference><reference>2611415697</reference></references><venue id="118992489" type="J">Journal of the ACM</venue><doi>10.1145/116825.116838</doi><keywords><keyword weight="0.44453">Programming language</keyword><keyword weight="0.51117">Formal language</keyword><keyword weight="0.55199">Axiomatic semantics</keyword><keyword weight="0.52664">Deductive database</keyword><keyword weight="0.43207">Computer science</keyword><keyword weight="0.55239">Rule Interchange Format</keyword><keyword weight="0.50175">Negation as failure</keyword><keyword weight="0.58116">Stable model semantics</keyword><keyword weight="0.62166">Well-founded semantics</keyword><keyword weight="0.50819">Mathematical logic</keyword></keywords><publisher>ACM</publisher><abstract>A general logic program (abbreviated to "program" hereafter) is a set of roles that have both positive and negative subgoals. It is common to view a deductive database as a general logic program consisting of rules (IDB) slttmg above elementary relations (EDB, facts). It is desirable to associate one Herbrand model with a program and think of that model as the "meaning of the program, " or Its "declarative semantics. " Ideally, queries directed to the program would be answered in accordance with this model. Recent research indicates that some programs do not have a "satisfactory" total model; for such programs, the question of an appropriate partial model arises. Unfounded sets and well-founded partial models are introduced and the well-founded semantics of a program are defined to be its well-founded partial model. If the well-founded partial model is m fact a total model. it is called the well-founded model. It n shown that the class of programs possessing a total well-founded model properly includes previously studied classes of "stratified" and "locally stratified" programs, The method in this paper is also compared with other proposals in the literature, including Clarku0027s "program completion, " Fittingu0027s and Kunenu0027s 3-vahred interpretations of it, and the "stable models" of Gelfond and Lifschitz.</abstract></paper>