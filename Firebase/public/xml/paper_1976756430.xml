<paper id="1976756430"><title>Integral-Câ€”a practical environment for C programming</title><year>1987</year><authors><author org="CASE Division, Tektronix, Inc.#TAB#" id="2239447251">Graham Ross</author></authors><n_citation>30</n_citation><doc_type>Conference</doc_type><references><reference>2074193056</reference><reference>2083864961</reference><reference>2086879681</reference><reference>2124212956</reference><reference>2148238464</reference><reference>2166667085</reference><reference>2294979290</reference></references><venue id="2625784626" type="C">Software Engineering Symposium on Practical Software Development Environments</venue><doi>10.1145/24208.24214</doi><keywords><keyword weight="0.62419">Dead code elimination</keyword><keyword weight="0.62025">Dynamic compilation</keyword><keyword weight="0.47344">Programming language</keyword><keyword weight="0.44941">Computer science</keyword><keyword weight="0.58903">Debugger</keyword><keyword weight="0.62473">Compiler</keyword><keyword weight="0.65721">Single Compilation Unit</keyword><keyword weight="0.50761">User interface</keyword><keyword weight="0.63653">Algorithmic program debugging</keyword><keyword weight="0.59441">Debugging</keyword></keywords><publisher>ACM</publisher><abstract>Integral C 1 is an industrial grade integrated programming environment for C programming on an engineering workstation. A single interactive tool replaces a syntax checking editor, a compiler, and a source-level debugger. Its multi-window user interface allows program editing and animated source level debugging, tailored to the needs of a C programmer. The compiler accepts standard C code and reacts to editing changes with function-level incremental compilation. Compilation is done without prompting to maintain the client program in a ready-to-run state. Emitted code is instrumented to catch run-time errors and to permit fine grained debugging. Debugging support code is written in C in a u0027workspaceu0027, which grants it direct access to a local scope while keeping it separate from the client program.</abstract></paper>