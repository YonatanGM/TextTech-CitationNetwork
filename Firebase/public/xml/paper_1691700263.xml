<paper id="1691700263"><title>Bebop: A Symbolic Model Checker for Boolean Programs</title><year>2000</year><authors><author org="Microsoft Research,#TAB#" id="2121300700">Thomas Ball</author><author org="Microsoft Research,#TAB#" id="2083764764">Sriram K. Rajamani</author></authors><n_citation>364</n_citation><doc_type>Conference</doc_type><references><reference>1488659932</reference><reference>1491036809</reference><reference>1491178396</reference><reference>1504739534</reference><reference>1571819235</reference><reference>1589224558</reference><reference>1593165330</reference><reference>1596365597</reference><reference>1822320350</reference><reference>1905205673</reference><reference>1967031800</reference><reference>2025554746</reference><reference>2036157748</reference><reference>2074070820</reference><reference>2080267935</reference><reference>2080573945</reference><reference>2108959714</reference><reference>2110648791</reference><reference>2912904668</reference></references><venue id="2760802481" type="C">International workshop on Model Checking Software</venue><doi>10.1007/10722468_7</doi><keywords><keyword weight="0.46977">Locality</keyword><keyword weight="0.46528">Programming language</keyword><keyword weight="0.53871">Model checking</keyword><keyword weight="0.45367">Computer science</keyword><keyword weight="0.47549">Control flow</keyword><keyword weight="0.55237">Binary decision diagram</keyword><keyword weight="0.47724">Finite-state machine</keyword><keyword weight="0.45763">Theoretical computer science</keyword><keyword weight="0.56059">Boolean data type</keyword><keyword weight="0.48356">Source lines of code</keyword><keyword weight="0.46638">Data flow diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present the design, implementation and empirical evaluation of Bebopâ€”a symbolic model checker for boolean programs. Bebop represents control flow explicitly, and sets of states implicitly using BDDs. By harnessing the inherent modularity in procedural abstraction and exploiting the locality of variable scoping, Bebop is able to model check boolean programs with several thousand lines of code, hundreds of procedures, and several thousand variables in a few minutes.</abstract></paper>