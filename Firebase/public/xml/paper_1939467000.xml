<paper id="1939467000"><title>JTS: tools for implementing domain-specific languages</title><year>1998</year><authors><author org="Dept. of Comput. Sci., Texas Univ., Austin, TX, USA" id="2030271208">D. Batory</author><author org="University of Texas at Austin,#TAB#" id="2973330042">B. Lofaso</author><author org="University of Texas at Austin,#TAB#" id="197016611">Y. Smaragdakis</author></authors><n_citation>182</n_citation><doc_type>Conference</doc_type><references><reference>166724137</reference><reference>1906507375</reference><reference>1978220811</reference><reference>2002019859</reference><reference>2022475779</reference><reference>2023546887</reference><reference>2029786195</reference><reference>2036134187</reference><reference>2075253235</reference><reference>2077830885</reference><reference>2096314727</reference><reference>2102846053</reference><reference>2114739399</reference><reference>2115680394</reference><reference>2115703981</reference><reference>2128419413</reference><reference>2142510218</reference><reference>2149630848</reference><reference>2164791598</reference><reference>2174721749</reference></references><venue id="2756309959" type="C">International Conference on Software Reuse</venue><doi>10.1109/ICSR.1998.685739</doi><keywords><keyword weight="0.60391">Domain-specific language</keyword><keyword weight="0.5401">Data structure</keyword><keyword weight="0.47349">Programming language</keyword><keyword weight="0.4754">Suite</keyword><keyword weight="0.47339">Software engineering</keyword><keyword weight="0.42372">Digital subscriber line</keyword><keyword weight="0.45212">Computer science</keyword><keyword weight="0.57123">High-level programming language</keyword><keyword weight="0.51536">Software maintenance</keyword><keyword weight="0.52272">Java</keyword><keyword weight="0.0">Programming profession</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The Jakarta Tool Suite (JTS) aims to reduce substantially the cost of generator development by providing domain-independent tools for creating domain-specific languages and component-based generators called GenVoca generators. JTS is a set of precompiler-compiler tools for extending industrial programming languages (e.g., Java) with domain-specific constructs. JTS is itself a GenVoca generator where precompilers for JTS-extended languages are constructed from components.</abstract></paper>