<paper id="1982801224"><title>On the sequential nature of unification</title><year>1984</year><authors><author org="Brown University, Providence, RI" id="2940909754">Cynthia Dwork</author><author org="Brown University, Providence, RI" id="2035018311">Paris C. Kanellakis</author><author org="" id="2125383417">John C. Mitchell</author></authors><n_citation>191</n_citation><doc_type>Journal</doc_type><references><reference>1969777579</reference><reference>1974040526</reference><reference>1992520783</reference><reference>2000346568</reference><reference>2004618348</reference><reference>2059378738</reference><reference>2081848946</reference><reference>2086825382</reference><reference>2090626768</reference><reference>2100738443</reference><reference>2113722134</reference><reference>2166822586</reference><reference>2293235079</reference></references><venue id="86488779" type="J">Journal of Logic Programming</venue><doi>10.1016/0743-1066(84)90022-0</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.47706">Discrete mathematics</keyword><keyword weight="0.47572">Binary logarithm</keyword><keyword weight="0.47669">Combinatorics</keyword><keyword weight="0.52341">Parallel algorithm</keyword><keyword weight="0.54161">Upper and lower bounds</keyword><keyword weight="0.52933">Unification</keyword><keyword weight="0.44089">Algorithm</keyword><keyword weight="0.55556">Directed acyclic graph</keyword><keyword weight="0.0">String representation</keyword><keyword weight="0.42069">Mathematics</keyword><keyword weight="0.44012">Computation</keyword></keywords><publisher>Elsevier Science Inc.</publisher><abstract>Abstract The problem of unification of terms is log-space complete for P. In deriving this lower bound no use is made of the potentially concise representation of terms by directed acyclic graphs. In addition, the problem remains complete even if infinite substitutions are allowed. A consequence of this result is that parallelism cannot significantly improve on the best sequential solutions for unification. However, we show that for the problem of term matching, an important subcase of unification, there is a good parallel algorithm using O ( log 2 n ) time and n O(1) processors on a PRAM. For the O ( log 2 n ) parallel time upper bound we assume that the terms are represented by directed acyclic graphs; if the longer string representation is used we obtain an O ( log n ) parallel time bound.</abstract></paper>