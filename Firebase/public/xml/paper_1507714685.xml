<paper id="1507714685"><title>A Concrete Method for Developing and Applying Product Line Architectures</title><year>2002</year><authors><author org="Fraunhofer Institute Experimental Software Engineering (IESE)" id="1989686208">Michalis Anastasopoulos</author><author org="Fraunhofer Institute Experimental Software Engineering (IESE)" id="2110818429">Colin Atkinson</author><author org="Fraunhofer Institute Experimental Software Engineering (IESE)" id="2974689217">Dirk Muthig</author></authors><n_citation>3</n_citation><doc_type /><references><reference>1487672899</reference><reference>1554977156</reference><reference>1594445969</reference><reference>1978591382</reference><reference>2167500728</reference><reference>2484488762</reference></references><venue id="" type="">NODe '02 Revised Papers from the International Conference NetObjectDays on Objects, Components, Architectures, Services, and Applications for a Networked World</venue><doi>10.1007/3-540-36557-5_22</doi><keywords><keyword weight="0.60787">Product engineering</keyword><keyword weight="0.44068">Architecture</keyword><keyword weight="0.45759">Systems engineering</keyword><keyword weight="0.60059">Feature model</keyword><keyword weight="0.65941">Software product line</keyword><keyword weight="0.5829">Product design specification</keyword><keyword weight="0.52622">Software development process</keyword><keyword weight="0.3938">Engineering</keyword><keyword weight="0.53277">Software development</keyword><keyword weight="0.47749">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Software development organizations are often deterred from introducing product line architectures by the lack of simple, ready-touse methods for developing and applying them. The well-known, published product-line-engineering methods tend to focus on the early stages of the software life cycle and address product line issues at a high-level of abstraction. Connecting product-line concepts with established implementation technologies is thus largely left to the user.This paper introduces a method, known as the KobrA method, which addresses this problem by enabling product line concerns to be coupled with regular (nonproduct line) architectural artifacts, and thus introduced incrementally. By explaining how the method can be understood as a concrete instantiation of the well-established PuLSE-DSSA product-line architecture approach, the paper clarifies the product line features of the KobrA method and illustrates how they can be used in tandem with established, general-purpose product line methods.</abstract></paper>