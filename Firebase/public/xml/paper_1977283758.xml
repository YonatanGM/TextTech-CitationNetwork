<paper id="1977283758"><title>Towards Verifying Model Transformations</title><year>2008</year><authors><author org="Institute for Software Integrated Systems, Vanderbilt University, Nashville, TN 37235, USA#TAB#" id="2145216660">Anantha Narayanan</author><author org="Institute for Software Integrated Systems, Vanderbilt University, Nashville, TN 37235, USA#TAB#" id="98427819">Gabor Karsai</author></authors><n_citation>61</n_citation><doc_type>Journal</doc_type><references><reference>116431634</reference><reference>1497879578</reference><reference>1516486508</reference><reference>1537720651</reference><reference>1847099921</reference><reference>1977237988</reference><reference>1988633486</reference><reference>2014019774</reference><reference>2017362344</reference><reference>2019952623</reference><reference>2099529102</reference><reference>2115309705</reference><reference>2120926795</reference><reference>2124789887</reference><reference>2134001468</reference></references><venue id="50368787" type="J">Electronic Notes in Theoretical Computer Science</venue><doi>10.1016/j.entcs.2008.04.041</doi><keywords><keyword weight="0.56857">Design language</keyword><keyword weight="0.42471">Discrete mathematics</keyword><keyword weight="0.46905">Computer science</keyword><keyword weight="0.47525">Theoretical computer science</keyword><keyword weight="0.5979">Semantic equivalence</keyword><keyword weight="0.56327">Bisimulation</keyword><keyword weight="0.58367">Graph rewriting</keyword><keyword weight="0.55318">Semantics</keyword><keyword weight="0.56078">Software development</keyword></keywords><publisher>Elsevier Science Publishers B. V.</publisher><abstract>In model-based software development, a complete design and analysis process involves designing the system using the design language, converting it into the analysis language, and performing the verification and analysis on the analysis model. Graph transformation is increasingly being used to automate this conversion. In such a scenario, it is very important that the conversion preserves the semantics of the design model. This paper discusses an approach to verify this semantic equivalence for each transformation. We will show how to check whether a particular transformation resulted in an output model that preserves the semantics of the input model with respect to a particular property.</abstract></paper>