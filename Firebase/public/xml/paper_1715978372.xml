<paper id="1715978372"><title>Partition Refinement in Real-Time Model Checking</title><year>1998</year><authors><author org="Delft University of Technology" id="1993235944">R. F. Lutje Spelberg</author><author org="Delft University of Technology" id="350711484">Hans Toetenel</author><author org="Delft University of Technology" id="2693089646">Marcel Ammerlaan</author></authors><n_citation>28</n_citation><doc_type>Journal</doc_type><references><reference>130102441</reference><reference>1482233117</reference><reference>1486308576</reference><reference>1503973138</reference><reference>1574289075</reference><reference>1599105192</reference><reference>1863150103</reference><reference>2004463571</reference><reference>2101508170</reference><reference>2117189826</reference><reference>2118802216</reference><reference>2124778357</reference><reference>2130773092</reference><reference>2147340401</reference><reference>2943445139</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/BFb0055344</doi><keywords><keyword weight="0.64769">Abstraction model checking</keyword><keyword weight="0.63833">Model checking</keyword><keyword weight="0.46506">Computer science</keyword><keyword weight="0.4676">Algorithm</keyword><keyword weight="0.55247">Formal specification</keyword><keyword weight="0.47369">Theoretical computer science</keyword><keyword weight="0.47755">Canonical form</keyword><keyword weight="0.49931">Reachability</keyword><keyword weight="0.51623">System requirements specification</keyword><keyword weight="0.65849">Partition refinement</keyword><keyword weight="0.46466">Software development</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Many successful model checking tools for real-time systems are based on pure forward or backward reachability analysis. In this paper we present a real-time model checker that is based on a different approach, namely partition refinement. Partition refinement was applied before in real-time model checking, but never resulted, to our knowledge, in tools with competitive performance. Our partition refinement algorithm is inspired by currently existing ones for real-time systems, and operates on a product structure of a system specification and a property specification. A key aspects of our approach is that, unlike other real-time model checking approaches, we do not use a canonical representation like DBMâ€™s to manipulate regions. Instead we solely use the splitting history generated by the partition refinement algorithm. This paper presents our model checking technique, and reports on first experiences with a first implementation, comparing its performance to that of other model checkers.</abstract></paper>