<paper id="1511227906"><title>Paths to High-Performance Automated Theorem Proving</title><year>1986</year><authors><author org="Argonne National Laboratory,#TAB#" id="2951788192">Ralph Butler</author><author org="Argonne National Laboratory,#TAB#" id="1977610862">Ewing L. Lusk</author><author org="Argonne National Laboratory,#TAB#" id="2113235922">William McCune</author><author org="Argonne National Laboratory,#TAB#" id="2444423396">Ross A. Overbeek</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>1519434182</reference><reference>1571035569</reference><reference>1587968455</reference><reference>1974462798</reference><reference>2044493912</reference><reference>2085193930</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-16780-3_123</doi><keywords><keyword weight="0.46122">Data processing</keyword><keyword weight="0.46073">Computer science</keyword><keyword weight="0.60073">Automated theorem proving</keyword><keyword weight="0.0">Parallel processing</keyword><keyword weight="0.46246">Expert system</keyword><keyword weight="0.46233">Algorithm</keyword><keyword weight="0.46472">Theoretical computer science</keyword><keyword weight="0.52121">Multiprocessing</keyword><keyword weight="0.47893">Database index</keyword><keyword weight="0.53807">Lemma (mathematics)</keyword><keyword weight="0.51007">Mathematical logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present four components of a strategy for the implementation of high-performance automated theorem proving systems. These are 1) clause compilation, 2) multiprocessing, 3) database indexing, and 4) clause-set "compaction". We describe each of these techniques and show how they can be integrated into a coherent system with significantly higher performance than traditional systems. The strategy described has been implemented, and we present results showing the effects of these techniques on Samu0027s Lemma, a relatively difficult theorem-proving problem.</abstract></paper>