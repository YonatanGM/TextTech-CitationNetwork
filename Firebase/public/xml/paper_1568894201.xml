<paper id="1568894201"><title>Assertion-based encapsulation, object invariants and simulations</title><year>2004</year><authors><author org="Dept. of Computer Science, Stevens Institute of Technology, Hoboken, NJ" id="2237376846">David A. Naumann</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>1489778371</reference><reference>1504633425</reference><reference>1506069583</reference><reference>1510845095</reference><reference>1533043085</reference><reference>1556422878</reference><reference>1573044584</reference><reference>1593874741</reference><reference>1872021412</reference><reference>1979366339</reference><reference>1982262311</reference><reference>1995008247</reference><reference>1998070736</reference><reference>2002295687</reference><reference>2005978190</reference><reference>2013368693</reference><reference>2030601112</reference><reference>2035529004</reference><reference>2039330009</reference><reference>2062538260</reference><reference>2066994855</reference><reference>2108379418</reference><reference>2110050316</reference><reference>2122971020</reference><reference>2130111506</reference><reference>2130404229</reference><reference>2132138104</reference><reference>2137628566</reference><reference>2139722010</reference><reference>2149412346</reference><reference>2151131364</reference><reference>2153122714</reference><reference>2156428492</reference><reference>2160456755</reference><reference>2161825580</reference><reference>2162844904</reference><reference>2167500728</reference><reference>2171685273</reference><reference>2328819335</reference><reference>2592015105</reference><reference>2789839712</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1007/11561163_11</doi><keywords><keyword weight="0.4079">Faddeevâ€“Popov ghost</keyword><keyword weight="0.46104">Programming language</keyword><keyword weight="0.51432">Object-oriented programming</keyword><keyword weight="0.4505">Computer science</keyword><keyword weight="0.48358">Assertion</keyword><keyword weight="0.45251">Theoretical computer science</keyword><keyword weight="0.42319">Invariant (mathematics)</keyword><keyword weight="0.47434">Component-based software engineering</keyword><keyword weight="0.47065">Formal methods</keyword><keyword weight="0.46186">Software development</keyword><keyword weight="0.44558">Reentrancy</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In object-oriented programming, reentrant method invocations and shared references make it difficult to achieve adequate encapsulation for sound modular reasoning. This tutorial paper surveys recent progress using auxiliary state (ghost fields) to describe and achieve encapsulation. Encapsulation is assessed in terms of modular reasoning about invariants and simulations.</abstract></paper>