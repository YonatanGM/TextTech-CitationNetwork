<paper id="1502462097"><title>Handling Dynamic Changes in Decentralized Workflow Execution Environments</title><year>2003</year><authors><author org="Rutgers University" id="2100792061">Vijayalakshmi Atluri</author><author org="Seton Hall, University" id="2170702075">Soon Ae Chun</author></authors><n_citation>16</n_citation><doc_type>Conference</doc_type><references><reference>1487614255</reference><reference>1509665243</reference><reference>1564775810</reference><reference>1996983098</reference><reference>2062756186</reference><reference>2104567554</reference><reference>2913036292</reference></references><venue id="1192664773" type="C">Database and Expert Systems Applications</venue><doi>10.1007/978-3-540-45227-0_79</doi><keywords><keyword weight="0.65097">Business process management</keyword><keyword weight="0.7904">Workflow technology</keyword><keyword weight="0.60561">Business process</keyword><keyword weight="0.45192">Computer science</keyword><keyword weight="0.69697">XPDL</keyword><keyword weight="0.81432">Workflow engine</keyword><keyword weight="0.69116">Workflow</keyword><keyword weight="0.64349">Event-driven process chain</keyword><keyword weight="0.79399">Workflow management system</keyword><keyword weight="0.45051">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Often, real world business processes are constantly changing and dynamic in nature. These runtime changes may stem from various requirements, such as changes to the goals of the business process, changes to the business rules of the organization, or exceptions arising during the workflow execution. Unfortunately, traditional workflow management systems do not provide sufficient flexibility to accommodate such dynamic and adaptive workflows that support run-time changes of in-progress workflow instances. Moreover, traditional workflow management is accomplished by a single centralized workflow management engine, which may not only be a performance bottleneck, but also unsuitable for the emerging internet-based commerce and service environments where workflows may span many organizations that are autonomous. In this paper, we propose a formal model for a decentralized workflow change management (DWFCM) that uses a rules topic ontology and a service ontology to support the needed run-time flexibilty. We present a system architecture and the workflow adaptation process that generates a new workflow that is migration consistent with the original workflow.</abstract></paper>