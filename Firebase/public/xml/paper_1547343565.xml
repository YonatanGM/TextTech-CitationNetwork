<paper id="1547343565"><title>Web Supported Enactment of Petri-Net Based Workflows with XRL/Flower</title><year>2004</year><authors><author org="Eindhoven University of Technology, Faculty of Technology and Management" id="2073522189">Alexander Norta</author></authors><n_citation>10</n_citation><doc_type>Conference</doc_type><references><reference>1488686984</reference><reference>1500350767</reference><reference>1787000688</reference><reference>1828923228</reference><reference>2113733577</reference><reference>2129466958</reference><reference>2131449282</reference><reference>2143753066</reference><reference>2165966768</reference><reference>2808682513</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/978-3-540-27793-4_30</doi><keywords><keyword weight="0.45688">Programming language</keyword><keyword weight="0.50868">Petri net</keyword><keyword weight="0.51833">XML</keyword><keyword weight="0.44825">Computer science</keyword><keyword weight="0.46687">Control flow</keyword><keyword weight="0.45945">Program analysis</keyword><keyword weight="0.48142">Workflow</keyword><keyword weight="0.46994">Java</keyword><keyword weight="0.44438">Distributed computing</keyword><keyword weight="0.52779">Web server</keyword><keyword weight="0.47071">The Internet</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper describes concepts and features of a Web-based system called XRL/flower for carrying out Petri-net based workflows described with XRL (eXchangeable Routing Language). XRL/flower uses XML technology and is implemented in Java on top of the Petri-net Kernel PNK. Standard XML tools can be deployed to parse, check, and handle XRL documents. The XRL enactment application is complemented with a Web server, allowing actors to interact with the system through the internet. A database allows the enactment engine and the Web server to exchange information with each other. Since XRL is instance based, a modelled workflow serves as a template that needs to be copied and may be possibly refined for enactment. For that purpose XRL constructs are automatically translated into Petri-net constructs. As a result, the system is easy to extend: For supporting a new control flow primitive, the engine itself does not need to change. Furthermore, the Petri net representation can be analyzed using state-of-the-art analysis techniques and tools.</abstract></paper>