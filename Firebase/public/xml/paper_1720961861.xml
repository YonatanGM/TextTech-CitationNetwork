<paper id="1720961861"><title>Lineage tracing in a data warehousing system</title><year>2000</year><authors><author org="Dept. of Comput. Sci., Stanford Univ., CA, USA#TAB#" id="2096332374">Y. Cui</author><author org="" id="671527850">J. Widom</author></authors><n_citation>17</n_citation><doc_type>Conference</doc_type><references><reference>1494307597</reference><reference>1899647947</reference><reference>1983178058</reference><reference>2146740661</reference></references><venue id="1163988186" type="C">International Conference on Data Engineering</venue><doi>10.1109/ICDE.2000.839493</doi><keywords><keyword weight="0.55143">Data warehouse</keyword><keyword weight="0.43699">Data mining</keyword><keyword weight="0.43163">Computer science</keyword><keyword weight="0.0">Data warehouses data mining</keyword><keyword weight="0.4327">Database</keyword><keyword weight="0.56693">Tracing</keyword></keywords><publisher>Stanford InfoLab</publisher><abstract>Some commercial data warehousing systems support schema-level lineage tracing, or provide specialized drill-down and/or drill-through facilities for multi-dimensional warehouse views. Our lineage tracing system supports more fine-grained instance-level lineage tracing for arbitrarily complex relational views, including aggregation. At view definition time, our system automatically generates lineage tracing procedures and supporting auxiliary views. At lineage tracing time, the system applies the tracing procedures to the source tables and/or auxiliary views to obtain the lineage results and to illustrate the specific view data derivation process.</abstract></paper>