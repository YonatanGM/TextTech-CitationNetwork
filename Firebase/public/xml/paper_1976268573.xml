<paper id="1976268573"><title>Bisimulation through probabilistic testing</title><year>1991</year><authors><author org="Department of Mathematics and Computer Science, Aalborg University Center, 9000 Aalborg, Denmark" id="2146581609">Kim G. Larsen</author><author org="Department of Mathematics and Computer Science, Aalborg University Center, 9000 Aalborg, Denmark" id="2156490652">Arne Skou</author></authors><n_citation>1014</n_citation><doc_type>Journal</doc_type><references><reference>1487199072</reference><reference>1489099913</reference><reference>1547562281</reference><reference>1978469611</reference><reference>2001748564</reference><reference>2137865376</reference><reference>2157144873</reference><reference>2167004912</reference><reference>2171536993</reference><reference>2913461254</reference></references><venue id="59933527" type="J">Information &amp; Computation</venue><doi>10.1016/0890-5401(91)90030-6</doi><keywords><keyword weight="0.44374">Discrete mathematics</keyword><keyword weight="0.4885">Hennessy–Milner logic</keyword><keyword weight="0.4642">Theoretical computer science</keyword><keyword weight="0.45215">Artificial intelligence</keyword><keyword weight="0.65802">Bisimulation</keyword><keyword weight="0.55121">Probabilistic logic</keyword><keyword weight="0.52774">Simulation language</keyword><keyword weight="0.51858">Simulation preorder</keyword><keyword weight="0.42178">Mathematics</keyword><keyword weight="0.50019">Semantic data model</keyword></keywords><publisher>Academic Press</publisher><abstract>Abstract We propose a language for testing concurrent processes and examine its strength in terms of the processes that are distinguished by a test. By using probabilistic transition systems as the underlying semantic model, we show how a testing algorithm can distinguish, with a probability arbitrarily close to one, between processes that are not bisimulation equivalent. We also show a similar result (in a slightly stronger form) for a new process relation called 2 3 - bisimulation —which lies strictly between that of simulation and bisimulation. Finally, the ultimately strength of the testing language is shown to identify a new process relation called probabilistic bisimulation—which is strictly stronger than bisimulation.</abstract></paper>