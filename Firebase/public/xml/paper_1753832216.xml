<paper id="1753832216"><title>Code generation from two-level denotational meta-languages</title><year>1985</year><authors><author org="Aalborg University Centre" id="2057873166">Flemming Nielson</author><author org="Aalborg University Centre" id="2345078223">Hanne Riis Nielson</author></authors><n_citation>14</n_citation><doc_type /><references><reference>1482690958</reference><reference>1544344167</reference><reference>1577579001</reference><reference>1586657822</reference><reference>1980685577</reference><reference>1987031623</reference><reference>2004468084</reference><reference>2024873396</reference><reference>2071836561</reference><reference>2088604010</reference><reference>2098780004</reference><reference>2113757735</reference><reference>2130552670</reference><reference>2141956765</reference></references><venue id="" type="">Programs as Data Objects, Proceedings of a Workshop</venue><doi>10.1007/3-540-16446-4_11</doi><keywords><keyword weight="0.56498">Static program analysis</keyword><keyword weight="0.47927">Programming language</keyword><keyword weight="0.64084">Programming language specification</keyword><keyword weight="0.5132">Expression (mathematics)</keyword><keyword weight="0.53352">Abstract interpretation</keyword><keyword weight="0.4553">Computer science</keyword><keyword weight="0.58794">Compiler</keyword><keyword weight="0.59774">Code generation</keyword><keyword weight="0.45744">Theoretical computer science</keyword><keyword weight="0.54565">Abstract machine</keyword><keyword weight="0.50963">Primitive data type</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The use of a two-level meta-language in denotational language definitions makes it possible to distinguish between compile-time entities and run-time entities. This is important for language specification and it allows one to formalize Tennents [18] informal distinction between static expressions and expressions. The automatic generation of compilers also benefits from an explicit distinction between run-time and compile-time in the language specification. A theory of abstract interpretation has been developed for the meta-language</abstract></paper>