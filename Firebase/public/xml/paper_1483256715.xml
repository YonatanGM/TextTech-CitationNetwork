<paper id="1483256715"><title>A Fully Abstract Semantics for Data Flow Nets</title><year>1987</year><authors><author org="Centre for Mathematics and Computer Science" id="2140016166">Joost N. Kok</author></authors><n_citation>39</n_citation><doc_type>Conference</doc_type><references><reference>202430707</reference><reference>1480089038</reference><reference>1535347731</reference><reference>1597755753</reference><reference>1872145581</reference><reference>1925808657</reference><reference>1969363947</reference><reference>2028621470</reference><reference>2046381502</reference><reference>2072134574</reference><reference>2161077946</reference></references><venue id="2754330098" type="C">International Conference on Parallel Architectures and Languages Europe</venue><doi>10.1007/3-540-17945-3_20</doi><keywords><keyword weight="0.45352">Programming language</keyword><keyword weight="0.61099">Tuple</keyword><keyword weight="0.52125">Sequence</keyword><keyword weight="0.44302">Computer science</keyword><keyword weight="0.46437">Theoretical computer science</keyword><keyword weight="0.50591">Equivalence (measure theory)</keyword><keyword weight="0.51004">Semantics</keyword><keyword weight="0.5328">Data flow diagram</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Two semantic models for data flow nets are given. The first model is an intuitive, operational model. This model has an important drawback: it is not compositional. An example given in [Brock u0026 Ackerman 1981] shows the non-compositionality of our model. There exist two nets that have the same semantics, but when they are placed in a specific context, the semantics of the resulting nets differ. The second one is obtained by adding information to the first model. The amount of information is enough to make it compositional. Moreover, we show that we have added the minimal amount of information to make the model compositional: the second model is fully abstract with respect to the equivalence generated by the first model. To be more specific: the first model describes the semantics a data flow net as a function from (tuples of) sequences of tokens to sets of (tuples of) sequences of tokens. The second one maps a data flow net to a function from (tuples of) infinite sequences of finite words tO sets of (tuples of) infinite sequences of finite words.</abstract></paper>