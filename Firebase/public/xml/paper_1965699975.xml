<paper id="1965699975"><title>Analysis of free-storage algorithms: revisited</title><year>1984</year><authors><author org="Thomas J. Watson Research Center, Yorktown Heights, New York#TAB#" id="2974605872">G. Bozman</author><author org="Thomas J. Watson Research Center, Yorktown Heights, New York#TAB#" id="2974829935">W. Buco</author><author org="Thomas J. Watson Research Center, Yorktown Heights, New York#TAB#" id="2701474747">T. P. Daly</author><author org="Thomas J. Watson Research Center, Yorktown Heights, New York#TAB#" id="2011817664">W. H. Tetzlaff</author></authors><n_citation>25</n_citation><doc_type>Journal</doc_type><references><reference>12828308</reference><reference>1966709263</reference><reference>1973888742</reference><reference>1992594570</reference><reference>1995408455</reference><reference>1996027765</reference><reference>2002307200</reference><reference>2022188633</reference><reference>2023362448</reference><reference>2024601452</reference><reference>2027743714</reference><reference>2029091666</reference><reference>2040304998</reference><reference>2069789831</reference><reference>2081291217</reference><reference>2088787213</reference><reference>2091160962</reference><reference>2127527141</reference><reference>2157282184</reference><reference>2336679799</reference></references><venue id="112676551" type="J">Ibm Systems Journal</venue><doi>10.1147/sj.231.0044</doi><keywords><keyword weight="0.52122">Virtual machine</keyword><keyword weight="0.52898">Linked list</keyword><keyword weight="0.45518">Computer science</keyword><keyword weight="0.45458">Algorithm</keyword><keyword weight="0.4445">Fragmentation (computing)</keyword><keyword weight="0.56637">Storage efficiency</keyword><keyword weight="0.46907">Control system</keyword><keyword weight="0.42432">Partition (number theory)</keyword><keyword weight="0.48397">Statistical assumption</keyword><keyword weight="0.44928">Database</keyword></keywords><publisher>IBM</publisher><abstract>Most research in free-storage management has centered around strategies that search a linked list and strategies that partition storage into predetermined sizes. Such algorithms are analyzed in terms of CPU efficiency and storage efficiency. The subject of this study is the free-storage management in the Virtual Machine/System Product (VM/SP) system control program. As a part of this study, simulations were done of established, and proposed, dynamic storage algorithms for the VM/SP operating system. Empirical evidence is given that simplifying statistical assumptions about the distribution of interarrival times and holding times has high predictive ability. Algorithms such as first-fit, modified first-fit, and best-fit are found to be CPU-inefficient. Buddy systems are found to be very fast but suffer from a high degree of internal fragmentation. A form of extended subpooling is shown to be as fast as buddy systems with improved storage efficiency. This algorithm was implemented for VM/SP, and then measured. Results for this algorithm are given for several production VM/SP systems.</abstract></paper>