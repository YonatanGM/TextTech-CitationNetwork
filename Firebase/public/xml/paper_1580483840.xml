<paper id="1580483840"><title>Graph Rewriting and Constraint Solving for Modelling Distributed Systems with Synchronization (Extended Abstract)</title><year>1996</year><authors><author org="Universita di Pisa" id="1970207042">Ugo Montanari</author><author org="Universita di Pisa" id="2602895354">Francesca Rossi</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>1512428151</reference><reference>1524794046</reference><reference>1539163926</reference><reference>1553093957</reference><reference>1574796876</reference><reference>2024875518</reference><reference>2030985429</reference><reference>2069683773</reference><reference>2072755230</reference><reference>2119456262</reference><reference>2135432705</reference><reference>2157740753</reference><reference>2984454117</reference></references><venue id="1141157497" type="C">International Conference on Coordination Models and Languages</venue><doi>10.1007/3-540-61052-9_36</doi><keywords><keyword weight="0.51125">Synchronization</keyword><keyword weight="0.59968">Local consistency</keyword><keyword weight="0.46731">Computer science</keyword><keyword weight="0.62775">Constraint graph</keyword><keyword weight="0.4788">Theoretical computer science</keyword><keyword weight="0.58758">Constraint satisfaction problem</keyword><keyword weight="0.56906">Concurrent constraint logic programming</keyword><keyword weight="0.61468">Graph rewriting</keyword><keyword weight="0.55658">Abstract semantic graph</keyword><keyword weight="0.56871">Graph (abstract data type)</keyword><keyword weight="0.47199">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this extended abstract we describe our approach to modelling the dynamics of distributed systems. For distributed systems we mean systems consisting of concurrent processes communicating via shared ports and posing certain synchronization requirements, via the ports, to the adjacent processes. We use graphs to represent states of such systems, and graph rewriting to represent their evolution. The kind of graph rewriting we use is based on simple context-free productions which are however combined by means of the synchronization mechanism. This allows for a good level of expressivity in the system without sacrifying full distribution. Moreover, to approach the problem of combining productions together, we suggest to exploit existing techniques for constraint solving. This is based on the observation that the combination problem can be modelled as a (finite domain) constraint problem. In this respect, we propose to use both local consistency techniques, to remove the possible redundancies in a system state, and a distributed backtracking search algorithm, as used in distributed constraint solving. Our method has two main advantages: first, it is completely formal and thus provides a precise description of the way a distributed system evolves; second, it also seems very promising from the performance point of view, since the techniques we propose to combine productions together have been proven very convenient in several cases.</abstract></paper>