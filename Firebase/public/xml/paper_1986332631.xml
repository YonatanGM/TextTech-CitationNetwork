<paper id="1986332631"><title>Application and experimental evaluation of state space reduction methods for deadlock analysis in Ada</title><year>1994</year><authors><author org="University of Illinois‐Chicago." id="2974386584">S. Duri</author><author org="University of Illinois‐Chicago." id="170738217">U. Buy</author><author org="University of Illinois‐Chicago." id="2067104120">R. Devarapalli</author><author org="University of Illinois‐Chicago." id="188044605">S. M. Shatz</author></authors><n_citation>48</n_citation><doc_type>Journal</doc_type><references><reference>1534926211</reference><reference>1563242841</reference><reference>1934074768</reference><reference>1968552123</reference><reference>1975060591</reference><reference>1984909114</reference><reference>1990553077</reference><reference>1995736448</reference><reference>1996158062</reference><reference>2047831585</reference><reference>2050278738</reference><reference>2072950666</reference><reference>2078853139</reference><reference>2090911428</reference><reference>2094159214</reference><reference>2103795018</reference><reference>2105180288</reference><reference>2109935657</reference><reference>2118895024</reference><reference>2124874799</reference><reference>2137968059</reference><reference>2141981779</reference><reference>2146485504</reference><reference>2153695920</reference><reference>2157597221</reference><reference>2159050141</reference></references><venue id="142627899" type="J">ACM Transactions on Software Engineering and Methodology</venue><doi>10.1145/201024.201038</doi><keywords><keyword weight="0.64433">Petri net</keyword><keyword weight="0.4672">Computer science</keyword><keyword weight="0.50002">Reachability</keyword><keyword weight="0.6479">Deadlock prevention algorithms</keyword><keyword weight="0.0">Deadlock analysis</keyword><keyword weight="0.0">State space reduction</keyword><keyword weight="0.0">State space generation</keyword><keyword weight="0.46816">Distributed computing</keyword></keywords><publisher>ACM</publisher><abstract>An emerging challenge for software engineering is the development of the methods and tools to aid design and analysis of concurrent and distributed software. Over the past few years, a number of analysis methods that focus on Ada tasking have been developed. Many of these methods are based on some form of reachability analysis, which has the advantage of being conceptually simple, but the disadvantage of being computationally expensive. We explore the effectiveness of various Petri net-based techniques for the automated deadlock analysis of Ada programs. Our experiments consider a variety of state space reduction methods both individually and in various combinations. The experiments are applied to a number of classical concurrent programs as well as a set of “real-world” programs. The results indicate that Petri net reduction and reduced state space generation are mutually beneficial techniques, and that combined approaches based on Petri net models are quite effective, compared to alternative analysis approaches.</abstract></paper>