<paper id="1611281168"><title>Interpreting the object constraint language</title><year>1998</year><authors><author org="Dept. of Comput., Brighton Polytech., UK" id="2924197948">A. Hamie</author><author org="" id="2012038289">J. Howse</author><author org="" id="2700825362">S. Kent</author></authors><n_citation>42</n_citation><doc_type>Conference</doc_type><references><reference>96999758</reference><reference>1486558948</reference><reference>1566214218</reference><reference>1583095677</reference><reference>1769049936</reference><reference>1879346405</reference><reference>2005819264</reference><reference>2065968974</reference><reference>2160019730</reference></references><venue id="1134663949" type="C">Asia-Pacific Software Engineering Conference</venue><doi>10.1109/APSEC.1998.733731</doi><keywords><keyword weight="0.46394">Programming language</keyword><keyword weight="0.4891">Object-oriented programming</keyword><keyword weight="0.51899">Unified Modeling Language</keyword><keyword weight="0.50507">Diagrammatic reasoning</keyword><keyword weight="0.61236">UML tool</keyword><keyword weight="0.4367">Computer science</keyword><keyword weight="0.55082">Object language</keyword><keyword weight="0.65159">Applications of UML</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.44462">Natural language processing</keyword><keyword weight="0.76609">Object Constraint Language</keyword><keyword weight="0.5222">Semantics</keyword></keywords><publisher>IEEE</publisher><abstract>The Object Constraint Language (OCL), which forms part of the UML 1.1. set of modelling notations is a precise, textual language for expressing constraints that cannot be shown in the standard diagrammatic notation used in UML. A semantics for OCL lays the foundation for building CASE tools that support integrity checking of whole UML models, not just the component expressed using OCL. This paper provides a semantics for OCL, at the same time providing a semantics for classes, associations, attributes and states.</abstract></paper>