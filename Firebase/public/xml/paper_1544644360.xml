<paper id="1544644360"><title>Subtyping with Union Types, Intersection Types and Recursive Types</title><year>1994</year><authors><author org="The Technical University of Denmark" id="2131625549">Flemming M. Damm</author></authors><n_citation>35</n_citation><doc_type>Conference</doc_type><references><reference>159905155</reference><reference>1775921724</reference><reference>2001507716</reference><reference>2007313703</reference><reference>2022443117</reference><reference>2027657506</reference><reference>2090415524</reference><reference>2098994345</reference><reference>2101085206</reference><reference>2123727486</reference><reference>2133654517</reference><reference>2293770661</reference></references><venue id="2756067413" type="C">International Conference on Theoretical Aspects of Computer Software</venue><doi>10.1007/3-540-57887-0_121</doi><keywords><keyword weight="0.4998">Decision problem</keyword><keyword weight="0.63163">Union type</keyword><keyword weight="0.4467">Algebra</keyword><keyword weight="0.42807">Computer science</keyword><keyword weight="0.42972">Algorithm</keyword><keyword weight="0.51321">Function type</keyword><keyword weight="0.63606">Algebraic data type</keyword><keyword weight="0.52089">Soundness</keyword><keyword weight="0.5293">Subtyping</keyword><keyword weight="0.49082">Completeness (statistics)</keyword><keyword weight="0.48555">Recursion</keyword></keywords><publisher>Springer Berlin Heidelberg</publisher><abstract>Union, intersection and recursive types are type constructions which make it possible to formulate very precise types. However, because of type checking difficulties related to the simultaneous use of these constructions, they have only found little use in programming languages. One of the problems is subtyping. We show how the subtype decision problem may be solved by an encoding into regular tree expressions, and prove soundness and completeness with respect to the classical ideal model for types [MPS86].</abstract></paper>