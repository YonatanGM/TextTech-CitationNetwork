<paper id="1563765474"><title>A DPA Attack against the Modular Reduction within a CRT Implementation of RSA</title><year>2002</year><authors><author org="T-Systems ISS GmbH" id="2345443053">Bert den Boer</author><author org="T-Systems ISS GmbH" id="2662519971">Kerstin Lemke</author><author org="T-Systems ISS GmbH" id="2518086308">Guntram Wicke</author></authors><n_citation>66</n_citation><doc_type>Conference</doc_type><references><reference>1503689022</reference><reference>1506530330</reference><reference>1510418153</reference><reference>1613874182</reference><reference>1657240689</reference><reference>1660562555</reference><reference>1671031071</reference><reference>1890449996</reference><reference>2148862943</reference><reference>2170489924</reference></references><venue id="1127098075" type="C">Cryptographic Hardware and Embedded Systems</venue><doi>10.1007/3-540-36400-5_18</doi><keywords><keyword weight="0.50783">Prime (order theory)</keyword><keyword weight="0.51506">Power analysis</keyword><keyword weight="0.51735">Chinese remainder theorem</keyword><keyword weight="0.40217">Computer science</keyword><keyword weight="0.43589">Arithmetic</keyword><keyword weight="0.51293">Remainder</keyword><keyword weight="0.42967">Algorithm</keyword><keyword weight="0.60145">Timing attack</keyword><keyword weight="0.47375">Padding</keyword><keyword weight="0.50207">Exponentiation</keyword><keyword weight="0.49182">Public-key cryptography</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Published DPA attack scenarios against the RSA implementation exploit the possibility of predicting intermediate data during a straight-forward square-multiply exponentiation algorithm. An implementation of RSA using CRT (Chinese Remainder Theorem) prevents the pre-calculation of intermediate results during the exponentiation algorithm by an attacker. In this paper, we present a DPA attack that uses byte-wise hypotheses on the remainder after the modular reduction with one of the primes. Instead of using random input data this attack uses k series of input data with an equidistant step distance of 1, 256, (256)2,.., (256)k. The basic assumption of this DPA attack named MRED ("Modular Reduction on Equidistant Data") is that the distance of the input data equals the distance of the intermediate data after the modular reduction at least for a subgroup of single measurements. A function Fk that is composed of the k DPA results is used for the approximation of a multiple of the prime. Finally the gcd gives the prime. The number of DPA calculations increases linear to the number of bytes of the prime to be attacked. MRED is demonstrated using simulated measurement data. The practical efficiency is assessed. If the applicability of this attack is limited due to padding formats in RSA signature applications, the least significant bytes of the remainder after the modular reduction step can still be revealed. Multiplicative message blinding can protect the reduction modulo a secret prime against MRED.</abstract></paper>