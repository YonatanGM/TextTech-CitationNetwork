<paper id="1582032289"><title>Fully Dynamic Maintenance of Vertex Cover</title><year>1993</year><authors><author org="University of Delaware," id="2615810663">Zoran Ivkovic</author><author org="University of Delaware," id="2132852748">Errol L. Lloyd</author></authors><n_citation>45</n_citation><doc_type>Conference</doc_type><references><reference>296342929</reference><reference>1572977974</reference><reference>1975442866</reference><reference>2009695707</reference><reference>2011039300</reference><reference>2028146345</reference><reference>2038225707</reference><reference>2065161629</reference><reference>2121473031</reference><reference>2127605247</reference></references><venue id="1165841369" type="C">Workshop on Graph-Theoretic Concepts in Computer Science</venue><doi>10.1007/3-540-57899-4_44</doi><keywords><keyword weight="0.44277">Discrete mathematics</keyword><keyword weight="0.48882">Approximation algorithm</keyword><keyword weight="0.44663">Combinatorics</keyword><keyword weight="0.54187">Edge cover</keyword><keyword weight="0.52015">Vertex cover</keyword><keyword weight="0.0">Dynamic maintenance</keyword><keyword weight="0.0">Approximate solution</keyword><keyword weight="0.44163">Dynamic problem</keyword><keyword weight="0.52311">Feedback vertex set</keyword><keyword weight="0.37604">Mathematics</keyword><keyword weight="0.43772">Competitive analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The problem of maintaining an approximate solution for vertex cover when edges may be inserted and deleted dynamically is studied. We present a fully dynamic algorithm A1 that, in an amortized fashion, efficiently accommodates such changes. We further provide for a generalization of this method and present a family of algorithms A k , k u003eâˆ’1. The amortized running time of each A k is \(\Theta ((\upsilon + e)\tfrac{{1 + \sqrt {1 + 4(k + 1)(2k + 3)} }}{{2(2k + 3)}})\) per Insert/Delete operation, where e denotes the number of edges of the graph G at the time that the operation is initiated. It follows that this amortized running time may be made arbitrarily close to \(\Theta ((\upsilon + e)\tfrac{{\sqrt 2 }}{2})\). Each of the algorithms given here is 2-competitive, thereby matching the competitive ratio of the best existing off-line approximation algorithms for vertex cover.</abstract></paper>