<paper id="1493916325"><title>Practical Model-Checking Using Games</title><year>1998</year><authors><author org="University of Edinburgh," id="2287432086">Perdita Stevens</author><author org="University of Edinburgh," id="2124385062">Colin Stirling</author></authors><n_citation>69</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1540442949</reference><reference>1755813429</reference><reference>1795391326</reference><reference>1974672595</reference><reference>1988808695</reference><reference>1992582873</reference><reference>2017759899</reference><reference>2116277209</reference><reference>2756011084</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/BFb0054166</doi><keywords><keyword weight="0.60181">Combinatorial game theory</keyword><keyword weight="0.49859">Workbench</keyword><keyword weight="0.54035">Model checking</keyword><keyword weight="0.53072">Concurrency</keyword><keyword weight="0.47936">Computer science</keyword><keyword weight="0.5224">Usability</keyword><keyword weight="0.47992">Systems design</keyword><keyword weight="0.47238">Theoretical computer science</keyword><keyword weight="0.47689">Computability</keyword><keyword weight="0.47756">Modal</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe how model-checking games can be the foundation for efficient local model-checking of the modal mu-calculus on transition systems. Game-based algorithms generate winning strategies for a certain game, which can then be used interactively to help the user understand why the property is or is not true of the model. This kind of feedback has advantages over traditional techniques such as error traces. We give a proof technique for verifying such algorithms, and apply it to one which we have implemented in the Edinburgh Concurrency Workbench. We discuss its usability and performance.</abstract></paper>