<paper id="1984005801"><title>Evaluation of current architecture frameworks</title><year>2006</year><authors><author org="University of Regensburg Regensburg, Germany" id="2006294093">Susanne Leist</author><author org="University of Regensburg Regensburg, Germany" id="2024597509">Gregor Zellner</author></authors><n_citation>100</n_citation><doc_type>Conference</doc_type><references><reference>166854877</reference><reference>1487672899</reference><reference>1992869639</reference><reference>2000553295</reference><reference>2032899251</reference><reference>2056488422</reference><reference>2166056089</reference></references><venue id="2754781246" type="C">ACM Symposium on Applied Computing</venue><doi>10.1145/1141277.1141635</doi><keywords><keyword weight="0.7554">Applications architecture</keyword><keyword weight="0.72761">The Open Group Architecture Framework</keyword><keyword weight="0.72649">Enterprise architecture</keyword><keyword weight="0.47013">Software engineering</keyword><keyword weight="0.45277">Computer science</keyword><keyword weight="0.75938">Solution architecture</keyword><keyword weight="0.73498">Architecture framework</keyword><keyword weight="0.76373">View model</keyword><keyword weight="0.79951">Enterprise architecture framework</keyword><keyword weight="0.7409">Enterprise architecture management</keyword></keywords><publisher>ACM</publisher><abstract>With the growing importance of enterprise architecture the discussion about how to create or choose the right enterprise architecture framework for a specific organization arose quickly. But it is not only a question of choosing the right framework for describing or developing an enterprise architecture. It is more important to discover whether the chosen architecture framework meets the defined requirements or not. In this paper, we describe which requirements currently existing architecture frameworks should meet to constitute a useful procedure that enables to develop, describe and keep up an enterprise architecture. Our evaluation of current frameworks shows their lacks and identifies further improvement.</abstract></paper>