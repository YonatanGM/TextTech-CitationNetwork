<paper id="1977685051"><title>Access support relations: an indexing method for object bases</title><year>1992</year><authors><author org="Lehrstuhl f체r Informatik III, RWTH Aachen, D-5100 Aachen, Fed. Rep. Germany" id="2244150349">Alfons Kemper</author><author org="Fakult채t f체r Informatik, Universit채t Karlsruhe, D-7500 Karlsruhe, Fed. Rep. Germany" id="172573358">Guido Moerkotte</author></authors><n_citation>52</n_citation><doc_type>Journal</doc_type><references><reference>24016224</reference><reference>192407326</reference><reference>1498168613</reference><reference>1524459778</reference><reference>1574303571</reference><reference>1669847836</reference><reference>2001657718</reference><reference>2013255770</reference><reference>2029344921</reference><reference>2044236594</reference><reference>2065419751</reference><reference>2084060979</reference><reference>2099993385</reference><reference>2133384222</reference><reference>2143200531</reference><reference>2155166680</reference><reference>2166897769</reference><reference>2205031991</reference><reference>2295596515</reference></references><venue id="193006928" type="J">Information Systems</venue><doi>10.1016/0306-4379(92)90008-B</doi><keywords><keyword weight="0.54017">Query optimization</keyword><keyword weight="0.46142">Data mining</keyword><keyword weight="0.42744">Indexation</keyword><keyword weight="0.54918">Access method</keyword><keyword weight="0.50025">Object-oriented programming</keyword><keyword weight="0.52416">Tuple</keyword><keyword weight="0.46206">Computer science</keyword><keyword weight="0.48372">Information access</keyword><keyword weight="0.57509">Path expression</keyword><keyword weight="0.50858">Search engine indexing</keyword><keyword weight="0.4528">Database</keyword></keywords><publisher>Elsevier Science Ltd.</publisher><abstract>In this work access support relations are introduced as a means for optimizing query processing in object-oriented database systems. The general idea is to maintain separate structures (dissociated from the object representation) to redundantly store those object references that are frequently traversed in database queries. The proposed access support relation technique is no longer restricted to relate an object (tuple) to an atomic value (attribute value) as in conventional indexing. Rather, access support relations relate objects with each other and can span over reference chains which may contain collection-valued components in order to support queries involving path expressions. We present several alternative extensions and decompositions of access support relations for a given path expression, the best of which has to be determined according to the application-specific database usage profile. An analytical performance analysis of access support relations is developed. This analytical cost model is, in particular, used to determine the best access support relation extension and decomposition with respect to specific database configuration and usage characteristics.</abstract></paper>