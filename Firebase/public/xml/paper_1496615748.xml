<paper id="1496615748"><title>Integrated concurrency control in shared B-trees</title><year>1984</year><authors><author org="Institut für Angewandte Informatik und Formale Beschreibungsverfahren, Universität Karlsruhe, Karlsruhe, Federal Republic of Germany" id="2974658475">G Lausen</author></authors><n_citation>12</n_citation><doc_type>Journal</doc_type><references><reference>1980806195</reference><reference>2023304911</reference><reference>2033584818</reference><reference>2057391254</reference><reference>2133386065</reference><reference>2901608006</reference></references><venue id="35593046" type="J">Computing</venue><doi>10.1007/BF02243072</doi><keywords><keyword weight="0.75519">Timestamp-based concurrency control</keyword><keyword weight="0.74881">Isolation (database systems)</keyword><keyword weight="0.6484">Concurrency control</keyword><keyword weight="0.44844">Computer science</keyword><keyword weight="0.76614">Multiversion concurrency control</keyword><keyword weight="0.83645">Non-lock concurrency control</keyword><keyword weight="0.79263">Optimistic concurrency control</keyword><keyword weight="0.45347">Distributed computing</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>The traditional approach to concurrency control in sharedB-trees is based on locking. Recently new methods have been proposed called optimistic methods. In contrast to locking these methods achieve correct operations on theB-tree by a restart mechanism. In this paper we present a new approach to concurrency control, which integrates locking and the optimistic method. Practical applications are pointed out in which this approach can be expected to be superior to either locking or the optimistic method.</abstract></paper>