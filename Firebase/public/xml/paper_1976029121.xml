<paper id="1976029121"><title>Full abstraction of a real-time denotational semantics for an OCCAM-like language</title><year>1987</year><authors><author org="Department of Mathematics and Computing Science, Eindhoven University of Technology, P.O. Box 513, 5600 MB Eindhoven, The Netherlands" id="1990103857">C. Huizing</author><author org="Department of Mathematics and Computing Science, Eindhoven University of Technology, P.O. Box 513, 5600 MB Eindhoven, The Netherlands" id="2068905476">R. Gerth</author><author org="Department of Mathematics and Computing Science, Eindhoven University of Technology, P.O. Box 513, 5600 MB Eindhoven, The Netherlands" id="2231527263">W. P. deRoever</author></authors><n_citation>35</n_citation><doc_type>Conference</doc_type><references><reference>13731675</reference><reference>60209820</reference><reference>95860231</reference><reference>1487199072</reference><reference>1539804543</reference><reference>1576648414</reference><reference>1579468405</reference><reference>1580311186</reference><reference>1588926042</reference><reference>1602114053</reference><reference>1968947022</reference><reference>2001748564</reference><reference>2002265055</reference><reference>2003773532</reference><reference>2049805824</reference><reference>2073981447</reference><reference>2076494576</reference><reference>2086070079</reference><reference>2125110532</reference><reference>2144545266</reference></references><venue id="1160032607" type="C">Symposium on Principles of Programming Languages</venue><doi>10.1145/41625.41645</doi><keywords><keyword weight="0.65372">Denotational semantics of the Actor model</keyword><keyword weight="0.66819">Operational semantics</keyword><keyword weight="0.45898">Programming language</keyword><keyword weight="0.62013">Normalisation by evaluation</keyword><keyword weight="0.43668">Computer science</keyword><keyword weight="0.67565">Denotational semantics</keyword><keyword weight="0.6588">Action semantics</keyword><keyword weight="0.44933">Theoretical computer science</keyword><keyword weight="0.63212">Failure semantics</keyword><keyword weight="0.57417">occam</keyword><keyword weight="0.50805">Semantics</keyword></keywords><publisher>ACM</publisher><abstract>We present a fully abstract semantics for real-time distributed computing of the Ada and OCCAM kind in a denotational style. This semantics turns termination, communication along channels, and the time communication takes place, into observables. Yet it is the coarsest semantics to do so which is syntax-directed (this is known as full abstraction). It extends the linear history semantics for CSP of Francez, Lehman and Pnueli. Our execution model is based on maximizing concurrent activity as opposed to interleaving (in which only one action occurs at the time and arbitrary delays are incurred between actions). It is a variant of the maximal parallelism model of Salwicki and Muldner.</abstract></paper>