<paper id="1826166329"><title>Mechanical Verification of Concurrent Systems with TLA</title><year>1992</year><authors><author org="Aarhus University," id="2279990900">Urban Engberg</author><author org="Technical University of, Denmark" id="1518834709">Peter Grønning</author><author org="Digital Equipment Corporation" id="2096750770">Leslie Lamport</author></authors><n_citation>63</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>2015688007</reference><reference>2023808162</reference><reference>2027329270</reference><reference>2030926579</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56496-9_5</doi><keywords><keyword weight="0.49083">Data structure</keyword><keyword weight="0.46514">Programming language</keyword><keyword weight="0.0">Correctness proofs</keyword><keyword weight="0.62408">Temporal logic of actions</keyword><keyword weight="0.44942">Computer science</keyword><keyword weight="0.4981">Assertion</keyword><keyword weight="0.65582">Correctness</keyword><keyword weight="0.4311">Algorithm</keyword><keyword weight="0.45146">Theoretical computer science</keyword><keyword weight="0.56857">Mathematical proof</keyword><keyword weight="0.64963">Larch Prover</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe an initial version of a system for mechanically checking the correctness proof of a concurrent system. Input to the system consists of the correctness properties, expressed in TLA (the temporal logic of actions), and their proofs, written in a humanly readable, hierarchically structured form. The system uses a mechanical verifier to check each step of the proof, translating the stepu0027s assertion into a theorem in the verifieru0027s logic and its proof into instructions for the verifier. Checking is now done by LP (the Larch Prover), using two different translations—one for action reasoning and one for temporal reasoning. The use of additional mechanical verifiers is planned. Our immediate goal is a practical system for mechanically checking proofs of behavioral properties of a concurrent system; we assume ordinary properties of the data structures used by the system.</abstract></paper>