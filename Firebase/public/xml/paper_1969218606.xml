<paper id="1969218606"><title>Weight-balanced trees</title><year>1975</year><authors><author org="Univ of Washington, Seattle, Washington" id="2287748599">J. L. Baer</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>83056143</reference><reference>1516294145</reference><reference>1972027649</reference><reference>2016153661</reference><reference>2026166434</reference><reference>2042453654</reference><reference>2075016537</reference></references><venue id="2626428507" type="C">National Computer Conference</venue><doi>10.1145/1499949.1500040</doi><keywords><keyword weight="0.44435">Data mining</keyword><keyword weight="0.43975">Computer science</keyword><keyword weight="0.45337">Theoretical computer science</keyword><keyword weight="0.68536">Weight-balanced tree</keyword><keyword weight="0.70874">Random binary tree</keyword><keyword weight="0.74926">Ternary search tree</keyword><keyword weight="0.6926">Binary search tree</keyword></keywords><publisher>ACM</publisher><abstract>It is now recognized that binary search trees are structures which can be used efficiently for the organization of files and directories. The ease of insertion and deletion of nodes makes trees very appealing for directories which are often modified. By comparison with a sequential table organization, some additional memory is required for the links between nodes. From a cost-effective viewpoint, this is generally more than compensated for by the savings in searching (for a linear table) and inserting (for an ordered table).</abstract></paper>