<paper id="1514983780"><title>A Tool for Symbolic Program Verification and Abstration</title><year>1993</year><authors><author org="VERIMAG" id="2139352357">Susanne Graf</author><author org="VERIMAG" id="2609997150">Claire Loiseaux</author></authors><n_citation>43</n_citation><doc_type>Conference</doc_type><references><reference>1491755917</reference><reference>1517157359</reference><reference>1523766116</reference><reference>1524149722</reference><reference>1534067655</reference><reference>1547265787</reference><reference>1569068921</reference><reference>1577412708</reference><reference>1583165871</reference><reference>1598591924</reference><reference>1624945350</reference><reference>1973642705</reference><reference>2001748564</reference><reference>2015640848</reference><reference>2015688007</reference><reference>2043100293</reference><reference>2080267935</reference><reference>2110425399</reference><reference>2114092850</reference><reference>2117189826</reference><reference>2121372686</reference><reference>2162844904</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56922-7_7</doi><keywords><keyword weight="0.46934">Abstraction</keyword><keyword weight="0.45979">Computer science</keyword><keyword weight="0.61969">Binary decision diagram</keyword><keyword weight="0.46672">Theoretical computer science</keyword><keyword weight="0.58745">Program analysis</keyword><keyword weight="0.6541">Boolean expression</keyword><keyword weight="0.62109">Symbolic trajectory evaluation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We give the description of a verification tool taking boolean programs of guarded commands as input; internal representation of programs are sets of Binary Decision Diagrams (BDD) (one for each guarded command). It allows to construct an abstract program of the same form obtained using an abstraction relation given by a boolean expression on “concrete”u0027 and “abstract” variables. The tool allows the verification of CTL formulas on programs. We illustrate its possibilities on an example.</abstract></paper>