<paper id="1511345178"><title>Abstracting Cryptographic Protocols by Prolog Rules</title><year>2001</year><authors><author org="INRIA Rocquencourt#TAB#" id="2311319369">Bruno Blanchet</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1779054477</reference><reference>1841687327</reference><reference>1921661296</reference><reference>1966219798</reference><reference>1973054120</reference><reference>2002770083</reference><reference>2097913369</reference><reference>2112047017</reference><reference>2114189125</reference><reference>2133126578</reference><reference>2150299122</reference><reference>2155032609</reference><reference>2160085514</reference><reference>2176316790</reference></references><venue id="1137552346" type="C">Static Analysis Symposium</venue><doi>10.1007/3-540-47764-0_27</doi><keywords><keyword weight="0.51226">Horn clause</keyword><keyword weight="0.66134">Cryptographic protocol</keyword><keyword weight="0.49435">Cryptography</keyword><keyword weight="0.45852">Computer science</keyword><keyword weight="0.46744">Secrecy</keyword><keyword weight="0.70806">Cryptographic primitive</keyword><keyword weight="0.45211">Theoretical computer science</keyword><keyword weight="0.51703">Prolog</keyword><keyword weight="0.47191">Program analysis</keyword><keyword weight="0.46889">State space</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most current cryptographic protocol verifiers meet the state space explosion problem, and have to limit the number of executions of the considered protocol during the verification. To solve these problems, we introduce an abstract representation of cryptographic protocols, based on Prolog rules, and use it to verify secrecy properties of protocols.</abstract></paper>