<paper id="1980471700"><title>Certifying Permutations: Noninteractive zero-knowledge based on any trapdoor permutation</title><year>1996</year><authors><author org="Dept. of Computer Science, &amp; Engineering, University of California at San Diego, La Jolla, USA" id="2052950829">Mihir Bellare</author><author org="Research Division, IBM, T. J. Watson Research Center, Yorktown Heights, USA" id="2097786798">Moti Yung</author></authors><n_citation>61</n_citation><doc_type>Journal</doc_type><references><reference>1523338383</reference><reference>1536808194</reference><reference>1972129951</reference><reference>1996360405</reference><reference>2027528470</reference><reference>2032133054</reference><reference>2051250911</reference><reference>2073210531</reference><reference>2085759780</reference><reference>2099188893</reference><reference>2133203144</reference><reference>2151413173</reference></references><venue id="190936789" type="J">Journal of Cryptology</venue><doi>10.1007/BF00208000</doi><keywords><keyword weight="0.53364">Cryptographic protocol</keyword><keyword weight="0.5015">Cryptography</keyword><keyword weight="0.55495">Permutation</keyword><keyword weight="0.48898">Proof theory</keyword><keyword weight="0.45284">Theoretical computer science</keyword><keyword weight="0.65843">Trapdoor function</keyword><keyword weight="0.0">Transmission protocol</keyword><keyword weight="0.42931">Certification</keyword><keyword weight="0.51635">Zero-knowledge proof</keyword><keyword weight="0.39362">Mathematics</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>In cryptographic protocols it is often necessary to verify/certify the "tools" in use. This work demonstrates certain subtleties in treating a family of trapdoor permutations in this context, noting the necessity to "check" certain properties of these functions. The particular case we illustrate is that of noninteractive zero-knowledge. We point out that the elegant recent protocol of Feige, Lapidot, and Shamir for proving NP statements in noninteractive zero-knowledge requires an additional certification of the underlying trapdoor permutation, and suggest a method for certifying permutations which fills this gap.</abstract></paper>