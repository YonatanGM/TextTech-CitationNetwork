<paper id="1557904593"><title>Coordinated Distributed Diagram Transformation for Software Evolution</title><year>2003</year><authors><author org="Universitaà di Roma “La Sapienza - Italy" id="67175421">Paolo Bottoni</author><author org="Universitaà di Roma “La Sapienza - Italy" id="136759105">Francesco Parisi-Presicce</author><author org="Technische Universität Berlin - Germany" id="1978163079">Gabriele Taentzer</author></authors><n_citation>28</n_citation><doc_type>Journal</doc_type><references><reference>53433387</reference><reference>1494340314</reference><reference>1532283544</reference><reference>1592879001</reference><reference>1605034451</reference><reference>1928902483</reference><reference>2082530393</reference><reference>2153887189</reference></references><venue id="50368787" type="J">Electronic Notes in Theoretical Computer Science</venue><doi>10.1016/S1571-0661(04)80626-1</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.46947">Programming language</keyword><keyword weight="0.57184">Unified Modeling Language</keyword><keyword weight="0.72096">UML tool</keyword><keyword weight="0.44855">Computer science</keyword><keyword weight="0.44827">Theoretical computer science</keyword><keyword weight="0.56471">Software system</keyword><keyword weight="0.46194">Diagram</keyword><keyword weight="0.75672">Applications of UML</keyword><keyword weight="0.56034">Software evolution</keyword><keyword weight="0.63194">Code refactoring</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract We present an approach to maintaining consistency between code and specification during refactoring, where a specification comprises several UML diagrams of different types. Code is represented as a flowgraph, and the flowgraph and UML diagrams constitute different views of a software system. A refactoring is modelled as a set of distributed graph transformations, organized into transformation units.</abstract></paper>