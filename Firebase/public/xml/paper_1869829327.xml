<paper id="1869829327"><title>Formal development of an embedded verifier for Java Card byte code</title><year>2002</year><authors><author org="" id="311457383">L. Casset</author><author org="" id="2063376040">L. Burdy</author><author org="" id="1852654154">A. Requet</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>1633108902</reference><reference>1692349883</reference><reference>2028327857</reference><reference>2095851537</reference><reference>2096228713</reference><reference>2211336113</reference></references><venue id="1187160151" type="C">Dependable Systems and Networks</venue><doi>10.1109/DSN.2002.1028886</doi><keywords><keyword weight="0.47455">Programming language</keyword><keyword weight="0.63232">Java annotation</keyword><keyword weight="0.4627">Computer science</keyword><keyword weight="0.5494">Smart card</keyword><keyword weight="0.43384">Real-time computing</keyword><keyword weight="0.60589">Formal specification</keyword><keyword weight="0.54997">B-Method</keyword><keyword weight="0.68224">Java Card</keyword><keyword weight="0.61211">Formal methods</keyword><keyword weight="0.5956">Java</keyword><keyword weight="0.57796">Formal verification</keyword></keywords><publisher>IEEE</publisher><abstract>The Java security policy is implemented by security components such as the Java Virtual Machine (JVM), the API, the verifier, the loader. It is of prime importance to ensure that the implementation of these components is in accordance with their specifications. Formal methods can be used to bring the mathematical proof that the implementation of these components corresponds to their specification. In the paper, a formal development is performed on the Java Card byte code verifier using the B method. The whole Java Card language is taken into account in order to provide realistic metrics on formal development. The architecture and the tricky points of the development are presented. This formalization leads to an embeddable implementation of the byte code verifier thanks to automatic code translation from formal implementation into C code. We present the formal models, discuss the integration into the card and the results of such an experiment.</abstract></paper>