<paper id="1605680178"><title>Private itemset support counting</title><year>2005</year><authors><author org="Helsinki University of Technology,Finland)" id="2141383827">Sven Laur</author><author org="Cybernetica AS, Estonia#TAB#" id="15605393">Helger Lipmaa</author><author org="Univ. of Helsinki, Finland#TAB#" id="64434295">Taneli Mielikäinen</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>28930810</reference><reference>1483086566</reference><reference>1500075856</reference><reference>1511913323</reference><reference>1515669336</reference><reference>1553696291</reference><reference>1597561788</reference><reference>1889757464</reference><reference>1934398053</reference><reference>2061779725</reference><reference>2080666024</reference><reference>2125227861</reference><reference>2143087446</reference><reference>2143182259</reference></references><venue id="1135668280" type="C">International Conference on Information and Communication Security</venue><doi>10.1007/11602897_9</doi><keywords><keyword weight="0.43907">Converse</keyword><keyword weight="0.45151">Data mining</keyword><keyword weight="0.45846">Computer science</keyword><keyword weight="0.47741">Server</keyword><keyword weight="0.4475">Information extraction</keyword><keyword weight="0.41525">Sampling (statistics)</keyword><keyword weight="0.0">Transmission protocol</keyword><keyword weight="0.47982">Information privacy</keyword><keyword weight="0.0">Data mining algorithm</keyword><keyword weight="0.55722">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Private itemset support counting (PISC) is a basic building block of various privacy-preserving data mining algorithms. Briefly, in PISC, Client wants to know the support of her itemset in Server’s database with the usual privacy guarantees. First, we show that if the number of attributes is small, then a communication-efficient PISC protocol can be constructed from a communication-efficient oblivious transfer protocol. The converse is also true: any communication-efficient PISC protocol gives rise to a communication-efficient oblivious transfer protocol. Second, for the general case, we propose a computationally efficient PISC protocol with linear communication in the size of the database. Third, we show how to further reduce the communication by using various tradeoffs and random sampling techniques.</abstract></paper>