<paper id="1546124049"><title>Formal Semantics by a Combination of Denotational Semantics and High-Level Petri Nets</title><year>1982</year><authors><author org="Aarhus University," id="2117754747">Niels Damgaard Hansen</author><author org="Aarhus University," id="2973677530">K. H. Madsen</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>1903679624</reference><reference>1997422892</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.7146/dpb.v11i152.7426</doi><keywords><keyword weight="0.67788">Denotational semantics of the Actor model</keyword><keyword weight="0.66655">Operational semantics</keyword><keyword weight="0.43525">Synchronization</keyword><keyword weight="0.62977">Petri net</keyword><keyword weight="0.46157">Programming language</keyword><keyword weight="0.63164">Normalisation by evaluation</keyword><keyword weight="0.43959">Computer science</keyword><keyword weight="0.7014">Denotational semantics</keyword><keyword weight="0.67799">Action semantics</keyword><keyword weight="0.57789">Process architecture</keyword><keyword weight="0.44513">Theoretical computer science</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Denotational semantics has proved to be an excellent tool for the specification of nearly all kinds of declarations and commands in sequential languages, but the description of concurrent processes is in practice nearly impossible. High-level Petri nets, on the other hand, have proved their value in the specification of communication and synchronization of concurrent processes. We propose to combine the two models into a single approach, where denotational semantics is used to build up environments and to describe store transformations, while Petri nets are used to describe sequencing and communication.</abstract></paper>