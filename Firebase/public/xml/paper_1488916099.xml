<paper id="1488916099"><title>True random number generators secure in a changing environment</title><year>2003</year><authors><author org="Weizmann institute of Science" id="2199786071">Boaz Barak</author><author org="Weizmann institute of Science" id="264828671">Ronen Shaltiel</author><author org="Weizmann institute of Science" id="349649168">Eran Tromer</author></authors><n_citation>95</n_citation><doc_type>Conference</doc_type><references><reference>1641348075</reference><reference>1797136128</reference><reference>1977568210</reference><reference>1985623009</reference><reference>2052207834</reference><reference>2060474153</reference><reference>2114924587</reference><reference>2169453948</reference></references><venue id="1127098075" type="C">Cryptographic Hardware and Embedded Systems</venue><doi>10.1007/978-3-540-45238-6_14</doi><keywords><keyword weight="0.65951">Randomness extractor</keyword><keyword weight="0.45239">Cryptography</keyword><keyword weight="0.4149">Computer science</keyword><keyword weight="0.42166">Algorithm</keyword><keyword weight="0.50613">Uniform distribution (continuous)</keyword><keyword weight="0.41611">Theoretical computer science</keyword><keyword weight="0.54184">Randomness tests</keyword><keyword weight="0.47449">Hash function</keyword><keyword weight="0.57109">Random number generation</keyword><keyword weight="0.47982">Statistical distance</keyword><keyword weight="0.49252">Entropy (information theory)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A true random number generator (TRNG) usually consists of two components: an “unpredictable” source with high entropy, and a randomness extractor — a function which, when applied to the source, produces a result that is statistically close to the uniform distribution. When the output of a TRNG is used for cryptographic needs, it is prudent to assume that an adversary may have some (limited) influence on the distribution of the high-entropy source. In this work:</abstract></paper>