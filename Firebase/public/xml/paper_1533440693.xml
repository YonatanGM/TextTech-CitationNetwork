<paper id="1533440693"><title>Correct shading of regularized CSG solids using a depth-interval buffer</title><year>1990</year><authors><author org="" id="1995674836">Jaroslaw R. Rossignac</author><author org="" id="2286160847">Jeffrey Wu</author></authors><n_citation>19</n_citation><doc_type>Conference</doc_type><references><reference>1577945567</reference><reference>1992209022</reference><reference>2004125267</reference><reference>2029322949</reference><reference>2050107832</reference><reference>2111963422</reference><reference>2131775655</reference></references><venue id="2754362256" type="C">Eurographics</venue><doi>10.2312/EGGH/EGGH90/117-138</doi><keywords><keyword weight="0.43812">Shadow</keyword><keyword weight="0.49694">Scan conversion</keyword><keyword weight="0.43077">Interactive design</keyword><keyword weight="0.46813">Expression (mathematics)</keyword><keyword weight="0.46333">Algorithm</keyword><keyword weight="0.50132">Ray casting</keyword><keyword weight="0.45932">Parametric statistics</keyword><keyword weight="0.4619">Pixel</keyword><keyword weight="0.48445">Boolean expression</keyword><keyword weight="0.39861">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A convenient interactive design environment requires efficient facilities for shading solid models represented in CSG. Shading techniques based on boundary evaluation or ray casting that require calculations of geometric intersections are too inefficient for interactive graphics when CSG primitives with curved (parametric) surfaces are involved. Projective approaches, where the primitive surfaces are scan-converted using standard hardware-supported graphic functions are preferred. Since not all the points of the faces of a CSG primitive lie on the CSG solid, scan conversion must be combined with a procedure that tests the produced 3D surface-points against the original CSG expression. Point classifications against primitives defined by arbitrary curved boundaries may be performed, without geometric intersections, through depth-comparisons at each pixel. This approach has been implemented for the Pixel-Power machine by researchers at UNC. It deals with complex CSG trees by converting CSG expressions into sum-of-product form and repeatedly scan-converting the primitives of each product. The Trickle algorithm, which considerably reduces the number of scan-conversions in the general case has been developed at IBM Research and presented elsewhere. This paper discusses several recent improvements to the original Trickle algorithm. The overall algorithm has been simplified. The scan-conversion process and the point classification tests have been modified to correctly handle cases where several primitive faces coincide within an arbitrary numerical resolution. These enhancements are not only necessary for on/on cases in regularized Boolean expressions, but also for processing pairs of faces near their common edges. Finally, we point out that a simple two-pass extension of the trickle algorithm using an auxiliary shadow buffer suffices to compute directly from CSG shaded images with shadows.</abstract></paper>