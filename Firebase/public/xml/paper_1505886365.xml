<paper id="1505886365"><title>Views, data abstraction, and inheritance in the FUGUE data model</title><year>1988</year><authors><author org="Computer Corporation of America#TAB#" id="2974237382">S. Heiler</author><author org="Brown University, Providence, RI" id="2973609535">S. Zdonik</author></authors><n_citation>26</n_citation><doc_type /><references><reference>1486197868</reference><reference>1730901934</reference><reference>1770006921</reference><reference>2122081499</reference></references><venue id="" type="">Lecture notes in computer science on Advances in object-oriented database systems</venue><doi>10.1007/3-540-50345-5_20</doi><keywords><keyword weight="0.5519">Data modeling</keyword><keyword weight="0.44681">Programming language</keyword><keyword weight="0.53134">Database model</keyword><keyword weight="0.54204">Semi-structured model</keyword><keyword weight="0.44006">Computer science</keyword><keyword weight="0.52506">Logical data model</keyword><keyword weight="0.4886">Object model</keyword><keyword weight="0.55034">Database design</keyword><keyword weight="0.47268">Relational view</keyword><keyword weight="0.5387">Data model</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper defines a view mechanism analogous to relational views that simply and naturally extends the FUGUE object model [HZ88]. The paper then addresses the problems of providing data abstraction and inheritance in FUGUE. The proposed view mechanism is powerful enough to be used to capture the essential features of data abstraction and inheritance, while allowing us also to define application-specific views as is typically done in database systems. We also show how this mechanism can be used to model user-level views as well as system-level views of functions.</abstract></paper>