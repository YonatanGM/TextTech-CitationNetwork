<paper id="1511157305"><title>Modular Verification of SRT Division</title><year>1999</year><authors><author org="Universität Ulm, Fakultät für Informatik, 89069 Ulm, Germany. ruess@informatik.uni-ulm.de#TAB#" id="1580859012">Harald Ruess</author><author org="SRI International Computer Science Laboratory, Menlo Park, CA 94025, USA. shankar@csl.sri.com#TAB#" id="2118526916">Natarajan Shankar</author><author org="SRI International Computer Science Laboratory, Menlo Park, CA 94025, USA. srivas@csl.sri.com#TAB#" id="2143082811">Mandayam K. Srivas</author></authors><n_citation>50</n_citation><doc_type>Conference</doc_type><references><reference>1491438721</reference><reference>1538310240</reference><reference>1540389367</reference><reference>1540641846</reference><reference>1566496315</reference><reference>1566914742</reference><reference>1824815122</reference><reference>1840254652</reference><reference>1989095255</reference><reference>1996325171</reference><reference>2029932273</reference><reference>2036085017</reference><reference>2057706113</reference><reference>2081371283</reference><reference>2094831575</reference><reference>2105011602</reference><reference>2106462831</reference><reference>2108776769</reference><reference>2113486906</reference><reference>2127271657</reference><reference>2138090187</reference><reference>2142785890</reference><reference>2143166621</reference><reference>2161439686</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1023/A:1008617612073</doi><keywords><keyword weight="0.56324">Specification language</keyword><keyword weight="0.49379">Lookup table</keyword><keyword weight="0.5807">Functional verification</keyword><keyword weight="0.47208">Programming language</keyword><keyword weight="0.56825">Intelligent verification</keyword><keyword weight="0.45744">Computer science</keyword><keyword weight="0.53792">Automated theorem proving</keyword><keyword weight="0.50603">Propositional calculus</keyword><keyword weight="0.57506">Formal specification</keyword><keyword weight="0.46284">Theoretical computer science</keyword><keyword weight="0.50685">Rewriting</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>We describe a formal specification and mechanized verification in PVS of the general theory of SRT division along with a specific hardware realization of the algorithm. The specification demonstrates how attributes of the PVS language (in particular, predicate subtypes) allow the general theory to be developed in a readable manner that is similar to textbook presentations, while the PVS {\tt table} construct allows direct specification of the implementation‘s quotient lookup table. Verification of the derivations in the SRT theory and for the data path and lookup table of the implementation are highly automated and performed for arbitrary, but finite precisions in addition, the theory is verified for general radix, while the implementation is specialized to radix 4. The effectiveness of the automation stems from the tight integration in PVS of rewriting with decision procedures for equality, linear arithmetic over integers and rationals, and propositional logic. This example demonstrates that the resources of an expressive specification language and of a general-purpose theorem prover are not inimical to highly automated verification in this domain, and can contribute to clarity, generality, and reuse.</abstract></paper>