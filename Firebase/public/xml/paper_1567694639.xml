<paper id="1567694639"><title>Binding Time Analysis for Polymorphically Typed Higher Order Languages</title><year>1989</year><authors><author org="University of copenhagen" id="2129092539">Torben Ã†. Mogensen</author></authors><n_citation>38</n_citation><doc_type /><references><reference>1559686260</reference><reference>1566968514</reference><reference>2020530016</reference><reference>2053141860</reference><reference>2084099544</reference><reference>2115225924</reference><reference>2169611723</reference></references><venue id="" type="">TAPSOFT '89 Proceedings of the International Joint Conference on Theory and Practice of Software Development, Volume 2: Advanced Seminar on Foundations of Innovative Software Development II and Colloquium on Current Issues in Programming Languages</venue><doi>10.1007/3-540-50940-2_43</doi><keywords><keyword weight="0.0">Binding time analysis</keyword><keyword weight="0.0">Higher order languages</keyword><keyword weight="0.52415">Functional programming</keyword><keyword weight="0.5563">Partial evaluation</keyword><keyword weight="0.45114">Arithmetic</keyword><keyword weight="0.58594">Compiler</keyword><keyword weight="0.50624">Interpreter</keyword><keyword weight="0.40429">Mathematics</keyword><keyword weight="0.4792">Semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Binding time analysis is used to distinguish the variables in a program that will have a known value at a time when only some of the parameters to the program are given. This is used in partial evaluation and has been found to be essential for efficient self-application and thus compiler generation by self-application of a partial evaluator with respect to an interpreter.</abstract></paper>