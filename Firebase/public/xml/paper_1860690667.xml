<paper id="1860690667"><title>A scheme for integrating concrete domains into concept languages</title><year>1991</year><authors><author org="German Research Center for AI, Kaiserslautern, Germany#TAB#" id="2037598615">Franz Baader</author><author org="German Research Center for AI, Kaiserslautern, Germany#TAB#" id="2781269304">Philipp Hanschke</author></authors><n_citation>290</n_citation><doc_type>Conference</doc_type><references><reference>16508790</reference><reference>81485047</reference><reference>1493277117</reference><reference>1496545610</reference><reference>1514275230</reference><reference>1527818723</reference><reference>1578780470</reference><reference>1868339153</reference><reference>1989040088</reference><reference>2104806676</reference><reference>2145465694</reference><reference>2159436659</reference><reference>2159525276</reference></references><venue id="1203999783" type="C">International Joint Conference on Artificial Intelligence</venue><doi>10.22028/D291-24817</doi><keywords><keyword weight="0.48144">Integer</keyword><keyword weight="0.45003">Drawback</keyword><keyword weight="0.43834">Discrete mathematics</keyword><keyword weight="0.56129">Semantic reasoner</keyword><keyword weight="0.50312">Inference</keyword><keyword weight="0.46225">Computer science</keyword><keyword weight="0.40299">Inequality</keyword><keyword weight="0.4552">Predicate (grammar)</keyword><keyword weight="0.47357">Real number</keyword><keyword weight="0.0">Semantics of logic</keyword></keywords><publisher>Morgan Kaufmann Publishers Inc.</publisher><abstract>A drawback which concept languages based on KL-ONE have is that all the terminological knowledge has to be defined on an abstract logical level. In many applications, one would like to be able to refer to concrete domains and predicates on these domains when defining concepts. Examples for such concrete domains are the integers, the real numbers, or also non-arithmetic domains, and predicates could be equality, inequality, or more complex predicates. In the present paper we shall propose a scheme for integrating such concrete domains into concept languages rather than describing a particular extension by some specific concrete domain. We shall define a terminological and an assertional language, and consider the important inference problems such as subsumption, instantiation, and consistency. The formal semantics as well as the reasoning algorithms are given on the scheme level. In contrast to existing KL-ONE based systems, these algorithms will be not only sound but also complete. They generate subtasks which have to be solved by a special purpose reasoner of the concrete domain.</abstract></paper>