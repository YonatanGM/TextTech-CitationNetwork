<paper id="1602578987"><title>Identification of and Solutions to Shortcomings of LCL, a Larch/C Interface Specification Language</title><year>1996</year><authors><author org="&lt;italic&gt;Concordia University&lt;/italic&gt;" id="206359229">Patrice Chalin</author><author org="&lt;italic&gt;Concordia University&lt;/italic&gt;" id="2266924537">Peter Grogono</author><author org="&lt;italic&gt;Concordia University&lt;/italic&gt;" id="2114355645">Thiruvengadam Radhakrishnan</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>1516022555</reference><reference>1528090332</reference><reference>1552647623</reference><reference>1583095677</reference><reference>1970495662</reference><reference>1974234077</reference><reference>2011606665</reference><reference>2070869623</reference><reference>2107177361</reference><reference>2147472937</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1007/3-540-60973-3_98</doi><keywords><keyword weight="0.66899">Specification language</keyword><keyword weight="0.55077">Pointer (computer programming)</keyword><keyword weight="0.0">Referential transparency</keyword><keyword weight="0.65844">Programming language specification</keyword><keyword weight="0.47236">Programming language</keyword><keyword weight="0.45755">Computer science</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.45842">Natural language processing</keyword><keyword weight="0.0">Expressivity</keyword><keyword weight="0.48941">Semantic data model</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present some of the more significant shortcomings of LCL, a Larch/C specification language used to document the interfaces of modules written in ISO C. We illustrate inadequacies in the definition and insufficiencies in the expressiveness of LCL by means of examples that cover dependencies between objects, the trashing of objects, and implicit parameter constraints in function specifications. A violation of the principle of referential transparency is also shown. We describe changes to the LCL language that overcome the identified shortcomings. Since most of the shortcomings are not particular to LCL, this paper will be of interest to language designers and users of other module interface specification languages.</abstract></paper>