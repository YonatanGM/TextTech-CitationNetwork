<paper id="1519465599"><title>Fast Checkers for Cryptography</title><year>1990</year><authors><author org="University of Southern California" id="2705680265">Kireeti Kompella</author><author org="University of Southern California" id="2009176085">Leonard M. Adleman</author></authors><n_citation>4</n_citation><doc_type>Conference</doc_type><references><reference>1996360405</reference><reference>2033361557</reference><reference>2156186849</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-38424-3_36</doi><keywords><keyword weight="0.54274">Computational problem</keyword><keyword weight="0.46459">Programming language</keyword><keyword weight="0.50175">Cryptography</keyword><keyword weight="0.4723">Computer science</keyword><keyword weight="0.5752">Correctness</keyword><keyword weight="0.46511">Theoretical computer science</keyword><keyword weight="0.0">Probability of error</keyword><keyword weight="0.47909">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Program correctness is a serious concern, and has consequently received considerable attention. This attention has taken three approaches: :[18],"prove programs :[21],"test programs for bugs; :[26],"design programs considerable :[29],"progress has been made, the question of whether a given computation was performed correctly still has no practical solution. However, a new approach, proposed by Manuel Blum, promises to be both practical and of theoretical significance, and is intrinsically closer to a computer scientist’s heart, since the approach is :[80],"check every computation using a progmm checker. Program checkers are designed for specific computational problems; a checker is then an algorithm such that, given a program that is supposed to solve that problem, and an input value, if the program computes correctly at that input, the checker says “CORRECT” (with a small probability of error); alternately, if the program has a bug, it says “BUGGY” (again, with a small chance of error).</abstract></paper>