<paper id="1595158423"><title>A Visual Fomalism for Real-Time Requirement Specifications</title><year>1997</year><authors><author org="Oldenburg University" id="2711446566">Konrad Feyerabend</author><author org="OFFIS#TAB#" id="2951773993">Bernhard Josko</author></authors><n_citation>34</n_citation><doc_type>Conference</doc_type><references><reference>130102441</reference><reference>1542703180</reference><reference>1874725288</reference><reference>1921055447</reference><reference>2030263557</reference><reference>2096039823</reference><reference>2104105957</reference><reference>2130773092</reference><reference>2134123646</reference><reference>2150119568</reference><reference>2160883697</reference></references><venue id="1191172908" type="C">Algebraic Methodology and Software Technology</venue><doi>10.1007/3-540-63010-4_11</doi><keywords><keyword weight="0.57664">Timing diagram</keyword><keyword weight="0.55427">Functional requirement</keyword><keyword weight="0.48461">Programming language</keyword><keyword weight="0.0">Graphical language</keyword><keyword weight="0.47287">Computer science</keyword><keyword weight="0.0">Graphical specification</keyword><keyword weight="0.55256">Temporal logic</keyword><keyword weight="0.54646">Non-functional requirement</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a semantical basis of a graphical specification language, called real-time symbolic timing diagrams (RTSTD), to express real-time requirements of embedded systems. RTSTD allow a concise and unambigous formulation of real-time properties that are intuitively understandable by hardware designers. We give a precise semantical foundation of this graphical language in terms of real-time temporal logic. Due to this interpretation RTSTD can be embedded into existing verification tools to check whether an implementation satiesfies the given specification expressed as RTSTD.</abstract></paper>