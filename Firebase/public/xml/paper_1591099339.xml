<paper id="1591099339"><title>Faster Modular Multiplication by Operand Scaling</title><year>1991</year><authors><author org="U.M.I.S.T." id="2170406325">Colin D. Walter</author></authors><n_citation>54</n_citation><doc_type>Conference</doc_type><references><reference>1540582803</reference><reference>1982006319</reference><reference>1996360405</reference><reference>2036085017</reference><reference>2044915798</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-46766-1_26</doi><keywords><keyword weight="0.41528">Computer science</keyword><keyword weight="0.53027">Arbitrary-precision arithmetic</keyword><keyword weight="0.48179">Cryptography</keyword><keyword weight="0.55626">Modular arithmetic</keyword><keyword weight="0.44497">Parallel computing</keyword><keyword weight="0.53998">Operand</keyword><keyword weight="0.44878">Arithmetic</keyword><keyword weight="0.42037">Theoretical computer science</keyword><keyword weight="0.62148">Kochanski multiplication</keyword><keyword weight="0.54726">Saturation arithmetic</keyword><keyword weight="0.49522">Scaling</keyword><keyword weight="0.52297">Speedup</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>There are a number of techniques known for speeding up modular multiplication, which is the main arithmetic operation in RSA cryptography. This note shows how to gain speed by scaling the modulus. Resulting hardware is limited only by the speed of addition. Detailed analysis of fan out shows that over existing methods the speedup is potentially as much as two-fold. This is because the addition and fan out can now be done in parallel. Of course, in RSA the modulus can be chosen to need no scaling, so that most of the minor extra costs are eliminated.</abstract></paper>