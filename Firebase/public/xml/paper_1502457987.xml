<paper id="1502457987"><title>Abstracting Object Interactions Using Composition Filters</title><year>1993</year><authors><author org="UNIVERSITY OF TWENTE" id="2047412352">Mehmet Aksit</author><author org="Tokyo Inst. of tech." id="2181180278">Ken Wakita</author><author org="UNIVERSITY OF TWENTE" id="2271217432">Jan Bosch</author><author org="UNIVERSITY OF TWENTE" id="2164694171">Lodewijk Bergmans</author><author org="University of Tokyo" id="660900409">Akinori Yonezawa</author></authors><n_citation>269</n_citation><doc_type>Conference</doc_type><references><reference>1511610110</reference><reference>1564176679</reference><reference>1588161073</reference><reference>2010042648</reference><reference>2014372620</reference><reference>2036632187</reference><reference>2050645799</reference><reference>2066181430</reference><reference>2075084112</reference><reference>2084776520</reference><reference>2086970510</reference><reference>2114696172</reference><reference>2132055297</reference><reference>2143524655</reference><reference>2149185259</reference><reference>2168287017</reference><reference>2914222239</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/BFb0017540</doi><keywords><keyword weight="0.60352">Object-oriented design</keyword><keyword weight="0.61864">Distributed object</keyword><keyword weight="0.46127">Programming language</keyword><keyword weight="0.59517">Data transfer object</keyword><keyword weight="0.55762">Method</keyword><keyword weight="0.46493">Computer science</keyword><keyword weight="0.60144">Object model</keyword><keyword weight="0.46445">Theoretical computer science</keyword><keyword weight="0.50649">Instance variable</keyword><keyword weight="0.54314">Message passing</keyword><keyword weight="0.48741">Reusability</keyword><keyword weight="0.46433">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>It is generally claimed that object-based models are very suitable for building distributed system architectures since object interactions follow the client-server model. To cope with the complexity of todayu0027s distributed systems, however, we think that high-level linguistic mechanisms are needed to effectively structure, abstract and reuse object interactions. For example, the conventional object-oriented model does not provide high-level language mechanisms to model layered system architectures. Moreover, we consider the message passing model of the conventional object-oriented model as being too low-level because it can only specify object interactions that involve two partner objects at a time and its semantics cannot be extended easily. This paper introduces Abstract Communication Types (ACTs), which are objects that abstract interactions among objects. ACTs make it easier to model layered communication architectures, to enforce the invariant behavior among objects, to reduce the complexity of programs by hiding the interaction details in separate modules and to improve reusability through the application of object-oriented principles to ACT classes. We illustrate the concept of ACTs using the composition filters model.</abstract></paper>