<paper id="1595983599"><title>Polymorphic Type Inference with Overloading and Subtyping</title><year>1993</year><authors><author org="Cornell University;" id="2159366204">Geoffrey Smith</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>1554432400</reference><reference>1562611359</reference><reference>1703087989</reference><reference>1783314273</reference><reference>1874450173</reference><reference>1964476601</reference><reference>1969093922</reference><reference>2041659737</reference><reference>2059895047</reference><reference>2163976959</reference><reference>2166822586</reference></references><venue id="2756386172" type="C">Colloquium on trees in Algebra and Programming</venue><doi>10.1007/3-540-56610-4_97</doi><keywords><keyword weight="0.4339">Discrete mathematics</keyword><keyword weight="0.53881">Transitive reduction</keyword><keyword weight="0.51418">Unification</keyword><keyword weight="0.42244">Computer science</keyword><keyword weight="0.44368">Theoretical computer science</keyword><keyword weight="0.59947">Type inference</keyword><keyword weight="0.56678">Soundness</keyword><keyword weight="0.52788">Subtyping</keyword><keyword weight="0.51114">Strongly connected component</keyword><keyword weight="0.49395">Completeness (statistics)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show how the Hindley/Milner polymorphic type system can be extended to incorporate overloading and subtyping, by using constrained quantification. We describe an algorithm for inferring principal types and outline a proof of its soundness and completeness. We find that it is necessary in practice to simplify the inferred types, and we describe techniques for type simplification that involve shape unification, strongly connected components, transitive reduction, and the monotonicities of type formulas.</abstract></paper>