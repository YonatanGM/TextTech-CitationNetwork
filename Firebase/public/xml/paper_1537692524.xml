<paper id="1537692524"><title>Time Responsive External Data Structures for Moving Points</title><year>2001</year><authors><author org="• Duke University#TAB#" id="2128565744">Pankaj K. Agarwal</author><author org="• Duke University#TAB#" id="2170557315">Lars Arge</author><author org="Westfälische Wilhelms-Universität Münster" id="24742324">Jan Vahrenhold</author></authors><n_citation>16</n_citation><doc_type>Conference</doc_type><references><reference>1690102553</reference><reference>1964691748</reference><reference>1982042357</reference><reference>1997884498</reference><reference>2005807476</reference><reference>2015858208</reference><reference>2038142281</reference><reference>2043148321</reference><reference>2055385473</reference><reference>2086474457</reference><reference>2097224604</reference><reference>2097597750</reference><reference>2101429492</reference><reference>2149757010</reference><reference>2152301310</reference><reference>2157110916</reference><reference>2161694911</reference></references><venue id="1149998698" type="C">Workshop on Algorithms and Data Structures</venue><doi>10.1007/3-540-44634-6_6</doi><keywords><keyword weight="0.5654">Data structure</keyword><keyword weight="0.49118">Computer data storage</keyword><keyword weight="0.45618">Computer science</keyword><keyword weight="0.61813">Range query (data structures)</keyword><keyword weight="0.4645">Algorithm</keyword><keyword weight="0.49244">Response time</keyword><keyword weight="0.45915">Two-dimensional space</keyword><keyword weight="0.49949">Trajectory</keyword><keyword weight="0.52013">Auxiliary memory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We develop external data structures for storing points in one or two dimensions, each moving along a linear trajectory, so that a range query at a given time tq can be answered efficiently. The novel feature of our data structures is that the number of I/Os required to answer a query depends not only on the size of the data set and on the number of points in the answer but also on the difference between tq and the current time; queries close to the current time are answered fast, while queries that are far away in the future or in the past may take more time.</abstract></paper>