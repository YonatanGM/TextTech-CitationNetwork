<paper id="1973187217"><title>Program equivalence and context-free grammars</title><year>1975</year><authors><author org="Computer Sciences Department, IBM Thomas J. Watson Research Center, Yorktown Heights, New York 10598, USA" id="2078595754">Barry K. Rosen</author></authors><n_citation>22</n_citation><doc_type>Journal</doc_type><references><reference>109824915</reference><reference>1968131662</reference><reference>1998618679</reference><reference>2009068757</reference><reference>2010927194</reference><reference>2011725207</reference><reference>2016313399</reference><reference>2028140996</reference><reference>2038612549</reference><reference>2056239109</reference><reference>2064204259</reference><reference>2075052434</reference><reference>2078079279</reference><reference>2081920379</reference><reference>2122330398</reference><reference>2124153277</reference><reference>2156346748</reference><reference>2542070736</reference><reference>2545019565</reference></references><venue id="141020589" type="J">Journal of Computer and System Sciences</venue><doi>10.1016/S0022-0000(75)80057-2</doi><keywords><keyword weight="0.64922">Tree-adjoining grammar</keyword><keyword weight="0.4583">Discrete mathematics</keyword><keyword weight="0.61277">Logical equivalence</keyword><keyword weight="0.45314">Combinatorics</keyword><keyword weight="0.62448">Context-free grammar</keyword><keyword weight="0.63576">L-attributed grammar</keyword><keyword weight="0.55444">Decidability</keyword><keyword weight="0.60583">Equivalence (measure theory)</keyword><keyword weight="0.4246">Mathematics</keyword><keyword weight="0.47576">Monad (functional programming)</keyword><keyword weight="0.53401">Recursion</keyword></keywords><publisher>Academic Press, Inc.</publisher><abstract>Tree equivalence is a relation among polyadic recursion schemes. This relation is broad enough to be interesting: equivalent schemes may not be obviously equivalent and may still differ in computationally important ways. We show that this relation is also narrow enough to imply input-output equivalence. Is tree equivalence decidable? We assign context-free grammars to recursion schemes in such a way that schemes are tree equivalent iff their grammars generate the same language. Known results on LL(k) grammars then imply that tree equivalence is decidable for a class of schemes which includes the monadic recursion schemes without constants. Some important nonmonadic schemes are also included.</abstract></paper>