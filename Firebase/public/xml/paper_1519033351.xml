<paper id="1519033351"><title>Developing Efficient Interpreters Based on Formal Language Specifications</title><year>1994</year><authors><author org="Technische UniversitÃ¤t" id="2343845410">Arnd Poetzsch-Heffter</author></authors><n_citation>6</n_citation><doc_type>Conference</doc_type><references><reference>1600689686</reference><reference>1801905373</reference><reference>1818561783</reference><reference>2039572288</reference><reference>2082433897</reference><reference>2614279894</reference></references><venue id="1162239172" type="C">Compiler Construction</venue><doi>10.1007/3-540-57877-3_16</doi><keywords><keyword weight="0.58412">Specification language</keyword><keyword weight="0.47992">Programming language</keyword><keyword weight="0.59293">Programming language specification</keyword><keyword weight="0.59215">Formal language</keyword><keyword weight="0.46235">Computer science</keyword><keyword weight="0.63324">Formal specification</keyword><keyword weight="0.58437">Object language</keyword><keyword weight="0.59702">Compiled language</keyword><keyword weight="0.57276">High-level programming language</keyword><keyword weight="0.59194">Formal methods</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper reports on extensions to the MAX system enabling the generation and refinement of interpreters based on formal language specifications. In these specifications, static semantics is defined by an attribution mechanism that allows to enrich syntax trees by control flow graphs. The dynamic semantics is defined by evolving algebras, a framework that has been successfully used to specify realistic programming languages.</abstract></paper>