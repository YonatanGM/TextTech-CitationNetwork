<paper id="1592267339"><title>Understanding UML: A Formal Semantics of Concurrency and Communication in Real-Time UML</title><year>2002</year><authors><author org="OFFIS#TAB#" id="2950800745">Werner Damm</author><author org="OFFIS#TAB#" id="2951773993">Bernhard Josko</author><author org="The Weizmann Institute of Science" id="2171343426">Amir Pnueli</author><author org="OFFIS#TAB#" id="1983222002">Angelika Votintseva</author></authors><n_citation>60</n_citation><doc_type>Conference</doc_type><references><reference>196748788</reference><reference>1495380017</reference><reference>1506818785</reference><reference>1521159804</reference><reference>1532760223</reference><reference>1539553861</reference><reference>1571075905</reference><reference>1826173575</reference><reference>1923262203</reference><reference>1926460446</reference><reference>2018568588</reference><reference>2027500030</reference><reference>2093916942</reference><reference>2116419508</reference><reference>2118255887</reference><reference>2121163444</reference><reference>2159720139</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1007/978-3-540-39656-7_3</doi><keywords><keyword weight="0.52425">Active object</keyword><keyword weight="0.47268">Programming language</keyword><keyword weight="0.6292">UML state machine</keyword><keyword weight="0.69472">UML tool</keyword><keyword weight="0.52237">Unified Modeling Language</keyword><keyword weight="0.46078">Computer science</keyword><keyword weight="0.46029">Theoretical computer science</keyword><keyword weight="0.44644">Artificial intelligence</keyword><keyword weight="0.78621">Applications of UML</keyword><keyword weight="0.55196">Formal methods</keyword><keyword weight="0.64878">Object Constraint Language</keyword><keyword weight="0.55576">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We define a subset krtUML of UML which is rich enough to express all behavioural modelling entities of UML used for real-time applications, covering such aspects as active objects, dynamic object creation and destruction, dynamically changing communication topologies in inter-object communication, asynchronous signal based communication, synchronous communication using operation calls, and shared memory communication through global attributes. We define a formal interleaving semantics for this kernel language by associating with each model M âˆˆ krtUML a symbolic transition system STS(M). We outline how to compile industrial real-time UML models making use of generalisation hierarchies, weak- and strong aggregation, and hierarchical state-machines into krtUML, and propose modelling guidelines for real-time applications of UML. This work provides the semantical foundation for formal verification of real-time UML models described in the companion paper [11].</abstract></paper>