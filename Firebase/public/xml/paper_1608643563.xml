<paper id="1608643563"><title>A Higher-Level Language for Hardware Synthesis</title><year>2001</year><authors><author org="Cambridge Univ." id="2161161904">Richard Sharp</author><author org="Cambridge Univ." id="163000670">Alan Mycroft</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>1584058703</reference><reference>1595601404</reference><reference>1608252846</reference><reference>1683919907</reference><reference>1829244603</reference><reference>1853445766</reference><reference>2003131643</reference><reference>2049600101</reference><reference>2055378322</reference><reference>2139077453</reference><reference>2160962052</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-44798-9_20</doi><keywords><keyword weight="0.51993">Operational semantics</keyword><keyword weight="0.52611">Parallel language</keyword><keyword weight="0.43831">Abstraction</keyword><keyword weight="0.47022">Programming language</keyword><keyword weight="0.51746">Functional programming</keyword><keyword weight="0.51815">Silicon compiler</keyword><keyword weight="0.44618">Computer science</keyword><keyword weight="0.54038">High-level synthesis</keyword><keyword weight="0.43181">Circuit design</keyword><keyword weight="0.46915">Thread (computing)</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe SAFL+: a call-by-value, parallel language in the style of ML which combines imperative, concurrent and functional programming. Synchronous channels allow communication between parallel threads and Ï€-calculus style channel passing is provided. SAFL+ is designed for hardware description and synthesis; a silicon compiler, translating SAFL+ into RTL-Verilog, has been :[50],"parameterising functions over both data and channels the SAFL+ fun declaration becomes a powerful abstraction mechanism unifying a range of structuring techniques treated separately by existing :[77],"show how SAFL+ is implemented at the circuit level and define the language formally by means of an operational semantics.</abstract></paper>