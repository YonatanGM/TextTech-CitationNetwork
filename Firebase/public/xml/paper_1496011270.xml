<paper id="1496011270"><title>Smooth Operatons with Square Operators - The Version Set Model in ICE</title><year>1996</year><authors><author org="Technische UniversitÃ¤t Braunschweig" id="2106620385">Andreas Zeller</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>1483798608</reference><reference>1525228843</reference><reference>1558349193</reference><reference>1965144055</reference><reference>1970743412</reference><reference>1986466161</reference><reference>1990244497</reference><reference>1995089655</reference><reference>2010167082</reference><reference>2021487990</reference><reference>2029256113</reference><reference>2069234241</reference><reference>2069942764</reference><reference>2089587167</reference><reference>2094944943</reference><reference>2098675820</reference><reference>2099349849</reference><reference>2109452325</reference><reference>2115528929</reference><reference>2127140110</reference><reference>2148238464</reference><reference>2156720842</reference><reference>2166667085</reference><reference>2175140350</reference></references><venue id="2626107884" type="C">Software Configuration Management Workshop</venue><doi>10.1007/BFb0023078</doi><keywords><keyword weight="0.51591">File system</keyword><keyword weight="0.44592">Mathematical optimization</keyword><keyword weight="0.47838">Programming language</keyword><keyword weight="0.62738">Software configuration management</keyword><keyword weight="0.47762">Computer science</keyword><keyword weight="0.49144">Workspace</keyword><keyword weight="0.48558">Reuse</keyword><keyword weight="0.5007">Preprocessor</keyword><keyword weight="0.57456">Software development process</keyword><keyword weight="0.4599">Operator (computer programming)</keyword><keyword weight="0.59338">Software construction</keyword><keyword weight="0.46984">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Implementing software configuration management (SCM) in an organization raises various integration problems. We present the Incremental Configuration Environment (ICE), a novel SCM system providing smooth integration with both the software process and the development environment. ICE is based on the version set model, where versions, components, and configurations are grouped into sets according to their features, using feature logic as a formal base to denote sets and operations and to deduce consistency. Version sets generalize well-known SCM concepts such as components, repositories, workspaces, or configurations and allow for flexibility in combining these concepts. For integration in software development environments, ICE provides a featured file system (FFS), where version sets are represented as files and directories. In the FFS, arbitrary programs can incrementally access and explore version sets. Using the well-known C preprocessor (CPP) representation, users can view and edit multiple versions simultaneously, while still only the differences between version sets are stored. Facilities for multi-version merging or deductive program construction care for effective work coordination and automatic reuse of derived objects.</abstract></paper>