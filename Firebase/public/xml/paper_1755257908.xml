<paper id="1755257908"><title>Design and implementation of a special-purpose static program analyzer for safety-critical real-time embedded software</title><year>2002</year><authors><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="2311319369">Bruno Blanchet</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="2148533322">Patrick Cousot</author><author org="CNRS &amp; Ecole polytechnique, 91128 Palaiseau cedex, France#TAB#" id="1995565190">Radhia Cousot</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="2055060970">Jérôme Feret</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="283318887">Laurent Mauborgne</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="2113378078">Antoine Miné</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="49816230">David Monniaux</author><author org="CNRS &amp; Ecole normale supérieure, 75005 Paris, France#TAB#" id="309290432">Xavier Rival</author></authors><n_citation>156</n_citation><doc_type>Journal</doc_type><references><reference>1554808127</reference><reference>1556604985</reference><reference>1557311886</reference><reference>1584436405</reference><reference>1596431623</reference><reference>2014764321</reference><reference>2043100293</reference><reference>2111422217</reference><reference>2157812571</reference><reference>2725334573</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-36377-7_5</doi><keywords><keyword weight="0.51827">False alarm</keyword><keyword weight="0.54588">Embedded software</keyword><keyword weight="0.51972">Abstract interpretation</keyword><keyword weight="0.45932">Computer science</keyword><keyword weight="0.54748">Static analysis</keyword><keyword weight="0.47002">Real-time computing</keyword><keyword weight="0.5237">Software</keyword><keyword weight="0.54369">Program analysis</keyword><keyword weight="0.58771">Loop unrolling</keyword><keyword weight="0.47573">Computer engineering</keyword><keyword weight="0.53383">Source lines of code</keyword><keyword weight="0.46005">Distributed computing</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>We report on a successful preliminary experience in the design and implementation of a special-purpose Abstract Interpretation based static program analyzer for the verification of safety critical embedded real-time software. The analyzer is both precise (zero false alarm in the considered experiment) and efficient (less than one minute of analysis for 10,000 lines of code). Even if it is based on a simple interval analysis, many features have been added to obtain the desired precision: expansion of small arrays, widening with several thresholds, loop unrolling, trace partitioning, relations between loop counters and other variables. The efficiency of the tool mainly comes from a clever representation of abstract environments based on balanced binary search trees.</abstract></paper>