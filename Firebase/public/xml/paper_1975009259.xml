<paper id="1975009259"><title>The Tree-to-Tree Correction Problem</title><year>1979</year><authors><author org="Department of Computer Science, North Carolina State University, P O Box 5972, Raleigh, NC" id="2655179940">Kuo-Chung Tai</author></authors><n_citation>734</n_citation><doc_type>Journal</doc_type><references><reference>1970026646</reference><reference>1989838421</reference><reference>2023281982</reference><reference>2027506564</reference><reference>2038268267</reference><reference>2039262760</reference><reference>2048001624</reference><reference>2054882906</reference><reference>2056918046</reference><reference>2162744351</reference><reference>2165654401</reference></references><venue id="118992489" type="J">Journal of the ACM</venue><doi>10.1145/322139.322143</doi><keywords><keyword weight="0.46298">Discrete mathematics</keyword><keyword weight="0.45886">Combinatorics</keyword><keyword weight="0.41874">Computer science</keyword><keyword weight="0.56342">Wagnerâ€“Fischer algorithm</keyword><keyword weight="0.6232">Tree alignment</keyword><keyword weight="0.41245">Substructure</keyword></keywords><publisher>ACM</publisher><abstract>The tree-to-tree correctmn problem Is to determine, for two labeled ordered trees T and Tu0027, the distance from T to Tu0027 as measured by the mlmmum cost sequence of edit operaUons needed to transform T into Tu0027 The edit operations investigated allow changing one node of a tree into another node, deleting one node from a tree, or inserting a node into a tree An algorithm Is presented which solves this problem m time O(V* Vu0027*LZ* Lu00272), where V and Vu0027 are the numbers of nodes respectively of T and Tu0027, and L and Lu0027 are the maximum depths respectively of T and Tu0027 Possible apphcatmns are to the problems of measuring the similarity between trees, automatic error recovery and correction for programming languages, and determining the largest common substructure of two trees</abstract></paper>