<paper id="79047183"><title>On the generative power of sequential and parallel programmed graph grammars</title><year>1982</year><authors><author org="Lehrstuhl für Informatik 5 (Mustererkennung), IMMD, Universität Erlangen-Nürnberg, Erlangen, Federal Republic of Germany" id="1948338481">Horst Bunke</author></authors><n_citation>17</n_citation><doc_type>Journal</doc_type><references><reference>56731011</reference><reference>89272692</reference><reference>129545406</reference><reference>130248688</reference><reference>1526936183</reference><reference>1561561939</reference><reference>1571667212</reference><reference>1574796876</reference><reference>1590835706</reference><reference>1607768517</reference><reference>1817383156</reference><reference>1846899382</reference><reference>1971379194</reference><reference>2003442449</reference><reference>2011884447</reference><reference>2083312088</reference><reference>2093311785</reference><reference>2099683082</reference><reference>2163091968</reference><reference>2536118580</reference><reference>2912299646</reference></references><venue id="35593046" type="J">Computing</venue><doi>10.1007/BF02249935</doi><keywords><keyword weight="0.44966">Discrete mathematics</keyword><keyword weight="0.69419">Line graph</keyword><keyword weight="0.68485">Graph property</keyword><keyword weight="0.67766">Directed graph</keyword><keyword weight="0.70865">Null graph</keyword><keyword weight="0.67601">Graph rewriting</keyword><keyword weight="0.6855">Graph (abstract data type)</keyword><keyword weight="0.69904">Voltage graph</keyword><keyword weight="0.39781">Mathematics</keyword><keyword weight="0.67877">Complement graph</keyword></keywords><publisher>Springer Science and Business Media LLC</publisher><abstract>Programmed graph grammars are formally introduced and their generative power is investigated. Programmed graph grammars differ from other approaches to graph grammars in the so-called control diagram which controls the application order of productions. Restricting the form of the productions of a programmed graph grammar we get several classes of graph languages. These are compared mutually as well as with the hierarchy introduced by Nagl [18]. For unrestricted and monotone productions corresponding classes of graph languages coincide, while the class of context free programmed graph languages is properly contained in the class of context free graph languages in the sense of [18].</abstract></paper>