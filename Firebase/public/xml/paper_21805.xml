<paper id="21805"><title>On system rollback and totalized fields: An algebraic approach to system change</title><year>2011</year><authors><author org="Department of Computer Science, Oslo University College, Norway" id="2255205611">Mark Burgess</author><author org="Department of Computer Science, Tufts University, USA#TAB#" id="1251186077">Alva L. Couch</author></authors><n_citation>6</n_citation><doc_type>Journal</doc_type><references><reference>33910554</reference><reference>55862950</reference><reference>64514683</reference><reference>203188803</reference><reference>1573833643</reference><reference>1594183216</reference><reference>1973798924</reference><reference>2010439775</reference><reference>2017838136</reference><reference>2031122103</reference><reference>2032008460</reference><reference>2041404167</reference><reference>2068092015</reference><reference>2099937335</reference><reference>2111829945</reference><reference>2119337781</reference><reference>2157772625</reference><reference>2331953749</reference><reference>2912934143</reference></references><venue id="70478294" type="J">The Journal of Logic and Algebraic Programming</venue><doi>10.1016/j.jlap.2011.07.001</doi><keywords><keyword weight="0.54355">Division by zero</keyword><keyword weight="0.45758">Change management</keyword><keyword weight="0.0">Confusion</keyword><keyword weight="0.46727">Algebraic number</keyword><keyword weight="0.45676">Computer science</keyword><keyword weight="0.46058">Theoretical computer science</keyword><keyword weight="0.48865">Operator (computer programming)</keyword><keyword weight="0.57172">Rollback</keyword><keyword weight="0.56304">Theory of computation</keyword><keyword weight="0.51034">Computation</keyword></keywords><publisher>North-Holland</publisher><abstract>Abstract In system operations the term rollback is often used to imply that arbitrary changes can be reversed i.e. ‘rolled back’ from an erroneous state to a previously known acceptable state. We show that this assumption is flawed and discuss error-correction schemes based on absolute rather than relative change. Insight may be gained by relating change management to the theory of computation. To this end, we reformulate previously-defined ‘convergent change operators’ of Burgess into the language of groups and rings. We show that, in this form, the problem of rollback from a convergent operation becomes equivalent to that of ‘division by zero’ in computation. Hence, we discuss how recent work by Bergstra and Tucker on zero-totalized fields helps to clear up long-standing confusion about the options for ‘rollback’ in change management.</abstract></paper>