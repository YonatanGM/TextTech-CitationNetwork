<paper id="1486060671"><title>Query Construction through Meaningful Suggestions of Terms</title><year>2002</year><authors><author org="Dept. of Computer Science, Postfach, Switzerland" id="957425637">Epaminondas Kapetanios</author><author org="Dept. of Computer Science, Postfach, Switzerland" id="2304554366">P. Groenewoud</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>22830412</reference><reference>62197522</reference><reference>1508140238</reference><reference>1960069969</reference><reference>1972121741</reference><reference>1996454684</reference><reference>2022236983</reference><reference>2032133388</reference><reference>2035032881</reference><reference>2039854932</reference><reference>2043794661</reference><reference>2057670927</reference><reference>2075095547</reference><reference>2098276338</reference><reference>2128356591</reference><reference>2138437366</reference><reference>2145821710</reference><reference>2160948978</reference><reference>2951896267</reference></references><venue id="1163280044" type="C">Flexible Query Answering Systems</venue><doi>10.1007/3-540-36109-X_18</doi><keywords><keyword weight="0.44921">Data mining</keyword><keyword weight="0.74058">Query language</keyword><keyword weight="0.4621">Computer science</keyword><keyword weight="0.6787">Web query classification</keyword><keyword weight="0.47164">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.71217">Query optimization</keyword><keyword weight="0.67948">RDF query language</keyword><keyword weight="0.68663">Query expansion</keyword><keyword weight="0.47119">Information retrieval</keyword><keyword weight="0.66462">Sargable</keyword><keyword weight="0.66482">Query by Example</keyword><keyword weight="0.67487">Object Query Language</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Query formulation by using database specific query languages such as SQL or OQL turns out to be cumbersome or even impossible when end-users need to pose queries to large database schemes. This is due to the difficulties which arise out of the wrong or impossible interpretations of storage models and the lack of mechanisms to embed application domain semantics within query languages. Visual query languages (VQLs) and natural language (NL) based query interfaces in query answering systems alleviate, in some cases, the task of constructing a query. VQLs, however, are bound to visual formalisms which need further interpretation and still lack the use of semantics other than those provided by well-known conceptual models (EER, OMT, etc.). NL based approaches, on the other side, presuppose a considerable knowledge of the vocabulary terms to be used by the end-user for a particular application domain and, furthermore, they do not exploit the meaning of words other than that as provided by the syntax, in order to formulate a meaningful query. This turns out to be cumbersome, especially when advanced terminologies and large vocabularies should be used. This is also strengthened by the non-unique name assumption characterizing the application domain vocabulary. In this paper, we present a query construction paradigm which underlies the Meaning Driven Data Query Language MDDQL. It strongly relies on the construction of queries through suggestions of meaningful terms, in a preferred natural language, when requested by the end-user. An inference engine is responsible for the suggestion of a semantically consistent set, not only of application domain terms, but also of operator or operation terms, during the query construction process. All inferences are drawn at a "heuristic level" of representation of the vocabulary, i.e., on the basis of data structures (cyclic graph), and not at an "epistemological level", i.e., based on logic-like representations.</abstract></paper>