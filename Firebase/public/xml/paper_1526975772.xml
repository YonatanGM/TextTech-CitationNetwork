<paper id="1526975772"><title>Model-Driven Product Line Architectures</title><year>2002</year><authors><author org="Fraunhofer Institute Experimental Software Engineering (IESE)" id="164069180">Dirk Muthig</author><author org="Fraunhofer Institute Experimental Software Engineering (IESE)" id="2110818429">Colin Atkinson</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>1507714685</reference><reference>1537143334</reference><reference>1970053979</reference><reference>1978591382</reference><reference>1991618866</reference><reference>2106432430</reference></references><venue id="1190643002" type="C">Software Product Lines</venue><doi>10.1007/3-540-45652-X_8</doi><keywords><keyword weight="0.6336">Product engineering</keyword><keyword weight="0.47888">Architecture</keyword><keyword weight="0.54366">Domain engineering</keyword><keyword weight="0.52242">Unified Modeling Language</keyword><keyword weight="0.48997">Business process</keyword><keyword weight="0.45697">Computer science</keyword><keyword weight="0.60902">Product design specification</keyword><keyword weight="0.54773">Metamodeling</keyword><keyword weight="0.51703">Software development</keyword><keyword weight="0.45626">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>It has long been recognized that successful product line engineering revolves around the creation of a coherent and flexible product line architecture that consolidates the common parts of a product family for reuse and captures the variant parts for simple adaptation. However, it has been less clear what form such architectures should take and how they should be represented. One promising approach is offered by the new Model-Driven Architecture (MDA) paradigm of the Object Management Group (OMG). This paradigm holds that an organizationu0027s key architectural assets should be represented in an abstract "platform-independent" way, in terms of Unified Modeling Language (UML) models, and thereby be shielded from the idiosyncrasies and volatility of specific implementation technologies. In this paper, we discuss the opportunities and challenges involved in using the MDA paradigm for product line engineering and explain how model-driven, product line architectures can be developed, maintained and applied. After first outlining the core concepts of product line engineering and the ad hoc strategies currently used to support it, the paper provides a detailed metamodel of the information that needs to be stored within a product line architecture.</abstract></paper>