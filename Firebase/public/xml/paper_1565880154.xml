<paper id="1565880154"><title>Formal Verification of IA-64 Division Algorithms</title><year>2000</year><authors><author org="Intel Corporation, EY2-03" id="2148262072">John Harrison</author></authors><n_citation>47</n_citation><doc_type>Conference</doc_type><references><reference>1497011154</reference><reference>1594496874</reference><reference>1602419232</reference><reference>1778289469</reference><reference>2023462640</reference><reference>2108776769</reference><reference>2169810797</reference></references><venue id="2538859667" type="C">Theorem Proving in Higher Order Logics</venue><doi>10.1007/3-540-44659-1_15</doi><keywords><keyword weight="0.50309">Single-precision floating-point format</keyword><keyword weight="0.54252">HOL</keyword><keyword weight="0.47708">Programming language</keyword><keyword weight="0.46758">Computer science</keyword><keyword weight="0.57677">Correctness</keyword><keyword weight="0.50375">Automated theorem proving</keyword><keyword weight="0.44482">Algorithm</keyword><keyword weight="0.52245">Assembly language</keyword><keyword weight="0.51786">Compiler</keyword><keyword weight="0.46164">Theoretical computer science</keyword><keyword weight="0.64495">Formal verification</keyword><keyword weight="0.51303">IA-64</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The IA-64 architecture defers floating point and integer division to software. To ensure correctness and maximum efficiency, Intel provides a number of recommended algorithms which can be called as subroutines or inlined by compilers and assembly language programmers. All these algorithms have been subjected to formal verification using the HOL Light theorem prover. As well as improving our level of confidence in the algorithms, the formal verification process has led to a better understanding of the underlying theory, allowing some significant efficiency improvements.</abstract></paper>