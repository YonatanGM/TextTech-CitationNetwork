<paper id="1483618713"><title>OASIS: An Optimizing Action-Based Compiler Generator</title><year>1994</year><authors><author org="Aarhus University," id="2016342478">Peter Ørbæk</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>45961263</reference><reference>1517647814</reference><reference>1518056771</reference><reference>1579278367</reference><reference>1602009650</reference><reference>1889468400</reference><reference>1977285665</reference><reference>1996821493</reference><reference>2043100293</reference><reference>2095460218</reference><reference>2132500556</reference><reference>2136285318</reference><reference>2154940799</reference><reference>2611598995</reference><reference>2614279894</reference></references><venue id="1162239172" type="C">Compiler Construction</venue><doi>10.1007/3-540-57877-3_1</doi><keywords><keyword weight="0.68566">Functional compiler</keyword><keyword weight="0.47258">Programming language</keyword><keyword weight="0.51029">Functional programming</keyword><keyword weight="0.44892">Computer science</keyword><keyword weight="0.45345">Parallel computing</keyword><keyword weight="0.6526">Compiler correctness</keyword><keyword weight="0.53887">Action semantics</keyword><keyword weight="0.64567">Compiler</keyword><keyword weight="0.64027">Optimizing compiler</keyword><keyword weight="0.74716">Compiler construction</keyword><keyword weight="0.56627">Intrinsic function</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Action Semantics is a new and interesting foundation for semantics based compiler generation. In this paper we present several analyses of actions, and apply them in a compiler generator capable of generating efficient, optimizing compilers for procedural and functional languages with higher order recursive functions. The automatically generated compilers produce code that is comparable with code produced by handwritten compilers.</abstract></paper>