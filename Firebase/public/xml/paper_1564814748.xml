<paper id="1564814748"><title>Embedding Negation as Failure into a Model Generation Theorem Prover</title><year>1992</year><authors><author org="Institute for New Generation Computer Technology" id="2236397478">Katsumi Inoue</author><author org="Institute for New Generation Computer Technology" id="1218237348">Miyuki Koshimura</author><author org="Institute for New Generation Computer Technology" id="2138670808">Ryuzo Hasegawa</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>26086837</reference><reference>28460116</reference><reference>55851624</reference><reference>70051331</reference><reference>81377374</reference><reference>173162888</reference><reference>176609766</reference><reference>191908603</reference><reference>1511711492</reference><reference>1524811847</reference><reference>1589905862</reference><reference>1672891595</reference><reference>1756530980</reference><reference>1924552249</reference><reference>2035601066</reference><reference>2039303449</reference><reference>2076698873</reference><reference>2128770734</reference><reference>2155322595</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-55602-8_180</doi><keywords><keyword weight="0.44116">Discrete mathematics</keyword><keyword weight="0.48851">Minimal models</keyword><keyword weight="0.53932">Negation</keyword><keyword weight="0.44774">Computer science</keyword><keyword weight="0.51162">Inference</keyword><keyword weight="0.55124">Automated theorem proving</keyword><keyword weight="0.4431">Algorithm</keyword><keyword weight="0.48988">Data integrity</keyword><keyword weight="0.60966">Negation as failure</keyword><keyword weight="0.62169">Stable model semantics</keyword><keyword weight="0.4744">Fixed point</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Here, for the first time, we give an implementation which computes answer sets of every class of (function-free) logic programs and deductive databases containing both negation as failure and classical negation. The proposal is based on bottom-up, incremental, backtrack-free computation of the minimal models of positive disjunctive programs, together with integrity constraints over beliefs and disbeliefs. Our translation method not only provides a simple fixpoint characterization of answer sets, but also is very helpful to understand under what conditions each model is “stable” or “unstable”. The procedure has been implemented on top of the model generation theorem prover MGTP on a parallel inference machine, and has been applied to a legal reasoning system.</abstract></paper>