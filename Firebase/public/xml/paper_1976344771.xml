<paper id="1976344771"><title>A study of several metrics for programming effort</title><year>1981</year><authors><author org="Arizona State University, USA." id="2974731354">S. N. Woodfield</author><author org="Purdue University Italy" id="2309113485">V. Y. Shen</author><author org="Purdue University Italy" id="2475027859">H. E. Dunsmore</author></authors><n_citation>27</n_citation><doc_type>Journal</doc_type><references><reference>1576764729</reference><reference>1964962870</reference><reference>2013940063</reference><reference>2025453007</reference><reference>2074140696</reference><reference>2125200236</reference><reference>2160289223</reference></references><venue id="37879656" type="J">Journal of Systems and Software</venue><doi>10.1016/0164-1212(81)90029-7</doi><keywords><keyword weight="0.69979">Halstead complexity measures</keyword><keyword weight="0.44865">Systems engineering</keyword><keyword weight="0.42532">Experimental data</keyword><keyword weight="0.4713">Computer science</keyword><keyword weight="0.0">Intuition</keyword><keyword weight="0.0">Program development</keyword><keyword weight="0.60443">Programming complexity</keyword><keyword weight="0.46543">Circuit rank</keyword><keyword weight="0.47969">Empirical research</keyword><keyword weight="0.58501">Source lines of code</keyword></keywords><publisher>Elsevier</publisher><abstract>As the cost of programming becomes a major component of the cost of computer systems, it becomes imperative that program development and maintenance be better managed. One measurement a manager could use is programming complexity. Such a measure can be very useful if the manager is confident that the higher the complexity measure is for a programming project, the more effort it takes to complete the project and perhaps to maintain it. Until recently most measures of complexity were based only on intuition and experience. In the past 3 years two objective metrics have been introduced, McCabeu0027s cyclomatic number v(G) and Halsteadu0027s effort measure E. This paper reports an empirical study designed to compare these two metrics with a classic size measure, lines of code. A fourth metric based on a model of programming is introduced and shown to be better than the previously known metrics for some experimental data.</abstract></paper>