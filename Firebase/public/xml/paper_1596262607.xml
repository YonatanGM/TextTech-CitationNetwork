<paper id="1596262607"><title>An Automata-Theoretic Approach to Fair Realizability and Synthesis</title><year>1995</year><authors><author org="Rice University" id="1970575723">Moshe Y. Vardi</author></authors><n_citation>65</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>142677425</reference><reference>1491037212</reference><reference>1525879420</reference><reference>1554850964</reference><reference>1590266960</reference><reference>1593428110</reference><reference>1737156267</reference><reference>1798280647</reference><reference>1990609140</reference><reference>2012436850</reference><reference>2016206563</reference><reference>2023808162</reference><reference>2031592188</reference><reference>2040127143</reference><reference>2048355938</reference><reference>2090398333</reference><reference>2117189826</reference><reference>2132107743</reference><reference>2142458264</reference><reference>2155756511</reference><reference>2163151383</reference><reference>2806619258</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-60045-0_56</doi><keywords><keyword weight="0.47447">Asynchronous communication</keyword><keyword weight="0.45045">Computer science</keyword><keyword weight="0.51118">Automaton</keyword><keyword weight="0.46622">Theoretical computer science</keyword><keyword weight="0.53571">Temporal logic</keyword><keyword weight="0.654">Tree automaton</keyword><keyword weight="0.63217">Realizability</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Over the last few years, the automata-theoretic approach to realizability checking and synthesis of reactive modules, developed by Pnueli and Rosner, by Abadi, Lamport, and Wolper, and by Dill and Wong-Toi, has been quite successful, handling both the synchronous and the asynchronous cases. In this approach one transforms the specification into a tree automaton. The specification is realizable if this tree automaton is nonempty, i.e., accepts some infinite tree, and a finite representation of an infinite tree accepted by this automaton can be viewed as a finite-state program realizing the specification. Anuchitanukul and Manna argued that the automata-theoretic approach cannot handle realizability checking and synthesis under fairness assumptions. In this paper we show to the contrary that the automata-theoretic approach can handle realizability checking and synthesis under a variety of fairness assumption.</abstract></paper>