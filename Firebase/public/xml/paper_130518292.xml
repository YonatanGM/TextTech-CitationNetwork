<paper id="130518292"><title>Algorithms for generating all spanning trees of undirected, directed and weighted graphs</title><year>1991</year><authors><author org="Indian Institute of Technology Hauz Khas" id="2177891557">Sanjiv Kapoor</author><author org="Indian Institute of Technology Hauz Khas" id="2632067240">H. Ramesh</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>2022871748</reference><reference>2091507391</reference><reference>2294068944</reference></references><venue id="1149998698" type="C">Workshop on Algorithms and Data Structures</venue><doi>10.1007/BFb0028284</doi><keywords><keyword weight="0.45105">Discrete mathematics</keyword><keyword weight="0.45587">Combinatorics</keyword><keyword weight="0.70166">Tr√©maux tree</keyword><keyword weight="0.68589">Tree (graph theory)</keyword><keyword weight="0.61963">Minimum degree spanning tree</keyword><keyword weight="0.37799">Computer science</keyword><keyword weight="0.41709">Algorithm</keyword><keyword weight="0.65481">Connected dominating set</keyword><keyword weight="0.77212">Spanning tree</keyword><keyword weight="0.68571">Shortest-path tree</keyword><keyword weight="0.61952">Feedback arc set</keyword><keyword weight="0.71496">Minimum spanning tree</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present algorithms for enumerating all spanning trees in directed, undirected and weighted graphs. The algorithms use a search tree technique to construct a computation tree. The computation tree is used to output all the spanning trees by listing the relative differences between spanning trees rather than the entire spanning trees themselves. For the undirected case, both the construction and the listing of the trees are shown to require O(N+V+E) time for a graph with V vertices, E edges and N spanning trees. This algorithm is optimal and is based on exchanging non-tree edges with tree edges in a fundamental cycle. A similar exchange technique is used to construct the computation tree for a directed graph in O(NV+V3) time. The time for listing out the trees remains O(N). For a weighted graph, we show how to sort the spanning trees by weight using the computation tree in O(N log V+VE) time.</abstract></paper>