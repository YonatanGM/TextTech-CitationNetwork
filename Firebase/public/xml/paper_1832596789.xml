<paper id="1832596789"><title>Formal Characterization of Active Databases</title><year>1996</year><authors><author org="Univ. of Texas at El Paso#TAB#" id="2010516145">Chitta Baral</author><author org="University of Illinois at Chicago." id="2148624647">Jorge Lobo</author></authors><n_citation>54</n_citation><doc_type>Conference</doc_type><references><reference>35271428</reference><reference>53575411</reference><reference>61392433</reference><reference>67142770</reference><reference>103513877</reference><reference>148128572</reference><reference>1497998981</reference><reference>1505436358</reference><reference>1509153766</reference><reference>1549412672</reference><reference>1555797260</reference><reference>1735593126</reference><reference>1839937676</reference><reference>1978631539</reference><reference>2005473008</reference><reference>2007034626</reference><reference>2064311651</reference><reference>2080621069</reference><reference>2128770734</reference><reference>2165063953</reference><reference>2397627990</reference></references><venue id="1180646617" type="C">Logic in Databases</venue><doi>10.1007/BFb0031741</doi><keywords><keyword weight="0.0">Logic program</keyword><keyword weight="0.0">Active database systems</keyword><keyword weight="0.47181">Computer science</keyword><keyword weight="0.56101">Logic programming</keyword><keyword weight="0.52368">Database transaction</keyword><keyword weight="0.45795">Database</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>In this paper we take a first step towards characterizing active databases. Declarative characterization of active databases allows additional flexibility in studying the effects of different priority criteria between fireable rules, different actions and event definitions, and also to make claims about effects of transaction and prove them without actually executing them. Our characterization is related but different from similar attempts by Zaniolo in terms of making a clear distinction between actual and hypothetical execution of actions and allowing non-determinism. We use the ‘choice’ construct [SZ90] to characterize the non-determinism that arises when several rules can fire at the same time and the preference between them is not specified. We show through examples how our language allows us to express features of different active database systems.</abstract></paper>