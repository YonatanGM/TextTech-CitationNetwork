<paper id="1586821729"><title>Mechanical Verification of a Generalized Protocol for Byzantine Fault Tolerant Clock Synchronization</title><year>1992</year><authors><author org="SRI, International#TAB#" id="2118526916">Natarajan Shankar</author></authors><n_citation>50</n_citation><doc_type /><references><reference>1583232763</reference><reference>1994441984</reference><reference>2023808162</reference><reference>2030263557</reference><reference>2078209861</reference><reference>2118891797</reference><reference>2120510885</reference><reference>2139473437</reference></references><venue id="" type="">Proceedings of the Second International Symposium on Formal Techniques in Real-Time and Fault-Tolerant Systems</venue><doi>10.1007/3-540-55092-5_12</doi><keywords><keyword weight="0.45087">Convergence (routing)</keyword><keyword weight="0.44448">Computer science</keyword><keyword weight="0.5741">Correctness</keyword><keyword weight="0.62577">Byzantine fault tolerance</keyword><keyword weight="0.44637">Theoretical computer science</keyword><keyword weight="0.0">Translation invariance</keyword><keyword weight="0.58974">Clock synchronization</keyword><keyword weight="0.47061">Mathematical proof</keyword><keyword weight="0.71417">Quantum Byzantine agreement</keyword><keyword weight="0.43932">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Schneider [Sch87] generalizes a number of protocols for Byzantine fault-tolerant clock synchronization and presents a uniform proof for their correctness. We present a mechanical verification of Schneideru0027s protocol leading to several significant clarifications and revisions. The verification was carried out with the Ehdm system [RvHO91] developed at the SRI Computer Science Laboratory. The mechanically checked proofs include the verification that the egocentric mean function used in Lamport and Melliar-Smithu0027s Interactive Convergence Algorithm [LMS85] satisfies the requirements of Schneideru0027s protocol. Our mechanical verification raises a number of issues regarding the verification of fault-tolerant, distributed, real-time protocols that are germane to the design of a special-purpose logic for such problems.</abstract></paper>