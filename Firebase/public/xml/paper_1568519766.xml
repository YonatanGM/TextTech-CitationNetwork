<paper id="1568519766"><title>Authenticated data structures for graph and geometric searching</title><year>2003</year><authors><author org="Dept. Computer Science, Univ. of California, Irvine#TAB#" id="2135853928">Michael T. Goodrich</author><author org="Dept. Comput. Sci., Brown Univ.#TAB#" id="237969062">Roberto Tamassia</author><author org="Dept. Comput. Sci., Brown Univ.#TAB#" id="75077956">Nikos Triandopoulos</author><author org="Dept. Computer Science, Univ. of Massachusetts, Boston" id="2157948822">Robert Cohen</author></authors><n_citation>80</n_citation><doc_type>Conference</doc_type><references><reference>18949936</reference><reference>1488126327</reference><reference>1493614564</reference><reference>1502896015</reference><reference>1522597308</reference><reference>1523705567</reference><reference>1524320869</reference><reference>1534695542</reference><reference>1536942514</reference><reference>1542430206</reference><reference>1551041907</reference><reference>1551436681</reference><reference>1566345534</reference><reference>1583834646</reference><reference>1607188293</reference><reference>1608039435</reference><reference>1655990431</reference><reference>1757910331</reference><reference>1799949577</reference><reference>1964669678</reference><reference>1980651618</reference><reference>1987660720</reference><reference>1996839061</reference><reference>2003753892</reference><reference>2005725110</reference><reference>2009432965</reference><reference>2010255818</reference><reference>2018804864</reference><reference>2019616576</reference><reference>2024366499</reference><reference>2029814178</reference><reference>2031495811</reference><reference>2032605149</reference><reference>2033866653</reference><reference>2051164878</reference><reference>2054458282</reference><reference>2064968474</reference><reference>2070991879</reference><reference>2081175812</reference><reference>2088023978</reference><reference>2089290774</reference><reference>2094632707</reference><reference>2095417143</reference><reference>2099000090</reference><reference>2112138431</reference><reference>2114611273</reference><reference>2117362057</reference><reference>2138904733</reference><reference>2142072177</reference><reference>2147078347</reference><reference>2152765583</reference><reference>2156044778</reference><reference>2156153879</reference><reference>2160878415</reference><reference>2170786129</reference><reference>2204104912</reference><reference>2230112138</reference><reference>2401293175</reference><reference>2752444925</reference><reference>2911441928</reference><reference>2912577494</reference><reference>2951062991</reference></references><venue id="2760694600" type="C">The Cryptographers’ Track at the RSA Conference</venue><doi>10.1007/3-540-36563-X_20</doi><keywords><keyword weight="0.0">Graph</keyword><keyword weight="0.0">Authenticated data structures</keyword><keyword weight="0.46739">Combinatorics</keyword><keyword weight="0.51564">Upper and lower bounds</keyword><keyword weight="0.5121">Greedy algorithm</keyword><keyword weight="0.42447">Mathematics</keyword><keyword weight="0.46919">Special case</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In Crypto u002795, Micali and Sidney proposed a method for shared generation of a pseudo-random function f(ċ) among n players in such a way that for all the inputs x, any u players can compute f(x) while t or fewer players fail to do so, where 0 ≤ t u003c u ≤ n. The idea behind the Micali-Sidney scheme is to generate and distribute secret seeds S = {s1, ..., sd} of a poly-random collection of functions, among the n players, each player gets a subset of S, in such a way that any u players together hold all the secret seeds in S while any t or fewer players will lack at least one element from S. The pseudo-random function is then computed as f(x) = ⊕i=1d fsi (x), where fsi (ċ)u0027s are poly-random functions. One question raised by Micali and Sidney is how to distribute the secret seeds satisfying the above condition such that the number of seeds, d, is as small as possible. In this paper, we continue the work of Micali and Sidney.We first provide a general framework for shared generation of pseudo-random function using cumulative maps. We demonstrate that the Micali-Sidney scheme is a special case of this general construction.We then derive an upper and a lower bound for d. Finally we give a simple, yet efficient, approximation greedy algorithm for generating the secret seeds S in which d is close to the optimum by a factor of at most u ln 2.</abstract></paper>