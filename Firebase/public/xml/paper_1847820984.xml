<paper id="1847820984"><title>Well-founded semantics for extended logic programs with dynamic preferences</title><year>1996</year><authors><author org="Abteilung fÃ¼r Wisssensbasierte Systeme, TU Wien, Wien, Austria#TAB#" id="73842927">Gerhard Brewka</author></authors><n_citation>124</n_citation><doc_type>Journal</doc_type><references><reference>99071911</reference><reference>146426469</reference><reference>1501348379</reference><reference>1511711492</reference><reference>1518249528</reference><reference>1555669007</reference><reference>1784061619</reference><reference>1968513265</reference><reference>2001584130</reference><reference>2011992362</reference><reference>2085084839</reference><reference>2090798572</reference><reference>2104126268</reference><reference>2105597099</reference><reference>2152764793</reference><reference>2155322595</reference><reference>2162564004</reference><reference>2913309218</reference><reference>2915093549</reference></references><venue id="139930977" type="J">Journal of Artificial Intelligence Research</venue><doi>10.1613/jair.284</doi><keywords><keyword weight="0.46174">Programming language</keyword><keyword weight="0.62556">Axiomatic semantics</keyword><keyword weight="0.62376">Multimodal logic</keyword><keyword weight="0.61611">Description logic</keyword><keyword weight="0.4595">Theoretical computer science</keyword><keyword weight="0.61891">Predicate functor logic</keyword><keyword weight="0.6297">Predicate logic</keyword><keyword weight="0.40087">Mathematics</keyword><keyword weight="0.63399">Higher-order logic</keyword><keyword weight="0.61386">Dynamic logic (modal logic)</keyword><keyword weight="0.6554">Well-founded semantics</keyword></keywords><publisher>AI Access Foundation</publisher><abstract>The paper describes an extension of well-founded semantics for logic programs with two types of negation. In this extension information about preferences between rules can be expressed in the logical language and derived dynamically. This is achieved by using a reserved predicate symbol and a naming technique. Conflicts among rules are resolved whenever possible on the basis of derived preference information. The well-founded conclusions of prioritized logic programs can be computed in polynomial time. A legal reasoning example illustrates the usefulness of the approach.</abstract></paper>