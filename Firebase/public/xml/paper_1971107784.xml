<paper id="1971107784"><title>The concurrency workbench: a semantics-based tool for the verification of concurrent systems</title><year>1993</year><authors><author org="North Carolina State University–Raleigh" id="2090782985">Rance Cleaveland</author><author org="Swedish Institute of Computer Science, Kista Sweden#TAB#" id="152237314">Joachim Parrow</author><author org="Lehrstuhl fu¨r Informatik II, Aachen, Germany" id="2063423718">Bernhard Steffen</author></authors><n_citation>492</n_citation><doc_type>Journal</doc_type><references><reference>40365060</reference><reference>1492683468</reference><reference>1498760855</reference><reference>1503973138</reference><reference>1517789463</reference><reference>1547265787</reference><reference>1550474961</reference><reference>1561444936</reference><reference>1577673148</reference><reference>1592916007</reference><reference>1614690985</reference><reference>1791618115</reference><reference>1815953705</reference><reference>1966112122</reference><reference>1976268573</reference><reference>1978358700</reference><reference>1992582873</reference><reference>1997387389</reference><reference>2021473546</reference><reference>2036996017</reference><reference>2057260173</reference><reference>2063510765</reference><reference>2068361557</reference><reference>2098083416</reference><reference>2098737431</reference><reference>2110425399</reference><reference>2117189826</reference><reference>2120501031</reference><reference>2136920408</reference><reference>2137467159</reference><reference>2142778060</reference><reference>2147535250</reference><reference>2148106163</reference><reference>2165480747</reference><reference>2167005186</reference><reference>2171536993</reference><reference>2914577191</reference></references><venue id="41449414" type="J">ACM Transactions on Programming Languages and Systems</venue><doi>10.1145/151646.151648</doi><keywords><keyword weight="0.58377">Formal equivalence checking</keyword><keyword weight="0.54017">Workbench</keyword><keyword weight="0.47554">Programming language</keyword><keyword weight="0.58136">Model checking</keyword><keyword weight="0.57449">Concurrency</keyword><keyword weight="0.46425">Computer science</keyword><keyword weight="0.56982">Calculus of communicating systems</keyword><keyword weight="0.48862">Preorder</keyword><keyword weight="0.46156">Theoretical computer science</keyword><keyword weight="0.56173">Process calculus</keyword><keyword weight="0.49502">Communications protocol</keyword></keywords><publisher>ACM</publisher><abstract>The Concurrency Workbench is an automated tool for analyzing networks of finite-state processes expressed in Milneru0027s Calculus of Communicating Systems. Its key feature is its breadth: a variety of different verification methods, including equivalence checking, preorder checking, and model checking, are supported for several different process semantics. One experience from our work is that a large number of interesting verification methods can be formulated as combinations of a small number of primitive algorithms. The Workbench has been applied to the verification of communications protocols and mutual exclusion algorithms and has proven a valuable aid in teaching and research.</abstract></paper>