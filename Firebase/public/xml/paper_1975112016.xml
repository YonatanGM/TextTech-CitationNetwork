<paper id="1975112016"><title>Validation with guided search of the state space</title><year>1998</year><authors><author org="Stanford Univ., CA, , USA" id="2938093100">C.H. Yang</author><author org="Stanford, University" id="2148325455">D.L. Dill</author></authors><n_citation>160</n_citation><doc_type>Conference</doc_type><references><reference>1551256212</reference><reference>2009653580</reference><reference>2080267935</reference><reference>2116989825</reference><reference>2117189826</reference><reference>2134655475</reference><reference>2152056423</reference></references><venue id="1187904452" type="C">Design Automation Conference</venue><doi>10.1145/277044.277201</doi><keywords><keyword weight="0.54432">Model checking</keyword><keyword weight="0.46776">Computer science</keyword><keyword weight="0.0">Logic testing</keyword><keyword weight="0.44742">Real-time computing</keyword><keyword weight="0.46602">Theoretical computer science</keyword><keyword weight="0.60841">State space search</keyword><keyword weight="0.60217">Heuristics</keyword><keyword weight="0.5683">State space</keyword></keywords><publisher>ACM</publisher><abstract>In practice, model checkers are most useful when they find bugs, not when they prove a property. However, because large portions of the state space of the design actually satisfy the specification, model checkers devote much effort verifying correct portions of the design. In this paper, we enhance the bug-finding capability of a model checker by using heuristics to search the states that are most likely to lead to an error, first. Reductions of 1 to 3 orders of magnitude in the number of states needed to find bugs in industrial designs have been observed. Consequently, these heuristics can extend the capability of model checkers to find bugs in designs.</abstract></paper>