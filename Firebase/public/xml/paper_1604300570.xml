<paper id="1604300570"><title>Towards a symptom ontology for semantic web applications</title><year>2004</year><authors><author org="Northeastern, University" id="436812931">Kenneth Baclawski</author><author org="Versatile Information Systems, Inc.#TAB#" id="2275178523">Christopher J. Matheus</author><author org="Northeastern, University" id="187385128">Mieczyslaw M. Kokar</author><author org="Western New England College." id="1967915054">Jerzy Letkowski</author><author org="Lockheed Martin," id="1230227669">Paul A. Kogut</author></authors><n_citation>28</n_citation><doc_type>Conference</doc_type><references><reference>2171922389</reference></references><venue id="1155608529" type="C">International Semantic Web Conference</venue><doi>10.1007/978-3-540-30475-3_45</doi><keywords><keyword weight="0.64454">Ontology (information science)</keyword><keyword weight="0.59857">Ontology alignment</keyword><keyword weight="0.62765">Ontology-based data integration</keyword><keyword weight="0.43029">Data mining</keyword><keyword weight="0.45797">Information retrieval</keyword><keyword weight="0.61188">Process ontology</keyword><keyword weight="0.60843">Semantic Web Stack</keyword><keyword weight="0.43926">Computer science</keyword><keyword weight="0.64621">OWL-S</keyword><keyword weight="0.595">Social Semantic Web</keyword><keyword weight="0.64278">Upper ontology</keyword><keyword weight="0.42548">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>As the use of Semantic Web ontologies continues to expand there is a growing need for tools that can validate ontological consistency and provide guidance in the correction of detected defects and errors. A number of tools already exist as evidenced by the ten systems participating in the W3Cu0027s evaluation of the OWL Test Cases. For the most part, these first generation tools focus on experimental approaches to consistency checking, while minimal attention is paid to how the results will be used or how the systems might interoperate. For this reason very few of these systems produce results in a machine-readable format (for example as OWL annotations) and there is no shared notion across the tools of how to identify and describe what it is that makes a specific ontology or annotation inconsistent. In this paper we propose the development of a Symptom Ontology for the Semantic Web that would serve as a common language for identifying and describing semantic errors and warnings that may be indicative of inconsistencies in ontologies and annotations; we refer to such errors and warnings as symptoms. We offer the symptom ontology currently used by the ConsVISor consistency-checking tool, as the starting point for a discussion on the desirable characteristics of such an ontology. Included among these characteristics are 1) a hierarchy of common symptoms, 2) clear associations between specific symptoms and the axioms of the languages they violate and 3) a means for relating individual symptoms back to the specific constructs in the input file(s) through which they were implicated. We conclude with a number of suggestions for future directions of this work including its extension to syntactic symptoms.</abstract></paper>