<paper id="1588575694"><title>An Old-Fashioned Recipe for Real Time</title><year>1991</year><authors><author org="Digital Equipment Corporation" id="2162106674">Mart√≠n Abadi</author><author org="Digital Equipment Corporation" id="2096750770">Leslie Lamport</author></authors><n_citation>34</n_citation><doc_type>Conference</doc_type><references><reference>1491037212</reference><reference>1492571724</reference><reference>1968947022</reference><reference>1989877393</reference><reference>2015688007</reference><reference>2018930611</reference><reference>2036780547</reference><reference>2132107743</reference><reference>2166071597</reference><reference>2911335075</reference><reference>2914206182</reference></references><venue id="2758088042" type="C">Real-Time: Theory in Practice, REX Workshop</venue><doi>10.1007/BFb0031985</doi><keywords><keyword weight="0.49715">Zeno's paradoxes</keyword><keyword weight="0.6323">Temporal logic of actions</keyword><keyword weight="0.46532">Programming language</keyword><keyword weight="0.4657">Computer science</keyword><keyword weight="0.40151">Recipe</keyword><keyword weight="0.51241">Service Interface for Real Time Information</keyword><keyword weight="0.58634">Realizability</keyword><keyword weight="0.45546">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Traditional methods for specifying and reasoning about concurrent systems work for real-time systems. However, two problems arise: the real-time programming version of Zenou0027s paradox, and circularity in composing real-time assumption/guarantee specifications. Their solutions rest on properties of machine closure and realizability. TLA (the temporal logic of actions) provides a formal framework for the exposition.</abstract></paper>