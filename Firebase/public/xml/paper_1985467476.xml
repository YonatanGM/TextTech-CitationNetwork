<paper id="1985467476"><title>A database cache for high performance and fast restart in database systems</title><year>1984</year><authors><author org="Technische Univ. Mu¨nchen, Munich, West Germany" id="2306742923">Klaus Elhardt</author><author org="Technische Univ. Mu¨nchen, Munich, West Germany" id="2789927476">Rudolf Bayer</author></authors><n_citation>115</n_citation><doc_type>Journal</doc_type><references><reference>29505474</reference><reference>65972224</reference><reference>101606831</reference><reference>187816349</reference><reference>1565618803</reference><reference>1587663450</reference><reference>1991199257</reference><reference>2010729657</reference><reference>2011839903</reference><reference>2031032746</reference><reference>2095471802</reference><reference>2106887953</reference><reference>2133386065</reference><reference>2172126130</reference></references><venue id="90119964" type="J">ACM Transactions on Database Systems</venue><doi>10.1145/1994.1995</doi><keywords><keyword weight="0.66509">Transaction processing</keyword><keyword weight="0.63857">Compensating transaction</keyword><keyword weight="0.64467">Database tuning</keyword><keyword weight="0.43978">Computer science</keyword><keyword weight="0.67657">Online transaction processing</keyword><keyword weight="0.63754">Transaction log</keyword><keyword weight="0.66025">Database transaction</keyword><keyword weight="0.6978">Distributed transaction</keyword><keyword weight="0.64423">Transaction processing system</keyword><keyword weight="0.45245">Database</keyword></keywords><publisher>ACM</publisher><abstract>Performance in database systems is strongly influenced by buffer management and transaction recovery methods. This paper presents the principles of the database cache, which replaces the traditional buffer. In comparison to buffer management, cache management is more carefully coordinated with transaction management, and integrates transaction recovery. High throughput of small- and medium-sized transactions is achieved by fast commit processing and low database traffic. Very fast handling of transaction failures and short restart time after system failure are guaranteed in such an environment. Very long retrieval and update transactions are also supported.</abstract></paper>