<paper id="1530375089"><title>A New Approach for Speeding Up Enumeration Algorithms</title><year>1998</year><authors><author org="Tokyo Inst. of tech." id="2100790447">Takeaki Uno</author></authors><n_citation>19</n_citation><doc_type>Conference</doc_type><references><reference>130518292</reference><reference>1518546215</reference><reference>1541890612</reference><reference>1988738304</reference><reference>2022871748</reference></references><venue id="1175727152" type="C">International Symposium on Algorithms and Computation</venue><doi>10.1007/3-540-49381-6_31</doi><keywords><keyword weight="0.60373">Matroid</keyword><keyword weight="0.46579">Discrete mathematics</keyword><keyword weight="0.46688">Combinatorics</keyword><keyword weight="0.4082">Computer science</keyword><keyword weight="0.5073">Computational geometry</keyword><keyword weight="0.5668">Bipartite graph</keyword><keyword weight="0.64888">Matroid partitioning</keyword><keyword weight="0.6375">Spanning tree</keyword><keyword weight="0.61149">Graph enumeration</keyword><keyword weight="0.56031">Time complexity</keyword><keyword weight="0.62014">Weighted matroid</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We propose a new approach for speeding up enumeration algorithms. The approach does not relies on data structures deeply, but utilizes some analysis of its computation time. The enumeration algorithms for directed spanning trees, matroid bases, and some bipartite matching problems are speeded up by this approach. For a given graph G = (V,E), the time complexity of the algorithm for directed spanning tree is O(log2|V|) per a directed spanning tree. For a given matroid M, the algorithm for matroid bases runs in O(T/n) time per a base. Here n denotes the rank of M, and T denotes the computation time to obtain elementary circuits. Enumeration algorithms for matching problems spend O(|V|) time per a matching.</abstract></paper>