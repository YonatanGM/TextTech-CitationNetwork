<paper id="1571014466"><title>An Automatic Aspect Weaver with a Reflective Programming Language</title><year>1999</year><authors><author org="Laboratoire CEDRIC-CNAM" id="2099105146">Renaud Pawlak</author><author org="Laboratoire CEDRIC-CNAM" id="147420329">Laurence Duchien</author><author org="Laboratoire CEDRIC-CNAM" id="683273356">Gerard Florin</author></authors><n_citation>18</n_citation><doc_type>Journal</doc_type><references><reference>1506052820</reference><reference>2066181430</reference><reference>2138363365</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-48443-4_14</doi><keywords><keyword weight="0.58724">Metaprogramming</keyword><keyword weight="0.50401">Weaving</keyword><keyword weight="0.56634">Programmer</keyword><keyword weight="0.48222">Programming language</keyword><keyword weight="0.6005">Object-oriented programming</keyword><keyword weight="0.57495">Aspect-oriented programming</keyword><keyword weight="0.46622">Computer science</keyword><keyword weight="0.51637">Program analysis</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This short paper presents A-TOS (Aspect-TOS (TCL Object System)), an aspect-oriented framework that allows the programmer to define its own specialized aspects and to weave or remove them at runtime. Since A-TOS is based on a configurable and semantic-reliable object-wrapping technique, it is able to solve what we call the Aspect-Composition Issue (ACI), i.e., to detect and solve many semantic conflicts when weaving the different aspects together.</abstract></paper>