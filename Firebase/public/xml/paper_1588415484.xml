<paper id="1588415484"><title>Lattice sieving and trial division</title><year>1994</year><authors><author org="Intel SSD" id="240959683">Roger A. Golliver</author><author org="MRE-2Q334" id="2436602830">Arjen K. Lenstra</author><author org="Organization 1423" id="2697603557">Kevin S. McCurley</author></authors><n_citation>33</n_citation><doc_type>Conference</doc_type><references><reference>1559083592</reference><reference>1813951697</reference><reference>2078003433</reference><reference>2179913373</reference></references><venue id="2759893951" type="C">Algorithmic Number Theory Symposium</venue><doi>10.1007/3-540-58691-1_38</doi><keywords><keyword weight="0.50475">Prime (order theory)</keyword><keyword weight="0.61329">Factor base</keyword><keyword weight="0.53111">Special number field sieve</keyword><keyword weight="0.44424">Algorithm</keyword><keyword weight="0.69168">Lattice sieving</keyword><keyword weight="0.58011">Trial division</keyword><keyword weight="0.59719">General number field sieve</keyword><keyword weight="0.40124">Mathematics</keyword><keyword weight="0.56457">Quadratic sieve</keyword><keyword weight="0.50723">Hash table</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This is a report on work in progress on our new implementation of the relation collection stage of the general number field sieve integer factoring algorithm. Our experiments indicate that we have achieved a substantial speed-up compared to other implementations that are reported in the literature. The main improvements are a new lattice sieving technique and a trial division method that is based on lattice sieving in a hash table. This also allows us to collect triple and quadruple large prime relations in an efficient manner. Furthermore we show how the computation can efficiently be shared among multiple processors in a high-band-width environment.</abstract></paper>