<paper id="1983392241"><title>A paradigm for decentralized process modeling and its realization in the Oz environment</title><year>1994</year><authors><author org="Department of Computer Science, Columbia University, New York, NY, USA#TAB#" id="2952749082">Israel Z. Ben-Shaul</author><author org="Department of Computer Science, Columbia University, New York, NY, USA#TAB#" id="2100592247">Gail E. Kaiser</author></authors><n_citation>100</n_citation><doc_type>Conference</doc_type><references><reference>11952272</reference><reference>310707602</reference><reference>1575236209</reference><reference>1603688806</reference><reference>1963672096</reference><reference>1981898644</reference><reference>1992025345</reference><reference>2015914309</reference><reference>2024321820</reference><reference>2065597033</reference><reference>2099066247</reference><reference>2099353909</reference><reference>2116789749</reference><reference>2121047005</reference><reference>2133946768</reference><reference>2135858013</reference><reference>2136540721</reference><reference>2151826946</reference><reference>2478268922</reference></references><venue id="1174403976" type="C">International Conference on Software Engineering</venue><doi>10.1109/ICSE.1994.296777</doi><keywords><keyword weight="0.46298">Petri net</keyword><keyword weight="0.44312">Systems engineering</keyword><keyword weight="0.44024">Computer science</keyword><keyword weight="0.52773">Process modeling</keyword><keyword weight="0.44923">Automatic control</keyword><keyword weight="0.42901">Automation</keyword><keyword weight="0.44809">Software system</keyword><keyword weight="0.44157">Software performance testing</keyword><keyword weight="0.4751">Software development process</keyword><keyword weight="0.45784">Application software</keyword><keyword weight="0.45275">Distributed computing</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>We present a model for decentralized Process Centered Environments (PCEs), which support concerted efforts among geographically-dispersed teams - each local team with its own autonomous process - and emphasize flexibility in the tradeoff between collaboration vs. autonomy. We consider both decentralized process modeling and decentralized process enaction. We describe a realization in the OZ decentralized PCE, which employs a rule-based formalism, and also investigate the application to PCEs based on Petri-nets. u003e</abstract></paper>