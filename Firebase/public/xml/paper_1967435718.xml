<paper id="1967435718"><title>The relational and network approaches: Comparison of the application programming interfaces</title><year>1975</year><authors><author org="" id="2700263554">C. J. Date</author><author org="" id="1972300922">E. F. Codd</author></authors><n_citation>57</n_citation><doc_type>Conference</doc_type><references><reference>1969691871</reference><reference>2012056301</reference><reference>2029098176</reference><reference>2031662355</reference><reference>2037129676</reference><reference>2047499522</reference><reference>2049947953</reference><reference>2062261404</reference><reference>2163887589</reference><reference>2165467455</reference><reference>2232207765</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/800297.811532</doi><keywords><keyword weight="0.63753">SQL</keyword><keyword weight="0.44743">Data mining</keyword><keyword weight="0.53764">Programmer</keyword><keyword weight="0.66546">Relational database</keyword><keyword weight="0.6622">Database model</keyword><keyword weight="0.46908">Computer science</keyword><keyword weight="0.6376">CODASYL</keyword><keyword weight="0.67242">Database design</keyword><keyword weight="0.60618">Data model</keyword><keyword weight="0.59017">Data Base Task Group</keyword><keyword weight="0.45654">Database</keyword></keywords><publisher>ACM</publisher><abstract>For some time now there has been considerable debate in the field of database systems over the fundamental question of the underlying design philosophy of such a system. The controversy has centered on the structure of the programmer interface, though of course the design chosen for this interface has repercussions throughout the rest of the system. Two approaches to this problem have received particular attention: the network approach, which is typified by the proposals of the CODASYL Data Base Task Group (DBTG), and the relational approach, which is advocated by the present authors (among others). The purpose of this paper is to give some comparisons between these two approaches (primarily from the application programming viewpoint), and to show what the authors believe to be the advantages of the relational approach. The reader is assumed to have a basic familiarity with the two approaches.</abstract></paper>