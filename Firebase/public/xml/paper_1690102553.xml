<paper id="1690102553"><title>Online Data Structures in External Memory</title><year>1999</year><authors><author org="Duke University" id="118037170">Jeffrey Scott Vitter</author></authors><n_citation>19</n_citation><doc_type>Conference</doc_type><references><reference>25426087</reference><reference>1485654915</reference><reference>1500139253</reference><reference>1510397712</reference><reference>1511750901</reference><reference>1531975040</reference><reference>1536890784</reference><reference>1552950640</reference><reference>1564883604</reference><reference>1580652745</reference><reference>1600053460</reference><reference>1633157623</reference><reference>1833013272</reference><reference>1862145534</reference><reference>1965516463</reference><reference>1979630448</reference><reference>1983711073</reference><reference>1994101999</reference><reference>1997841190</reference><reference>1997884498</reference><reference>1998513737</reference><reference>2010488817</reference><reference>2015326607</reference><reference>2018917553</reference><reference>2038687478</reference><reference>2039785630</reference><reference>2043148321</reference><reference>2045195333</reference><reference>2047041676</reference><reference>2047984902</reference><reference>2051156417</reference><reference>2055385473</reference><reference>2060246981</reference><reference>2062618908</reference><reference>2062940276</reference><reference>2066799613</reference><reference>2081912596</reference><reference>2085088576</reference><reference>2087966340</reference><reference>2093120238</reference><reference>2099117306</reference><reference>2106642566</reference><reference>2108908993</reference><reference>2117074936</reference><reference>2118269922</reference><reference>2118314386</reference><reference>2121847343</reference><reference>2128703518</reference><reference>2129978134</reference><reference>2133520229</reference><reference>2136963423</reference><reference>2142753649</reference><reference>2147853062</reference><reference>2149173084</reference><reference>2151135734</reference><reference>2152301310</reference><reference>2161694911</reference><reference>2168395296</reference><reference>2179904348</reference><reference>2276518245</reference><reference>2515109297</reference><reference>2901608006</reference></references><venue id="1149998698" type="C">Workshop on Algorithms and Data Structures</venue><doi>10.1007/3-540-48523-6_10</doi><keywords><keyword weight="0.5393">Data structure</keyword><keyword weight="0.45173">Computer science</keyword><keyword weight="0.50745">Computational geometry</keyword><keyword weight="0.55498">Range query (data structures)</keyword><keyword weight="0.4431">Algorithm</keyword><keyword weight="0.45455">Theoretical computer science</keyword><keyword weight="0.58055">External storage</keyword><keyword weight="0.52396">Memory organisation</keyword><keyword weight="0.50003">Dynamic problem</keyword><keyword weight="0.45033">Distributed computing</keyword><keyword weight="0.50896">Interval tree</keyword><keyword weight="0.57742">Auxiliary memory</keyword></keywords><publisher>Springer Verlag</publisher><abstract>The data sets for many of todayu0027s computer applications are too large to fit within the computeru0027s internal memory and must instead be stored on external storage devices such as disks. A major performance bottleneck can be the input/output communication (or I/O) between the external and internal memories. In this paper we discuss a variety of on-line data structures for external memory--some very old and some very new--such as hashing (for dictionaries), B-trees (for dictionaries and 1-D range search), buffer trees (for batched dynamic problems), interval trees with weight-balanced B-trees (for stabbing queries), priority search trees (for 3-sided 2-D range search), and R-trees and other spatial structures. We also discuss several open problems along the way.</abstract></paper>