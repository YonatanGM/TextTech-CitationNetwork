<paper id="1509485343"><title>On the Expressive Power of OCL</title><year>1999</year><authors><author org="Forschungsinstitut für Angewandte Software-Technologie (FAST e. V.)" id="2141896135">Luis Mandel</author><author org="Ludwig-Maximilians-Universität München" id="31750804">María Victoria Cengarle</author></authors><n_citation>66</n_citation><doc_type>Conference</doc_type><references><reference>1495380017</reference><reference>1497921804</reference><reference>1524668325</reference><reference>2160417078</reference><reference>2529054973</reference></references><venue id="1169806927" type="C">Formal Methods</venue><doi>10.1007/3-540-48119-2_47</doi><keywords><keyword weight="0.61762">Codd's theorem</keyword><keyword weight="0.62619">Relational calculus</keyword><keyword weight="0.43892">Programming language</keyword><keyword weight="0.4825">Binary relation</keyword><keyword weight="0.40873">Computer science</keyword><keyword weight="0.50421">Computability</keyword><keyword weight="0.50832">Turing machine</keyword><keyword weight="0.46243">Equivalence (measure theory)</keyword><keyword weight="0.56158">Object Constraint Language</keyword><keyword weight="0.50139">Transitive closure</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper examines the expressive power of OCL in terms of navigability and computability. First the expressive power of OCL is compared with the relational calculus; it is showed that OCL is not equivalent to the relational calculus. Then an algorithm computing the transitive closure of a binary relation -operation that cannot be encoded in the relational calculus- is expressed in OCL. Finally the equivalence of OCL with a Turing machine is pondered.</abstract></paper>