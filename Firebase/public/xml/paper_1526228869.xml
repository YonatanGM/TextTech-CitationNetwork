<paper id="1526228869"><title>Logic programming with strong negation</title><year>1991</year><authors><author org="Freie Universität Berlin." id="2303473132">David Pearce</author><author org="Freie Universität Berlin." id="2141172227">Gerd Wagner</author></authors><n_citation>51</n_citation><doc_type>Conference</doc_type><references><reference>105798218</reference><reference>1980589711</reference><reference>1985819576</reference><reference>1995447625</reference><reference>2003531456</reference><reference>2015627330</reference><reference>2048600620</reference><reference>2052436826</reference><reference>2090893188</reference><reference>2150425213</reference></references><venue id="2755545065" type="C">International Workshop on Extensions of Logic Programming</venue><doi>10.1007/BFb0038700</doi><keywords><keyword weight="0.43519">Programming language</keyword><keyword weight="0.59205">Horn clause</keyword><keyword weight="0.58964">Autoepistemic logic</keyword><keyword weight="0.58945">Negation</keyword><keyword weight="0.41496">Computer science</keyword><keyword weight="0.41672">Algorithm</keyword><keyword weight="0.63219">Negation as failure</keyword><keyword weight="0.59832">Prolog</keyword><keyword weight="0.58083">Stable model semantics</keyword><keyword weight="0.6176">Logic programming</keyword><keyword weight="0.58057">Predicate functor logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show how a negation operation which allows for the possibility to represent explicit negative information can be added to Prolog without essentially altering its computational structure.</abstract></paper>