<paper id="196748788"><title>Towards a Rigorous Semantics of UML Supporting Its Multiview Approach</title><year>2001</year><authors><author org="Università di Genova" id="2117491823">Gianna Reggio</author><author org="Università di Genova" id="2091250070">Maura Cerioli</author><author org="Università di Genova" id="699984054">Egidio Astesiano</author></authors><n_citation>56</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1552391866</reference><reference>1559723191</reference><reference>1571075905</reference><reference>1998017916</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-45314-8_13</doi><keywords><keyword weight="0.66618">Operational semantics</keyword><keyword weight="0.62624">UML state machine</keyword><keyword weight="0.4619">Programming language</keyword><keyword weight="0.6991">UML tool</keyword><keyword weight="0.44216">Computer science</keyword><keyword weight="0.63152">Denotational semantics</keyword><keyword weight="0.64243">Action semantics</keyword><keyword weight="0.44526">Theoretical computer science</keyword><keyword weight="0.76205">Applications of UML</keyword><keyword weight="0.62105">Well-founded semantics</keyword><keyword weight="0.60498">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We discuss the nature of the semantics of the UML. Contrary to the case of most languages, this task is far from trivial. Indeed, not only the UML notation is complex and its informal description is incomplete and ambiguous, but we also have the UML multiview aspect to take into account. We propose a general schema of the semantics of the UML, where the different kinds of diagrams within a UML model are given individual semantics and then such semantics are composed to get the semantics on the overall model. Moreover, we fill part of such a schema, by using the algebraic language CASL as a metalanguage to describe the semantics of class diagrams, state machines and the complete UML formal systems.</abstract></paper>