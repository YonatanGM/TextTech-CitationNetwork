<paper id="1503304944"><title>Oblivious Transfer with Adaptive Queries</title><year>1999</year><authors><author org="Weizmann institute of Science" id="1023361224">Moni Naor</author><author org="Weizmann institute of Science" id="259477981">Benny Pinkas</author></authors><n_citation>168</n_citation><doc_type>Conference</doc_type><references><reference>1532961226</reference><reference>1572330878</reference><reference>1584785281</reference><reference>1595153681</reference><reference>1660562555</reference><reference>1837145606</reference><reference>1840749574</reference><reference>1909955916</reference><reference>1963094505</reference><reference>1987667503</reference><reference>2004881597</reference><reference>2012045293</reference><reference>2017464959</reference><reference>2065265824</reference><reference>2101803085</reference><reference>2102632861</reference><reference>2108834246</reference><reference>2144560442</reference><reference>2153708829</reference><reference>2154654620</reference><reference>2156186849</reference><reference>2165621523</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48405-1_36</doi><keywords><keyword weight="0.47001">Cryptography</keyword><keyword weight="0.41217">Data element</keyword><keyword weight="0.43263">Computer science</keyword><keyword weight="0.44674">Communication source</keyword><keyword weight="0.44235">Algorithm</keyword><keyword weight="0.46359">Random oracle</keyword><keyword weight="0.52231">Commitment scheme</keyword><keyword weight="0.44628">Theoretical computer science</keyword><keyword weight="0.41787">Preprocessor</keyword><keyword weight="0.4636">Computation</keyword><keyword weight="0.60799">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We provide protocols for the following two-party problem: One party, the sender, has N values and the other party, the receiver, would like to learn k of them, deciding which ones in an adaptive manner (i.e. the ith value may depend on the first i-1 values). The sender does not want the receiver to obtain more than k values. This is a variant of the well known Oblivious Transfer (OT) problem and has applications in protecting privacy in various :[79],"present efficient protocols for the problem that require an O(N) computation in the preprocessing stage and fixed computation (independent of k) for each new value the receiver obtains. The on-line computation involves roughly logN invocations of a 1-out-2 OT protocol. The protocols are based on a new primitive, sum consistent synthesizers.</abstract></paper>