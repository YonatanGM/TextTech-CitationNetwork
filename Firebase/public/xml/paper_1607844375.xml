<paper id="1607844375"><title>Generalization/Specialization as a Basis for Software Specification</title><year>1984</year><authors><author org="University of Toronto," id="2052199646">Alexander Borgida</author><author org="University of Toronto,#TAB#" id="2161153869">John Mylopoulos</author><author org="#N#University of Toronto#N#" id="2202349618">Harry K. T. Wong</author></authors><n_citation>150</n_citation><doc_type /><references><reference>65969799</reference><reference>110938048</reference><reference>1526839643</reference><reference>2008395018</reference><reference>2027750453</reference><reference>2073544767</reference><reference>2108686520</reference><reference>2110425399</reference><reference>2127614394</reference><reference>2131062488</reference><reference>2148817888</reference><reference>2165121897</reference><reference>2341767296</reference></references><venue id="" type="">On Conceptual Modelling (Intervale)</venue><doi>10.1007/978-1-4612-5196-5_4</doi><keywords><keyword weight="0.46977">Programming language</keyword><keyword weight="0.57806">Software design description</keyword><keyword weight="0.47108">Computer science</keyword><keyword weight="0.59102">Formal specification</keyword><keyword weight="0.57505">Software development process</keyword><keyword weight="0.57228">Software construction</keyword><keyword weight="0.60662">Software requirements specification</keyword><keyword weight="0.57321">System requirements specification</keyword><keyword weight="0.59842">Functional specification</keyword><keyword weight="0.57786">Software development</keyword></keywords><publisher>Springer, New York, NY</publisher><abstract>This paper describes a software specification methodology based on the notion of concept specialization. The methodology, which is particularly useful for Information Systems, applies uniformly to the various components of such systems, such as data classes, transactions, exceptions, and user interfaces (scripts), and its goal is the systematic and structured description of highly detailed world models, where concepts occur in many variations. An example from the domain of university information systems is used to illustrate and motivate the approach.</abstract></paper>