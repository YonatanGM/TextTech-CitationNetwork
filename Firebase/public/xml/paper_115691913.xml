<paper id="115691913"><title>INCORPORATING DATA TYPES IN AN EXTENSIBLE DATABASE ARCHITECTURE</title><year>1988</year><authors><author org="IBM Research Division, Almaden Research Center, San Jose, CA#TAB#" id="726454095">Paul F. Wilms</author><author org="IBM Research Division, Almaden Research Center, San Jose, CA#TAB#" id="2135035649">Peter M. Schwarz</author><author org="IBM Research Division, Almaden Research Center, San Jose, CA#TAB#" id="2050071469">Hans-JÃ¶rg Schek</author><author org="IBM Research Division, Almaden Research Center, San Jose, CA#TAB#" id="2304639312">Laura M. Haas</author></authors><n_citation>47</n_citation><doc_type /><references><reference>24016224</reference><reference>123819085</reference><reference>134633445</reference><reference>1491178396</reference><reference>1493559668</reference><reference>1502941416</reference><reference>1536956095</reference><reference>1571808521</reference><reference>1585704552</reference><reference>1597313856</reference><reference>1918310969</reference><reference>2012534139</reference><reference>2013762643</reference><reference>2016590848</reference><reference>2033368934</reference><reference>2040667159</reference><reference>2072627547</reference><reference>2083472806</reference><reference>2084367148</reference><reference>2089781037</reference><reference>2096137215</reference><reference>2113906833</reference><reference>2149173084</reference><reference>2158141386</reference><reference>2175812749</reference></references><venue id="" type="">Proceedings of the Third International Conference on Data and Knowledge Bases#R##N#Improving Usability and Responsiveness</venue><doi>10.1016/B978-1-4832-1313-2.50021-4</doi><keywords><keyword weight="0.54188">Data structure</keyword><keyword weight="0.51103">Data architecture</keyword><keyword weight="0.46804">Programming language</keyword><keyword weight="0.50772">Access method</keyword><keyword weight="0.46351">Computer science</keyword><keyword weight="0.62461">Sargable</keyword><keyword weight="0.64146">Component-oriented database</keyword><keyword weight="0.53134">Data type</keyword><keyword weight="0.52795">Data model</keyword><keyword weight="0.66565">Data independence</keyword></keywords><publisher>Morgan Kaufmann</publisher><abstract>The limited set of data types and the difficulty of incorporating new ones in current DBMSs prevent many applications from efficiently using a DBMS to store data. We discuss the merits of introducing externally defined types (EDTs) to bridge the gap between the data structures of the application programming language and the data model of the database. We show that the DBMS needs to know the set of functions to be called on an EDT to permit easy use of EDTs both in programming languages and by the DBMS, and we propose ways to make the definition and implementation of new types in the DBMS easier on both the DBMS and the type implementor. Functions are central to our approach, as they may be invoked from within internal DBMS components by suitable extensions. We examine how to create access paths to support externally denned predicate functions by materialization or physical clustering, and how query transformations may help reduce the number of different access methods and storage structures. By treating EDTs as abstractions, the amount of mechanism which must be added to the DBMS can be kept small.</abstract></paper>