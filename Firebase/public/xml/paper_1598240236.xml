<paper id="1598240236"><title>Efficient Communications in Multithreaded Runtime Systems</title><year>1999</year><authors><author org="Ecole Normale Supérieure de Lyon;" id="186268153">Luc Bougé</author><author org="Ecole Normale Supérieure de Lyon;" id="2953954926">Jean-François Méhaut</author><author org="Ecole Normale Supérieure de Lyon;" id="118112312">Raymond Namyst</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>22448193</reference><reference>1482030660</reference><reference>1521734293</reference><reference>1967800745</reference><reference>1986354481</reference><reference>1999922992</reference><reference>2065414935</reference><reference>2098228070</reference><reference>2114728910</reference><reference>2155066383</reference><reference>2157839616</reference></references><venue id="2755546534" type="C">International Parallel Processing Symposium</venue><doi>10.1007/BFb0097932</doi><keywords><keyword weight="0.59126">Remote procedure call</keyword><keyword weight="0.46261">Computer science</keyword><keyword weight="0.56455">Remote direct memory access</keyword><keyword weight="0.60398">Software portability</keyword><keyword weight="0.53024">Systems architecture</keyword><keyword weight="0.48239">Operating system</keyword><keyword weight="0.0">Communication interface</keyword><keyword weight="0.48359">Embedded system</keyword><keyword weight="0.54991">Communications protocol</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most of existing multithreaded environments have an implementation built on top of standard communication interfaces such as MPI which ensures a high level of portability. However, such interfaces do not meet the efficiencyneeds of RPC-like communications which are extensively used in multithreaded environments. We propose a new portable and efficient communication interface for RPC-based multithreaded environments, called Madeleine. We describe its programming interface and its implementation on top of low-level network protocols such as VIA. We also report performance results that demonstrate the efficiency of our approach.</abstract></paper>