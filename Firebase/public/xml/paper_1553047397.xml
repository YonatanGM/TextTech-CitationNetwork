<paper id="1553047397"><title>Expressive pointcuts for increased modularity</title><year>2005</year><authors><author org="(Darmstadt University of Technology, Darmstadt, Germany)" id="1803786443">Klaus Ostermann</author><author org="(Darmstadt University of Technology, Darmstadt, Germany)" id="93690356">Mira Mezini</author><author org="(Darmstadt University of Technology, Darmstadt, Germany)" id="2034593479">Christoph Bockisch</author></authors><n_citation>162</n_citation><doc_type>Conference</doc_type><references><reference>1494940103</reference><reference>1518218347</reference><reference>1549128618</reference><reference>1588555795</reference><reference>1610570299</reference><reference>1693442237</reference><reference>1855341394</reference><reference>1991330414</reference><reference>2037317228</reference><reference>2041659000</reference><reference>2043100293</reference><reference>2045337518</reference><reference>2061180491</reference><reference>2079071212</reference><reference>2079777989</reference><reference>2090727480</reference><reference>2091071969</reference><reference>2097964082</reference><reference>2102444871</reference><reference>2115248168</reference><reference>2116244845</reference><reference>2134559371</reference><reference>2135522367</reference><reference>2138363365</reference><reference>2151298976</reference><reference>2155988490</reference><reference>2159133886</reference><reference>2164067955</reference><reference>2165121897</reference><reference>2293227920</reference></references><venue id="1177184315" type="C">European Conference on Object-Oriented Programming</venue><doi>10.1007/11531142_10</doi><keywords><keyword weight="0.4567">Programming language</keyword><keyword weight="0.58011">Aspect-oriented programming</keyword><keyword weight="0.50245">Object-oriented programming</keyword><keyword weight="0.51448">Abstract interpretation</keyword><keyword weight="0.43878">Computer science</keyword><keyword weight="0.49896">Static analysis</keyword><keyword weight="0.53029">Abstract syntax tree</keyword><keyword weight="0.43824">Theoretical computer science</keyword><keyword weight="0.5363">Abstraction layer</keyword><keyword weight="0.6164">Pointcut</keyword><keyword weight="0.50045">Modularity</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In aspect-oriented programming, pointcuts are used to describe crosscutting structure. Pointcuts that abstract over irrelevant implementation details are clearly desired to better support maintainability and modular :[26],"present an analysis which shows that current pointcut languages support localization of crosscutting concerns but are problematic with respect to information hiding. To cope with the problem, we :[26],"present a pointcut language that exploits information from different models of program semantics, such as the execution trace, the syntax tree, the heap, static type system, etc., and supports abstraction mechanisms analogous to functional abstraction. We show how this raises the abstraction level and modularity of pointcuts and :[26],"present first steps toward an efficient implementation by means of a static analysis technique.</abstract></paper>