<paper id="1499737821"><title>Storage and Access Structures for Geometric Data Bases</title><year>1987</year><authors><author org="Univ. of North Carolina" id="2617728728">Jürg Nievergelt</author><author org="Univ. of North Carolina" id="2149490020">Klaus H. Hinrichs</author></authors><n_citation>15</n_citation><doc_type /><references><reference>1581243715</reference><reference>1748095660</reference><reference>2001917688</reference><reference>2149145536</reference><reference>2149173084</reference></references><venue id="" type="">FODO</venue><doi>10.1007/978-1-4613-1881-1_37</doi><keywords><keyword weight="0.51975">Graphics</keyword><keyword weight="0.48674">CAD</keyword><keyword weight="0.54897">Geometric data analysis</keyword><keyword weight="0.46211">Computer science</keyword><keyword weight="0.57911">Range query (data structures)</keyword><keyword weight="0.46631">Theoretical computer science</keyword><keyword weight="0.46817">Computation</keyword></keywords><publisher>Springer US</publisher><abstract>Geometric computation and data bases, two hitherto unrelated computing technologies, have begun to influence each other in response to the growing use of graphics and computer-aided design. CAD imposes a new challenge to data base implementers. A data base system for CAD must manage “in designer real time” large collections not of points, but of spatial objects, in such a way that proximity queries (such as intersection, contact, minimal tolerances) are answered efficiently. There are many techniques for reducing the problem of storing spatial objects to storing (sets of) points. Common to all of them is the problem that simple queries on objects turn into complex queries on points - much more complex than orthogonal range queries.</abstract></paper>