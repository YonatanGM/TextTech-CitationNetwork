<paper id="1492571724"><title>Putting Time into Proof Outlines</title><year>1991</year><authors><author org="Cornell University;" id="2106636992">Fred B. Schneider</author><author org="Cornell University;" id="2158463219">Bard Bloom</author><author org="Cornell University;" id="677445823">Keith Marzullo</author></authors><n_citation>50</n_citation><doc_type>Conference</doc_type><references><reference>1542297244</reference><reference>1964727056</reference><reference>1981930797</reference><reference>2014552079</reference><reference>2066210260</reference><reference>2084291524</reference><reference>2102951280</reference><reference>2111706174</reference><reference>2113535112</reference><reference>2123464354</reference><reference>2132334337</reference><reference>2166071597</reference><reference>2166656159</reference></references><venue id="2758088042" type="C">Real-Time: Theory in Practice, REX Workshop</venue><doi>10.1007/BFb0032010</doi><keywords><keyword weight="0.0">Correctness proofs</keyword><keyword weight="0.47945">Programming language</keyword><keyword weight="0.47038">Computer science</keyword><keyword weight="0.63158">Automated theorem proving</keyword><keyword weight="0.70161">Logic programming</keyword><keyword weight="0.48869">Software quality</keyword><keyword weight="0.57687">Mutual exclusion</keyword><keyword weight="0.49819">Semantics</keyword><keyword weight="0.60307">Computer programming</keyword><keyword weight="0.60164">Mathematical logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A logic for reasoning about timing properties of concurrent programs is presented. The logic is based on proof outlines and can handle maximal parallelism as well as resourceconstrained execution environments. The correctness proof for a mutual exclusion protocol that uses execution timings in a subtle way illustrates the logic in action.</abstract></paper>