<paper id="1842194265"><title>OCL contracts for the verification of model transformations</title><year>2010</year><authors><author org="" id="60696791">Eric Cariou</author><author org="" id="331218973">Nicolas Belloir</author><author org="" id="2051020692">Franck Barbier</author><author org="" id="1251876328">Nidal Djemam</author></authors><n_citation>42</n_citation><doc_type>Journal</doc_type><references><reference>1512639770</reference><reference>1977283758</reference><reference>1985779099</reference><reference>2015937909</reference><reference>2026193949</reference><reference>2052363833</reference><reference>2499314014</reference></references><venue id="112260463" type="J">Electronic Communication of The European Association of Software Science and Technology</venue><doi>10.14279/tuj.eceasst.24.326</doi><keywords><keyword weight="0.47466">Programming language</keyword><keyword weight="0.47198">Computer science</keyword><keyword weight="0.45989">Theoretical computer science</keyword><keyword weight="0.49878">Engineering design process</keyword><keyword weight="0.45106">Database</keyword></keywords><publisher /><abstract>A model-driven engineering process relies on a set of transformations which are usually sequentially executed, starting from an abstract level to produce code or a detailed implementation specification. These transformations may be entirely automated or may require manual intervention by designers. In this paper, we propose a method to verify that a transformation result is correct with respect to the transformation specification. This method both includes automated transformations and manual interventions. For that, we focus on transformation contracts written in OCL. This leads to making the proposed method independent of modeling and transformation tools. These contracts are partially or fully generated through a dedicated tool.</abstract></paper>