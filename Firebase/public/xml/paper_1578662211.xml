<paper id="1578662211"><title>Finding program slices for recursive procedures</title><year>1988</year><authors><author org="Inst. of Comput. Eng., Nat. Chiao Tung Univ. Hsinchu, Taiwan" id="2687528356">J.C. Hwang</author><author org="Inst. of Comput. Eng., Nat. Chiao Tung Univ. Hsinchu, Taiwan" id="2635946648">M.W. Du</author><author org="Inst. of Comput. Eng., Nat. Chiao Tung Univ. Hsinchu, Taiwan" id="2250447523">C.R. Chou</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>1559182114</reference><reference>1964071625</reference><reference>1980767016</reference><reference>1983059830</reference><reference>2003831960</reference><reference>2011998974</reference><reference>2141109493</reference><reference>2144344516</reference><reference>2293624369</reference></references><venue id="1143160721" type="C">Computer Software and Applications Conference</venue><doi>10.1109/CMPSAC.1988.17176</doi><keywords><keyword weight="0.44157">Computer science</keyword><keyword weight="0.50409">Static analysis</keyword><keyword weight="0.46415">Algorithm</keyword><keyword weight="0.60402">Recursive language</keyword><keyword weight="0.0">End point</keyword><keyword weight="0.41267">Normalization property</keyword><keyword weight="0.61314">Î¼ operator</keyword><keyword weight="0.47533">Partially ordered set</keyword><keyword weight="0.51385">Recursion</keyword><keyword weight="0.50401">Computation</keyword></keywords><publisher>IEEE</publisher><abstract>The development of program slicers with respect to programs containing recursive procedures, is investigated. A theoretical foundation is constructed for the computation process. A general recursive scheme is introduced as a basis of discussion. A complete slice is defined for recursive procedures to identify clearly what can be obtained through static analysis. The u0027everywhere undefined functionu0027 Omega introduced by the authors provides the required starting condition for the computation process, and a fixed-point equation supplies a terminating condition such that the computation will have a definite end point. The poset theory is used to verify the entire process. The implementation of the proposed technique is discussed. u003e</abstract></paper>