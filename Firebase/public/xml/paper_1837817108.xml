<paper id="1837817108"><title>Higher-Level Specification and Verification with BDDs</title><year>1992</year><authors><author org="Stanford, University" id="2001625928">Alan J. Hu</author><author org="Stanford, University" id="2148325455">David L. Dill</author><author org="Stanford, University" id="2704046911">Andreas Drexler</author><author org="Stanford, University" id="2480536828">C. Han Yang</author></authors><n_citation>32</n_citation><doc_type>Conference</doc_type><references><reference>1531074653</reference><reference>1564947547</reference><reference>1605860947</reference><reference>1824202381</reference><reference>1992006255</reference><reference>2080267935</reference><reference>2114092850</reference><reference>2116989825</reference><reference>2135453964</reference><reference>2137108108</reference><reference>2150119568</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56496-9_8</doi><keywords><keyword weight="0.60878">Boolean function</keyword><keyword weight="0.4673">Programming language</keyword><keyword weight="0.0">Complex data structures</keyword><keyword weight="0.46103">Computer science</keyword><keyword weight="0.59781">Intelligent verification</keyword><keyword weight="0.60166">Verification</keyword><keyword weight="0.47207">Theoretical computer science</keyword><keyword weight="0.0">Sequential control</keyword><keyword weight="0.5785">True quantified Boolean formula</keyword><keyword weight="0.62338">High-level verification</keyword><keyword weight="0.47307">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Currently, many are investigating promising verification methods based on Boolean decision diagrams (BDDs). Using BDDs, however, requires modeling the system under verification in terms of Boolean formulas. This modeling can be difficult and error-prone, especially when dealing with constructs like arithmetic, sequential control flow, and complex data structures. We present new techniques for automatically translating these constructs into BDDs. Furthermore, these techniques generate Boolean next-state relations in a form that allows efficient image computation without building the full BDD for the next-state relation, thereby side-stepping the commonly-encountered BDD-size blowup of next-state relations.</abstract></paper>