<paper id="1517201379"><title>Navigation using Affine Structure from Motion</title><year>1994</year><authors><author org="University of Oxford" id="2162804170">Paul A. Beardsley</author><author org="University of Oxford" id="2469405535">Andrew Zisserman</author><author org="University of Oxford" id="2779442077">David W. Murray</author></authors><n_citation>88</n_citation><doc_type>Conference</doc_type><references><reference>1482517735</reference><reference>2020554914</reference><reference>2063599328</reference><reference>2111308925</reference><reference>2134211982</reference><reference>2137658800</reference><reference>2143846727</reference><reference>2150623853</reference></references><venue id="1124077590" type="C">European Conference on Computer Vision</venue><doi>10.1007/BFb0028337</doi><keywords><keyword weight="0.58313">Structure from motion</keyword><keyword weight="0.67375">Affine transformation</keyword><keyword weight="0.45231">Computer vision</keyword><keyword weight="0.66851">Affine shape adaptation</keyword><keyword weight="0.61952">Harris affine region detector</keyword><keyword weight="0.59835">Motion field</keyword><keyword weight="0.4007">Computer science</keyword><keyword weight="0.68505">Affine coordinate system</keyword><keyword weight="0.58391">Camera resectioning</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.57826">Motion estimation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A structure from motion algorithm is described which recovers structure and camera position, modulo a projective ambiguity. Camera calibration is not required, and camera parameters such as focal length can be altered freely during motion. Unlike recent schemes which compute projective or affine structure using a batch process, the structure is updated sequentially over an image sequence. A specialisation of the algorithm to recover structure modulo an affine transformation is described. We demonstrate how the affine coordinate frame can be periodically updated to prevent drift over time.</abstract></paper>