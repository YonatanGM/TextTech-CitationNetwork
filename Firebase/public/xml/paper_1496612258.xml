<paper id="1496612258"><title>Systematic Integration of Variability into Product Line Architecture Design</title><year>2002</year><authors><author org="ROBERT BOSCH CORP." id="2295788397">Steffen Thiel</author><author org="ROBERT BOSCH CORP." id="2495599671">Andreas Hein</author></authors><n_citation>66</n_citation><doc_type>Conference</doc_type><references><reference>96147948</reference><reference>1500250067</reference><reference>1516491653</reference><reference>1554977156</reference><reference>1555310264</reference><reference>1569800609</reference><reference>1571440521</reference><reference>1586967493</reference><reference>1591726984</reference><reference>1600979142</reference><reference>1787802610</reference><reference>1991319391</reference><reference>1998017916</reference><reference>2023546887</reference><reference>2077318760</reference><reference>2106432430</reference><reference>2114152285</reference><reference>2114422934</reference><reference>2142874510</reference><reference>2911646362</reference></references><venue id="1190643002" type="C">Software Product Lines</venue><doi>10.1007/3-540-45652-X_9</doi><keywords><keyword weight="0.50632">Architecture</keyword><keyword weight="0.44224">Systems engineering</keyword><keyword weight="0.45005">Software engineering</keyword><keyword weight="0.44375">Computer science</keyword><keyword weight="0.4045">Simulation</keyword><keyword weight="0.57627">Software product line</keyword><keyword weight="0.57777">Software architecture</keyword><keyword weight="0.46827">Modular design</keyword><keyword weight="0.48941">Software quality</keyword><keyword weight="0.58262">View model</keyword><keyword weight="0.50287">Software development</keyword><keyword weight="0.47467">Metamodeling</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Product lines consider related products, their commonalities and their differences. The differences between the single products are also referred to as variability. Consequently, variability is inherent in every product line and makes a key difference as compared to single systems. While, on the requirements level, the methods for analyzing product line variability are understood today, their transition to architecture remains vague. Bringing variability to architecture as an "add-on" is just a provisional solution and forebodes the risk of violating other intentions. This paper presents a systematic approach to integrate variability with product line architecture design. In particular, it promotes variability as an architectural driver, embeds variability requirements in the architecture design framework "Quality-Driven Software Architecting" (QUASAR), and gives guidelines and examples for documenting variability in architectural views.</abstract></paper>