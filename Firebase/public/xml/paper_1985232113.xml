<paper id="1985232113"><title>Lessons from a "living in a database" graphical query interface</title><year>1984</year><authors><author org="(Massachusetts Institute of Technology, Cambridge, Mass.)" id="2723408565">Dennis Fogg</author></authors><n_citation>53</n_citation><doc_type>Conference</doc_type><references><reference>2077207253</reference><reference>2115759606</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/602259.602273</doi><keywords><keyword weight="0.52228">Graphics</keyword><keyword weight="0.4395">Data mining</keyword><keyword weight="0.45944">Programming language</keyword><keyword weight="0.50062">Access method</keyword><keyword weight="0.45316">Computer science</keyword><keyword weight="0.0">Pointer (user interface)</keyword><keyword weight="0.56858">User interface</keyword><keyword weight="0.44951">Database</keyword></keywords><publisher>ACM</publisher><abstract>The Living In a Database system (LID) is a user-friendly interface to an entity-relationship database Its underlying ideas are similar to Cattellu0027s PDB [Cattell 80], but its presentation is significantly different LID uses a bit-mapped graphics terminal with mouse pointer to create an attractive interaction environment. Experience from the implementation suggests that dynamic graphic displays --- those which have graphic symbols that change as the data they present change --- are an important feature in user interfaces but are difficult to implement with current technology The implementation also uncovers an important inadequacy in the PDB/LID idea the inability to operate on sets of data instances in the same way as individual data instances An extension to LID is suggested to alleviate the problem.</abstract></paper>