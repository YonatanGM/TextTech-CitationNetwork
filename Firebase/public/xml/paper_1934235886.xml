<paper id="1934235886"><title>Declarative reasoning about the structure of object-oriented systems</title><year>1998</year><authors><author org="Programming Technol. Lab., Vrije Univ., Brussels, Belgium" id="2043527375">R. Wuyts</author></authors><n_citation>126</n_citation><doc_type>Conference</doc_type><references><reference>1535958549</reference><reference>1603994548</reference><reference>2030150828</reference><reference>2037794096</reference></references><venue id="2757248074" type="C">Technology of Object-Oriented Languages and Systems</venue><doi>10.1109/TOOLS.1998.711007</doi><keywords><keyword weight="0.4661">Programming language</keyword><keyword weight="0.51601">Object-oriented programming</keyword><keyword weight="0.45519">Computer science</keyword><keyword weight="0.45954">Reverse engineering</keyword><keyword weight="0.52011">Smalltalk</keyword><keyword weight="0.50295">Software design pattern</keyword><keyword weight="0.49324">Software system</keyword><keyword weight="0.43835">Process design</keyword><keyword weight="0.46436">Software maintenance</keyword><keyword weight="0.53611">Logic programming</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The structure of object-oriented systems typically forms a complicated tangled web of interdependent classes. Understanding this implicit and hidden structure poses severe problems to developers and maintainers who want to use, extend or adapt those systems. This paper advocates the use of a logic meta-language to express and extract structural relationships in class-based object-oriented systems. As validation the logic meta-language SOUL was implemented and used to construct a declarative framework that allows reasoning about the structure of Smalltalk programs. The declarative frameworku0027s usefulness is illustrated by expressing different high-level structural relationships such as those described by design patterns.</abstract></paper>