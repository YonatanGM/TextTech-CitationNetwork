<paper id="1602234301"><title>An Efficient Component Model for the Construction of Adaptive Middleware</title><year>2001</year><authors><author org="Lancaster University ()" id="2990140869">Michael Clarke</author><author org="University of TromsÃ¸;" id="2131332028">Gordon S. Blair</author><author org="Lancaster University ()" id="1966456890">Geoff Coulson</author><author org="Lancaster University ()" id="2321307815">Nikos Parlavantzas</author></authors><n_citation>167</n_citation><doc_type>Journal</doc_type><references><reference>1485761730</reference><reference>1583929811</reference><reference>2006608517</reference><reference>2096396200</reference><reference>2136077912</reference><reference>2167500728</reference><reference>2610296873</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45518-3_9</doi><keywords><keyword weight="0.47214">Address space</keyword><keyword weight="0.65545">Middleware</keyword><keyword weight="0.64813">Middleware (distributed applications)</keyword><keyword weight="0.44716">Computer science</keyword><keyword weight="0.50641">Common Object Request Broker Architecture</keyword><keyword weight="0.51991">Enterprise JavaBeans</keyword><keyword weight="0.55387">Component-based software engineering</keyword><keyword weight="0.6339">Message oriented middleware</keyword><keyword weight="0.47227">Control reconfiguration</keyword><keyword weight="0.46607">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Middleware has emerged as an important architectural component in modern distributed systems. Most recently, industry has witnessed the emergence of component-based middleware platforms, such as Enterprise JavaBeans and the CORBA Component Model, aimed at supporting third party development, configuration and subsequent deployment of software. The goal of our research is to extend this work in order to exploit the benefits of component-based approaches within the middleware platform as well as on top of the platform, the result being more configurable and reconfigurable middleware technologies. This is achieved through a marriage of components with reflection, the latter providing the necessary levels of openness to access the underlying component infrastructure. More specifically, the paper describes in detail the OpenCOM component model, a lightweight and efficient component model based on COM. The paper also describes how OpenCOM can be used to construct a full middleware platform, and also investigates the performance of both OpenCOM and this resultant platform. The main overall contribution of the paper is to demonstrate that flexible middleware technologies can be developed without an adverse effect on the performance of resultant systems</abstract></paper>