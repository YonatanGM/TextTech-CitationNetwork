<paper id="1523353663"><title>Task sequencing language for specifying distributed Ada systems</title><year>1987</year><authors><author org="Stanford, University" id="21098100">David C. Luckham</author><author org="Stanford, University" id="2024443744">David P. Helmbold</author><author org="Stanford, University" id="2169177717">D. L. Bryan</author><author org="Stanford, University" id="2055024660">M. A. Haberler</author></authors><n_citation>41</n_citation><doc_type>Conference</doc_type><references><reference>1535347731</reference><reference>1546981056</reference><reference>1572069488</reference><reference>1996158062</reference><reference>2120510885</reference></references><venue id="2754330098" type="C">International Conference on Parallel Architectures and Languages Europe</venue><doi>10.1007/3-540-17945-3_26</doi><keywords><keyword weight="0.48646">Programming language</keyword><keyword weight="0.0">Event stream</keyword><keyword weight="0.46835">Computer science</keyword><keyword weight="0.64526">First-generation programming language</keyword><keyword weight="0.52234">Constructed language</keyword><keyword weight="0.65606">Programming language implementation</keyword><keyword weight="0.0">Type Mismatch</keyword><keyword weight="0.63257">Language primitive</keyword><keyword weight="0.5558">Debugging</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>TSL-1 is a language for specifying sequences of tasking events occuring in the execution of distributed Ada programs. Such specifications are intended primarily for testing and debugging of Ada tasking programs, although they can also be applied in designing programs. TSL-1 specifications are included in an Ada program as formal comments. They express constraints to be satis fied by the sequences of actual tasking events. An Ada program is consistent with its TSL-1 specifications if its runtime behavior always satisfies them. This paper presents an overview of TSL-1. The features of the language are described informally, and examples illustrating the use of TSL-1, both for debugging and for specification of tasking programs, are given. A definition of robust TSL-1 specifications that takes into account uncertainty in runtime observation of behavior of distributed systems is given. A runtime monitor for checking consistency of an Ada program with TSL-1 specifications has been implemented. In the future, constructs for defining abstract tasks will be added to TSL-1, forming a new language, TSL-2, for the specification of distributed systems prior to their implementation in any particular programming language.</abstract></paper>