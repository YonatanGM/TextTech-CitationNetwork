<paper id="1604214744"><title>On the Complexity of Verifying Concurrent Transition Systems</title><year>1997</year><authors><author org="the Weizmann Institute" id="427806604">David Harel</author><author org="UC Berkeley#TAB#" id="312154185">Orna Kupferman</author><author org="Rice University" id="1970575723">Moshe Y. Vardi</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>1494489447</reference><reference>1503973138</reference><reference>1534067655</reference><reference>1540442949</reference><reference>1554850964</reference><reference>1557218117</reference><reference>1798280647</reference><reference>1965244712</reference><reference>1988808695</reference><reference>1990609140</reference><reference>2009965218</reference><reference>2039529128</reference><reference>2039853888</reference><reference>2068806367</reference><reference>2090398333</reference><reference>2092111053</reference><reference>2093916942</reference><reference>2099529102</reference><reference>2107552120</reference><reference>2115698108</reference><reference>2132107743</reference><reference>2136920408</reference><reference>2137865376</reference><reference>2162844904</reference><reference>2622685257</reference><reference>2915052813</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/3-540-63141-0_18</doi><keywords><keyword weight="0.59148">Transition system</keyword><keyword weight="0.60997">Concurrency</keyword><keyword weight="0.47663">Computer science</keyword><keyword weight="0.47854">Theoretical computer science</keyword><keyword weight="0.57825">Turing machine</keyword><keyword weight="0.58379">Abstract machine</keyword><keyword weight="0.47158">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In implementation verification, we check that an implementation is correct with respect to a specification by checking whether the behaviors of a transition system that models the programu0027s implementation correlate with the behaviors of a transition system that models its specification. In this paper, we investigate the effect of concurrency on the complexity of implementation verification. We consider trace-based and tree-based approaches to the verification of concurrent transition systems, with and without fairness. Our results show that in almost all cases the complexity of the problem is exponentially harder than that of the sequential case. Thus, as in the model-checking verification methodology, the state-explosion problem cannot be avoided.</abstract></paper>