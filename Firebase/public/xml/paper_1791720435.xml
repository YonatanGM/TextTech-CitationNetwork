<paper id="1791720435"><title>Lower Bounds on Term-Based Divisible Cash Systems</title><year>1998</year><authors><author org="NTT Laboratories" id="2142935726">Tatsuaki Okamoto</author></authors><n_citation>1</n_citation><doc_type>Conference</doc_type><references><reference>14282859</reference><reference>23731737</reference><reference>1482004896</reference><reference>1494232233</reference><reference>1511288679</reference><reference>1521562196</reference><reference>1535861450</reference><reference>1583524927</reference><reference>1594128832</reference></references><venue id="2533150121" type="C">Public Key Cryptography</venue><doi>10.1007/BFb0054016</doi><keywords><keyword weight="0.45864">Discrete mathematics</keyword><keyword weight="0.45465">Combinatorics</keyword><keyword weight="0.44771">Cryptography</keyword><keyword weight="0.54634">Divisibility rule</keyword><keyword weight="0.57293">Upper and lower bounds</keyword><keyword weight="0.44562">Cryptosystem</keyword><keyword weight="0.50798">Model of computation</keyword><keyword weight="0.51584">One-way function</keyword><keyword weight="0.4287">Mathematics</keyword><keyword weight="0.40267">Distributed computing</keyword><keyword weight="0.48566">Modular exponentiation</keyword><keyword weight="0.497">Computational complexity theory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Electronic cash is one of the most important applications of public-key cryptosystems. This paper gives lower bounds for data size and computational complexity of divisible electronic cash based on the Chaum-Fiat-Naor (CFN) paradigm, with respect to the precision of divisibility, N, which is (the total coin value)/(minimum divisible denomination). Achieving computational lower bounds in the most general model of computations are extremely hard task. We therefore concentrate on a concrete model of computation where the computational unit (like a trapdoor one way function application) is atomic, and where some structure of the coin and its splits is assumed. All previous upper bounds in this area are within this general model. We show that the lower bound for computational complexity of generating a (divided) coin is log2 N · Comp(term), and the lower bound for coin size is log2 N · ¦term¦ + log2N, where Comp(term) is a computational complexity unit such as that of one modular exponentiation, and ¦term¦ is a unit size of a coin such as the size of a modulus. (Such a unit is called a term). These bounds are optimal, since they are of the same order as the upper` bounds in the previously proposed divisible cash systems.</abstract></paper>