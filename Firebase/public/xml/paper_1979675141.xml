<paper id="1979675141"><title>How to use expert advice</title><year>1997</year><authors><author org="Università di Milano, Milan, Italy," id="259249205">Nicolò Cesa-Bianchi</author><author org="AT&amp;T Labs Florham Park, New Jersey" id="2021686850">Yoav Freund</author><author org="UNIVERSITY OF CALIFORNIA, SANTA CRUZ, SANTA CRUZ, CALIFORNIA" id="2051598476">David Haussler</author><author org="UNIVERSITY OF CALIFORNIA, SANTA CRUZ, SANTA CRUZ, CALIFORNIA" id="2024443744">David P. Helmbold</author><author org="AT&amp;T Labs Florham Park, New Jersey" id="278177626">Robert E. Schapire</author><author org="UNIVERSITY OF CALIFORNIA, SANTA CRUZ, SANTA CRUZ, CALIFORNIA" id="1977649925">Manfred K. Warmuth</author></authors><n_citation>539</n_citation><doc_type>Journal</doc_type><references><reference>1483114294</reference><reference>1970483275</reference><reference>1976026757</reference><reference>1979747077</reference><reference>1982381767</reference><reference>1992392549</reference><reference>2008392312</reference><reference>2017031328</reference><reference>2019363670</reference><reference>2028002587</reference><reference>2050660892</reference><reference>2054033098</reference><reference>2054658115</reference><reference>2066688546</reference><reference>2079656362</reference><reference>2087907345</reference><reference>2090559885</reference><reference>2092279736</reference><reference>2102426343</reference><reference>2104334863</reference><reference>2112204502</reference><reference>2119047110</reference><reference>2129192653</reference><reference>2154952480</reference><reference>2155195660</reference><reference>2157650361</reference><reference>2611627047</reference></references><venue id="118992489" type="J">Journal of the ACM</venue><doi>10.1145/258128.258179</doi><keywords><keyword weight="0.41592">Combinatorics</keyword><keyword weight="0.49223">Upper and lower bounds</keyword><keyword weight="0.445">Computer science</keyword><keyword weight="0.4525">Algorithm</keyword><keyword weight="0.46024">Expected value</keyword><keyword weight="0.46675">Square root</keyword><keyword weight="0.0">Binary Value</keyword></keywords><publisher>ACM</publisher><abstract>We analyze algorithms that predict a binary value by combining the predictions of several prediction strategies, called experts . Our analysis is for worst-case situations, i.e., we make no assumptions about the way the sequence of bits to be predicted is generated. We measure the performance of the algorithm by the difference between the expected number of mistakes it makes on the bit sequence and the expected number of mistakes made by the best expert on this sequence, where the expectation is taken with respect to the randomization in the predictins. We show that the minimum achievable difference is on the order of the square root of the number of mistakes of the best expert, and we give efficient algorithms that achieve this. Our upper and lower bounds have matching leading constants in most cases. We then show how this leads to certain kinds of pattern recognition/learning algorithms with performance bounds that improve on the best results currently know in this context. We also compare our analysis to the case in which log loss is used instead of the expected number of mistakes.</abstract></paper>