<paper id="1503663442"><title>On Dealing with Structural Conflicts between Process Type and Instance Changes</title><year>2004</year><authors><author org="University of Ulm" id="2048013632">Stefanie Rinderle</author><author org="University of Ulm" id="2124900482">Manfred Reichert</author><author org="University of Ulm" id="153700510">Peter Dadam</author></authors><n_citation>69</n_citation><doc_type>Conference</doc_type><references><reference>1504210293</reference><reference>1550942588</reference><reference>1570265525</reference><reference>1783266478</reference><reference>1859831080</reference><reference>2005083223</reference><reference>2062756186</reference><reference>2085583673</reference><reference>2089975742</reference><reference>2097583309</reference><reference>2107271943</reference><reference>2113457143</reference><reference>2147984485</reference><reference>2164507889</reference><reference>2178686891</reference><reference>2913036292</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/978-3-540-25970-1_18</doi><keywords><keyword weight="0.44018">Information system</keyword><keyword weight="0.41637">Categorization</keyword><keyword weight="0.45408">Adaptive system</keyword><keyword weight="0.47559">Concurrency</keyword><keyword weight="0.43638">Computer science</keyword><keyword weight="0.0">Process management system</keyword><keyword weight="0.49632">Deadlock prevention algorithms</keyword><keyword weight="0.42816">Schema (psychology)</keyword><keyword weight="0.46038">Metamodeling</keyword><keyword weight="0.43164">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Adaptive process management systems must be able to support changes of single process instances as well as modifications at the process type level and their propagation to a collection of related process instances. So far, these two kinds of dynamic process changes have been mainly considered in an isolated manner. However, especially for long-running processes, it must be possible to handle the interplay between process type and instance changes as well, but without running into trouble at runtime. This paper presents an extended criterion for correctly propagating process type changes to both, instances which are still running according to their original schema and instances which have been individually modified. In this context, we discuss and categorize structural conflicts potentially occuring between concurrent process changes. We show that our considerations are applicable to different process meta models and present tests for quickly detecting such structural conflicts.</abstract></paper>