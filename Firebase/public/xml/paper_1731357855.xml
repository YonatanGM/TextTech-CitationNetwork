<paper id="1731357855"><title>Polymorphic Subtyping for Effect Analysis: The Dynamic Semantics</title><year>1996</year><authors><author org="Aarhus University," id="69801872">Torben Amtoft</author><author org="Aarhus University," id="2057873166">Flemming Nielson</author><author org="Aarhus University," id="2345078223">Hanne Riis Nielson</author><author org="Aarhus University," id="2125341492">JÃ¼rgen Ammann</author></authors><n_citation>18</n_citation><doc_type /><references><reference>1479857408</reference><reference>1482490768</reference><reference>1503871268</reference><reference>1519142519</reference><reference>1562611359</reference><reference>1604944583</reference><reference>1631991832</reference><reference>1703087989</reference><reference>1964952791</reference><reference>1980939032</reference><reference>2051328776</reference><reference>2058279444</reference><reference>2064264121</reference><reference>2110135416</reference><reference>2118002698</reference><reference>2131067178</reference><reference>2151156765</reference><reference>2163976959</reference><reference>2166822586</reference><reference>2169611723</reference></references><venue id="" type="">Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages</venue><doi>10.1007/3-540-62503-8_8</doi><keywords><keyword weight="0.48143">Operational semantics</keyword><keyword weight="0.42358">Programming language</keyword><keyword weight="0.5244">Effect system</keyword><keyword weight="0.40404">Computer science</keyword><keyword weight="0.48502">Type erasure</keyword><keyword weight="0.52994">Type inference</keyword><keyword weight="0.67749">System F-sub</keyword><keyword weight="0.52014">Concurrent ML</keyword><keyword weight="0.64011">Subtyping</keyword><keyword weight="0.49823">Type safety</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The integration of polymorphism (in the style of the ML let-construct), subtyping, and effects (modelling assignment or communication) into one common type system has proved remarkably difficult. One line of research has succeeded in integrating polymorphism and subtyping; adding effects in a straightforward way results in a semantically unsound system. Another line of research has succeeded in integrating polymorphism, effects, and subeffecting; adding subtyping in a straight-forward way invalidates the construction of the inference algorithm. This paper integrates all of polymorphism, effects, and subtyping into an annotated type and effect system for Concurrent ML and shows that the resulting system is a conservative extension of the ML type system.</abstract></paper>