<paper id="1833475689"><title>On the Reduction of Composes Relations from the Number Field Sieve</title><year>1996</year><authors><author org="Universität des Saarlandes" id="2591318237">Thomas F. Denny</author><author org="University of Waterloo,#TAB#" id="2620296499">Volker Müller</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1502078890</reference><reference>1531371507</reference><reference>1575247378</reference><reference>1813951697</reference><reference>1843157396</reference><reference>1966878439</reference><reference>1969728959</reference><reference>2046040650</reference></references><venue id="2759893951" type="C">Algorithmic Number Theory Symposium</venue><doi>10.1007/3-540-61581-4_43</doi><keywords><keyword weight="0.53011">Integer</keyword><keyword weight="0.52539">Prime (order theory)</keyword><keyword weight="0.46561">Discrete mathematics</keyword><keyword weight="0.5728">Factor base</keyword><keyword weight="0.46579">Combinatorics</keyword><keyword weight="0.54235">Special number field sieve</keyword><keyword weight="0.53012">Cardinality</keyword><keyword weight="0.58137">Lanczos algorithm</keyword><keyword weight="0.60974">General number field sieve</keyword><keyword weight="0.41237">Mathematics</keyword><keyword weight="0.53774">Quadratic sieve</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper we will present an algorithm which reduces the weight (the number of non zero elements) of the matrices that arise from the number field sieve (NFS) for factoring integers ([9],[15]) and computing discrete logarithm in \(\mathbb{F}_p \), where p is a prime ([3],[13],[14]). In the so called Quadruple Large Prime Variation of NFS, a graph algorithm computes sets of partial relations (relations with up to 4 large primes) that can each be combined to ordinary relations. The cardinality of these sets is not as low as possible due to time and place requirements. The algorithm presented in this paper reduces the cardinality of these sets up to 30%. The resulting system of linear equations is therefore more sparse than before, which leads to significant improvements in the running time of the linear algebra step (with either the Lanczos algorithm ([7],[11],[6]) or structured Gaussian elimination ([6])). Compared with the total time that is needed to solve the systems (especially in \(\mathbb{F}_p \)), the time needed by the presented algorithm can be ignored.</abstract></paper>