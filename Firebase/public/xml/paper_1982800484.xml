<paper id="1982800484"><title>The two-processor scheduling problem is in R-NC</title><year>1985</year><authors><author org="Cornell University;" id="391723092">U Vazirani</author><author org="" id="2973652583">V V Vazirani</author></authors><n_citation>20</n_citation><doc_type>Conference</doc_type><references><reference>1976306508</reference><reference>1996256520</reference><reference>2030776771</reference><reference>2057392949</reference><reference>2060983467</reference><reference>2062881752</reference><reference>2080132708</reference></references><venue id="1190910084" type="C">Symposium on the Theory of Computing</venue><doi>10.1145/22145.22147</doi><keywords><keyword weight="0.61706">Memetic algorithm</keyword><keyword weight="0.6196">Computational problem</keyword><keyword weight="0.6341">Job shop scheduling</keyword><keyword weight="0.64448">Multiprocessor scheduling</keyword><keyword weight="0.65028">Fair-share scheduling</keyword><keyword weight="0.4501">Computer science</keyword><keyword weight="0.62402">Two-level scheduling</keyword><keyword weight="0.46288">Theoretical computer science</keyword><keyword weight="0.63687">Rate-monotonic scheduling</keyword><keyword weight="0.63965">Dynamic priority scheduling</keyword></keywords><publisher>ACM</publisher><abstract>The two-processor scheduling problem is perhaps the most basic problem in scheduling theory, and several efficient algorithms have been discovered for it. However, these algorithms are inherently sequential in nature. We give a fast parallel ( R-NC ) algorithm for this problem. Interestingly enough, our algorithm for this purely combinatoric-looking problem draws on some powerful algebraic methods.</abstract></paper>