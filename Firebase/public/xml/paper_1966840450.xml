<paper id="1966840450"><title>Workflow-based applications</title><year>1997</year><authors><author org="IBM Software Solutions Division, German Software Development Laboratory, Hanns Klemm Strasse 45, D-71034 Boeblingen, Germany" id="2127483189">F. Leymann</author><author org="IBM Software Solutions Division, German Software Development Laboratory, Hanns Klemm Strasse 45, D-71034 Boeblingen, Germany" id="2923619089">D. Roller</author></authors><n_citation>179</n_citation><doc_type>Journal</doc_type><references><reference>24835573</reference><reference>1501596615</reference><reference>1515932031</reference><reference>1545155892</reference><reference>1548825518</reference><reference>1556531117</reference><reference>1855065956</reference><reference>1983392241</reference><reference>2022998566</reference><reference>2050398833</reference><reference>2089975742</reference><reference>2140037779</reference><reference>2546012382</reference></references><venue id="112676551" type="J">Ibm Systems Journal</venue><doi>10.1147/sj.361.0102</doi><keywords><keyword weight="0.78941">Workflow technology</keyword><keyword weight="0.50077">Object-oriented programming</keyword><keyword weight="0.48267">Software engineering</keyword><keyword weight="0.46988">Systems engineering</keyword><keyword weight="0.46046">Computer science</keyword><keyword weight="0.79877">Workflow engine</keyword><keyword weight="0.5158">Business process reengineering</keyword><keyword weight="0.48876">Database transaction</keyword><keyword weight="0.75315">Workflow management system</keyword><keyword weight="0.65048">Workflow</keyword><keyword weight="0.58651">Software development</keyword><keyword weight="0.46409">Database</keyword></keywords><publisher>IBM Corp.</publisher><abstract>A significant number of companies are reengineering their business to be more effective and productive. Consequently, existing applications must be modified, and new applications must be written. The new applications typically run in a distributed and heterogeneous environment, performing single tasks in parallel, and demanding special transaction functionality for the supporting environments. Workflow-based applications offer this type of capability. In this paper, their principal advantages are derived and set in context to transaction, object, and CASE (computer-assisted software engineering) technology. In particular, a method is proposed to develop these workflow-based applications in a cohesive and consistent way.</abstract></paper>