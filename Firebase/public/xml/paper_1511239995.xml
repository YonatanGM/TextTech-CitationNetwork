<paper id="1511239995"><title>Symmetric Symbolic Safety-Analysis of Concurrent Software with Pointer Data Structures</title><year>2002</year><authors><author org="Academia SInica" id="2128555674">Farn Wang</author><author org="Carnegie - Mellon University#TAB#" id="2541702813">Karsten Schmidt</author></authors><n_citation>11</n_citation><doc_type>Conference</doc_type><references><reference>1519587690</reference><reference>1548312885</reference><reference>1972065960</reference><reference>1974910756</reference><reference>1981808971</reference><reference>1984957636</reference><reference>2001738739</reference><reference>2005836640</reference><reference>2008379855</reference><reference>2055558998</reference><reference>2080267935</reference><reference>2115309705</reference><reference>2145594292</reference><reference>2788342898</reference></references><venue id="1173173816" type="C">Formal Techniques for (Networked and) Distributed Systems</venue><doi>10.1007/3-540-36135-9_4</doi><keywords><keyword weight="0.54832">Data structure</keyword><keyword weight="0.57001">Pointer (computer programming)</keyword><keyword weight="0.5106">Variable elimination</keyword><keyword weight="0.53392">Model checking</keyword><keyword weight="0.46553">Programming language</keyword><keyword weight="0.5008">Concurrency</keyword><keyword weight="0.46014">Computer science</keyword><keyword weight="0.50839">Binary decision diagram</keyword><keyword weight="0.46788">Theoretical computer science</keyword><keyword weight="0.5095">Software</keyword><keyword weight="0.51094">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We formally define the model of software with pointer data structures. We developed symbolic algorithms for the manipulation of conditions and assignments with indirect operands for verification with BDD-like data-structures. We rely on two techniques, including inactive variable elimination and process-symmetry reduction in the data-structure configuration, to contain the time and memory complexity. We use binary permutation for efficiency but also identify the possibility of anomaly of image false reachability. We implemented the techniques in tool red and compare performance with Mur? and SMC against several other benchmarks.</abstract></paper>