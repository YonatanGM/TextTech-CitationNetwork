<paper id="1597013636"><title>An Authoring Tool for Informal and Formal Requirements Specifications</title><year>2002</year><authors><author org="Chalmers University of Technology" id="2627263793">Reiner HÃ¤hnle</author><author org="Chalmers University of Technology" id="2084224061">Kristofer Johannisson</author><author org="Chalmers University of Technology" id="2001403868">Aarne Ranta</author></authors><n_citation>53</n_citation><doc_type>Conference</doc_type><references><reference>1487992270</reference><reference>1510723842</reference><reference>1511774588</reference><reference>1590769334</reference><reference>1974190112</reference><reference>2007167366</reference><reference>2060440626</reference><reference>2064025843</reference><reference>2094160561</reference><reference>2105142318</reference><reference>2118215721</reference><reference>2124212956</reference><reference>2165228242</reference></references><venue id="1187615537" type="C">Fundamental Approaches to Software Engineering</venue><doi>10.1007/3-540-45923-5_16</doi><keywords><keyword weight="0.61203">Specification language</keyword><keyword weight="0.54891">Formal language</keyword><keyword weight="0.46633">Programming language</keyword><keyword weight="0.51384">Unified Modeling Language</keyword><keyword weight="0.45636">Computer science</keyword><keyword weight="0.6503">Formal specification</keyword><keyword weight="0.61888">Formal methods</keyword><keyword weight="0.50186">Parsing</keyword><keyword weight="0.57507">Object Constraint Language</keyword><keyword weight="0.53228">Software requirements</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe foundations and design principles of a tool that supports authoring of informal and formal software requirements specifications simultaneously and from a single source. The tool is an attempt to bridge the gap between completely informal requirements specifications (as found in practice) and formal ones (as needed in formal methods). The user is supported by an interactive syntax-directed editor, parsers and linearizers. As a formal specification language we realize the Object Constraint Language, a substandard of the UML, on the informal side a fragment of English. The implementation is based on the Grammatical Framework, a generic tool that combines linguistic and logical methods.</abstract></paper>