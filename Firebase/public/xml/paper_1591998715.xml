<paper id="1591998715"><title>Matchmaking for Structured Objects</title><year>2001</year><authors><author org="Knowledge Based Systems Group" id="420267153">Thomas Eiter</author><author org="Universität Karlsruhe (TH), Information Management and Systems" id="2146817529">Daniel Veit</author><author org="Siemens AG - Corporate Technology" id="2286579964">Jörg P. Müller</author><author org="Siemens AG - Corporate Technology" id="2307616663">Martin Schneider</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>1814069098</reference><reference>1968871293</reference><reference>1993265270</reference><reference>2083039958</reference><reference>2115044062</reference><reference>2138589588</reference><reference>2144149733</reference></references><venue id="1128002137" type="C">Data Warehousing and Knowledge Discovery</venue><doi>10.1007/3-540-44801-2_19</doi><keywords><keyword weight="0.48499">Data warehouse</keyword><keyword weight="0.45918">Data mining</keyword><keyword weight="0.43194">Architecture</keyword><keyword weight="0.0">Database query</keyword><keyword weight="0.50845">XML</keyword><keyword weight="0.46831">Computer science</keyword><keyword weight="0.46591">Database</keyword><keyword weight="0.41746">Computation</keyword><keyword weight="0.41094">Government</keyword><keyword weight="0.45748">Distributed computing</keyword><keyword weight="0.46943">The Internet</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A fundamental task in multi-agent systems is matchmaking, which is to retrieve and classify service descriptions of agents that (best) match a given service request. Several approaches to matchmaking have been proposed so far, which involve computation of distances between service offers and service requests that are both provided as aggregates of the same set of attributes which have atomic values. In this paper, we consider the problem of matchmaking in the setting where both service offers and requests are described in a richer language, which has complex types built from basic types using constructors such as sets, lists, or record aggregation. We investigate methods for computing distance values of complex objects, based on a generic combination of distance values of the object components, as well as domain-dependent distance functions. The methods have been implemented in GRAPPA, the Generic Request Architecture for Passive Provider Agents, which is a framework for developing open matchmaking facilities that can handle complex objects described in XML. Using GRAPPA, a large scale application has been built in the Human Resource Network project of the Office for Labor Exchange of the German government, in which job offerings have to be matched against a large database of unemployed persons and qualified candidates should be retrieved.</abstract></paper>