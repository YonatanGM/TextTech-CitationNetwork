<paper id="1569587475"><title>Reuse and productivity in integrated computer-aided software engineering: an empirical study</title><year>1991</year><authors><author org="Singapore Management Univ.," id="739236157">Rajiv D. Banker</author><author org="Singapore Management Univ.," id="2186337131">Robert J. Kauffman</author></authors><n_citation>174</n_citation><doc_type>Journal</doc_type><references><reference>1694476708</reference><reference>1970933242</reference><reference>1976906670</reference><reference>1987979080</reference><reference>1994410397</reference><reference>2005546948</reference><reference>2007773305</reference><reference>2012105998</reference><reference>2015840967</reference><reference>2021503621</reference><reference>2027636409</reference><reference>2041881673</reference><reference>2064181934</reference><reference>2065985062</reference><reference>2075848956</reference><reference>2082469800</reference><reference>2089856939</reference><reference>2101814813</reference><reference>2107523859</reference><reference>2111792336</reference><reference>2113827629</reference><reference>2147417089</reference><reference>2156176640</reference><reference>2156284882</reference><reference>2161825580</reference><reference>2165875645</reference><reference>2537804768</reference></references><venue id="57293258" type="J">Management Information Systems Quarterly</venue><doi>10.2307/249649</doi><keywords><keyword weight="0.65812">Personal software process</keyword><keyword weight="0.47046">Software engineering</keyword><keyword weight="0.44753">Computer science</keyword><keyword weight="0.4729">Engineering management</keyword><keyword weight="0.69245">Package development process</keyword><keyword weight="0.46191">Knowledge management</keyword><keyword weight="0.6627">Software development process</keyword><keyword weight="0.65124">Component-based software engineering</keyword><keyword weight="0.67602">Software construction</keyword><keyword weight="0.6507">Software sizing</keyword><keyword weight="0.68469">Software development</keyword><keyword weight="0.66853">Social software engineering</keyword></keywords><publisher>Society for Information Management and The Management Information Systems Research Center</publisher><abstract>Growing competition in the investment banking industry has given rise to increasing demand for high functionality software applications that can be developed in a short period of time. Yet delivering such applications creates a bottleneck in software development activities. This dilemma can be addressed when firms shift to development methods that emphasize software reusability. This article examines the productivity implications of object and repository-based integrated computer-aided software engineering (ICASE) software development in the context of a major investment banku0027s information systems strategy. The strategy emphasizes software reusability. Our empirical results, based on data from 20 projects that delivered software for the banku0027s New Trades Processing Architecture (NTPA), indicate an order of magnitude gain in software development productivity and the importance of reuse as a driver in realizing this result. In addition, results are presented on the extent of the learning that occurred over a two-year period after ICASE was introduced, and on the influence of the link between application characteristics and the ICASE tool set in achieving development performance. This work demonstrates the viability of the firmu0027s IS strategy and offers new ideas for code reuse and software development productivity measurement that can be applied in development environments that emphasize reuse.</abstract></paper>