<paper id="1766174263"><title>Automatic theorem proving in paraconsistent logics: theory and implementation</title><year>1990</year><authors><author org="University of SÃ£o Paulo" id="2238478694">Newton C. A. da Costa</author><author org="Northwestern University" id="149210974">Lawrence J. Henschen</author><author org="Northwestern University" id="2155462634">James J. Lu</author><author org="University of Maryland" id="2261167843">V. S. Subrahmanian</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>35631723</reference><reference>1503507742</reference><reference>1530765221</reference><reference>1980589711</reference><reference>2001805670</reference><reference>2002684144</reference><reference>2011189621</reference><reference>2071149410</reference><reference>2103500248</reference><reference>2129802691</reference><reference>2142616542</reference><reference>2158084301</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-52885-7_80</doi><keywords><keyword weight="0.63305">Principle of explosion</keyword><keyword weight="0.4064">Discrete mathematics</keyword><keyword weight="0.64278">Paraconsistent logic</keyword><keyword weight="0.43035">Computer science</keyword><keyword weight="0.58021">Substructural logic</keyword><keyword weight="0.40474">Algorithm</keyword><keyword weight="0.43697">Theoretical computer science</keyword><keyword weight="0.55779">First-order logic</keyword><keyword weight="0.62363">Classical logic</keyword><keyword weight="0.55411">Many-valued logic</keyword><keyword weight="0.56174">Intermediate logic</keyword><keyword weight="0.54098">Higher-order logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Databases and knowledge bases may be inconsistent in many ways. However, a database that is inconsistent may, nonetheless, contain a great deal of useful information. Classical logic, however, would deem such a database as useless. Paraconsistent logics are a family of logics introduced by da Costa. A family of paraconsistent logics called annotated logics were proposed by Subrahmanian in [17]. Subsequently, these logics found use in reasoning about logic programs that contained inconsistent and/or erroneous information, as well as in the study of inheritance hierarchies and object oriented databases. However, no full-fledged study of automatic theorem proving in these logics has been carried out to date. In this paper, we develop a linear resolution style proof procedure for mechanical reasoning in these paraconsistent logics.</abstract></paper>