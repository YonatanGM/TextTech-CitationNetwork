<paper id="1872366378"><title>Hashing Moving Objects</title><year>2001</year><authors><author org="University of Maryland" id="2158807239">Zhexuan Song</author><author org="University of Maryland" id="2918468806">Nick Roussopoulos</author></authors><n_citation>65</n_citation><doc_type>Conference</doc_type><references><reference>1488719427</reference><reference>1548279927</reference><reference>1581321178</reference><reference>1796251476</reference><reference>1938177792</reference><reference>1982042357</reference><reference>2074429597</reference><reference>2091638028</reference><reference>2099397891</reference><reference>2101429492</reference><reference>2118269922</reference><reference>2134627110</reference><reference>2158713459</reference><reference>2171903035</reference></references><venue id="1134031032" type="C">Mobile Data Management</venue><doi>10.1007/3-540-44498-X_13</doi><keywords><keyword weight="0.44698">Wireless</keyword><keyword weight="0.0">System structure</keyword><keyword weight="0.4511">Computer science</keyword><keyword weight="0.48402">Range query (data structures)</keyword><keyword weight="0.47935">Systems design</keyword><keyword weight="0.50706">Search engine indexing</keyword><keyword weight="0.4593">Real-time computing</keyword><keyword weight="0.49797">Hash function</keyword><keyword weight="0.64834">Object-based spatial database</keyword><keyword weight="0.57166">Spatial database</keyword><keyword weight="0.44773">Database</keyword><keyword weight="0.45598">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In many real-life applications, objects need to be both spatially and temporally referenced. With the advancements of wireless communication and positioning technologies, the demand for storing and indexing moving objects, which are the objects continuously changing their locations, in database systems rises. However, current static spatial index structures are not well suited for handling large volume of moving objects due to massive and complex database update :[66],"this paper, we propose a new idea based on hashing technique: using buckets to hold moving objects. The database does not make any change until an object moves into a new bucket; therefore, the database update cost is greatly reduced. Then, we extend the design of existing system structure by inserting a filter layer between the position information collectors and the database. Based on the new system structure, we also present two indexing methods. Finally, different aspects of our indexing techniques are evaluated.</abstract></paper>