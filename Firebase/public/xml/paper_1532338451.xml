<paper id="1532338451"><title>The Definability of Equational Graphs in Monadic Second-Order Logic</title><year>1989</year><authors><author org="UniversitÃ© Bordeaux I" id="1228902201">Bruno Courcelle</author></authors><n_citation>8</n_citation><doc_type>Conference</doc_type><references><reference>1506761696</reference><reference>1566202617</reference><reference>1973576343</reference><reference>1992040352</reference><reference>1992613713</reference><reference>2016113382</reference><reference>2028357390</reference><reference>2065109782</reference><reference>2066030913</reference><reference>2094403718</reference><reference>2163393276</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0035762</doi><keywords><keyword weight="0.45656">Discrete mathematics</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.45259">Algebra</keyword><keyword weight="0.39939">Computer science</keyword><keyword weight="0.0">Monadic second-order logic</keyword><keyword weight="0.60352">Decidability</keyword><keyword weight="0.49588">Equivalence (measure theory)</keyword><keyword weight="0.54531">Isomorphism</keyword><keyword weight="0.47836">Monad (functional programming)</keyword><keyword weight="0.71273">Monadic predicate calculus</keyword><keyword weight="0.47931">Recursion</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We establish that every equational graph can be characterized, up to isomorphism, by a formula of monadic second-order logic. It follows that the isomorphism of two equational graphs is decidable. Equational graphs can be used to describe the behaviour of recursive applicative program schemes. We obtain a sufficient and decidable condition for the equivalence of these program schemes.</abstract></paper>