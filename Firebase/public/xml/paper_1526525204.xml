<paper id="1526525204"><title>Management of large software development efforts</title><year>1980</year><authors><author org="" id="101071923">Robert W. Zmud</author></authors><n_citation>234</n_citation><doc_type>Journal</doc_type><references><reference>198353933</reference><reference>1484927864</reference><reference>1528991045</reference><reference>1598197714</reference><reference>1975619952</reference><reference>1988547341</reference><reference>1995258570</reference><reference>2081004173</reference><reference>2108914172</reference><reference>2125200236</reference><reference>2146777658</reference><reference>2165121897</reference><reference>2295644412</reference><reference>2913217271</reference></references><venue id="57293258" type="J">Management Information Systems Quarterly</venue><doi>10.2307/249336</doi><keywords><keyword weight="0.65673">Software deployment</keyword><keyword weight="0.68222">Personal software process</keyword><keyword weight="0.70234">Software peer review</keyword><keyword weight="0.41485">Computer science</keyword><keyword weight="0.45391">Knowledge management</keyword><keyword weight="0.66763">Release management</keyword><keyword weight="0.67262">Software project management</keyword><keyword weight="0.67085">Software development process</keyword><keyword weight="0.68761">Software development</keyword><keyword weight="0.6886">Social software engineering</keyword></keywords><publisher>Society for Information Management and The Management Information Systems Research Center</publisher><abstract>The high development and maintenance costs, and the late delivery experienced by many organizations when developing large software systems is well documented. Modern software practices have evolved to overcome many of the technical difficulties associated with software development. To a large extent, however, the high costs and schedule slippages can be traced to management, not technical, deficiencies. This article develops an approach for managing the software development effort that exploits the benefits of modern software practices in staffing, planning, and controlling software development.</abstract></paper>