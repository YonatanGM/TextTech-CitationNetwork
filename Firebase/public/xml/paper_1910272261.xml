<paper id="1910272261"><title>Materialization and incremental update of path information</title><year>1989</year><authors><author org="AT&amp;T Bell Labs., Murray Hill., NJ, USA" id="2138427228">R. Agrawal</author><author org="AT&amp;T Bell Labs., Murray Hill., NJ, USA" id="360112113">H.V. Jagadish</author></authors><n_citation>36</n_citation><doc_type>Conference</doc_type><references><reference>88963840</reference><reference>147240463</reference><reference>1527916118</reference><reference>1549076666</reference><reference>1567632848</reference><reference>1965733860</reference><reference>1978309035</reference><reference>2089692469</reference><reference>2104734478</reference><reference>2116476518</reference><reference>2148179848</reference><reference>2156267397</reference><reference>2165456041</reference><reference>2295596515</reference></references><venue id="1163988186" type="C">International Conference on Data Engineering</venue><doi>10.1109/ICDE.1989.47238</doi><keywords><keyword weight="0.47249">Data mining</keyword><keyword weight="0.63951">Conjunctive query</keyword><keyword weight="0.47097">Information retrieval</keyword><keyword weight="0.59638">Relational database</keyword><keyword weight="0.4655">Computer science</keyword><keyword weight="0.66576">Database theory</keyword><keyword weight="0.0">Deductive database systems</keyword><keyword weight="0.48879">Recursion</keyword><keyword weight="0.46029">Database</keyword><keyword weight="0.47694">Speedup</keyword><keyword weight="0.48486">Encoding (memory)</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>The problem of efficiently processing recursive path queries in deductive database systems is discussed, and a semimaterialized encoding structure is proposed as an attractive approach that provides a balance between efficiency of retrieval and feasibility of storage. Incremental algorithms are presented that enable the effects of updates to the underlying database to be reflected in the materialized information. Performance simulations indicate that these techniques can significantly speed up the processing of path queries at an acceptable level of storage overhead. u003e</abstract></paper>