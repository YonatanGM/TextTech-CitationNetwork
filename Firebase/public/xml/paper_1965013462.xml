<paper id="1965013462"><title>Dynamically generating web application fragments from page templates</title><year>2002</year><authors><author org="University of Essen, Germany" id="2344120076">Uwe Zdun</author></authors><n_citation>28</n_citation><doc_type>Conference</doc_type><references><reference>369868522</reference><reference>1501192697</reference><reference>1566312660</reference><reference>1779735989</reference><reference>2014678342</reference><reference>2407682414</reference></references><venue id="2754781246" type="C">ACM Symposium on Applied Computing</venue><doi>10.1145/508791.509010</doi><keywords><keyword weight="0.59636">Same-origin policy</keyword><keyword weight="0.68914">Static web page</keyword><keyword weight="0.45872">Programming language</keyword><keyword weight="0.6331">Web page</keyword><keyword weight="0.44774">Computer science</keyword><keyword weight="0.54317">Web engineering</keyword><keyword weight="0.58685">Web modeling</keyword><keyword weight="0.5552">Web application</keyword><keyword weight="0.60518">Dynamic web page</keyword><keyword weight="0.58017">Web service</keyword></keywords><publisher>ACM</publisher><abstract>Web-based applications are typically required to be highly customizable and configurable. New application requirements have to be introduced rapidly, often without stopping the running application process. Moreover, in many cases the same business logic has to be presented to different channels and/or user interfaces. In this paper we present a dynamic page template architecture for decomposing configurable and representational fragments of the application from the business logic. Page templates consist of static XML files and of dynamic class definitions. The XML-based page templates can be used for declarative definitions of configurable fragments, say, by the end-user with a graphical tool. The page template classes can be used for behavior specification, say, for defining common styles of decoration of the presented pages. Both parts are dynamically loaded into the web application environment and composed with the web objects. Thus, the configurable and representational fragments of web objects are dynamically generated from the changeable and extensible descriptions in the page templates. The concepts presented are applied in various larger software systems. We will present a highly customizable conference management system as an example case.</abstract></paper>