<paper id="1584539716"><title>Proof Plans for the Correction of False Conjectures</title><year>1994</year><authors><author org="The University of Edinburgh" id="2196512096">Raul Monroy</author><author org="The University of Edinburgh" id="2000084407">Alan Bundy</author><author org="The University of Edinburgh" id="2119770075">Andrew Ireland</author></authors><n_citation>22</n_citation><doc_type>Conference</doc_type><references><reference>60163725</reference><reference>1507212491</reference><reference>1581769579</reference><reference>1590791006</reference><reference>1590963539</reference><reference>1762401663</reference><reference>2034500240</reference><reference>2034686855</reference><reference>2087028873</reference><reference>2124301168</reference></references><venue id="1201110412" type="C">International Conference on Logic Programming</venue><doi>10.1007/3-540-58216-9_29</doi><keywords><keyword weight="0.44107">Computer science</keyword><keyword weight="0.54559">Axiom</keyword><keyword weight="0.5945">Automated theorem proving</keyword><keyword weight="0.45351">Theoretical computer science</keyword><keyword weight="0.65544">Mathematical proof</keyword><keyword weight="0.65239">Proof complexity</keyword><keyword weight="0.40633">Phenomenon</keyword><keyword weight="0.5495">Combinatorial explosion</keyword><keyword weight="0.52711">Rule of inference</keyword><keyword weight="0.46321">Calculus</keyword><keyword weight="0.56026">Recursive definition</keyword></keywords><publisher>Springer Verlag</publisher><abstract>Theorem proving is the systematic derivation of a mathematical proof from a set of axioms by the use of rules of inference. We are interested in a related but far less explored problem: the analysis and correction of false conjectures, especially where that correction involves finding a collection of antecedents that, together with a set of axioms, transform non-theorems into theorems. Most failed search trees are huge, and special care is to be taken in order to tackle the combinatorial explosion phenomenon. Fortunately, the planning search space generated by proof plans, see [1], are moderately small. We have explored the possibility of using this technique in the implementation of an abduction mechanism to correct non-theorems.</abstract></paper>