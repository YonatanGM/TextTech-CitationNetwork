<paper id="1563494680"><title>Selective Reservation Strategies for Backfill Job Scheduling</title><year>2002</year><authors><author org="the ohio state university" id="2481920566">Srividya Srinivasan</author><author org="the ohio state university" id="2053087161">Rajkumar Kettimuthu</author><author org="the ohio state university" id="2099157490">Vijay Subramani</author><author org="the ohio state university" id="1966094299">P. Sadayappan</author></authors><n_citation>106</n_citation><doc_type>Conference</doc_type><references><reference>1500323626</reference><reference>1505990572</reference><reference>1513326124</reference><reference>1573033176</reference><reference>1573602196</reference><reference>1589135661</reference><reference>1599248213</reference><reference>1603821301</reference><reference>1852897826</reference><reference>1944778298</reference><reference>2099638274</reference><reference>2112168774</reference><reference>2150074609</reference><reference>2160544331</reference></references><venue id="1122827389" type="C">Job Scheduling Strategies for Parallel Processing</venue><doi>10.1007/3-540-36180-4_4</doi><keywords><keyword weight="0.48651">Reservation</keyword><keyword weight="0.67898">Fair-share scheduling</keyword><keyword weight="0.51252">Supercomputer</keyword><keyword weight="0.56487">Scheduling (computing)</keyword><keyword weight="0.49512">Massively parallel</keyword><keyword weight="0.44683">Computer science</keyword><keyword weight="0.4512">Parallel computing</keyword><keyword weight="0.44059">Real-time computing</keyword><keyword weight="0.67283">Rate-monotonic scheduling</keyword><keyword weight="0.51617">Turnaround time</keyword><keyword weight="0.59097">Job scheduler</keyword><keyword weight="0.4558">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Although there is wide agreement that backfilling produces significant benefits in scheduling of parallel jobs, there is no clear consensus on which backfilling strategy is preferable - should conservative backfilling be used or the more aggressive EASY backfilling scheme. Using trace-based simulation, we show that if performance is viewed within various job categories based on their width (processor request size) and length (job duration), some consistent trends may be observed. Using insights gleaned by the characterization, we develop a selective reservation strategy for backfill scheduling. We demonstrate that the new scheme is better than both conservative and aggressive backfilling.We also consider the issue of fairness in job scheduling and develop a new quantitative approach to its characterization. We show that the newly proposed schemes are also comparable or better than aggressive backfilling with respect to the fairness criterion.</abstract></paper>