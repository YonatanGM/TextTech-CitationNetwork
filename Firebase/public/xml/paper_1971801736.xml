<paper id="1971801736"><title>Improved low-degree testing and its applications</title><year>1997</year><authors><author org="Princeton University *" id="2159007752">Sanjeev Arora</author><author org="IBM T. J. Watson Research Center, P.O.Box 218, Yorktown Heights, NY" id="466258520">Madhu Sudan</author></authors><n_citation>193</n_citation><doc_type>Conference</doc_type><references><reference>1888180283</reference><reference>1970259241</reference><reference>1980267752</reference><reference>2003159902</reference><reference>2016232593</reference><reference>2018925011</reference><reference>2019578639</reference><reference>2021736779</reference><reference>2029859729</reference><reference>2033361557</reference><reference>2053086236</reference><reference>2059453880</reference><reference>2067247399</reference><reference>2080132708</reference><reference>2082647621</reference><reference>2086653003</reference><reference>2089272132</reference><reference>2090863037</reference><reference>2094878497</reference><reference>2097206148</reference><reference>2101610102</reference><reference>2104536936</reference><reference>2132302072</reference><reference>2136037917</reference><reference>2143391442</reference><reference>2143996311</reference><reference>2148352980</reference><reference>2148531294</reference><reference>2149815049</reference><reference>2152221184</reference><reference>2156867528</reference><reference>2202947145</reference><reference>2293988196</reference><reference>2622192510</reference></references><venue id="1190910084" type="C">Symposium on the Theory of Computing</venue><doi>10.1145/258533.258642</doi><keywords><keyword weight="0.47335">Set cover problem</keyword><keyword weight="0.45956">Discrete mathematics</keyword><keyword weight="0.50573">Finite field</keyword><keyword weight="0.46058">Algebraic geometry</keyword><keyword weight="0.45793">Combinatorics</keyword><keyword weight="0.48428">Random graph</keyword><keyword weight="0.50419">Polynomial</keyword><keyword weight="0.47737">Pseudorandomness</keyword><keyword weight="0.47018">Irreducibility</keyword><keyword weight="0.50586">PCP theorem</keyword><keyword weight="0.42177">Mathematics</keyword></keywords><publisher>ACM</publisher><abstract>NP = PCP(logn, 1) and related results crucially depend upon the close connection between the probability with which a function passes a low degree test and the distance of this function to the nearest degree d polynomial. In this paper we study a test proposed by Rubinfeld and Sudan [30]. The strongest previously known connection for this test states that a function passes the test with probability δ for some δ u003e 7/8 iff the function has agreement ≈ δ with a polynomial of degree d. We present a new, and surprisingly strong, analysis which shows that the preceding statement is true for arbitrarily small δ, provided the field size is polynomially larger than d/δ. The analysis uses a version of Hilbert irreducibility, a tool of algebraic geometry. As a consequence we obtain an alternate construction for the following proof system: A constant prover 1-round proof system for NP languages in which the verifier uses O(logn) random bits, receives answers of size O(logn) bits, and has an error probability of at most 2− log 1− . Such a proof system, which implies the NP-hardness of approximating Set Cover to within Ω(logn) factors, has already been obtained by Raz and Safra [29]. Raz and Safra obtain their result by giving a strong analysis, in the sense described above, of a new low-degree test that they present. A second consequence of our analysis is a self tester/corrector for any buggy program that (supposedly) computes a polynomial over a finite field. If the program is correct only on δ fraction of inputs where δ = 1/ |F| 0.5, then the tester/corrector determines δ and generates O( 1 δ ) values for every input, such that one of them is the correct output. In fact, our results yield something stronger: Given the buggy program, we can construct O( 1 δ ) randomized programs such that one of them is correct on every input, with high probability. Such a strong selfcorrector is a useful tool in complexity theory with some applications known. ∗arora@cs.princeton.edu. Supported by an NSF CAREER award, an Alfred P. Sloan Fellowship, and a Packard Fellowship. †madhu@lcs.mit.edu. Laboratory for Computer Science, MIT, Cambridge, MA 02139. Part of this work was done when this author was at the IBM Thomas J. Watson Research Center.</abstract></paper>