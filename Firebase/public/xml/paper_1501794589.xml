<paper id="1501794589"><title>Model checking and Boolean graphs</title><year>1992</year><authors><author org="Aarhus University," id="2169126755">Henrik Reif Andersen</author></authors><n_citation>29</n_citation><doc_type>Conference</doc_type><references><reference>1576490998</reference><reference>1791618115</reference><reference>1971107784</reference><reference>2002570665</reference><reference>2011992362</reference><reference>2012841134</reference><reference>2015640848</reference><reference>2057260173</reference><reference>2095082129</reference><reference>2171536993</reference></references><venue id="1136861413" type="C">European Symposium on Programming</venue><doi>10.1007/3-540-55253-7_1</doi><keywords><keyword weight="0.52097">Transition system</keyword><keyword weight="0.56392">Graph theory</keyword><keyword weight="0.55052">Model checking</keyword><keyword weight="0.45131">Exponential function</keyword><keyword weight="0.44546">Computer science</keyword><keyword weight="0.47503">Algorithm</keyword><keyword weight="0.46949">Theoretical computer science</keyword><keyword weight="0.59358">Local algorithm</keyword><keyword weight="0.47013">Complete lattice</keyword><keyword weight="0.50289">Modal</keyword><keyword weight="0.51272">Alternation (linguistics)</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper describes a method for translating a satisfaction problem of the modal μ-calculus into a problem of finding a certain marking of a boolean graph. By giving algorithms to solve the graph problem, we present a global model checking algorithm for the modal μ-calculus of alternation depth one, which has time-complexity ¦A¦¦T¦, where ¦A¦ is the size of the assertion and ¦T¦ is the size of the model (a labelled transition system). This algorithm extends to an algorithm for the full modal μ-calculus which runs in time (¦A¦¦T¦)ad, where ad is the alternation depth, improving on earlier presented algorithms. Moreover, a local algorithm is presented for alternation depth one, which runs in time ¦A¦¦T¦log(¦A¦¦T¦), improving on the earlier published algorithms that are all at least exponential.</abstract></paper>