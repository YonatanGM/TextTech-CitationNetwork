<paper id="1968653910"><title>The complexity of very simple Boolean formulas with applications</title><year>1990</year><authors><author org="State University of New York/Albany" id="2633484956">H. B. Hunt</author><author org="State University of New York/Albany" id="2102135011">R. E. Stearns</author></authors><n_citation>25</n_citation><doc_type>Journal</doc_type><references><reference>1584887677</reference><reference>1906914439</reference><reference>1971821372</reference><reference>2003979824</reference><reference>2014064621</reference><reference>2016984055</reference><reference>2017460507</reference><reference>2026731014</reference><reference>2029980187</reference><reference>2036265926</reference><reference>2044186139</reference><reference>2120688461</reference><reference>2149107969</reference><reference>2169849462</reference></references><venue id="153560523" type="J">SIAM Journal on Computing</venue><doi>10.1137/0219003</doi><keywords><keyword weight="0.45695">Discrete mathematics</keyword><keyword weight="0.45779">Combinatorics</keyword><keyword weight="0.45971">Finite field</keyword><keyword weight="0.44329">Lattice (order)</keyword><keyword weight="0.42912">Modulo</keyword><keyword weight="0.44452">Satisfiability</keyword><keyword weight="0.53318">Boolean satisfiability problem</keyword><keyword weight="0.44485">Propositional calculus</keyword><keyword weight="0.46559">Boolean algebra</keyword><keyword weight="0.48678">Boolean expression</keyword><keyword weight="0.40102">Mathematics</keyword></keywords><publisher>Society for Industrial and Applied Mathematics</publisher><abstract>The concepts of $\textbf{SAT}$-hardness and $\textbf{SAT}$-completeness modulo npolylogn time and linear size reducibility, denoted by $\textbf{SAT}$-hard (npolylogn, n) and $\textbf{SAT}$-complete (npolylogn, n), respectively, are introduced. Regardless of whether $\textbf{P} = \textbf{NP}$ or $\textbf{P} \neq \textbf{NP}$, it is shown that intuitivelyEach $\textbf{SAT}$-hard (npolylogn, n) problem requires essentially at least as much deterministic time as, andEach $\textbf{SAT}$-complete (npolylogn, n) problem requires essentially the same deterministic time as the satisfiability problem for 3CNF formulas.It is proved that the $\leqq$, satisfiability, tautology, unique satisfiability, equivalence, and minimization problems are already $\textbf{SAT}$-complete (npolylogn, n), for very simple Boolean formulas and for very simple systems of Boolean equations. These completeness results are used to characterize the deterministic time complexities of a number of problems for lattices, propositional calculi, ...</abstract></paper>