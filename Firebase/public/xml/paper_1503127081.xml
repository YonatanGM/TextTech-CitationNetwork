<paper id="1503127081"><title>Event-Based coordination of process-oriented composite applications</title><year>2005</year><authors><author org="(Queensland University of Technology, Australia)" id="2250777962">Marlon Dumas</author><author org="(Queensland University of Technology, Australia)" id="305677645">Tore Fjellheim</author><author org="(Queensland University of Technology, Australia)" id="1994755852">Stephen Milliner</author><author org="SAP Research Centre, Brisbane, Australia#TAB#" id="2282414891">Julien Vayssi√®re</author></authors><n_citation>58</n_citation><doc_type>Patent</doc_type><references><reference>1486029907</reference><reference>1489021242</reference><reference>1503032904</reference><reference>1506372843</reference><reference>1514997826</reference><reference>1534795581</reference><reference>1561433714</reference><reference>1570586234</reference><reference>1608530972</reference><reference>1984192117</reference><reference>2007221630</reference><reference>2020675906</reference><reference>2046962997</reference><reference>2063772987</reference><reference>2124920934</reference><reference>2134410019</reference><reference>2139889174</reference><reference>2143187739</reference><reference>2147984485</reference><reference>2161307885</reference><reference>2163646799</reference><reference>2911625174</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/11538394_16</doi><keywords><keyword weight="0.65018">Composite application</keyword><keyword weight="0.46408">Computer science</keyword><keyword weight="0.38291">Composite number</keyword><keyword weight="0.47161">Activity diagram</keyword><keyword weight="0.42213">Integrated management</keyword><keyword weight="0.47431">Reactive system</keyword><keyword weight="0.46989">Distributed computing</keyword><keyword weight="0.51769">Defined process</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A process-oriented composite application aggregates functionality from a number of other applications and coordinates these applications according to a process model. Traditional approaches to develop process-oriented composite application rely on statically defined process models that are deployed into a process management engine. This approach has the advantage that application designers and users can comprehend the dependencies between the applications involved in the composition by referring to the process model. A major disadvantage however is that once deployed the behaviour of every execution of the composite application is expected to abide by its process model until this model is changed and re-deployed. This makes it difficult to enrich the application with even minor features, to plug-in new applications into the composition, or to hot-fix the composite application to meet special circumstances or demands (e.g. to personalise the application). This paper describes a technique for translating a process-oriented application into an event-based application which is more amenable to such runtime adaptation. The process-based and event-based views of the application can then co-exist and be synchronised offline if the changes become permanent and it is found desirable to reflect them in the process model.</abstract></paper>