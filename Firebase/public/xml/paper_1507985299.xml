<paper id="1507985299"><title>The NCSU Concurrency Workbench</title><year>1996</year><authors><author org="North-Carolina State University" id="2090782985">Rance Cleaveland</author><author org="North-Carolina State University" id="2153381412">Steve Sims</author></authors><n_citation>181</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1504623906</reference><reference>1591616977</reference><reference>1791618115</reference><reference>1971107784</reference><reference>2008781243</reference><reference>2068361557</reference><reference>2126519460</reference><reference>2129254290</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-61474-5_87</doi><keywords><keyword weight="0.55543">Workbench</keyword><keyword weight="0.47344">Software engineering</keyword><keyword weight="0.46257">Computer science</keyword><keyword weight="0.57255">Concurrency</keyword><keyword weight="0.44802">Theoretical computer science</keyword><keyword weight="0.52282">Modular design</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The NCSU Concurrency Workbench is a tool for verifying finite-state systems. A key feature is its flexibility; its modular design eases the task of adding new analyses and changing the language users employ for describing systems. This note gives an overview of the systemu0027s features, including its capacity for generating diagnostic information for incorrect systems, and discusses some of its applications.</abstract></paper>