<paper id="1983992202"><title>An intelligent tool for re-engineering software modularity</title><year>1991</year><authors><author org="Siemens Corporate Research, Inc., 755 College Rd. East, Princeton, NJ" id="1132004046">Robert W. Schwanke</author></authors><n_citation>235</n_citation><doc_type>Conference</doc_type><references><reference>1562161142</reference><reference>2027274196</reference><reference>2134119432</reference><reference>2156819280</reference></references><venue id="1174403976" type="C">International Conference on Software Engineering</venue><doi>10.1109/ICSE.1991.130626</doi><keywords><keyword weight="0.54004">Software design</keyword><keyword weight="0.4784">Software engineering</keyword><keyword weight="0.45533">Systems engineering</keyword><keyword weight="0.47455">Computer science</keyword><keyword weight="0.54181">Software system</keyword><keyword weight="0.54102">Component-based software engineering</keyword><keyword weight="0.54104">Software metric</keyword><keyword weight="0.55549">Software construction</keyword><keyword weight="0.54105">Software quality</keyword><keyword weight="0.55485">Software development</keyword><keyword weight="0.55919">Software framework</keyword></keywords><publisher>IEEE Computer Society Press</publisher><abstract>The author describes a software tool that provides heuristic modularization advice for improving existing code. A heuristic design similarity measure is defined, based on the Parna information hiding principle. The measure supports two services: clustering, which identifies groups of related procedures, and maverick analysis, which identifies individual procedures that appear to be in the wrong module. The tool has already provided useful advice in several real programming projects. The tool will soon incorporate an automatic tuning method, which allows the tool to learn from its mistakes, adapting its advice to the architectu0027s preferences. A preliminary experiment demonstrates that the automatically tuned similarity function can assign procedures to modules very accurately. u003e</abstract></paper>