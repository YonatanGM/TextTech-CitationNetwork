<paper id="1981736187"><title>Meta-level programming and knowledge representation</title><year>1986</year><authors><author org="Syracuse University" id="2974405460">K A Bowen</author></authors><n_citation>73</n_citation><doc_type>Journal</doc_type><references><reference>35175240</reference><reference>78894664</reference><reference>86182407</reference><reference>99965253</reference><reference>137206680</reference><reference>1558779675</reference><reference>1977072681</reference><reference>1996404651</reference><reference>2402285371</reference></references><venue id="165364243" type="J">New Generation Computing</venue><doi>10.1007/BF03037077</doi><keywords><keyword weight="0.60245">Knowledge representation and reasoning</keyword><keyword weight="0.42569">Traditional knowledge</keyword><keyword weight="0.47803">Programming language</keyword><keyword weight="0.46417">Computer science</keyword><keyword weight="0.45924">Theoretical computer science</keyword><keyword weight="0.60848">Prolog</keyword><keyword weight="0.46701">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.63813">Logic programming</keyword><keyword weight="0.56429">Message passing</keyword><keyword weight="0.55052">Scripting language</keyword></keywords><publisher>Ohmsha</publisher><abstract>The nature of a metalevel extension of Prolog is outlined. The key features include the treatment of theories (databases) and metalevel names as first-class objects which may be the values of variables. The use of the power of these constructs in traditional knowledge representation is explored. In particular, it is shown how frames, semantic nets, scripts, message passing, and non-standard control can be represented.</abstract></paper>