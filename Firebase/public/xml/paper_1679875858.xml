<paper id="1679875858"><title>Computational Adequacy in an Elementary Topos</title><year>1998</year><authors><author org="University of Edinburgh," id="2138270849">Alex K. Simpson</author></authors><n_citation>1114</n_citation><doc_type>Conference</doc_type><references><reference>1511668635</reference><reference>1532092775</reference><reference>1544662935</reference><reference>1566009901</reference><reference>1605765292</reference><reference>1977260399</reference><reference>1980180432</reference><reference>1989069191</reference><reference>2007270285</reference><reference>2045300896</reference><reference>2083193305</reference><reference>2107093915</reference><reference>2117318327</reference><reference>2123630974</reference><reference>2142922307</reference><reference>2337267853</reference></references><venue id="1165958984" type="C">Computer Science Logic</venue><doi>10.1007/10703163_22</doi><keywords><keyword weight="0.45469">Discrete mathematics</keyword><keyword weight="0.50098">Operational semantics</keyword><keyword weight="0.49111">Axiom</keyword><keyword weight="0.41233">Product type</keyword><keyword weight="0.52573">Denotational semantics</keyword><keyword weight="0.5043">Algebra homomorphism</keyword><keyword weight="0.50618">Domain theory</keyword><keyword weight="0.44818">If and only if</keyword><keyword weight="0.42897">Mathematics</keyword><keyword weight="0.59374">Topos theory</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We place simple axioms on an elementary topos which suffice for it to provide a denotational model of call-by-value PCF with sum and product types. The model is synthetic in the sense that types are interpreted by their set-theoretic counterparts within the topos. The main result characterises when the model is computationally adequate with respect to the operational semantics of the programming language. We prove that computational adequacy holds if and only if the topos is 1-consistent (i.e. its internal logic validates only true Î£\(^{\rm 0}_{\rm 1}\)-sentences).</abstract></paper>