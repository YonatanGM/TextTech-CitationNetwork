<paper id="1489862799"><title>Mixing Up Nondeterminism and Probability: A Preliminary Report</title><year>1998</year><authors><author org="Faculty of Mathematics and Computer Science, Vrije Universiteit Amsterdam, The Netherlands" id="2688609788">J.I. den Hartog</author><author org="Faculty of Mathematics and Computer Science, Vrije Universiteit Amsterdam, The Netherlands" id="2645060578">E.P. de Vink</author></authors><n_citation>19</n_citation><doc_type>Journal</doc_type><references><reference>1561925517</reference><reference>1793726001</reference><reference>1850900101</reference><reference>1907364945</reference><reference>1974090207</reference><reference>1976268573</reference><reference>2030875267</reference><reference>2100893927</reference><reference>2113391296</reference><reference>2115154197</reference><reference>2135657750</reference><reference>2154553818</reference><reference>2155748644</reference><reference>2245053867</reference><reference>2583399457</reference></references><venue id="50368787" type="J">Electronic Notes in Theoretical Computer Science</venue><doi>10.1016/S1571-0661(05)82521-6</doi><keywords><keyword weight="0.59436">Transition system</keyword><keyword weight="0.44381">Discrete mathematics</keyword><keyword weight="0.6173">Nondeterministic algorithm</keyword><keyword weight="0.46113">Computer science</keyword><keyword weight="0.58688">Concurrency</keyword><keyword weight="0.47069">Theoretical computer science</keyword><keyword weight="0.49437">Operator (computer programming)</keyword><keyword weight="0.53425">Probabilistic logic</keyword><keyword weight="0.52096">Modular design</keyword></keywords><publisher>Elsevier</publisher><abstract>For a process language with both nondeterministic and probabilistic choice, and a form of failure a transition system is given from which, in a modular way, various operational models corresponding to various interpretations of nondeterminism and probability can be obtained. The effect of failure of one component for the system as a whole is treated differently in each interpretation. The same approach is followed for an extension of the language with a parallel operator. The adopted concurrency model is of a distributed nature and assumes that progress is guaranteed if nonfailing components exist. To this end the notion of a take-over of a failing component is incorporated in the transition system. It is shown that the modular way in which the transition system can yield different semantical models applies to this setting as well.</abstract></paper>