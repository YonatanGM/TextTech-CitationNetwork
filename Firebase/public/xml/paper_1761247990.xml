<paper id="1761247990"><title>A precise method for identifying reusable abstract data types in code</title><year>1994</year><authors><author org="Dipartimento di Ingegneria dell'Informazione ed Elettrica, Salerno Univ., Italy" id="2715586847">Canfora</author><author org="" id="2707518901">Cimitile</author><author org="" id="2609207274">Tortorella</author><author org="" id="2658458601">Munro</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>2078723731</reference><reference>2096183408</reference><reference>2106174973</reference><reference>2130059083</reference></references><venue id="1160919455" type="C">International Conference on Software Maintenance</venue><doi>10.1109/ICSM.1994.336754</doi><keywords><keyword weight="0.5636">Abstract data type</keyword><keyword weight="0.42966">Systems engineering</keyword><keyword weight="0.47381">Software design description</keyword><keyword weight="0.45558">Computer science</keyword><keyword weight="0.51415">Directed graph</keyword><keyword weight="0.48366">Software system</keyword><keyword weight="0.47094">Software quality</keyword><keyword weight="0.47038">Software verification and validation</keyword><keyword weight="0.49924">Software framework</keyword><keyword weight="0.47118">Software sizing</keyword></keywords><publisher>IEEE</publisher><abstract>This paper presents the results of research within the RE/sup 2/ project of a refinement of two existing methods for identifying reusable abstract data types. These methods are based on the relationships existing between the user defined types and procedure-like components that use them in their headings and on direct dominance trees and strong direct dominance trees that are refinements of the call directed graph of a program. It shows how these methods can be used to give a more precise set of reusable abstract data types. The method is then applied to a program and the results are compared with the existing method. u003e</abstract></paper>