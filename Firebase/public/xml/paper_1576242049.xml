<paper id="1576242049"><title>Writing simple program generators: a case study in building productivity tools</title><year>1984</year><authors><author org="Baruch College of The City Univ. of New York, New York, NY#TAB#" id="2305459363">Morton Norman</author><author org="Baruch College of The City Univ. of New York, New York, NY#TAB#" id="2308055935">Amador Muriel</author></authors><n_citation>2</n_citation><doc_type>Journal</doc_type><references><reference>2116844130</reference></references><venue id="9954729" type="J">Journal of Management Information Systems</venue><doi>10.1080/07421222.1984.11517699</doi><keywords><keyword weight="0.47795">Software engineering</keyword><keyword weight="0.46612">Computer science</keyword><keyword weight="0.46328">Data acquisition</keyword><keyword weight="0.45506">Knowledge management</keyword><keyword weight="0.48851">Software</keyword><keyword weight="0.47328">Microcomputer</keyword><keyword weight="0.48656">Generality</keyword></keywords><publisher>M. E. Sharpe, Inc.</publisher><abstract>Abstract:The development of a program generator for data acquisition and management on a microcomputer is described in a case study. The generator has been used to achieve major gains in productivity of both experienced programmers and naive users. Specific rules and techniques used in developing the program generator are presented, together with design tradeoffs. By implication, these methods are suitable for developing other program generators for a wide variety of applications. The claim is made that writing program generators which are modest in scope and generality is a straightforward and teachable task, rather than an exotic technique. Consequently, software groups are urged to consider developing such productivity tools.</abstract></paper>