<paper id="1482012210"><title>Programmed Graph Grammars</title><year>1978</year><authors><author org="Universität Erlangen-Nürnberg" id="1948338481">Horst Bunke</author></authors><n_citation>39</n_citation><doc_type>Conference</doc_type><references><reference>2099683082</reference><reference>2163091968</reference></references><venue id="2756339047" type="C">International Workshop on Graph-Grammars and Their Application to Computer Science</venue><doi>10.1007/BFb0025718</doi><keywords><keyword weight="0.57898">Tree-adjoining grammar</keyword><keyword weight="0.48731">Rule-based machine translation</keyword><keyword weight="0.45352">Discrete mathematics</keyword><keyword weight="0.40744">Computer science</keyword><keyword weight="0.67332">Recursively enumerable language</keyword><keyword weight="0.73796">Null graph</keyword><keyword weight="0.41705">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.64954">Clique-width</keyword><keyword weight="0.46428">Hierarchy</keyword><keyword weight="0.67649">Graph (abstract data type)</keyword><keyword weight="0.70953">Voltage graph</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Let [enum], [exp-i] and [pr-i] denote the class of recursively enumerable, typ-i expression and typ-i programmed graph languages respectively. The following hierarchy is known from [5]:</abstract></paper>