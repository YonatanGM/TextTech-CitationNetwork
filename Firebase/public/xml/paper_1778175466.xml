<paper id="1778175466"><title>Timed Transition Systems</title><year>1991</year><authors><author org="Cornell University;" id="2707196735">Thomas A. Henzinger</author><author org="Stanford Universityâ€¨" id="2146370811">Zohar Manna</author><author org="Weizmann institute of Science" id="2171343426">Amir Pnueli</author></authors><n_citation>211</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>1490661246</reference><reference>1675507648</reference><reference>1989877393</reference><reference>1994350081</reference><reference>2003773532</reference><reference>2023808162</reference><reference>2026533872</reference><reference>2030263557</reference><reference>2076494576</reference><reference>2093045165</reference><reference>2102447986</reference><reference>2107168574</reference><reference>2110425399</reference><reference>2124192263</reference><reference>2124845674</reference><reference>2140028191</reference></references><venue id="2758088042" type="C">Real-Time: Theory in Practice, REX Workshop</venue><doi>10.1007/BFb0031995</doi><keywords><keyword weight="0.5509">Transition system</keyword><keyword weight="0.0">Shared variables</keyword><keyword weight="0.58552">Concurrency</keyword><keyword weight="0.53629">Scheduling (computing)</keyword><keyword weight="0.468">Computer science</keyword><keyword weight="0.50263">Interleaving</keyword><keyword weight="0.42795">Technical report</keyword><keyword weight="0.58144">Message passing</keyword><keyword weight="0.47341">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We incorporate time into an interleaving model of concurrency. In timed transition systems, the qualitative fairness requirements of traditional transition system are replaced (and superseded) by quantitative lower-bound and upperbound timing constraints on transitions. The purpose of this paper is to explore the scope of applicability for the abstract model of timed transition systems. We demonstrate that the model can represent a wide variety of phenomena that routinely occur in conjunction with the timed execution of concurrent processes. Our treatment covers both processes that are executed in parallel on separate processors and communicate either through shared variables or by message passing, and processes that time-share a limited number of processors under a given scheduling policy. Often it is this scheduling policy that determines if a system meets its real-time requirements. Thus we explicitly address such questions as time-outs, interrupts, static and dynamic priorities.</abstract></paper>