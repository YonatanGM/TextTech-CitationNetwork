<paper id="1836481452"><title>Parallel State Space Exploration for GSPN Models</title><year>1995</year><authors><author org="Universita di Parma" id="2434879743">Stefano Caselli</author><author org="Universita di Parma" id="2146471486">Gianni Conte</author><author org="Universita di Parma" id="2974382065">P. Marenzoni</author></authors><n_citation>45</n_citation><doc_type>Conference</doc_type><references><reference>6883745</reference><reference>117602941</reference><reference>144180596</reference><reference>1574520403</reference><reference>1925071582</reference><reference>1929473837</reference><reference>2159651799</reference></references><venue id="1204434967" type="C">Applications and Theory of Petri Nets</venue><doi>10.1007/3-540-60029-9_40</doi><keywords><keyword weight="0.51822">Programming paradigm</keyword><keyword weight="0.0">State space exploration</keyword><keyword weight="0.62829">Massively parallel</keyword><keyword weight="0.45247">Computer science</keyword><keyword weight="0.47086">Parallel computing</keyword><keyword weight="0.51323">SIMD</keyword><keyword weight="0.57422">Stochastic Petri net</keyword><keyword weight="0.49625">Reachability</keyword><keyword weight="0.56882">State space</keyword><keyword weight="0.5567">MIMD</keyword><keyword weight="0.4601">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Generalized Stochastic Petri Nets (GSPN) have gained a wide acceptance as a modeling tool for the performance analysis of concurrent systems. However, the applicability of this methodology is severely limited by the potential state space explosion phenomenon. In this paper we describe massively parallel approaches to the most computing-intensive part of the solution of GSPN models: the state space construction. The effectiveness of these parallel approaches stays, for every GSPN, in their ability to deal with very large reachability spaces in reasonable time. Both the SIMD and the MIMD programming models are considered, and examples are given using recent massively parallel processing architectures (CM-5, T3D).</abstract></paper>