<paper id="1534885934"><title>Representing and using performance requirements during the development of information systems</title><year>1994</year><authors><author org="University of Toronto, Ontario,#R#                  Canada" id="720769234">Brian A. Nixon</author></authors><n_citation>20</n_citation><doc_type>Conference</doc_type><references><reference>89505884</reference><reference>163398301</reference><reference>175437267</reference><reference>1492626646</reference><reference>1516156619</reference><reference>1520039977</reference><reference>1554130893</reference><reference>1574899991</reference><reference>1592908444</reference><reference>1595291981</reference><reference>1601530196</reference><reference>1898015721</reference><reference>1902449089</reference><reference>1939785016</reference><reference>1975918984</reference><reference>1996057407</reference><reference>2017739343</reference><reference>2038754076</reference><reference>2060849841</reference><reference>2072443175</reference><reference>2079814255</reference><reference>2101694336</reference><reference>2120613146</reference><reference>2160645305</reference><reference>2175422287</reference><reference>2301605390</reference><reference>2346005902</reference><reference>2581741323</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/3-540-57818-8_51</doi><keywords><keyword weight="0.5705">Information system</keyword><keyword weight="0.60491">Functional requirement</keyword><keyword weight="0.46169">Computer science</keyword><keyword weight="0.48258">Workload</keyword><keyword weight="0.47575">Risk analysis (engineering)</keyword><keyword weight="0.54741">Data integrity</keyword><keyword weight="0.63493">Requirement</keyword><keyword weight="0.45814">Database</keyword><keyword weight="0.65773">Non-functional requirement</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We are concerned with dealing with performance requirements, such as “achieve good time performance for retrieving tax appeals,” during the development of information systems. We adapt a framework for non-functional requirements (global quality requirements) by treating (potentially conflicting or synergistic) performance requirements as goals. Our Performance Framework helps a developer to refine goals, select among competing implementation alternatives, justify implementation decisions, and evaluate the degree to which requirements are met. For manageability of development, we represent and organise knowledge about information systems and their design, implementation and performance. This paper further organises methods for dealing with performance goals, with some focus on implementation of long-term processes and integrity constraints. We illustrate the framework using some actual workload descriptions of a taxation appeals system, and describe a prototype development tool, currently under development.</abstract></paper>