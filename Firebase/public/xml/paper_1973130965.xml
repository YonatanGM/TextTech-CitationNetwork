<paper id="1973130965"><title>A very fast substring search algorithm</title><year>1990</year><authors><author org="East Stroudsburg University of Pennsylvania, East Stroudsburg, PA#TAB#" id="2679523602">Daniel M. Sunday</author></authors><n_citation>329</n_citation><doc_type>Journal</doc_type><references><reference>2054762052</reference><reference>2134826720</reference></references><venue id="103482838" type="J">Communications of The ACM</venue><doi>10.1145/79173.79184</doi><keywords><keyword weight="0.66378">Substring</keyword><keyword weight="0.66383">Ramer–Douglas–Peucker algorithm</keyword><keyword weight="0.67928">Search algorithm</keyword><keyword weight="0.66251">Commentz-Walter algorithm</keyword><keyword weight="0.40658">Computer science</keyword><keyword weight="0.45704">Algorithm</keyword><keyword weight="0.65497">FSA-Red Algorithm</keyword><keyword weight="0.65597">Boyer–Moore–Horspool algorithm</keyword><keyword weight="0.6586">Boyer–Moore string search algorithm</keyword><keyword weight="0.65394">Best-first search</keyword></keywords><publisher>ACM</publisher><abstract>This article describes a substring search algorithm that is faster than the Boyer-Moore algorithm. This algorithm does not depend on scanning the pattern string in any particular order. Three variations of the algorithm are given that use three different pattern scan orders. These include: (1) a “Quick Search” algorithm; (2) a “Maximal Shift” and (3) an “Optimal Mismatch” algorithm.</abstract></paper>