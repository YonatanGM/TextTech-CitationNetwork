<paper id="1648841277"><title>Computing Non-Ground Representations of Stable Models</title><year>1997</year><authors><author org="UniversitÃ¤t Giessen" id="420267153">Thomas Eiter</author><author org="Bucknell University" id="2155462634">James J. Lu</author><author org="University of Maryland" id="2261167843">V. S. Subrahmanian</author></authors><n_citation>21</n_citation><doc_type>Conference</doc_type><references><reference>56142176</reference><reference>166900864</reference><reference>180765362</reference><reference>1497936609</reference><reference>1499277620</reference><reference>1602567617</reference><reference>1672891595</reference><reference>1968513265</reference><reference>1977434144</reference><reference>1998093438</reference><reference>2003531456</reference><reference>2033074970</reference><reference>2038467301</reference><reference>2074154477</reference><reference>2076698873</reference><reference>2096975981</reference><reference>2107518496</reference><reference>2115128204</reference><reference>2132745831</reference><reference>2138706506</reference></references><venue id="1201110412" type="C">International Conference on Logic Programming</venue><doi>10.1007/3-540-63255-7_14</doi><keywords><keyword weight="0.45565">Discrete mathematics</keyword><keyword weight="0.48635">Program transformation</keyword><keyword weight="0.0">Algorithm complexity</keyword><keyword weight="0.42827">Computer science</keyword><keyword weight="0.45054">Algorithm</keyword><keyword weight="0.41434">Atom</keyword><keyword weight="0.45332">Theoretical computer science</keyword><keyword weight="0.4413">Predicate (grammar)</keyword><keyword weight="0.43851">Semantics</keyword><keyword weight="0.42254">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Turi [20] introduced the important notion of a constrained atom: an atom with associated equality and disequality constraints on its arguments. A set of constrained atoms is a constrained interpretation. We show how non-ground representations of both the stable model and the well-founded semantics may be obtained through Turiu0027s approach. As a practical consequence, the well-founded model (or the set of stable models) may be partially pre-computed at compile-time, resulting in the association of each predicate symbol in the program to a constrained atom. Algorithms to create such models are presented. Query processing reduces to checking whether each atom in the query is true in a stable model (resp. well-founded model). This amounts to showing the atom is an instance of one of some constrained atom whose associated constraint is solvable. Various related complexity results are explored, and the impacts of these results are discussed from the point of view of implementing systems that incorporate the stable and well-founded semantics.</abstract></paper>