<paper id="1822595813"><title>An Optimal Worst Case Algorithm for Reporting Intersections of Rectangles</title><year>1980</year><authors><author org="Departments of Computer Science and Mathematics, Carnegie-Mellon University#TAB#" id="318489335">Bentley</author><author org="" id="2704561962">Wood</author></authors><n_citation>206</n_citation><doc_type>Journal</doc_type><references><reference>1666015432</reference><reference>1874694348</reference><reference>2032895458</reference><reference>2060733691</reference><reference>2068376033</reference><reference>2077449861</reference><reference>2153128282</reference></references><venue id="157670870" type="J">IEEE Transactions on Computers</venue><doi>10.1109/TC.1980.1675628</doi><keywords><keyword weight="0.45804">Computer science</keyword><keyword weight="0.56148">Computational geometry</keyword><keyword weight="0.55985">Range searching</keyword><keyword weight="0.47134">Algorithm</keyword><keyword weight="0.47423">Theoretical computer science</keyword><keyword weight="0.52272">Design rule checking</keyword><keyword weight="0.4142">Electronic circuit</keyword><keyword weight="0.49842">Very-large-scale integration</keyword></keywords><publisher>IEEE</publisher><abstract>In this paper we investigate the problem of reporting all intersecting pairs in a set of n rectilinearly oriented rectangles in the plane. This problem arises in applications such as design rule checking of very large-scale integrated (VLSI) circuits and architectural databases. We describe an algorithm that solves this problem in worst case time proportional to n lg n + k, where k is the number of interesecting pairs found. This algorithm is optimal to within a constant factor. As an intermediate step of this algorithm, we solve a problem related to the range searching problem that arises in database applications. Although the algorithms that we describe are primarily theoretical devices (being very difficult to code), they suggest other algorithms that are quite practical.</abstract></paper>