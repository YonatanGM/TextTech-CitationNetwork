<paper id="1983647975"><title>Structural ambiguity and lexical relations</title><year>1990</year><authors><author org="" id="2632400467">Donald Hindle</author><author org="" id="2114305835">Mats Rooth</author></authors><n_citation>55</n_citation><doc_type>Conference</doc_type><references><reference>1981724541</reference><reference>2099247782</reference><reference>2162288523</reference></references><venue id="2532822031" type="C">Human Language Technology</venue><doi>10.3115/116580.116664</doi><keywords><keyword weight="0.41608">Computer science</keyword><keyword weight="0.55266">Grammar</keyword><keyword weight="0.55201">Natural language</keyword><keyword weight="0.45745">Natural language processing</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.69302">Syntactic ambiguity</keyword><keyword weight="0.59356">Syntax</keyword><keyword weight="0.46132">Linguistics</keyword><keyword weight="0.67654">Ambiguity</keyword></keywords><publisher>Association for Computational Linguistics</publisher><abstract>From a certain (admittedly narrow) perspective, one of the annoying features of natural language is the ubiquitous syntactic ambiguity. For a computational model intended to assign syntactic descriptions to natural language text, this seem like a design defect. In general, when context and lexical content are taken into account, such syntactic ambiguity can be resolved: sentences used in context show, for the most part, little ambiguity. But the grammar provides many alternative analyses, and gives little guidance about resolving the ambiguity.</abstract></paper>