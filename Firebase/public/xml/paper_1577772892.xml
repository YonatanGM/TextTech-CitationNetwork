<paper id="1577772892"><title>Ground Temporal Logic: A Logic for Hardware Verification</title><year>1994</year><authors><author org="SRI International," id="2421201338">David Cyrluk</author><author org="Suny-Albany" id="1207241664">Paliath Narendran</author></authors><n_citation>27</n_citation><doc_type>Conference</doc_type><references><reference>23915378</reference><reference>1534850143</reference><reference>1546387297</reference><reference>1741528175</reference><reference>2015688007</reference><reference>2080267935</reference><reference>2095572512</reference><reference>2102447986</reference><reference>2113251992</reference><reference>2114092850</reference><reference>2124192263</reference><reference>2144928994</reference><reference>2150119568</reference><reference>2164778826</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-58179-0_59</doi><keywords><keyword weight="0.64836">Logic synthesis</keyword><keyword weight="0.65427">Sequential logic</keyword><keyword weight="0.68213">Interval temporal logic</keyword><keyword weight="0.45629">Computer science</keyword><keyword weight="0.66824">Logic optimization</keyword><keyword weight="0.45948">Theoretical computer science</keyword><keyword weight="0.66059">Register-transfer level</keyword><keyword weight="0.67708">Logic family</keyword><keyword weight="0.67255">Temporal logic</keyword><keyword weight="0.66793">High-level verification</keyword><keyword weight="0.45075">Computer hardware</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We present a new temporal logic, GTL, appropriate for specifying properties of hardware at the register transfer level. We argue that this logic represents an improvement over model checking for some natural hardware verification problems. We show that the validity problem for this logic is Ï€ 1 1 complete. We then identify a fragment of the logic that is decidable. We show that in this fragment we are still able to encode many interesting problems, including the correctness of pipelined microprocessors.</abstract></paper>