<paper id="1605580256"><title>Implementing Reactive Programs on Circuits: A Hardware Implementation of LUSTRE</title><year>1991</year><authors><author org="(dec.)" id="118905771">Frédéric Rocheteau</author><author org="IMAG/LGI" id="2257050880">Nicolas Halbwachs</author></authors><n_citation>26</n_citation><doc_type>Conference</doc_type><references><reference>1517761527</reference><reference>1663179985</reference><reference>2081938726</reference></references><venue id="2758088042" type="C">Real-Time: Theory in Practice, REX Workshop</venue><doi>10.1007/BFb0031993</doi><keywords><keyword weight="0.46642">Computer architecture</keyword><keyword weight="0.45253">Computer science</keyword><keyword weight="0.69915">Lustre (programming language)</keyword><keyword weight="0.0">Configurable hardware</keyword><keyword weight="0.55155">Declarative programming</keyword><keyword weight="0.4969">Lustre (mineralogy)</keyword><keyword weight="0.45609">Computer hardware</keyword><keyword weight="0.39318">Electronic circuit</keyword><keyword weight="0.47961">Reactive system</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Synchronous languages constitute effective tools for programming real-time systems as far as they can be efficiently implemented. Implementing them by hardware is of course a good way for increasing their performances. Moreover, configurable hardware is now available which makes practical such an implementation. This paper describes an implementation of the synchronous declarative language Lustre on a “programmable active memory”.</abstract></paper>