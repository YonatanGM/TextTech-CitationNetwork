<paper id="1517157359"><title>Minimal Model Generation</title><year>1990</year><authors><author org="IMAG/LGI (U.A. CNRS 398)" id="2283651526">Ahmed Bouajjani</author><author org="IMAG/LGI (U.A. CNRS 398)" id="2514697433">Jean-Claude Fernandez</author><author org="IMAG/LGI (U.A. CNRS 398)" id="2257050880">Nicolas Halbwachs</author></authors><n_citation>119</n_citation><doc_type>Conference</doc_type><references><reference>1491178396</reference><reference>1547265787</reference><reference>1663179985</reference><reference>1973642705</reference><reference>1992006255</reference><reference>2021473546</reference><reference>2054554282</reference><reference>2068361557</reference><reference>2080267935</reference><reference>2081938726</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/BFb0023733</doi><keywords><keyword weight="0.54642">Transition system</keyword><keyword weight="0.45228">Computer science</keyword><keyword weight="0.52747">Minimal model</keyword><keyword weight="0.47019">Theoretical computer science</keyword><keyword weight="0.64705">Bisimulation</keyword><keyword weight="0.56978">Symbolic execution</keyword><keyword weight="0.0">State graph</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper adresses the problem of generating a minimal state graph from a program, without building first the whole state graph. The minimality is considered here with respect to bisimulation. A generation algorithm is presented and illustrated.</abstract></paper>