<paper id="1506151672"><title>Slicing Programs with Arbitrary Control-flow</title><year>1993</year><authors><author org="University of Wisconsin" id="2121300700">Thomas Ball</author><author org="University of Wisconsin" id="1974504312">Susan Horwitz</author></authors><n_citation>113</n_citation><doc_type /><references><reference>1491178396</reference><reference>1527392356</reference><reference>1578662211</reference><reference>1973828066</reference><reference>1979277605</reference><reference>1997493115</reference><reference>2012131382</reference><reference>2044553249</reference><reference>2064625489</reference><reference>2083828778</reference><reference>2144344516</reference><reference>2147088720</reference><reference>2293624369</reference></references><venue id="" type="">AADEBUG '93 Proceedings of the First International Workshop on Automated and Algorithmic Debugging</venue><doi>10.1007/BFb0019410</doi><keywords><keyword weight="0.85365">Program slicing</keyword><keyword weight="0.69753">Program transformation</keyword><keyword weight="0.46908">Programming language</keyword><keyword weight="0.0">Program behavior</keyword><keyword weight="0.45468">Computer science</keyword><keyword weight="0.50417">Slicing</keyword><keyword weight="0.54819">Control flow</keyword><keyword weight="0.0">Program maintenance</keyword><keyword weight="0.66377">Algorithmic program debugging</keyword><keyword weight="0.54205">Debugging</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Program slicing is a program transformation that is useful in program debugging, program maintenance, and other applications that involve understanding program behavior. Given a program point p and a set of variables V, the goal of slicing is to create a projection of the program (by eliminating some statements), such that the projection and the original program compute the same values for all variables in V at point p.</abstract></paper>