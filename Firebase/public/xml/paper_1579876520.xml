<paper id="1579876520"><title>FFT-Hash-II is not yet Collision-free</title><year>1992</year><authors><author org="LIENS" id="22805272">Serge Vaudenay</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>1569088779</reference><reference>1892979794</reference></references><venue id="1153524033" type="C">International Cryptology Conference</venue><doi>10.1007/3-540-48071-4_43</doi><keywords><keyword weight="0.63071">SHA-2</keyword><keyword weight="0.62476">Double hashing</keyword><keyword weight="0.41878">Computer science</keyword><keyword weight="0.64903">Collision resistance</keyword><keyword weight="0.60069">Cryptographic hash function</keyword><keyword weight="0.60414">Rolling hash</keyword><keyword weight="0.45053">Algorithm</keyword><keyword weight="0.43101">Theoretical computer science</keyword><keyword weight="0.63512">Hash function</keyword><keyword weight="0.63126">SWIFFT</keyword><keyword weight="0.6205">MDC-2</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we show that the FFT-Hash function proposed by Schnorr [2] is not collision free. Finding a collision requires about 224 computation of the basic function of FFT. This can be done in few hours on a SUN4-workstation. In fact, it is at most as strong as a one-way hash function which returns a 48 bits length value. Thus, we can invert the proposed FFT hash-function with 248 basic computations. Some simple improvements of the FFT hash function are also proposed to try to get rid of the weaknesses of FFT.</abstract></paper>