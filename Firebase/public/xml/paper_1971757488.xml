<paper id="1971757488"><title>A new perspective on rule support for object-oriented databases</title><year>1993</year><authors><author org="Database Systems Research and Development Center, Computer and Information Sciences Department, University of Florida, Gainesville, FL" id="2004725512">E. Anwar</author><author org="Database Systems Research and Development Center, Computer and Information Sciences Department, University of Florida, Gainesville, FL" id="429266984">L. Maugis</author><author org="Database Systems Research and Development Center, Computer and Information Sciences Department, University of Florida, Gainesville, FL" id="2207808857">S. Chakravarthy</author></authors><n_citation>89</n_citation><doc_type>Conference</doc_type><references><reference>47627053</reference><reference>1496689342</reference><reference>1542193057</reference><reference>1574899991</reference><reference>1597227583</reference><reference>1991247646</reference><reference>2056947248</reference><reference>2116133297</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/170035.170059</doi><keywords><keyword weight="0.64527">Object-oriented design</keyword><keyword weight="0.45774">Data mining</keyword><keyword weight="0.46331">Computer science</keyword><keyword weight="0.40564">Event generator</keyword><keyword weight="0.4701">First class</keyword><keyword weight="0.48347">Semantics</keyword><keyword weight="0.45041">Database</keyword><keyword weight="0.0">Object oriented databases</keyword></keywords><publisher>ACM</publisher><abstract>This paper proposes a new approach for supporting reactive capability in an object-oriented database. We introduce an event interface , which extends the conventional object semantics to include the role of an event generator. This interface provides a basis for the specification of events spanning sets of objects, possibly from different classes, and detection of primitive and complex events. This approach clearly separated event detection from rules. New rules can be added and use existing objects, enabling objects to react to their own changes as well as to the changes of other objects. We use a runtime subscription mechanism, between rules and objects to selectively monitor particular objects dynamically. This elegantly supports class level as well as instance level rules. Both events and rules are treated as first class objects.</abstract></paper>