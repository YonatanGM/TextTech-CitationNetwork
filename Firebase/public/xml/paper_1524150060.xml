<paper id="1524150060"><title>Applying Transition Rules to Bitemporal Deductive Databases for Integrity Constraint Checking</title><year>1996</year><authors><author org="universitat Politecnica de Catalunya" id="2098399414">Carme Mart√≠n</author><author org="universitat Politecnica de Catalunya" id="1994184213">Jaume Sistac</author></authors><n_citation>7</n_citation><doc_type>Conference</doc_type><references><reference>36657789</reference><reference>127959065</reference><reference>188269519</reference><reference>194302332</reference><reference>1562016314</reference><reference>1562593161</reference><reference>1587758416</reference><reference>1589223644</reference><reference>1786728869</reference><reference>2000616942</reference><reference>2025315843</reference><reference>2044019389</reference><reference>2079814255</reference><reference>2103600994</reference><reference>2104145253</reference><reference>2111353076</reference><reference>2116969580</reference><reference>2158732241</reference><reference>2160284836</reference><reference>2294081347</reference><reference>2899987233</reference></references><venue id="1180646617" type="C">Logic in Databases</venue><doi>10.1007/BFb0031738</doi><keywords><keyword weight="0.45332">Data mining</keyword><keyword weight="0.56875">Valid time</keyword><keyword weight="0.45977">Programming language</keyword><keyword weight="0.70859">Deductive database</keyword><keyword weight="0.56123">Transaction time</keyword><keyword weight="0.46102">Computer science</keyword><keyword weight="0.46037">Theoretical computer science</keyword><keyword weight="0.65039">Consistency (database systems)</keyword><keyword weight="0.57904">Data integrity</keyword><keyword weight="0.50171">Selection rule</keyword><keyword weight="0.44512">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A bitemporal deductive database is a deductive database that supports valid and transaction time. A set of facts to be inserted and/or deleted in a bitemporal deductive database can be done in a past, present or future valid time. This circumstance causes that the maintenance of database consistency becomes more hard. In this paper, we present a new approach to reduce the difficulty of this problem, based on applying transition and event rules, which explicitly define the insertions and deletions given by a database update. Transition rules range over all the possible cases in which an update could violate some integrity contraint. Although, we have a large amount of transition rules, for each one we argue its utility or we eliminate it. We augment a database with this set of transition and event rules and then standard SLDNF resolution can be used to check satisfaction of integrity constraints.</abstract></paper>