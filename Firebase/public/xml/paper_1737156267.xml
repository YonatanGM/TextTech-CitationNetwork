<paper id="1737156267"><title>On the Synthesis of an Asynchronous Reactive Module</title><year>1989</year><authors><author org="The Weizmann Institute of Science" id="2171343426">Amir Pnueli</author><author org="The Weizmann Institute of Science" id="2179236157">Roni Rosner</author></authors><n_citation>240</n_citation><doc_type>Conference</doc_type><references><reference>80787065</reference><reference>1491037212</reference><reference>1494174065</reference><reference>1571337480</reference><reference>1755189310</reference><reference>1959374411</reference><reference>2003773532</reference><reference>2004306067</reference><reference>2012436850</reference><reference>2016206563</reference><reference>2031592188</reference><reference>2033071128</reference><reference>2040127143</reference><reference>2048355938</reference><reference>2061841985</reference><reference>2069709605</reference><reference>2072887965</reference><reference>2117189826</reference><reference>2137233516</reference><reference>2163151383</reference><reference>2535076018</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0035790</doi><keywords><keyword weight="0.44293">Asynchronous communication</keyword><keyword weight="0.46179">Discrete mathematics</keyword><keyword weight="0.45728">Combinatorics</keyword><keyword weight="0.46881">Exponential function</keyword><keyword weight="0.41727">Existential quantification</keyword><keyword weight="0.48022">Decidability</keyword><keyword weight="0.45132">Linear temporal logic</keyword><keyword weight="0.43655">Canonical model</keyword><keyword weight="0.45471">Tree automaton</keyword><keyword weight="0.42982">Temporal logic</keyword><keyword weight="0.41209">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We consider the synthesis of a reactive asynchronous module which communicates with its environment via the shared input variable x and the shared output variable y, assuming that the module is specified by the linear temporal formula ϕ(x,y). We derive from ϕ(x,y) another linear formula χ(r,w,x,y), with the additional scheduling variables r,w, and show that there exists a program satisfying ϕ iff the branching time formula (∀r,w,x)(∃y)Aχ(r,w,x,y) is valid over all tree models. For the restricted case that all variables range over finite domains, the validity problem is decidable, and we present an algorithm, of doubly exponential time and space complexity, for constructing a program that implements the specification whenever it is implementable. In addition, we provide some matching lower bounds.</abstract></paper>