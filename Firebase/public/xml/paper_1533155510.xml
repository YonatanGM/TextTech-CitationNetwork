<paper id="1533155510"><title>Eliminating Negation from Normal Logic Programs</title><year>1990</year><authors><author org="(University of Melbourne)" id="350683885">Kanchana Kanchanasut</author><author org="(University of Melbourne)" id="2079669046">Peter J. Stuckey</author></authors><n_citation>8</n_citation><doc_type /><references><reference>39560635</reference><reference>105798218</reference><reference>127451913</reference><reference>134901130</reference><reference>143998283</reference><reference>1494051470</reference><reference>1543461272</reference><reference>1560084034</reference><reference>1672891595</reference><reference>1766332311</reference><reference>1984715534</reference><reference>1985819576</reference><reference>1987660355</reference><reference>2029753048</reference><reference>2082994045</reference><reference>2108911687</reference><reference>2111353076</reference></references><venue id="" type="">Proceedings of the Second International Conference on Algebraic and Logic Programming</venue><doi>10.1007/3-540-53162-9_41</doi><keywords><keyword weight="0.43244">Discrete mathematics</keyword><keyword weight="0.53536">Autoepistemic logic</keyword><keyword weight="0.50285">Negation</keyword><keyword weight="0.52896">Partial evaluation</keyword><keyword weight="0.43762">Arithmetic</keyword><keyword weight="0.53781">Negation as failure</keyword><keyword weight="0.58596">Stable model semantics</keyword><keyword weight="0.56141">Predicate functor logic</keyword><keyword weight="0.44193">Predicate (grammar)</keyword><keyword weight="0.48357">Local variable</keyword><keyword weight="0.40465">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we propose a bottom-up partial evaluation of normal programs with a top-down expansion of negated atoms to obtain equivalent logic programs. A program P is transformed to Pω by a bottom-up computation on the positive component of P while the negative counterpart is left untouched. During this process, we collect all substitutions describing a partial answer set to all the positive atoms in the bodies of P. The declarative semantics of P is given by the completion of Pω. The completed predicate definitions in Pω, if they do not contain local variables, can be used as a basis for expanding each negated atom in the bodies of Pω. We show that for a class of programs where every negative subgoal can be expanded, the resultant program Pu0027 is a definite logic program with equality and disequality constraints. If the program falls outside this class, the resultant program may be executed using Chanu0027s SLD - CNF resolution.</abstract></paper>