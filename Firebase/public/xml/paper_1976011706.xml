<paper id="1976011706"><title>Constraint relaxation may be perfect</title><year>1991</year><authors><author org="Univ. di Pisa, Pisa, Italy#TAB#" id="2925215115">Ugo Montanari</author><author org="Univ. di Pisa, Pisa, Italy#TAB#" id="2252207586">Francesca Rossi</author></authors><n_citation>85</n_citation><doc_type>Journal</doc_type><references><reference>53608528</reference><reference>1530968327</reference><reference>1535615528</reference><reference>1598694679</reference><reference>1659968714</reference><reference>2002478775</reference><reference>2016113382</reference><reference>2061734130</reference><reference>2069683773</reference><reference>2072755230</reference><reference>2119456262</reference><reference>2135432705</reference></references><venue id="196139623" type="J">Artificial Intelligence</venue><doi>10.1016/0004-3702(91)90059-S</doi><keywords><keyword weight="0.43357">Exact solutions in general relativity</keyword><keyword weight="0.60422">Constraint satisfaction</keyword><keyword weight="0.47267">Mathematical optimization</keyword><keyword weight="0.48171">Knowledge representation and reasoning</keyword><keyword weight="0.47335">Algorithm</keyword><keyword weight="0.0">Constraint relaxation</keyword><keyword weight="0.5545">Time complexity</keyword><keyword weight="0.5823">Backtracking</keyword><keyword weight="0.42175">Mathematics</keyword></keywords><publisher>Elsevier</publisher><abstract>Abstract Networks of constraints are a simple knowledge representation method, useful for describing those problems whose solution is required to satisfy several simultaneous constraints. The problem of solving a network of constraints with finite domains is NP-complete. The standard solution technique for such networks of constraints is the backtrack search, but many relaxation algorithms, to be applied before backtracking, have been developed: they transform a network in an equivalent but more explicit one. The idea is to make the backtrack search have a better average time complexity. In fact, if the network elaborated by the backtrack algorithm is more explicit, the algorithm backtracks less. In this paper we describe relaxation algorithms as sequences of applications of relaxation rules. Moreover, we define perfect relaxation algorithms as relaxation algorithms which not only return a more explicit network, but also exactly solve the given network of constraints by applying every relaxation rule only once. Finally, we characterize a family of classes of networks on which certain perfect relaxation algorithms are very efficient: the exact solution of each network in a class is found in linear time.</abstract></paper>