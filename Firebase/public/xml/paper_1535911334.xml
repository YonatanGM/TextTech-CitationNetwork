<paper id="1535911334"><title>Efficient Consistency Proofs for Generalized Queries on a Committed Database</title><year>2004</year><authors><author org="UCLA" id="1482108584">Rafail Ostrovsky</author><author org="University of Toronto,#TAB#" id="2015702761">Charles Rackoff</author><author org="MIT Computer Science &amp; AI Lab#TAB#" id="2132461468">Adam D. Smith</author></authors><n_citation>58</n_citation><doc_type>Conference</doc_type><references><reference>1488126327</reference><reference>1514617528</reference><reference>1568519766</reference><reference>1600255172</reference><reference>1777068179</reference><reference>1885156594</reference><reference>1913384000</reference><reference>1970808997</reference><reference>1972792640</reference><reference>2008518944</reference><reference>2067596507</reference><reference>2096571200</reference><reference>2120154759</reference><reference>2126250434</reference><reference>2128703518</reference><reference>2160878415</reference><reference>2166618966</reference><reference>2169731081</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/978-3-540-27836-8_87</doi><keywords><keyword weight="0.45579">Discrete mathematics</keyword><keyword weight="0.50634">Data structure</keyword><keyword weight="0.61247">Range query (database)</keyword><keyword weight="0.53911">Range tree</keyword><keyword weight="0.44109">Computer science</keyword><keyword weight="0.57423">Range query (data structures)</keyword><keyword weight="0.59648">View</keyword><keyword weight="0.59174">Online aggregation</keyword><keyword weight="0.50272">Time complexity</keyword><keyword weight="0.50445">String (computer science)</keyword><keyword weight="0.41994">Database</keyword><keyword weight="0.41821">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A consistent query protocol (cqp) allows a database owner to publish a very short string c which commits her and everybody else to a particular database D, so that any copy of the database can later be used to answer queries and give short proofs that the answers are consistent with the commitment c. Here commits means that there is at most one database D that anybody can find (in polynomial time) which is consistent with c. (Unlike in some previous work, this strong guarantee holds even for owners who try to cheat while creating c.) Efficient cqps for membership and one-dimensional range queries are known [4,11,16]: given a query pair a,b ∈ ℝ, the server answers with all the keys in the database which lie in the interval [a,b] and a proof that the answer is correct. This paper explores cqps for more general types of databases. We put forward a general technique for constructing cqps for any type of query, assuming the existence of a data structure/algorithm with certain inherent robustness properties that we define (called a data robust algorithm). We illustrate our technique by constructing an efficient protocol for orthogonal range queries, where the database keys are points in ℝ d and a query asks for all keys in a rectangle [a 1,b 1]×...×[a d ,b d ]. Our data-robust algorithm is within a O(log N) factor of the best known standard data structure (a range tree, due to Bentley [2]).</abstract></paper>