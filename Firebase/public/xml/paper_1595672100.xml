<paper id="1595672100"><title>Two general methods for dynamizing decomposable searching problems</title><year>1981</year><authors><author org="Department of Computer Science, University of Utrecht, Utrecht, the Netherlands" id="2133646818">M. H. Overmars</author><author org="Department of Computer Science, University of Utrecht, Utrecht, the Netherlands" id="2097039223">J. van Leeuwen</author></authors><n_citation>30</n_citation><doc_type>Journal</doc_type><references><reference>2008196645</reference><reference>2060978628</reference><reference>2132445073</reference><reference>2151464934</reference><reference>2165558283</reference></references><venue id="35593046" type="J">Computing</venue><doi>10.1007/BF02241781</doi><keywords><keyword weight="0.44936">Discrete mathematics</keyword><keyword weight="0.43825">Mathematical optimization</keyword><keyword weight="0.40296">Mathematical analysis</keyword><keyword weight="0.40604">Exploit</keyword><keyword weight="0.43047">First class</keyword><keyword weight="0.45372">Maximal element</keyword><keyword weight="0.0">Merge (version control)</keyword><keyword weight="0.0">Dynamic maintenance</keyword><keyword weight="0.39859">Mathematics</keyword><keyword weight="0.4716">Quadtree</keyword></keywords><publisher>Unknown Publisher</publisher><abstract>We define two classes of decomposable searching problems and consider ways of efficiently dynamizing them. For the first class, DD, we show that both insertions and deletions can be processed efficiently. For the second class, MD, we exploit a merge technique to obtain better insertion times. We also give a number of examples of problems to which the methods apply, including the dynamic maintenance of quadtrees and of the common intersection of finitely many halfspaces in the plane.</abstract></paper>