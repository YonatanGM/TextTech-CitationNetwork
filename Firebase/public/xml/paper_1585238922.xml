<paper id="1585238922"><title>Exception Handling in Workflow Systems</title><year>2000</year><authors><author org="Large Scale Distributed Information System Lab, 415 GSRC, Computer Science Department, University of Georgia Athens, GA 30602, USA. luo@ainge.cs.uga.edu http://Isdis.cs.uga.e ...#TAB#" id="2942990745">Zongwei Luo</author><author org="Large Scale Distributed Information System Lab, 415 GSRC, Computer Science Department, University of Georgia Athens, GA 30602, USA. amit@ainge.cs.uga.edu http://Isdis.cs.uga. ...#TAB#" id="2295682018">Amit Sheth</author><author org="Large Scale Distributed Information System Lab, 415 GSRC, Computer Science Department, University of Georgia Athens, GA 30602, USA. kochut@ainge.cs.uga.edu http://Isdis.cs.ug ...#TAB#" id="305833888">Krys Kochut</author><author org="Large Scale Distributed Information System Lab, 415 GSRC, Computer Science Department, University of Georgia Athens, GA 30602, USA. jam@ainge.cs.uga.edu http://Isdis.cs.uga.e ...#TAB#" id="2109843474">John Miller</author></authors><n_citation>142</n_citation><doc_type>Journal</doc_type><references><reference>39280257</reference><reference>130203622</reference><reference>1508018541</reference><reference>1515932031</reference><reference>1529543011</reference><reference>1538622171</reference><reference>1577724665</reference><reference>1587014832</reference><reference>1600899372</reference><reference>1604402885</reference><reference>1753204835</reference><reference>2013404226</reference><reference>2015234709</reference><reference>2031230851</reference><reference>2035244158</reference><reference>2057000314</reference><reference>2065961934</reference><reference>2067347904</reference><reference>2126385963</reference><reference>2142386413</reference><reference>2144023497</reference><reference>2159653605</reference><reference>2161062963</reference></references><venue id="74726891" type="J">Applied Intelligence</venue><doi>10.1023/A:1008388412284</doi><keywords><keyword weight="0.43679">Ontology</keyword><keyword weight="0.64817">Workflow technology</keyword><keyword weight="0.43563">Computer science</keyword><keyword weight="0.42482">Reuse</keyword><keyword weight="0.57455">Exception handling</keyword><keyword weight="0.50493">Case-based reasoning</keyword><keyword weight="0.65033">Workflow management system</keyword><keyword weight="0.57205">Workflow</keyword><keyword weight="0.48597">Defeasible estate</keyword><keyword weight="0.43354">Database</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>In this paper, defeasible workflow is proposed as a framework to support exception handling for workflow management. By using the “justified” ECA rules to capture more contexts in workflow modeling, defeasible workflow uses context dependent reasoning to enhance the exception handling capability of workflow management systems. In particular, this limits possible alternative exception handler candidates in dealing with exceptional situations. Furthermore, a case-based reasoning (CBR) mechanism with integrated human involvement is used to improve the exception handling capabilities. This involves collecting cases to capture experiences in handling exceptions, retrieving similar prior exception handling cases, and reusing the exception handling experiences captured in those cases in new situations.</abstract></paper>