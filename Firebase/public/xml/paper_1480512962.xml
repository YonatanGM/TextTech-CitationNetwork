<paper id="1480512962"><title>Algebraic semantics for compensable transactions</title><year>2007</year><authors><author org="Software engineering institute, East China Normal University, Shanghai, China" id="2424269277">Jing Li</author><author org="Software engineering institute, East China Normal University, Shanghai, China" id="2147595872">Huibiao Zhu</author><author org="Software engineering institute, East China Normal University, Shanghai, China" id="2303603470">Jifeng He</author></authors><n_citation>9</n_citation><doc_type>Conference</doc_type><references><reference>1497527018</reference><reference>1555143792</reference><reference>1556237564</reference><reference>1579083398</reference><reference>1583475908</reference><reference>1589756157</reference><reference>1608333380</reference><reference>1974168649</reference><reference>2053835825</reference><reference>2089621397</reference><reference>2112428532</reference><reference>2118229393</reference><reference>2159181605</reference><reference>2167399349</reference><reference>2170151971</reference><reference>2460103410</reference></references><venue id="1121242901" type="C">International Colloquium on Theoretical Aspects of Computing</venue><doi>10.1007/978-3-540-75292-9_21</doi><keywords><keyword weight="0.55667">Atomicity</keyword><keyword weight="0.67024">Operational semantics</keyword><keyword weight="0.47629">Programming language</keyword><keyword weight="0.47044">Computer science</keyword><keyword weight="0.5326">Exception handling</keyword><keyword weight="0.46782">Theoretical computer science</keyword><keyword weight="0.48551">Operator (computer programming)</keyword><keyword weight="0.43445">Transactional leadership</keyword><keyword weight="0.57984">Algebraic semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents the algebraic semantics of a novel transactional language t-calculus. This language focuses on modeling long running transactions in terms of compensable transactions, showing how the compensations can be orchestrated to ensure atomicity. The typical operators of sequential and parallel compositions are redefined so that the corresponding compensations will be activated in a suitable order whenever some failure occurs in later stage. In addition, we investigate more transactional operators, such as speculative choice, exception handling, alternative forwarding and programmable compensation. The wise use of these constructs is rather helpful to set up a flexible and effective business process.We present a clear algebraic semantics for t-calculus and derive its operational semantics mechanically based on a given derivation strategy. This work provides a foundation for optimization and implementation of this language.</abstract></paper>