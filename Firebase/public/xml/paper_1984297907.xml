<paper id="1984297907"><title>Symbolic Semantics and Program Reduction</title><year>1985</year><authors><author org="Dipartimento di Informatica, UniversitÃ  di PiSa#TAB#" id="2973355662">V. Ambriola</author><author org="Univ. di Pisa, Pisa, Italy#TAB#" id="2974166705">F. Giannotti</author><author org="Univ. di Pisa, Pisa, Italy#TAB#" id="7769909">D. Pedreschi</author><author org="Univ. di Pisa, Pisa, Italy#TAB#" id="2241902680">F. Turini</author></authors><n_citation>10</n_citation><doc_type>Journal</doc_type><references><reference>1574934012</reference><reference>1988651604</reference><reference>2006578353</reference><reference>2038862832</reference><reference>2041643207</reference><reference>2067693540</reference><reference>2070485163</reference><reference>2070620189</reference><reference>2077271799</reference><reference>2101512909</reference></references><venue id="8351582" type="J">IEEE Transactions on Software Engineering</venue><doi>10.1109/TSE.1985.232527</doi><keywords><keyword weight="0.57358">Abstract data type</keyword><keyword weight="0.46893">Set theory</keyword><keyword weight="0.47667">Programming language</keyword><keyword weight="0.5895">Program transformation</keyword><keyword weight="0.54735">Functional programming</keyword><keyword weight="0.46077">Computer science</keyword><keyword weight="0.4683">Theoretical computer science</keyword><keyword weight="0.74331">Symbolic data analysis</keyword><keyword weight="0.75361">Symbolic execution</keyword><keyword weight="0.52027">Semantics</keyword><keyword weight="0.72042">Symbolic trajectory evaluation</keyword></keywords><publisher>IEEE</publisher><abstract>A class of transformations of functional programs based on symbolic execution and simplification of conditionals is presented. The operational symbolic semantics of a family of functional languages is defined exploiting a set-theoretic notion of symbolic constants. An effective transformation able to simplify a functional program via removal of conditionals is discussed. Finally, it is shown that a structural approach, based on abstract data type specifications, provides a suitable representation for symbolic constants.</abstract></paper>