<paper id="1580747224"><title>Rateless Codes and Big Downloads</title><year>2003</year><authors><author org="New-York University &gt;  &gt;  &gt;  &gt;" id="2072533946">Petar Maymounkov</author><author org="New-York University &gt;  &gt;  &gt;  &gt;" id="292459508">David Mazières</author></authors><n_citation>128</n_citation><doc_type>Conference</doc_type><references><reference>1972699782</reference><reference>2029268759</reference><reference>2029712200</reference><reference>2043465005</reference><reference>2131566399</reference><reference>2142423295</reference><reference>2296125569</reference></references><venue id="1148841353" type="C">International Workshop on Peer-to-Peer Systems</venue><doi>10.1007/978-3-540-45172-3_23</doi><keywords><keyword weight="0.65385">Online codes</keyword><keyword weight="0.4445">Data transmission</keyword><keyword weight="0.45096">Computer science</keyword><keyword weight="0.5446">Fountain code</keyword><keyword weight="0.48514">Upload</keyword><keyword weight="0.4582">Computer network</keyword><keyword weight="0.40075">Download</keyword><keyword weight="0.49342">Linear code</keyword><keyword weight="0.48617">Time complexity</keyword><keyword weight="0.54164">Erasure code</keyword><keyword weight="0.44946">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a novel algorithm for downloading big files from multiple sources in peer-to-peer networks. The algorithm is simple, but offers several compelling properties. It ensures low hand-shaking overhead between peers that download files (or parts of files) from each other. It is computationally efficient, with cost linear in the amount of data transfered. Most importantly, when nodes leave the network in the middle of uploads, the algorithm minimizes the duplicate information shared by nodes with truncated downloads. Thus, any two peers with partial knowledge of a given file can almost always fully benefit from each other’s knowledge. Our algorithm is made possible by the recent introduction of linear-time, rateless erasure codes.</abstract></paper>