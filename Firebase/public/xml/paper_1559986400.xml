<paper id="1559986400"><title>A temporal calculus of communicating systems</title><year>1990</year><authors><author org="University of Edinburgh," id="2029324877">Faron Moller</author><author org="University of Edinburgh," id="2118607467">Chris M. N. Tofts</author></authors><n_citation>345</n_citation><doc_type>Conference</doc_type><references><reference>1503973138</reference><reference>1547562281</reference><reference>2125110532</reference><reference>2137865376</reference><reference>2293557922</reference><reference>2570818581</reference></references><venue id="1145706541" type="C">International Conference on Concurrency Theory</venue><doi>10.1007/BFb0039073</doi><keywords><keyword weight="0.41617">Discrete mathematics</keyword><keyword weight="0.47749">Hennessyâ€“Milner logic</keyword><keyword weight="0.45239">Computer science</keyword><keyword weight="0.56826">Natural deduction</keyword><keyword weight="0.58707">Proof calculus</keyword><keyword weight="0.64496">Communicating sequential processes</keyword><keyword weight="0.65731">Calculus of communicating systems</keyword><keyword weight="0.56425">Temporal Process Language</keyword><keyword weight="0.45983">Theoretical computer science</keyword><keyword weight="0.4804">Operator (computer programming)</keyword><keyword weight="0.66361">Process calculus</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we introduce a calculus of communicating systems which allows for the expression and analysis of timing constraints, for example as is important for real-time processes. We present the language, along with its formal semantics, and derive algebraic laws for reasoning about processes in the language. Though the core language is simple, we show that the language has several powerful derived operators which we demonstrate to be useful in several examples.</abstract></paper>