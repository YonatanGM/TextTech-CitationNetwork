<paper id="1562046958"><title>Specification and verification of the PowerScale bus arbitration protocol: an industrial experiment with LOTOS</title><year>1996</year><authors><author org="Bull S.A" id="2706596978">Ghassan Chehaibar</author><author org="Inria Rhône-Alpes/Verimag" id="207950334">Hubert Garavel</author><author org="Specification and Programming of Communicating Real-Time Systems" id="2343194167">Laurent Mounier</author><author org="Bull S.A" id="2713883995">Nadia Tawbi</author><author org="Bull H.N" id="2717936680">Ferruccio Zulian</author></authors><n_citation>49</n_citation><doc_type>Conference</doc_type><references><reference>4334996</reference><reference>1481841467</reference><reference>1503973138</reference><reference>1587066064</reference><reference>1624945350</reference><reference>1973642705</reference><reference>2104925315</reference><reference>2118956464</reference><reference>2173730676</reference><reference>2176864362</reference></references><venue id="1173173816" type="C">Formal Techniques for (Networked and) Distributed Systems</venue><doi>10.1007/978-0-387-35079-0_28</doi><keywords><keyword weight="0.57268">Specification language</keyword><keyword weight="0.5486">Arbiter</keyword><keyword weight="0.46899">Programming language</keyword><keyword weight="0.52237">Model checking</keyword><keyword weight="0.45854">Computer science</keyword><keyword weight="0.58953">Correctness</keyword><keyword weight="0.4507">Theoretical computer science</keyword><keyword weight="0.51725">Arbitration</keyword><keyword weight="0.51511">Bisimulation</keyword><keyword weight="0.56169">Formal methods</keyword><keyword weight="0.49444">Memory controller</keyword><keyword weight="0.45319">Distributed computing</keyword></keywords><publisher>Springer, Boston, MA</publisher><abstract>This paper presents the results of an industrial case-study concerning the use of formal methods for the validation of hardware design. The case-study focuses on PowerScaleTM, a multiprocessor architecture based on PowerPCTM micro-processors and used in Bull’s EscalaTM series of servers and workstations*. The specification language Lotos (ISO International Standard 8807) was used to describe formally the main components of this architecture (processors, memory controller and bus arbiter). Four correctness properties were identified, which express the essential requirements for a proper functioning of the arbitration algorithm, and formalized in terms of bisimulation relations (modulo abstractions) between finite labelled transition systems. Using the compositional and on-the-fly model-checking techniques implemented in the Cadp (CAEsar/Aldebaran) toolbox, the correctness of the arbitration algorithm was established automatically in a few minutes.</abstract></paper>