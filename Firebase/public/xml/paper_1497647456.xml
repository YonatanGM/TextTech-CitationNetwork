<paper id="1497647456"><title>Automated Performance and Dependability Evaluation Using Model Checking</title><year>2002</year><authors><author org="&quot;University of Bonn&quot;" id="2163680003">Christel Baier</author><author org="RWTH Aachen" id="2312863427">Boudewijn R. Haverkort</author><author org="UNIVERSITY OF TWENTE" id="1985838953">Holger Hermanns</author><author org="UNIVERSITY OF TWENTE" id="2036890539">Joost-Pieter Katoen</author></authors><n_citation>35</n_citation><doc_type>Conference</doc_type><references><reference>1501020965</reference><reference>1539457702</reference><reference>1596739056</reference><reference>1606764134</reference><reference>1778598960</reference><reference>1803230550</reference><reference>1897676854</reference><reference>1965697381</reference><reference>1967497793</reference><reference>1969553191</reference><reference>1972002191</reference><reference>1984121732</reference><reference>2013144508</reference><reference>2021089599</reference><reference>2041226400</reference><reference>2043896870</reference><reference>2044811734</reference><reference>2047386147</reference><reference>2048782993</reference><reference>2067463757</reference><reference>2078423317</reference><reference>2083505384</reference><reference>2095939858</reference><reference>2096899005</reference><reference>2099529102</reference><reference>2103767382</reference><reference>2107224406</reference><reference>2115309705</reference><reference>2117189826</reference><reference>2118744069</reference><reference>2119239145</reference><reference>2124446794</reference><reference>2125696354</reference><reference>2131390691</reference><reference>2133820906</reference><reference>2141881497</reference><reference>2159763578</reference><reference>2160136100</reference><reference>2165439624</reference><reference>2167647251</reference><reference>2340735175</reference><reference>2653646069</reference><reference>2695253840</reference><reference>2912858140</reference><reference>2913459036</reference></references><venue id="1164472673" type="C">International Symposium on Computer Modeling, Measurement and Evaluation</venue><doi>10.1007/3-540-45798-4_12</doi><keywords><keyword weight="0.72643">Markov reward model</keyword><keyword weight="0.57533">Dependability</keyword><keyword weight="0.57616">Model checking</keyword><keyword weight="0.52243">Petri net</keyword><keyword weight="0.46376">Computer science</keyword><keyword weight="0.64411">Markov model</keyword><keyword weight="0.6386">Markov chain</keyword><keyword weight="0.58147">Stochastic Petri net</keyword><keyword weight="0.51237">State space</keyword><keyword weight="0.4619">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Markov chains (and their extensions with rewards) have been widely used to determine performance, dependability and performability characteristics of computer communication systems, such as throughput, delay, mean time to failure, or the probability to accumulate at least a certain amount of reward in a given time.Due to the rapidly increasing size and complexity of systems, Markov chains and Markov reward models are difficult and cumbersome to specify by hand at the state-space level. Therefore, various specification formalisms, such as stochastic Petri nets and stochastic process algebras, have been developed to facilitate the specification of these models at a higher level of abstraction. Uptill now, however, the specification of the measure-of-interest is often done in an informal and relatively unstructured way. Furthermore, some measures-of-interest can not be expressed conveniently at all.In this tutorial paper, we present a logic-based specification technique to specify performance, dependability and performability measures-ofinterest and show how for a given finite Markov chain (or Markov reward model) such measures can be evaluated in a fully automated way. Particular emphasis will be given to so-called path-based measures and hierarchically-specified measures. For this purpose, we extend so-called model checking techniques to reason about discrete- and continuous-time Markov chains and their rewards. We also report on the use of techniques such as (compositional) model reduction and measure-driven state-space generation to combat the infamous state space explosion problem.</abstract></paper>