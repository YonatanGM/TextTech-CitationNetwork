<paper id="1861370427"><title>Efficient Verification of Parallel Real–Time Systems</title><year>1993</year><authors><author org="Tokyo Inst. of tech." id="2145771268">Tomohiro Yoneda</author><author org="Tokyo Inst. of tech." id="2040034197">Atsufumi Shibayama</author><author org="Technische Universität München;" id="2038437172">Bernd-Holger Schlingloff</author><author org="Carnegie - Mellon University#TAB#" id="2129477832">Edmund M. Clarke</author></authors><n_citation>88</n_citation><doc_type>Conference</doc_type><references><reference>1540501475</reference><reference>1934074768</reference><reference>2030263557</reference><reference>2038995301</reference><reference>2049852498</reference><reference>2086147982</reference><reference>2090398333</reference><reference>2099641480</reference><reference>2117189826</reference><reference>2151612633</reference><reference>2153439859</reference><reference>2167668895</reference><reference>2808633434</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1023/A:1008682131325</doi><keywords><keyword weight="0.61383">Computation tree logic</keyword><keyword weight="0.60466">Model checking</keyword><keyword weight="0.60359">Petri net</keyword><keyword weight="0.6071">Interval temporal logic</keyword><keyword weight="0.45022">Computer science</keyword><keyword weight="0.6388">Concurrency</keyword><keyword weight="0.47154">Algorithm</keyword><keyword weight="0.59482">Stochastic Petri net</keyword><keyword weight="0.62157">Linear temporal logic</keyword><keyword weight="0.46602">Theoretical computer science</keyword><keyword weight="0.59565">Temporal logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents an efficient model checking algorithm for one–safe time Petri nets and a timed temporal logic. The approach is based on the idea of (1) using only differences of timing variables to be able to construct a finite representation of the set of all reachable states and (2) further reducing the size of this representation by exploiting the concurrency in the net. This reduction of the state space is possible, because the considered linear–time temporal logic is stuttering invariant. The firings of transitions are only partially ordered by causality and a given formula; therefore the order of firings of independent transitions is irrelevant, and only one of several equivalent interleavings has to be generated for the evaluation of the given formula. In this paper the theory of timing verification with time Petri nets and temporal logic is presented, a concrete model checking algorithm is developed and proved to be correct, and some experimental results demonstrating the efficiency of the method are given.</abstract></paper>