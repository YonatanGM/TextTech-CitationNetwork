<paper id="203410698"><title>A Natural Semantics for Logic Programs with Negation</title><year>1989</year><authors><author org="Asian Institute of Technology" id="2150509713">Phan Minh Dung</author><author org="Asian Institute of Technology" id="350683885">Kanchana Kanchanasut</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>105798218</reference><reference>127451913</reference><reference>159747946</reference><reference>194816663</reference><reference>1494051470</reference><reference>1672891595</reference><reference>1766332311</reference><reference>1984715534</reference><reference>2108911687</reference><reference>2111353076</reference><reference>2157221482</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-52048-1_34</doi><keywords><keyword weight="0.59714">Autoepistemic logic</keyword><keyword weight="0.60327">Axiomatic semantics</keyword><keyword weight="0.44099">Programming language</keyword><keyword weight="0.41675">Computer science</keyword><keyword weight="0.58796">Multimodal logic</keyword><keyword weight="0.62397">Stable model semantics</keyword><keyword weight="0.64675">Predicate functor logic</keyword><keyword weight="0.60399">Game semantics</keyword><keyword weight="0.60931">Higher-order logic</keyword><keyword weight="0.60616">Well-founded semantics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Two natural ways to specify the declarative semantics of logic programs and deductive databases are the fixpoint theory of Van Emden and Kowalski [11] and Clarku0027s predicate completion [2]. The fixpoint theory does not apply to general programs with negation; a generalization of the theory can be defined [1,12] only if the programs are stratified. Clarku0027s predicate completion is defined for logic programs with negation. In general, it fails to capture their intended semantics [7,8,9].</abstract></paper>