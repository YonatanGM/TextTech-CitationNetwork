<paper id="1875047684"><title>Reflective Middleware Solutions for Context-Aware Applications</title><year>2001</year><authors><author org="Univ. College, London#TAB#" id="2105995467">Licia Capra</author><author org="Univ. College, London#TAB#" id="2298180682">Wolfgang Emmerich</author><author org="Univ. College, London#TAB#" id="388119112">Cecilia Mascolo</author></authors><n_citation>102</n_citation><doc_type>Journal</doc_type><references><reference>1832970435</reference><reference>1954011048</reference><reference>2161040669</reference><reference>2165768251</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45429-2_10</doi><keywords><keyword weight="0.675">Middleware</keyword><keyword weight="0.5022">Tuple space</keyword><keyword weight="0.45512">Transparency (graphic)</keyword><keyword weight="0.51504">Metadata</keyword><keyword weight="0.67379">Middleware (distributed applications)</keyword><keyword weight="0.47524">Conceptual model</keyword><keyword weight="0.45676">Computer science</keyword><keyword weight="0.63668">Message oriented middleware</keyword><keyword weight="0.48168">Software development</keyword><keyword weight="0.46396">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we argue that middleware for wired distributed systems cannot be used in a mobile setting, as the principle of transparency that has driven their design runs counter to the new degrees of awareness imposed by mobility. We propose the marriage of reflection and metadata as a means for middleware to give applications dynamic access to information about their execution context. Finally, we describe a conceptual model that provides the basis of our reflective middleware.</abstract></paper>