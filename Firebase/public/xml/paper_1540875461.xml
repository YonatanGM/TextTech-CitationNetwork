<paper id="1540875461"><title>Explicit representation of terms defined by counter examples</title><year>1986</year><authors><author org="IBM Thomas J. Watson Research Center, Yorktown Heights" id="1997770148">Jean-Louis Lassez</author><author org="IBM Thomas J. Watson Research Center, Yorktown Heights" id="2139022045">Kim Marriott</author></authors><n_citation>89</n_citation><doc_type>Conference</doc_type><references><reference>60619409</reference><reference>1552837293</reference><reference>1568715102</reference><reference>1766332311</reference><reference>1979101142</reference><reference>2052519853</reference><reference>2098036931</reference><reference>2100738443</reference><reference>2912436939</reference><reference>2974365732</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-17179-7_6</doi><keywords><keyword weight="0.46295">Discrete mathematics</keyword><keyword weight="0.48133">Algebra</keyword><keyword weight="0.47082">System of linear equations</keyword><keyword weight="0.44571">Computer science</keyword><keyword weight="0.54259">Decidability</keyword><keyword weight="0.53398">Negation as failure</keyword><keyword weight="0.47969">Duality (optimization)</keyword><keyword weight="0.49913">Counterexample</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Anti-unification guarantees the existence of a term which is an explicit representation of the most specific generalization of a collection of terms. This provides a formal basis for learning from examples. Here we address the dual problem of computing a generalization given a set of counter examples. Unlike learning from examples an explicit, finite representation for the generalization does not always exist. We show that the problem is decidable by providing an algorithm which, given an implicit representation will return a finite explicit representation or report that none exists. Applications of this result to the problem of negation as failure and to the representation of solutions to systems of equations and inequations are also mentioned.</abstract></paper>