<paper id="1586932402"><title>Proving Precedence Properties: The Temporal Way</title><year>1983</year><authors><author org="Stanford University" id="2146370811">Zohar Manna</author><author org="The Weizmann Institute of Science" id="2171343426">Amir Pnueli</author></authors><n_citation>42</n_citation><doc_type>Conference</doc_type><references><reference>1600408058</reference><reference>1798280647</reference><reference>1964727056</reference><reference>1994350081</reference><reference>2030926579</reference><reference>2036267700</reference><reference>2073689993</reference><reference>2132334337</reference><reference>2166656159</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/BFb0036932</doi><keywords><keyword weight="0.43457">Discrete mathematics</keyword><keyword weight="0.42686">Combinatorics</keyword><keyword weight="0.4514">Invariant (physics)</keyword><keyword weight="0.43555">Computer science</keyword><keyword weight="0.45656">Automaton</keyword><keyword weight="0.44941">Theoretical computer science</keyword><keyword weight="0.49942">Decidability</keyword><keyword weight="0.45664">Boolean algebra</keyword><keyword weight="0.50415">Operator (computer programming)</keyword><keyword weight="0.46513">Mutual exclusion</keyword><keyword weight="0.43779">Computer programming</keyword><keyword weight="0.60411">Liveness</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper explores the three important classes of temporal properties of concurrent programs: invariance, liveness and precedence. It presents the first methodological approach to the precedence properties, while providing a review of the invariance and liveness properties. The approach is based on the u0027u0027unlessu0027u0027 operator, which is a weak version of the u0027u0027untilu0027u0027 operator. For each class of properties, we present a single complete proof principle. Finally, we show that the properties of each class are decidable over finite state programs.</abstract></paper>