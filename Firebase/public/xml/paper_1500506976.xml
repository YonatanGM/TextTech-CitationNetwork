<paper id="1500506976"><title>A PVSS as Hard as Discrete Log and Shareholder Separability</title><year>2001</year><authors><author org="Columbia University" id="2107228572">Adam Young</author></authors><n_citation>13</n_citation><doc_type>Conference</doc_type><references><reference>1497619716</reference><reference>1501844512</reference><reference>1504237559</reference><reference>1507197912</reference><reference>1515956543</reference><reference>1519080809</reference><reference>1543585825</reference><reference>1551648898</reference><reference>1552763920</reference><reference>1589034595</reference><reference>1594742286</reference><reference>1599893988</reference><reference>1607264302</reference><reference>1837145606</reference><reference>1967263393</reference><reference>1972460281</reference><reference>1996888795</reference><reference>2052267638</reference><reference>2106583429</reference><reference>2112963602</reference><reference>2125348383</reference><reference>2138784757</reference><reference>2147270806</reference><reference>2152663626</reference><reference>2157075838</reference><reference>2166462813</reference><reference>2168970529</reference><reference>2912577494</reference></references><venue id="2533150121" type="C">Public Key Cryptography</venue><doi>10.1007/3-540-44586-2_21</doi><keywords><keyword weight="0.49808">Semantic security</keyword><keyword weight="0.4429">Computer science</keyword><keyword weight="0.44511">Theoretical computer science</keyword><keyword weight="0.50642">Encryption</keyword><keyword weight="0.57476">Verifiable secret sharing</keyword><keyword weight="0.49536">Exponentiation</keyword><keyword weight="0.52993">Public-key cryptography</keyword><keyword weight="0.52263">Key escrow</keyword><keyword weight="0.51564">Access structure</keyword><keyword weight="0.43124">Distributed computing</keyword><keyword weight="0.49862">Discrete logarithm</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A Publicly Verifiable Secret Sharing (PVSS)sc heme allows a prover to verifiably prove that a value with specific properties is shared among a number of parties. This verification can be performed by anyone. Stadler introduced a PVSS for proving that the discrete log of an element is shared [S96], and based the PVSS on double-decker exponentiation. Schoenmakers recently presented a PVSS scheme that is as hard to break as deciding Diffie-Hellman (DDH)[Sc h99]. He further showed how a PVSS can be used to improve on a number of applications: fair electronic cash (with anonymity revocation), universally verifiable electronic voting, and software key escrow schemes. When the solution in [Sch99] is used for sharing a key corresponding to a given public key, the double-decker exponentiation method and specific assumptions are still required. Here we improve on [Sch99] and present a PVSS for sharing discrete logs that is as hard to break as the Discrete-Log problem itself, thus weakening the assumption of [Sch99]. Our solution differs in that it can be used directly to implement the sharing of private keys (avoiding the double decker methods). The scheme can therefore be implemented with any semantically secure encryption method (paying only by a moderate increase in proof length). A major property of our PVSS is that it provides an algebraic decoupling of the recovering participants (who can be simply represented by any set of public keys)from the sharing operation. Thus, our scheme diverts from the traditional polynomial-secret-sharing-based VSS. We call this concept Separable Shareholders.</abstract></paper>