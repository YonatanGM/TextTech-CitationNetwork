<paper id="1482472192"><title>Pincer Search: A New Algorithm for Discovering the Maximum Frequent Set</title><year>1998</year><authors><author org="New-York University &gt;  &gt;  &gt;  &gt;" id="2621529506">Dao-I Lin</author><author org="New-York University &gt;  &gt;  &gt;  &gt;" id="2347053213">Zvi M. Kedem</author></authors><n_citation>271</n_citation><doc_type>Conference</doc_type><references><reference>20722260</reference><reference>1483679765</reference><reference>1506285740</reference><reference>1520890006</reference><reference>1556507321</reference><reference>1576562444</reference><reference>1578959085</reference><reference>1597161471</reference><reference>1597561788</reference><reference>1861465509</reference><reference>2009207944</reference><reference>2030969394</reference><reference>2037965136</reference><reference>2125227861</reference><reference>2166559705</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/BFb0100980</doi><keywords><keyword weight="0.43013">Data mining</keyword><keyword weight="0.46066">Data structure</keyword><keyword weight="0.53929">Search algorithm</keyword><keyword weight="0.41191">Computer science</keyword><keyword weight="0.56626">Apriori algorithm</keyword><keyword weight="0.42911">Algorithm</keyword><keyword weight="0.49093">Association rule learning</keyword><keyword weight="0.39368">Database</keyword><keyword weight="0.41671">Computation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Discovering frequent itemsets is a key problem in important data mining applications, such as the discovery of association rules, strong rules, episodes, and minimal keys. Typical algorithms for solving this problem operate in a bottom-up breadth-first search direction. The computation starts from frequent 1-itemsets (minimal length frequent itemsets) and continues until all maximal (length) frequent itemsets are found. During the execution, every frequent itemset is explicitly considered. Such algorithms perform reasonably well when all maximal frequent itemsets are short. However, performance drastically decreases when some of the maximal frequent itemsets are relatively long. We present a new algorithm which combines both the bottom-up and top-down directions. The main search direction is still bottom-up but a restricted search is conducted in the top-down direction. This search is used only for maintaining and updating a new data structure we designed, the maximum frequent candidate set. It is used to prune candidates in the bottom-up search. As a very important characteristic of the algorithm, it is not necessary to explicitly examine every frequent itemset. Therefore it performs well even when some maximal frequent itemsets are long. As its output, the algorithm produces the maximum frequent set, i.e., the set containing all maximal frequent itemsets, which therefore specifies immediately all frequent itemsets. We evaluate the performance of the algorithm using a well-known benchmark database. The improvements can be up to several orders of magnitude, compared to the best current algorithms.</abstract></paper>