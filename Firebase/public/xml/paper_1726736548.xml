<paper id="1726736548"><title>Static analysis of linear congruence equalities among variables of a program</title><year>1991</year><authors><author org="Ã‰cole Polytechnique/LIX" id="1993470876">Philippe Granger</author></authors><n_citation>129</n_citation><doc_type>Conference</doc_type><references><reference>2014764321</reference><reference>2031373197</reference><reference>2043100293</reference><reference>2132661148</reference><reference>2135736783</reference></references><venue id="2756386172" type="C">Colloquium on trees in Algebra and Programming</venue><doi>10.1007/3-540-53982-4_10</doi><keywords><keyword weight="0.52881">Affine transformation</keyword><keyword weight="0.50498">Integer</keyword><keyword weight="0.46772">Discrete mathematics</keyword><keyword weight="0.49882">Arithmetic function</keyword><keyword weight="0.48836">Abstract interpretation</keyword><keyword weight="0.47069">Chinese remainder theorem</keyword><keyword weight="0.52651">Static analysis</keyword><keyword weight="0.51785">Vectorization (mathematics)</keyword><keyword weight="0.54048">Congruence (geometry)</keyword><keyword weight="0.44456">Mathematics</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper is dedicated to the presentation of a new static analysis of programs conceived for discovering linear congruence equations satisfied by integer valued variables (or more generally by any set of integer values abstracted from a program). This analysis generalizes both P. Grangeru0027s arithmetical congruence analysis and M. Karru0027s affine equation analysis. An example shows that it can provide valuable results for automatic vectorization.</abstract></paper>