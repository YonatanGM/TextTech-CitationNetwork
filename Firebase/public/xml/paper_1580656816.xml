<paper id="1580656816"><title>Error-Tolerant Combiners for Oblivious Primitives</title><year>2008</year><authors><author org="Google Switzerland, Zurich, Switzerland" id="2953385747">Bartosz Przydatek</author><author org="University of Bristol Bristol, United Kingdom" id="2949101157">JÃ¼rg Wullschleger</author></authors><n_citation>12</n_citation><doc_type>Conference</doc_type><references><reference>44936433</reference><reference>1484276943</reference><reference>1487501992</reference><reference>1551076855</reference><reference>1560855680</reference><reference>1587391206</reference><reference>1870778496</reference><reference>1987667503</reference><reference>1994995146</reference><reference>2016443801</reference><reference>2018864705</reference><reference>2123025883</reference><reference>2133848303</reference><reference>2134238617</reference><reference>2143222367</reference><reference>2156001253</reference><reference>2160125021</reference><reference>2164987725</reference><reference>2168957864</reference><reference>2181513051</reference></references><venue id="1141821850" type="C">International Colloquium on Automata, Languages and Programming</venue><doi>10.1007/978-3-540-70583-3_38</doi><keywords><keyword weight="0.52118">Secret sharing</keyword><keyword weight="0.46738">Computer science</keyword><keyword weight="0.45092">Implementation</keyword><keyword weight="0.47059">Theoretical computer science</keyword><keyword weight="0.44558">Linear function</keyword><keyword weight="0.52875">Private information retrieval</keyword><keyword weight="0.63908">Oblivious transfer</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A robust combineris a construction that combines several implementations of a primitive based on different assumptions, and yields an implementation guaranteed to be secure if at least someassumptions (i.e. sufficiently many but not necessarily all) are :[36],"this paper we generalize :[36],"this concept by introducing error-tolerantcombiners, which in addition to protection against insecure implementations provide tolerance to functionality failures: an error-tolerant combiner guarantees a secure and correct implementation of the output primitive even if some of the candidates are insecure or faulty. We present simple constructions of error-tolerant robust combiners for oblivious linear function evaluation. The proposed combiners are also interesting in the regular (not error-tolerant) case, as the construction is much more efficient than the combiners known for oblivious transfer.</abstract></paper>