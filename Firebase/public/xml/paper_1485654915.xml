<paper id="1485654915"><title>Improving the Query Performance of High-Dimensional Index Structures by Bulk-Load Operations</title><year>1998</year><authors><author org="AT&amp;T Labs — research" id="2013057434">Stefan Berchtold</author><author org="Univ. of Munich" id="2925517849">Christian Böhm</author><author org="Univ. of Munich" id="1919135125">Hans-Peter Kriegel</author></authors><n_citation>46</n_citation><doc_type>Conference</doc_type><references><reference>1511750901</reference><reference>1633157623</reference><reference>1975830550</reference><reference>1978447605</reference><reference>2000830496</reference><reference>2024668293</reference><reference>2066799613</reference><reference>2099317610</reference><reference>2104128006</reference><reference>2129938590</reference><reference>2136006972</reference><reference>2145725688</reference><reference>2150661231</reference><reference>2151135734</reference><reference>2155776210</reference><reference>2166050755</reference><reference>2238624099</reference></references><venue id="1132593990" type="C">Extending Database Technology</venue><doi>10.1007/BFb0100987</doi><keywords><keyword weight="0.52172">Space partitioning</keyword><keyword weight="0.46102">Data mining</keyword><keyword weight="0.51997">Search algorithm</keyword><keyword weight="0.56356">Multimedia database</keyword><keyword weight="0.44799">Computer science</keyword><keyword weight="0.58276">Range query (data structures)</keyword><keyword weight="0.47133">Algorithm</keyword><keyword weight="0.51259">Quicksort</keyword><keyword weight="0.48911">Document retrieval</keyword><keyword weight="0.52256">Cluster analysis</keyword><keyword weight="0.5297">Time complexity</keyword><keyword weight="0.43625">Database</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>In this paper, we propose a new bulk-loading technique for high-dimensional indexes which represent an important component of multimedia database systems. Since it is very inefficient to construct an index for a large amount of data by dynamic insertion of single objects, there is an increasing interest in bulk-loading techniques. In contrast to previous approaches, our technique exploits a priori knowledge of the complete data set to improve both construction time and query performance. Our algorithm operates in a mannar similar to the Quicksort algorithm and has an average runtime complexity of O(n log n). We additionally improve the query performance by optimizing the shape of the bounding boxes, by completely avoiding overlap, and by clustering the pages on disk. As we analytically show, the split strategy typically used in dynamic index structures, splitting the data space at the 50%-quantile, results in a bad query performance in high-dimensional spaces. Therefore, we use a sophisticated unbalanced split strategy, which leads to a much better space partitioning. An exhaustive experimental evaluation shows that our technique clearly outperforms both classic index construction and competitive bulk loading techniques. In comparison with dynamic index construction we achieve a speed-up factor of up to 588 for the construction time. The constructed index causes up to 16.88 times fewer page accesses and is up to 198 times faster (real time) in query processing.</abstract></paper>