<paper id="1636750413"><title>Fast Software Encryption: Designing Encryption Algorithms for Optimal Software Speed on the Intel Pentium Processor</title><year>1997</year><authors><author org="Counterpane Systems" id="605106185">Bruce Schneier</author><author org="Stac Electronics" id="2305174373">Doug Whiting</author></authors><n_citation>61</n_citation><doc_type>Conference</doc_type><references><reference>1481631217</reference><reference>1500356409</reference><reference>1527701244</reference><reference>1613874182</reference><reference>1978695162</reference><reference>2129695707</reference><reference>2157047743</reference></references><venue id="2758283624" type="C">Fast Software Encryption</venue><doi>10.1007/BFb0052351</doi><keywords><keyword weight="0.48441">Algorithm design</keyword><keyword weight="0.5048">Block cipher</keyword><keyword weight="0.51271">Cryptography</keyword><keyword weight="0.45852">Computer science</keyword><keyword weight="0.59878">Encryption</keyword><keyword weight="0.50126">Software</keyword><keyword weight="0.66297">Pentium</keyword><keyword weight="0.58323">Blowfish</keyword><keyword weight="0.48357">Cycles per instruction</keyword><keyword weight="0.45406">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Most encryption algorithms are designed without regard to their performance on top-of-the-line microprocessors. This paper discusses general optimization principles algorithms designers should keep in mind when designing algorithms, and analyzes the performance of RC4, SEAL, RC5, Blowfish, and Khufu/Khafre on the Intel Pentium with respect to those principles. Finally, we suggest directions for algorithm design, and give example algorithms, that take performance into account.</abstract></paper>