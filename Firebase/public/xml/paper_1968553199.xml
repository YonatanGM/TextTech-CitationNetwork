<paper id="1968553199"><title>CUTE: constrained and unconstrained testing environment</title><year>1995</year><authors><author org="IBM - T. J. Watson Research Center, Yorktown Heights, NY" id="2075954450">I. Bongartz</author><author org="IBM - T. J. Watson Research Center, Yorktown Heights, NY" id="2780947139">A. R. Conn</author><author org="Rutherford Appleton Lab, Oxfordshire, UK" id="728307417">Nick Gould</author><author org="Univ. Notre-Dame de la Paix, Namur, Belgium" id="2460957504">Ph. L. Toint</author></authors><n_citation>589</n_citation><doc_type>Journal</doc_type><references><reference>1972022137</reference><reference>1992976319</reference><reference>2012604196</reference><reference>2016797051</reference><reference>2026289804</reference><reference>2049421260</reference><reference>2051434435</reference><reference>2056603712</reference><reference>2985598261</reference></references><venue id="163326656" type="J">ACM Transactions on Mathematical Software</venue><doi>10.1145/200979.201043</doi><keywords><keyword weight="0.46534">File Transfer Protocol</keyword><keyword weight="0.0">Confusion</keyword><keyword weight="0.50648">CUTEr</keyword><keyword weight="0.47148">Software engineering</keyword><keyword weight="0.42451">Simulation</keyword><keyword weight="0.47156">Computer science</keyword><keyword weight="0.46295">Nonlinear programming</keyword><keyword weight="0.53894">Unix</keyword><keyword weight="0.44585">Theoretical computer science</keyword><keyword weight="0.5126">Software</keyword><keyword weight="0.5601">Software development</keyword><keyword weight="0.44993">Generality</keyword></keywords><publisher>ACM</publisher><abstract>The purpose of this article is to discuss the scope and functionality of a versatile environment for testing small- and large-scale nonlinear optimization algorithms. Although many of these facilities were originally produced by the authors in conjunction with the software package LANCELOT, we believe that they will be useful in their own right and should be available to researchers for their development of optimization software. The tools can be obtained by anonymous ftp from a number of sources and may, in many cases, be installed automatically. The scope of a major collection of test problems written in the standard input format (SIF) used by the LANCELOT software package is described. Recognizing that most software was not written with the SIF in mind, we provide tools to assist in building an interface between this input format and other optimization packages. These tools provide a link between the SIF and a number of existing packages, including MINOS and OSL. Additionally, as each problem includes a specific classification that is designed to be useful in identifying particular classes of problems, facilities are provided to build and manage a database of this information. There is a Unix and C shell bias to many of the descriptions in the article, since, for the sake of simplicity, we do not illustrate everything in its fullest generality. We trust that the majority of potential users are sufficiently familiar with Unix that these examples will not lead to undue confusion.</abstract></paper>