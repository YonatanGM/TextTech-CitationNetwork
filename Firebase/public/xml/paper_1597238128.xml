<paper id="1597238128"><title>A Proof Technique for Rely/Guarantee Properties</title><year>1985</year><authors><author org="State University of New York at Stony Brook" id="2232440131">Eugene W. Stark</author></authors><n_citation>98</n_citation><doc_type>Conference</doc_type><references><reference>30558629</reference><reference>80370608</reference><reference>1570560336</reference><reference>1965662337</reference><reference>1983475008</reference><reference>2023808162</reference><reference>2030926579</reference><reference>2038952689</reference><reference>2061841985</reference><reference>2075282391</reference><reference>2086070079</reference><reference>2103953153</reference><reference>2111706174</reference><reference>2148817888</reference><reference>2166656159</reference></references><venue id="1123496967" type="C">Foundations of Software Technology and Theoretical Computer Science</venue><doi>10.1007/3-540-16042-6_21</doi><keywords><keyword weight="0.45594">Discrete mathematics</keyword><keyword weight="0.47123">Of the form</keyword><keyword weight="0.43389">Computer science</keyword><keyword weight="0.48923">Critical section</keyword><keyword weight="0.49053">Temporal logic</keyword><keyword weight="0.58372">Liveness</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>A rely/guarantee specification for a program P is a specification of the form R ⊃ G (R implies G), where R is a rely condition and G is a guarantee condition. A rely condition expresses the conditions that P relies on its environment to provide, and a guarantee condition expresses what P guarantees to provide in return. This paper presents a proof technique that permits us to infer that a program P satisfies a rely/guarantee specification R ⊃ G, given that we know P satisfies a finite collection of rely/guarantee specifications R i ⊃ G i , (i ∈ I). The utility of the proof technique is illustrated by using it to derive global liveness properties of a system of concurrent processes from a collection of local liveness properties satisfied by the component processes. The use of the proof rule as a design principle is also considered.</abstract></paper>