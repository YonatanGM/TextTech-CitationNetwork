<paper id="1484584902"><title>An Extensible Interface to an Extensible Object-Oriented Database System</title><year>1993</year><authors><author org="Heriot-Watt University#TAB#" id="2070167002">Norman W. Paton</author><author org="Heriot-Watt University#TAB#" id="2087301638">Ghassan al-Qaimari</author><author org="Heriot-Watt University#TAB#" id="2307350390">Alistair C. Kilgour</author></authors><n_citation>10</n_citation><doc_type /><references><reference>10252367</reference><reference>1494294709</reference><reference>1496689342</reference><reference>1497449867</reference><reference>1511940023</reference><reference>2110396526</reference><reference>2289666534</reference></references><venue id="" type="">In:  IDS; 1992. p. 265-281.</venue><doi>10.1007/978-1-4471-3423-7_16</doi><keywords><keyword weight="0.46308">Programming language</keyword><keyword weight="0.47404">Visualization</keyword><keyword weight="0.44599">Computer science</keyword><keyword weight="0.53914">Class hierarchy</keyword><keyword weight="0.46544">Extensibility</keyword><keyword weight="0.56312">Data model</keyword><keyword weight="0.0">Object oriented databases</keyword></keywords><publisher>Springer, London</publisher><abstract>This paper describes how an extensible interface can be constructed for use with an extensible object-oriented database system. Extensibility is achieved at the data model level by using standard object-oriented features such as inheritance and overriding to refine the behaviour of system objects. An extensible interface, which uses different visualisations for different categories of database object, is made possible by associating visualisation objects with system-level database objects.</abstract></paper>