<paper id="1631991832"><title>Polymorphic Subtyping for Effect Analysis: The Algorithm</title><year>1996</year><authors><author org="Aarhus University," id="2057873166">Flemming Nielson</author><author org="Aarhus University," id="2345078223">Hanne Riis Nielson</author><author org="Aarhus University," id="69801872">Torben Amtoft</author></authors><n_citation>6</n_citation><doc_type /><references><reference>1479857408</reference><reference>1503871268</reference><reference>1519142519</reference><reference>1562611359</reference><reference>1604944583</reference><reference>1703087989</reference><reference>1731357855</reference><reference>2017381819</reference><reference>2051328776</reference><reference>2058279444</reference><reference>2118002698</reference><reference>2131067178</reference><reference>2132500556</reference><reference>2151156765</reference><reference>2166822586</reference><reference>2914314632</reference></references><venue id="" type="">Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages</venue><doi>10.1007/3-540-62503-8_10</doi><keywords><keyword weight="0.53437">Effect system</keyword><keyword weight="0.40093">Computer science</keyword><keyword weight="0.4229">Algorithm</keyword><keyword weight="0.59582">Type inference</keyword><keyword weight="0.53872">Concurrent ML</keyword><keyword weight="0.58872">Subtyping</keyword><keyword weight="0.0">Inference system</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We study an annotated type and effect system that integrates let-polymorphism, effects, and subtyping into an annotated type and effect system for a fragment of Concurrent ML. First we define a type inference algorithm and then construct procedures for constraint normalisation and simplification. Next these algorithms are proved syntactically sound with respect to the annotated type and effect system.</abstract></paper>