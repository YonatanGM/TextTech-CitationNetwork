<paper id="1530679938"><title>Generative Programming for Embedded Software: An Industrial Experience Report</title><year>2002</year><authors><author org="DaimlerChrysler AG#TAB#" id="1971965784">Krzysztof Czarnecki</author><author org="University of Applied Sciences Kaiserslautern" id="2542661365">Thomas Bednasch</author><author org="Technical University of Ilmenau" id="2672584899">Peter Unger</author><author org="University of Applied Sciences Kaiserslautern" id="2574009038">Ulrich W. Eisenecker</author></authors><n_citation>120</n_citation><doc_type>Conference</doc_type><references><reference>1500250067</reference><reference>1554977156</reference><reference>1571440521</reference><reference>2023546887</reference><reference>2100020698</reference><reference>2114152285</reference><reference>2116844130</reference></references><venue id="1121553062" type="C">Generative Programming and Component Engineering</venue><doi>10.1007/3-540-45821-2_10</doi><keywords><keyword weight="0.46469">Notation</keyword><keyword weight="0.6584">Embedded software</keyword><keyword weight="0.47619">Programming language</keyword><keyword weight="0.47129">Computer science</keyword><keyword weight="0.56097">Software</keyword><keyword weight="0.55085">Electronic control unit</keyword><keyword weight="0.61199">Software product line</keyword><keyword weight="0.44241">Generative grammar</keyword><keyword weight="0.48437">Object Constraint Language</keyword><keyword weight="0.65551">Software development</keyword><keyword weight="0.46737">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>Physical products come in many variants, and so does the software embedded in them. The software embedded in a product variant usually has to be optimized to fit its limited memory and computing power. Generative programming is well suited for developing embedded software since it allows us to automatically produce variants of embedded software optimized for specific products. This paper reports on our experience in applying generative programming in the embedded domain. We propose an extended feature modeling notation, discuss tool support for feature modeling, describe a domain-independent system configuration editor, and comment on the applicability of static configuration in the area of embedded systems.</abstract></paper>