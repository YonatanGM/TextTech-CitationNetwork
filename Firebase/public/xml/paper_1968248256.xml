<paper id="1968248256"><title>An Alphard Specification of a Correct and Efficient Transformation on Data Structures</title><year>1980</year><authors><author org="Departments of Computer Science and Mathematics, Carnegie-Mellon University#TAB#" id="2612398077">J.L. Bentley</author><author org="Carnegie - Mellon University#TAB#" id="2141334907">M. Shaw</author></authors><n_citation>11</n_citation><doc_type>Journal</doc_type><references><reference>1968301997</reference><reference>1984627834</reference><reference>2008395018</reference><reference>2060978628</reference></references><venue id="8351582" type="J">IEEE Transactions on Software Engineering</venue><doi>10.1109/TSE.1980.234506</doi><keywords><keyword weight="0.53383">Abstract data type</keyword><keyword weight="0.52629">Data structure</keyword><keyword weight="0.46663">Programming language</keyword><keyword weight="0.57615">Alphard</keyword><keyword weight="0.53259">Problem domain</keyword><keyword weight="0.46311">Computer science</keyword><keyword weight="0.60501">Correctness</keyword><keyword weight="0.46578">Theoretical computer science</keyword><keyword weight="0.0">Cost analysis</keyword><keyword weight="0.43274">Generality</keyword><keyword weight="0.0">Complex problems</keyword></keywords><publisher>IEEE</publisher><abstract>In this paper we study the problem of designing and specifying standard program components applicable to a wide variety of tasks; we choose for this study the specific problem domain of data structures for general searching problems. Within this domain Bentley and Saxe [1] have developed transformations for converting solutions of simple searching problems to solutions of more complex problems. We discuss one of those transformations, specify precisely the transformation and its conditions of applicability, and prove its correctness; we accomplish this by casting it in terms of abstract data typesâ€“specifically by using the Alphard form mechanism. The costs of the structures derived by this transformation are only slightly greater than the costs of the original structures, and the correctness of the transformation definition together with the correctness of the original structure assure the correctness of the derived structure. The transformation we describe has already been used to develop a number of new algorithms, and it represents a new level of generality in software engineering tools.</abstract></paper>