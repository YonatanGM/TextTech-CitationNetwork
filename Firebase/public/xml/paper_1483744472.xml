<paper id="1483744472"><title>Dynamic Query Operator Scheduling for Wide-Area Remote Access</title><year>1998</year><authors><author org="IRISA/INRIA, Campus de Beaulieu, 35042 Rennes, France E-mail: Laurent.Amsaleg@irisa.fr#TAB#" id="190871858">Laurent Amsaleg</author><author org="Department of Computer Science, University of Maryland, A.V. Williams Building, College Park, MD 20742, USA E-mail: franklin@cs.umd.edu#TAB#" id="2523407221">Michael J. Franklin</author><author org="INRIA Rocquencourt, BP 105, 78153 Le Chesnay, France E-mail: Anthony.Tomasic@inria.fr#TAB#" id="1966690917">Anthony Tomasic</author></authors><n_citation>43</n_citation><doc_type>Journal</doc_type><references><reference>1527689538</reference><reference>1541070926</reference><reference>1563590781</reference><reference>1573033214</reference><reference>1968039508</reference><reference>1970587873</reference><reference>1976099992</reference><reference>2026772575</reference><reference>2072001200</reference><reference>2107887442</reference><reference>2109660182</reference><reference>2110631345</reference><reference>2120754641</reference><reference>2145943173</reference><reference>2154031271</reference><reference>2158237121</reference><reference>2159888038</reference><reference>2164433331</reference><reference>2171438172</reference></references><venue id="35927321" type="J">Distributed and Parallel Databases</venue><doi>10.1023/A:1008646115473</doi><keywords><keyword weight="0.69073">Query optimization</keyword><keyword weight="0.63883">Query expansion</keyword><keyword weight="0.52031">Scrambling</keyword><keyword weight="0.46333">Computer science</keyword><keyword weight="0.63792">Sargable</keyword><keyword weight="0.46189">Real-time computing</keyword><keyword weight="0.50573">Execution model</keyword><keyword weight="0.5725">Dynamic priority scheduling</keyword><keyword weight="0.50667">Data access</keyword><keyword weight="0.47069">Distributed computing</keyword><keyword weight="0.50736">Iterator</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>Distributed databases operating over wide-area networks such as the Internet, must deal with the unpredictable nature of the performance of communication. The response times of accessing remote sources can vary widely due to network congestion, link failure, and other problems. In such an unpredictable environment, the traditional iterator-based query execution model performs poorly. We have developed a class of methods, called query scrambling, for dealing explicitly with the problem of unpredictable response times. Query scrambling dynamically modifies query execution plans on-the-fly in reaction to unexpected delays in data access. In this paper we focus on the dynamic scheduling of query operators in the context of query scrambling. We explore various choices for dynamic scheduling and examine, through a detailed simulation, the effects of these choices. Our experimental environment considers pipelined and non-pipelined join processing in a client with multiple remote data sources and delayed or possibly bursty arrivals of data. Our performance results show that scrambling rescheduling is effective in hiding the impact of delays on query response time for a number of different delay scenarios.</abstract></paper>