<paper id="1568808662"><title>Comprehensive and Robust Garbage Collection in a Distributed System</title><year>1992</year><authors><author org="University of copenhagen" id="2209419125">Niels Christian Juul</author><author org="University of copenhagen" id="1892969964">Eric Jul</author></authors><n_citation>31</n_citation><doc_type>Conference</doc_type><references><reference>1515015489</reference><reference>1524684829</reference><reference>1526569681</reference><reference>1965917732</reference><reference>2005907808</reference><reference>2028080565</reference><reference>2050083119</reference><reference>2062005378</reference><reference>2093903879</reference><reference>2121134342</reference><reference>2153710305</reference><reference>2159608022</reference><reference>2165971729</reference><reference>2166648363</reference><reference>2175640211</reference></references><venue id="1160224924" type="C">International Symposium on Memory Management</venue><doi>10.1007/BFb0017185</doi><keywords><keyword weight="0.63159">Garbage</keyword><keyword weight="0.56005">Distributed object</keyword><keyword weight="0.48584">Concurrency</keyword><keyword weight="0.44315">Computer science</keyword><keyword weight="0.44099">Parallel computing</keyword><keyword weight="0.47958">Robustness (computer science)</keyword><keyword weight="0.43816">Real-time computing</keyword><keyword weight="0.75654">Garbage collection</keyword><keyword weight="0.44847">Distributed computing</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>The overall goal of the Emerald garbage collection scheme is to provide an efficient “on-the-fly” garbage collection in a distributed object-based system that collects all garbage. and that is robust to partial failures.</abstract></paper>