<paper id="1985986751"><title>Combining fuzzy information: an overview</title><year>2002</year><authors><author org="IBM Almaden Research Center San Jose California" id="2103086064">Ronald Fagin</author></authors><n_citation>151</n_citation><doc_type>Conference</doc_type><references><reference>1600580971</reference><reference>1850437073</reference><reference>2020919487</reference><reference>2039407144</reference><reference>2086174602</reference><reference>2093191240</reference><reference>2098025050</reference><reference>2099797738</reference><reference>2141649964</reference><reference>2666600683</reference><reference>2912565176</reference></references><venue id="1175089206" type="C">International Conference on Management of Data</venue><doi>10.1145/565117.565143</doi><keywords><keyword weight="0.42402">Data mining</keyword><keyword weight="0.43101">Access method</keyword><keyword weight="0.41587">Computer science</keyword><keyword weight="0.46287">Fuzzy logic</keyword><keyword weight="0.0">Tertiary storage</keyword><keyword weight="0.45564">Monotone polygon</keyword><keyword weight="0.41046">Database</keyword></keywords><publisher>ACM</publisher><abstract>Assume that each object in a database has m grades, or scores, one for each of m attributes. For example, an object can have a color grade, that tells how red it is, and a shape grade, that tells how round it is. For each attribute, there is a sorted list, which lists each object and its grade under that attribute, sorted by grade (highest grade first). Each object is assigned an overall grade, that is obtained by combining the attribute grades using a fixed monotone aggregation function, or combining rule, such as min or average. In this overview, we discuss and compare algorithms for determining the top k objects, that is, k objects with the highest overall grades.</abstract></paper>