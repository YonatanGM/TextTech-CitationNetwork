<paper id="1980767016"><title>Information-flow and data-flow analysis of while-programs</title><year>1985</year><authors><author org="University Of Southampton#TAB#" id="2222868927">Jean-Francois Bergeretti</author><author org="University Of Southampton#TAB#" id="2688605827">Bernard A. Carré</author></authors><n_citation>178</n_citation><doc_type>Journal</doc_type><references><reference>1655990431</reference><reference>1768003599</reference><reference>1970357395</reference><reference>1983121589</reference><reference>1993302007</reference><reference>2047615655</reference><reference>2080506673</reference><reference>2104734478</reference><reference>2113226178</reference><reference>2123301443</reference><reference>2124153277</reference><reference>2129278597</reference><reference>2140232587</reference><reference>2141109493</reference><reference>2162436812</reference></references><venue id="41449414" type="J">ACM Transactions on Programming Languages and Systems</venue><doi>10.1145/2363.2366</doi><keywords><keyword weight="0.45488">Data mining</keyword><keyword weight="0.56234">Information flow (information theory)</keyword><keyword weight="0.46206">Computer science</keyword><keyword weight="0.51481">Static analysis</keyword><keyword weight="0.57545">Data-flow analysis</keyword><keyword weight="0.45099">Error detection and correction</keyword><keyword weight="0.62621">Program analysis</keyword><keyword weight="0.59949">Dynamic program analysis</keyword><keyword weight="0.55029">Data flow diagram</keyword><keyword weight="0.47665">Debugging</keyword></keywords><publisher>ACM</publisher><abstract>Until recently, information-flow analysis has been used primarily to verify that information transmission between program variables cannot violate security requirements. Here, the notion of information flow is explored as an aid to program development and validation. Information-flow relations are presented for while-programs, which identify those program statements whose execution may cause information to be transmitted from or to particular input, internal, or output values. It is shown with examples how these flow relations can be helpful in writing, testing, and updating programs; they also usefully extend the class of errors which can be detected automatically in the “static analysis” of a program.</abstract></paper>