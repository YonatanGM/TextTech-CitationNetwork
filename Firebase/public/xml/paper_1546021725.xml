<paper id="1546021725"><title>Computer-Assisted Simulation Proofs</title><year>1993</year><authors><author org="Technical University of, Denmark" id="2012810137">Jørgen F. Søgaard-Andersen</author><author org="" id="2032255980">Stephen J. Garland</author><author org="" id="120651226">John V. Guttag</author><author org="" id="2180706138">Nancy A. Lynch</author><author org="MIT — Laboratory for Computer Science" id="1151583613">Anna Pogosyants</author></authors><n_citation>37</n_citation><doc_type>Conference</doc_type><references><reference>23915378</reference><reference>1546387297</reference><reference>1565791475</reference><reference>1583095677</reference><reference>1921936581</reference><reference>2113275816</reference><reference>2132107743</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-56922-7_25</doi><keywords><keyword weight="0.47268">Programming language</keyword><keyword weight="0.46884">Computer science</keyword><keyword weight="0.48897">Automaton</keyword><keyword weight="0.47289">Theoretical computer science</keyword><keyword weight="0.51251">Equivalence (measure theory)</keyword><keyword weight="0.56379">Distributed algorithm</keyword><keyword weight="0.54456">Mathematical proof</keyword><keyword weight="0.0">Proof obligation</keyword><keyword weight="0.48344">Scalability</keyword><keyword weight="0.49294">Communications protocol</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>This paper presents a scalable approach to reasoning formally about distributed algorithms. It uses results about I/O automata to extract a set of proof obligations for showing that the behaviors of one algorithm are among those of another, and it uses the Larch tools for specification and deduction to discharge these obligations in a natural and easy-to-read fashion. The approach is demonstrated by proving the behavior equivalence of two high-level specifications for a communication protocol.</abstract></paper>