<paper id="1506257272"><title>Graph Pattern Matching in PROGRES</title><year>1994</year><authors><author org="AG Softwaretechnik" id="142991879">Albert ZÃ¼ndorf</author></authors><n_citation>88</n_citation><doc_type>Conference</doc_type><references><reference>1559779765</reference><reference>1563468814</reference><reference>1739013558</reference><reference>1988095917</reference><reference>1995283414</reference><reference>1996596200</reference><reference>2068852367</reference></references><venue id="2756339047" type="C">International Workshop on Graph-Grammars and Their Application to Computer Science</venue><doi>10.1007/3-540-61228-9_105</doi><keywords><keyword weight="0.0">Programming constructs</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.52926">Data structure</keyword><keyword weight="0.0">Graph pattern matching</keyword><keyword weight="0.43345">Pattern recognition</keyword><keyword weight="0.43221">Computer science</keyword><keyword weight="0.45826">Theoretical computer science</keyword><keyword weight="0.68405">Graph rewriting</keyword><keyword weight="0.0">Artificial intelligence</keyword><keyword weight="0.48817">Data model</keyword><keyword weight="0.58866">Pattern matching</keyword></keywords><publisher>Springer-Verlag</publisher><abstract>The work reported here is part of the PROGRES (PROgrammed Graph Rewriting Systems) project. PROGRES is a very high level multi paradigm language for the specification of complex structured data types and their operations. The data structures are modelled as directed, attributed, node and edge labeled graphs (diane graphs). The basic programming constructs of PROGRES are graph rewriting rales (productions and tests) and derived relations on nodes (paths and restrictions).</abstract></paper>