<paper id="1907234304"><title>Static properties of commercial embedded real-time programs, and their implication for worst-case execution time analysis</title><year>1999</year><authors><author org="Dept of Computer Systems, Uppsala University Sweden#TAB#" id="2101939064">J. Engblom</author></authors><n_citation>38</n_citation><doc_type>Conference</doc_type><references><reference>1561021211</reference><reference>1913166775</reference><reference>2068839502</reference><reference>2100209834</reference><reference>2114067856</reference><reference>2114178125</reference><reference>2118297067</reference><reference>2138952175</reference><reference>2147661183</reference><reference>2149052625</reference></references><venue id="1190910256" type="C">Real Time Technology and Applications Symposium</venue><doi>10.1109/RTTAS.1999.777660</doi><keywords><keyword weight="0.0">Analysis tools</keyword><keyword weight="0.47192">Programming language</keyword><keyword weight="0.54307">Worst-case execution time</keyword><keyword weight="0.53524">Function pointer</keyword><keyword weight="0.47338">Computer science</keyword><keyword weight="0.5336">Source code</keyword><keyword weight="0.0">Embedded applications</keyword><keyword weight="0.45441">Real-time computing</keyword><keyword weight="0.54223">Compiler</keyword><keyword weight="0.48012">System monitoring</keyword><keyword weight="0.5004">Recursion</keyword></keywords><publisher>IEEE Computer Society</publisher><abstract>We have used a modified C compiler to analyze a large number of commercial real time and embedded applications written in C for 8- and 18-bit processors. Only static aspects of the programs have been studied i.e., such information that can be obtained from the source code without running the programs. The purpose of the study is to provide guidance for the development of worst-case execution time (WCET) analysis tools, and to increase the knowledge about embedded programs in general. Knowing how real programs are written makes it easier to focus research in relevant areas and set priorities. The conclusion is that real time and embedded programs are not necessarily simple just because they are written for small machines. This indicates that real life WCET analysis tools need to handle advanced programming constructions, including function pointer calls and recursion.</abstract></paper>