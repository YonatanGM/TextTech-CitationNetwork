<paper id="1553364858"><title>Characterizations of the Disjunctive Well-Founded Semantics: Confluent Calculi and Iterated GCWA</title><year>1998</year><authors><author org="Universität Hannover, Institut für Informatik, Lange Laube 22, D-30159 Hannover, Germany, e-mail:sb@informatik.uni-hannover.de#TAB#" id="2107127860">Stefan Brass</author><author org="Universität Koblenz, Institut für Informatik, Rheinau 1, D-56075 Koblenz, Germany, e-mail:dix@informatik.uni-koblenz.de#TAB#" id="2095738856">Jürgen Dix</author></authors><n_citation>53</n_citation><doc_type>Journal</doc_type><references><reference>76948773</reference><reference>83671853</reference><reference>100060371</reference><reference>1497936609</reference><reference>1505455772</reference><reference>1505787149</reference><reference>1511711492</reference><reference>1553202793</reference><reference>1569596742</reference><reference>1579330263</reference><reference>1589875904</reference><reference>1596858679</reference><reference>1601625095</reference><reference>1603049456</reference><reference>1706499668</reference><reference>1766332311</reference><reference>1830798555</reference><reference>1885514099</reference><reference>1967701834</reference><reference>1968513265</reference><reference>1980131378</reference><reference>1990606699</reference><reference>1995876561</reference><reference>2000740920</reference><reference>2001321150</reference><reference>2013098708</reference><reference>2028245171</reference><reference>2041259062</reference><reference>2076698873</reference><reference>2083568285</reference><reference>2085084839</reference><reference>2090776985</reference><reference>2090798572</reference><reference>2097366413</reference><reference>2117895920</reference><reference>2146658047</reference><reference>2167440926</reference><reference>2514068578</reference><reference>2586770626</reference><reference>2912282119</reference></references><venue id="99781599" type="J">Journal of Automated Reasoning</venue><doi>10.1023/A:1005952908693</doi><keywords><keyword weight="0.48764">Monotonic function</keyword><keyword weight="0.45979">Discrete mathematics</keyword><keyword weight="0.43382">Algorithm</keyword><keyword weight="0.50304">Circumscription</keyword><keyword weight="0.55431">Stable model semantics</keyword><keyword weight="0.51175">Invariant (mathematics)</keyword><keyword weight="0.51158">Non-monotonic logic</keyword><keyword weight="0.4821">Logic programming</keyword><keyword weight="0.49792">Iterated function</keyword><keyword weight="0.41813">Mathematics</keyword><keyword weight="0.54647">Well-founded semantics</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>Recently Brass and Dix introduced the semantics D-WFS for general disjunctive logic programs. The interesting feature of this approach is that it is both semantically and proof-theoretically founded. Semantically, D-WFS is invariant under some natural declarative principles. Proof-theoretically, any program Φ is associated a normalform Φ, called the residual program, by a nontrivial bottom-up construction using least fixpoints of two monotonic :[61],"show in this paper that the original calculus, consisting of some simple transformations, has a very strong and appealing property: it is confluent and terminating. This means that all the transformations can be applied in any order: whenever we arrive at an irreducible program (no more transformation is applicable), this program is already uniquely determined and coincides with the normalform res(Φ) Moreover, for fair sequences it is also strongly terminating: every fair sequence of transformations leads to normalform res(Φ). Another feature of our approach is that D-WFS can be read off from res(Φ) immediately in a very simple way. No proper subset of the calculus has these properties – only when we restrict to certain subclasses of also :[179],"give an equivalent characterization of D-WFS in terms of iterated minimal model reasoning with respect to positive programs. This construction is a generalization of a description of the well-founded semantics: we introduce a very simple and neat construction of a sequence D_i that eventually stops and represents the set of derivable :[232],"characterizations open the way for efficient implementations. The first does so because the ordering of the transformations does not matter: we are free to choose always the “best” transformation, which maximally reduces the program. The second does so because special methods from circumscription, in particular a sophisticated minimal model reasoner for positive programs, might be useful.</abstract></paper>