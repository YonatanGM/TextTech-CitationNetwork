<paper id="1591946407"><title>Design Considerations for a Prolog Database Engine</title><year>1988</year><authors><author org="Department of Computer Science, Heriot-Watt University, 79, Grassmarket, Edinburgh EH1 2HJ" id="2767309746">K.F. Wong</author><author org="Department of Computer Science, Heriot-Watt University, 79, Grassmarket, Edinburgh EH1 2HJ" id="2767874873">M.H. Williams</author></authors><n_citation>7</n_citation><doc_type /><references><reference>1513576639</reference><reference>1604663342</reference><reference>1984097535</reference><reference>1994787373</reference></references><venue id="" type="">Proceedings of the Third International Conference on Data and Knowledge Bases#R##N#Improving Usability and Responsiveness</venue><doi>10.1016/B978-1-4832-1313-2.50016-0</doi><keywords><keyword weight="0.47318">Programming language</keyword><keyword weight="0.46176">Computer science</keyword><keyword weight="0.52442">Unification</keyword><keyword weight="0.49404">Workstation</keyword><keyword weight="0.42668">Filter (signal processing)</keyword><keyword weight="0.60276">Database engine</keyword><keyword weight="0.58409">Prolog</keyword></keywords><publisher>Morgan Kaufmann</publisher><abstract>One major hindrance to using Prolog for implementing large databases is the slow speed of unification. The size of physical memory required to store a large database renders main memory impractical and large sets of clauses need to be stored on secondary disk memory. Full unification performed directly on disk resident clauses would be unacceptably slow. For this reason, a special purpose machine is being designed which will provide fast disk filtering for a large Prolog database system. The system, known as CLARE (CLAuse Retrieval Engine), discriminantly retrieves all potentially unifiable clauses for queries and provides a small resolution set for full unification. The CLARE system is based on a two-stage filtering process and aspects of the design are discussed. Three system configurations suitable for the implementation of CLARE are studied. The studies enable the selection of the most cost-effective configuration applicable to a workstation-based Prolog database system.</abstract></paper>