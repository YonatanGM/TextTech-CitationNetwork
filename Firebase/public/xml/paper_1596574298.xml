<paper id="1596574298"><title>Implementing tag-driven transformers with Tango</title><year>2004</year><authors><author org="Darmstadt Univ. of Technology#TAB#" id="1615853531">Vasian Cepa</author></authors><n_citation>3</n_citation><doc_type>Conference</doc_type><references><reference>109697706</reference><reference>1510687364</reference><reference>1554977156</reference><reference>1594919880</reference><reference>1660614444</reference><reference>2011971808</reference><reference>2022574533</reference><reference>2024905615</reference><reference>2094080019</reference><reference>2115248168</reference><reference>2131714293</reference><reference>2138363365</reference><reference>2150765606</reference><reference>2160410485</reference><reference>2215315499</reference><reference>2293157443</reference><reference>2341516670</reference></references><venue id="2756309959" type="C">International Conference on Software Reuse</venue><doi>10.1007/978-3-540-27799-6_25</doi><keywords><keyword weight="0.47456">Program transformation</keyword><keyword weight="0.45708">Programming language</keyword><keyword weight="0.50877">Object-oriented programming</keyword><keyword weight="0.45635">Computer science</keyword><keyword weight="0.47903">Reuse</keyword><keyword weight="0.52956">.NET Framework</keyword><keyword weight="0.48721">Enterprise JavaBeans</keyword><keyword weight="0.47645">Modular design</keyword><keyword weight="0.46093">Metamodeling</keyword><keyword weight="0.49551">Software development</keyword><keyword weight="0.45122">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Using explicit tags at the programming language level has been attracting a lot of attention recently with technologies like xDoclet [41] which automates EJB [30] related tasks, and .NET attributes [21] which are a vital part of the .NET framework [34]. However there are currently no systematic ways for adding and transforming tag-driven product line specific constructs. This results often in implementations which are not very modular and hence that are difficult to reuse.</abstract></paper>