<paper id="1508017011"><title>Specification and validation of behavioural protocols in the rCOS modeler</title><year>2009</year><authors><author org="Institute for Software Technology, United Nations University, Macau SAR," id="2228957528">Zhenbang Chen</author><author org="Institute for Software Technology, United Nations University, Macau SAR," id="1842579178">Charles Morisset</author><author org="Institute for Software Technology, United Nations University, Macau SAR," id="1925871413">Volker Stolz</author></authors><n_citation>14</n_citation><doc_type>Conference</doc_type><references><reference>333527978</reference><reference>1545091465</reference><reference>1578269046</reference><reference>1583910698</reference><reference>1602736775</reference><reference>1976111119</reference><reference>1985804037</reference><reference>2012211446</reference><reference>2014800425</reference><reference>2070934995</reference><reference>2108495135</reference><reference>2110425399</reference><reference>2159181605</reference><reference>2164045439</reference><reference>2199154280</reference></references><venue id="1162850487" type="C">Fundamentals of Software Engineering</venue><doi>10.1007/978-3-642-11623-0_23</doi><keywords><keyword weight="0.53966">Sequence diagram</keyword><keyword weight="0.50623">Relational calculus</keyword><keyword weight="0.49774">Model checking</keyword><keyword weight="0.46455">Programming language</keyword><keyword weight="0.5124">Use case</keyword><keyword weight="0.51314">Unified Modeling Language</keyword><keyword weight="0.45066">Computer science</keyword><keyword weight="0.48642">Deadlock</keyword><keyword weight="0.50707">Software development process</keyword><keyword weight="0.51753">Process calculus</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The rCOS modeler implements the requirements modelling phase of a model driven component-based software engineering process. Components are specified in rCOS, a relational calculus for Refinement of Component and Object Systems. As an aid to the software engineer, the modeler helps to separate the different concerns by creating different artifacts in the UML model: use cases define a scenario through a sequence diagram, and methods are given as guarded designs in rCOS. rCOS interface contracts are specified through state machines with modelling variables. Messages and transitions in the diagrams are labelled with method modeler :[93],"checks the consistency of those artifacts through the process algebra CSP and the model checker FDR2: a scenario must follow a contract, and an implementation must not deadlock when following the contract. We illustrate the translation and validation with a case study.</abstract></paper>