<paper id="1493844047"><title>Analysis of Dynamic Structures for Efficient Parallel Execution</title><year>1993</year><authors><author org="University of Illinois at Urbana Champaign;" id="2084401308">John Plevyak</author><author org="University of Illinois at Urbana Champaign;" id="2614356407">Andrew A. Chien</author><author org="University of Illinois at Urbana Champaign;" id="2195185207">Vijay Karamcheti</author></authors><n_citation>45</n_citation><doc_type>Conference</doc_type><references><reference>1491178396</reference><reference>1557753199</reference><reference>1970061809</reference><reference>1975914482</reference><reference>1982205631</reference><reference>2002771912</reference><reference>2019709986</reference><reference>2088126145</reference><reference>2111695742</reference><reference>2119021242</reference></references><venue id="1198129048" type="C">Languages and Compilers for Parallel Computing</venue><doi>10.1007/3-540-57659-2_3</doi><keywords><keyword weight="0.0">Structure analysis</keyword><keyword weight="0.60181">Pointer (computer programming)</keyword><keyword weight="0.57203">Data structure</keyword><keyword weight="0.0">Graph</keyword><keyword weight="0.46585">Computer science</keyword><keyword weight="0.4784">Parallel computing</keyword><keyword weight="0.47716">Theoretical computer science</keyword><keyword weight="0.56928">Parallel programming model</keyword><keyword weight="0.54161">Recursion</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>This paper presents a new structure analysis technique handling references and dynamic structures which enables precise analysis of infinite recursive data structures. The precise analysis depends on an enhancement of Chase et al.u0027s Storage Shape Graph (SSG) called the Abstract Storage Graph (ASG) which extends SSGu0027s with choice nodes, identity paths, and specialized storage nodes and references. These extensions allow ASGu0027s to precisely describe singly- and multiply-linked lists as well as a number of other pointer structures such as octrees, and to analyze programs which manipulate them.</abstract></paper>