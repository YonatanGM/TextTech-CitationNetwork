<paper id="1976129448"><title>Optimal composition of real-time systems</title><year>1996</year><authors><author org="Computer Science Division, University of California, Berkeley, CA 94720, USA" id="348962114">Shlomo Zilberstein</author><author org="Computer Science Division, University of California, Berkeley, CA 94720, USA" id="2128362942">Stuart Russell</author></authors><n_citation>169</n_citation><doc_type>Journal</doc_type><references><reference>128729319</reference><reference>186778975</reference><reference>1496432202</reference><reference>1497803288</reference><reference>1519698894</reference><reference>1525110644</reference><reference>1589640093</reference><reference>1601612555</reference><reference>1979308257</reference><reference>1992880122</reference><reference>2011039300</reference><reference>2021061679</reference><reference>2042986967</reference><reference>2091494662</reference><reference>2109667567</reference><reference>2122333694</reference><reference>2125299991</reference><reference>2150470619</reference><reference>2159080219</reference><reference>2160365721</reference><reference>2162412417</reference><reference>2166996723</reference><reference>2174370050</reference><reference>2953213478</reference></references><venue id="196139623" type="J">Artificial Intelligence</venue><doi>10.1016/0004-3702(94)00074-3</doi><keywords><keyword weight="0.0">Program structure</keyword><keyword weight="0.50591">Complex system</keyword><keyword weight="0.48262">Computer science</keyword><keyword weight="0.57604">Systems design</keyword><keyword weight="0.47804">Theoretical computer science</keyword><keyword weight="0.47078">Artificial intelligence</keyword><keyword weight="0.50101">Decision quality</keyword><keyword weight="0.46777">Machine learning</keyword><keyword weight="0.48964">Computation</keyword></keywords><publisher>Elsevier Science Publishers Ltd.</publisher><abstract>Abstract Real-time systems are designed for environments in which the utility of actions is strongly time-dependent. Recent work by Dean, Horvitz and others has shown that anytime algorithms are a useful tool for real-time system design, since they allow computation time to be traded for decision quality. In order to construct complex systems, however, we need to be a ble to compose larger systems from smaller, reusable anytime modules. This paper addresses two basic problems associated with composition: how to ensure the interruptibility of the composed system; and how to allocate computation time optimally among the components. The first problem is solved by a simple and general construction that incurs only a small, constant penalty. The second is solved by an off-line compilation process. We show that the general compilation problem is NP-complete. However, efficient local compilation techniques, working on a single program structure at a time, yield glo bally optimal allocations for a large class of programs. We illustrate these results with two simple applications.</abstract></paper>