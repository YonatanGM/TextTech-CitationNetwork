<paper id="1985087614"><title>Analysis and Design in MSG.84: Formalizing Functional Specifications</title><year>1985</year><authors><author org="Department of Computer Science|University of Minnesota" id="2135164174">V. Berzins</author><author org="university of Minnesota Minneapolis" id="2941506257">M. Gray</author></authors><n_citation>38</n_citation><doc_type>Journal</doc_type><references><reference>1975551945</reference><reference>2008395018</reference><reference>2062024564</reference><reference>2069579230</reference><reference>2073708523</reference><reference>2093541252</reference><reference>2110050316</reference><reference>2110425399</reference><reference>2115937516</reference></references><venue id="8351582" type="J">IEEE Transactions on Software Engineering</venue><doi>10.1109/TSE.1985.232516</doi><keywords><keyword weight="0.62428">Specification language</keyword><keyword weight="0.47411">Programming language</keyword><keyword weight="0.53202">Formal language</keyword><keyword weight="0.45932">Computer science</keyword><keyword weight="0.45859">Theoretical computer science</keyword><keyword weight="0.62821">Formal specification</keyword><keyword weight="0.52748">Software system</keyword><keyword weight="0.55352">Design process</keyword><keyword weight="0.57129">Functional specification</keyword><keyword weight="0.53014">Message passing</keyword><keyword weight="0.5431">Software development</keyword></keywords><publisher>IEEE</publisher><abstract>Model building is identified as the most important part of the analysis and design process for software systems. A set of primitives to support this process is presented, along with a formal language, MSG.84, for recording the results of analysis and design. The semantics of the notation is defined in terms of the actor formalism, which is based on a message passing paradigm. The automatic derivation of a graphical form of the specification for user review is discussed. Potentials for computer-aided design based on MSG.84 are indicated.</abstract></paper>