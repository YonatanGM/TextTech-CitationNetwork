<paper id="166854877"><title>MetaEdit: a flexible graphical environment for methodology modelling</title><year>1991</year><authors><author org="University of Jyväskylä**" id="2019241556">Kari Smolander</author><author org="University of Jyväskylä**" id="2051429859">Kalle Lyytinen</author><author org="University of Jyväskylä**" id="2060299180">Veli-Pekka Tahvanainen</author><author org="University of Jyväskylä**" id="275307801">Pentti Marttiin</author></authors><n_citation>121</n_citation><doc_type>Conference</doc_type><references><reference>207182396</reference><reference>1569601365</reference><reference>1858105682</reference><reference>1967003875</reference><reference>1975823246</reference><reference>1981426840</reference><reference>2046571546</reference><reference>2049546814</reference><reference>2064650227</reference><reference>2086245938</reference><reference>2153856558</reference><reference>2166624200</reference><reference>2399236057</reference></references><venue id="1134069326" type="C">Conference on Advanced Information Systems Engineering</venue><doi>10.1007/3-540-54059-8_85</doi><keywords><keyword weight="0.50842">Notation</keyword><keyword weight="0.45698">Systems engineering</keyword><keyword weight="0.46581">Computer science</keyword><keyword weight="0.59778">Computer-aided software engineering</keyword><keyword weight="0.52377">Data model</keyword><keyword weight="0.43597">Syntax</keyword><keyword weight="0.53454">Metamodeling</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Existing CASE tools are often rigid and do not support the usersu0027 native methodologies. To alleviate this, more flexible and customisable tools called CASE shells are emerging. However, the customisation of those tools is still cumbersome and error-prone, and demands several configuration files that follow a rigid syntax of some metamodelling language(s). In order to make the customisation easier, we propose a graphical metamodelling editor, MetaEdit, with which the conceptual structures of the user methodology can be modelled easily using an easy-to-grasp graphical notation. With MetaEdit, methodology models can be constructed with less effort and the configuration files for the CASE shell can be created (semi)automatically. The tool is flexible i.e. its symbols and metamodel are user-definable. In consequence it can be used as a simple CASE shell. MetaEdit is based on the Object-Property-Role-Relationship (OPRR) data model. The paper presents the principles on which the editor is built, describes its operation, and discusses its relations to other research on metamodelling.</abstract></paper>