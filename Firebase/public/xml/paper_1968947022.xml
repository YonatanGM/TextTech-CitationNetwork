<paper id="1968947022"><title>Proving real-time properties of programs with temporal logic</title><year>1981</year><authors><author org="" id="2209989846">Arthur Bernstein</author><author org="" id="2397318033">Paul K. Harter</author></authors><n_citation>105</n_citation><doc_type>Conference</doc_type><references><reference>1964727056</reference><reference>1983409972</reference><reference>1984831616</reference><reference>2023808162</reference><reference>2067882404</reference><reference>2076313198</reference><reference>2110425399</reference><reference>2111706174</reference><reference>2114987118</reference><reference>2132334337</reference><reference>2138130652</reference><reference>2166656159</reference><reference>2166780994</reference><reference>2787912510</reference></references><venue id="1171178643" type="C">Symposium on Operating Systems Principles</venue><doi>10.1145/800216.806585</doi><keywords><keyword weight="0.48062">Programming language</keyword><keyword weight="0.47523">Computer science</keyword><keyword weight="0.60056">Temporal logic</keyword><keyword weight="0.6097">Formal verification</keyword></keywords><publisher>ACM</publisher><abstract>Wirth [Wi77] categorized programs into three classes. The most difficult type of program to understand and write is a real-time program. Much work has been done in the formal verification of sequential programs, but much remains to be done for concurrent and real-time programs. The critical nature of typical real-time applications makes the validity problem for real-time programs particularly important. Owicki and Lamport [OL80] present a relatively new method for verifying concurrent programs using temporal logic. This paper presents an extension of their work to the area of real-time programs. A model and proof system are presented and their use demonstrated using examples from the literature.</abstract></paper>