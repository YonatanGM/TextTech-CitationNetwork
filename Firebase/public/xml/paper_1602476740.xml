<paper id="1602476740"><title>Logic verification using binary decision diagrams in a logic synthesis environment</title><year>1988</year><authors><author org="Dept. of Electr. Eng. and Comput. Sci., California Univ., Berkeley, CA, USA" id="2156970971">S. Malik</author><author org="Dept. of Electr. Eng. and Comput. Sci., California Univ., Berkeley, CA, USA" id="2232600201">A.R. Wang</author><author org="Dept. of Electr. Eng. and Comput. Sci., California Univ., Berkeley, CA, USA" id="2038038819">R.K. Brayton</author><author org="Dept. of Electr. Eng. and Comput. Sci., California Univ., Berkeley, CA, USA" id="681596721">A. Sangiovanni-Vincentelli</author></authors><n_citation>439</n_citation><doc_type>Conference</doc_type><references><reference>1972387087</reference><reference>2016806954</reference><reference>2080267935</reference><reference>2102572436</reference><reference>2129873456</reference><reference>2154030608</reference></references><venue id="1128132410" type="C">International Conference on Computer Aided Design</venue><doi>10.1109/ICCAD.1988.122451</doi><keywords><keyword weight="0.61159">Logic synthesis</keyword><keyword weight="0.60605">Boolean circuit</keyword><keyword weight="0.61882">Sequential logic</keyword><keyword weight="0.63194">Logic optimization</keyword><keyword weight="0.45808">Computer science</keyword><keyword weight="0.62157">Multimodal logic</keyword><keyword weight="0.47049">Theoretical computer science</keyword><keyword weight="0.69406">High-level verification</keyword><keyword weight="0.60368">And-inverter graph</keyword><keyword weight="0.63079">Formal verification</keyword></keywords><publisher>IEEE</publisher><abstract>The results of a formal logic verification system implemented as part of the multilevel logic synthesis system MIS are discussed. Combinational logic verification involves checking two networks for functional equivalence. Techniques that flatten networks or use cube enumeration and simulation cannot be used with functions that have very large cube covers. Binary decision diagrams (BDDs) are canonical representations for Boolean functions and offer a technique for formal logic verification. However, the size of BDDs is sensitive to the variable ordering. Ordering strategies based on the network topology are considered. Using these strategies with BDDs, it has been possible to carry out formal verification for a larger set of networks than with existing verification systems. The present method proved significantly faster on the benchmark set of examples tested. u003e</abstract></paper>