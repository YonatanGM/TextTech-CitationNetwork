<paper id="1969423858"><title>Polynomial-time algorithms for regular set-covering and threshold synthesis</title><year>1985</year><authors><author org="Mathematics, Statistics, and Computer Science Department, University of Illinois at Chicago, Chicago, IL 60680, USA" id="221877542">Uri N. Peled</author><author org="Department of Statistics, University of Rome “La Sapienza,” Rome, Italy" id="713173089">Bruno Simeone</author></authors><n_citation>67</n_citation><doc_type>Journal</doc_type><references><reference>1799057383</reference><reference>1981696777</reference><reference>2000133827</reference><reference>2009909030</reference><reference>2064366623</reference><reference>2070813765</reference><reference>2093776691</reference><reference>2094459512</reference><reference>2611147814</reference></references><venue id="171741597" type="J">Discrete Applied Mathematics</venue><doi>10.1016/0166-218X(85)90040-X</doi><keywords><keyword weight="0.46986">Discrete mathematics</keyword><keyword weight="0.65226">Pseudo-polynomial time</keyword><keyword weight="0.47026">Combinatorics</keyword><keyword weight="0.64587">PSPACE-complete</keyword><keyword weight="0.45171">Algorithm</keyword><keyword weight="0.61762">Continuous knapsack problem</keyword><keyword weight="0.62293">P versus NP problem</keyword><keyword weight="0.61823">Function problem</keyword><keyword weight="0.64764">Matrix polynomial</keyword><keyword weight="0.58337">Knapsack problem</keyword><keyword weight="0.56257">Time complexity</keyword><keyword weight="0.42567">Mathematics</keyword></keywords><publisher>North-Holland</publisher><abstract>Abstract A set-covering problem is called regular if a cover always remains a cover when any column in it is replaced by an earlier column. From the input of the problem - the coefficient matrix of the set-covering inequalities - it is possible to check in polynomial time whether the problem is regular or can be made regular by permuting the columns. If it is, then all the minimal covers are generated in polynomial time, and one of them is an optimal solution. The algorithm also yields an explicit bound for the number of minimal covers. These results can be used to check in polynomial time whether a given set-covering problem is equivalent to some knapsack problem without additional variables, or equivalently to recognize positive threshold functions in polynomial time. However, the problem of recognizing when an arbitrary Boolean function is threshold is NP-complete. It is also shown that the list of maximal non-covers is essentially the most compact input possible, even if it is known in advance that the problem is regular.</abstract></paper>