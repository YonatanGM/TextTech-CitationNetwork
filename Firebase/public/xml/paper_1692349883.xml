<paper id="1692349883"><title>Verified Bytecode Verifiers</title><year>2001</year><authors><author org="Technische Universitôt München" id="42605653">Tobias Nipkow</author></authors><n_citation>43</n_citation><doc_type>Conference</doc_type><references><reference>1546449686</reference><reference>1560655349</reference><reference>1592189276</reference><reference>1820096046</reference><reference>1996469056</reference><reference>2005119878</reference><reference>2025672027</reference><reference>2035069210</reference><reference>2095851537</reference><reference>2105360973</reference><reference>2114067856</reference><reference>2124153277</reference></references><venue id="1146600191" type="C">Foundations of Software Science and Computation Structure</venue><doi>10.1007/3-540-45315-6_23</doi><keywords><keyword weight="0.56367">HOL</keyword><keyword weight="0.46023">Programming language</keyword><keyword weight="0.43893">Computer science</keyword><keyword weight="0.49777">Automated theorem proving</keyword><keyword weight="0.53457">Correctness</keyword><keyword weight="0.4689">Assembly language</keyword><keyword weight="0.44358">Theoretical computer science</keyword><keyword weight="0.50806">Type inference</keyword><keyword weight="0.61015">Bytecode</keyword><keyword weight="0.47235">Data flow diagram</keyword><keyword weight="0.53016">Executable</keyword><keyword weight="0.42316">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Using the theorem prover Isabelle/HOL we have formalized and proved correct an executable bytecode verifier in the style of Kildallu0027s algorithm for a significant subset of the Java Virtual Machine. First an abstract framework for proving correctness of data flow based type inference algorithms for assembly languages is formalized. It is shown that under certain conditions Kildallu0027s algorithm yields a correct bytecode verifier. Then the framework is instantiated with a model of the JVM.</abstract></paper>