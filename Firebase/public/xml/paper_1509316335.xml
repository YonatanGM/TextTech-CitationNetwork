<paper id="1509316335"><title>Positive results and techniques for obfuscation</title><year>2004</year><authors><author org="Stanford, University" id="2159437062">Benjamin Lynn</author><author org="Princeton University *" id="2154083051">Manoj Prabhakaran</author><author org="Princeton University *" id="2159933393">Amit Sahai</author></authors><n_citation>193</n_citation><doc_type>Conference</doc_type><references><reference>1488471373</reference><reference>1551572898</reference><reference>1592625985</reference><reference>1988374166</reference><reference>2039594335</reference><reference>2084641398</reference><reference>2146567535</reference></references><venue id="1140213147" type="C">Theory and Application of Cryptographic Techniques</venue><doi>10.1007/978-3-540-24676-3_2</doi><keywords><keyword weight="0.49551">Homomorphic encryption</keyword><keyword weight="0.49136">Cryptography</keyword><keyword weight="0.44683">Computer science</keyword><keyword weight="0.50407">Oracle</keyword><keyword weight="0.50088">Random oracle</keyword><keyword weight="0.44409">Theoretical computer science</keyword><keyword weight="0.53142">Encryption</keyword><keyword weight="0.5764">Obfuscation (software)</keyword><keyword weight="0.56621">Obfuscation</keyword><keyword weight="0.49672">Formal proof</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Informally, an obfuscator O is an efficient, probabilistic "compiler" that transforms a program P into a new program O(P) with the same functional- ity as P , but such that O(P) protects any secrets that may be built into and used by P. Program obfuscation, if possible, would have numerous important cryp- tographic applications, including: (1) "Intellectual property" protection of secret algorithms and keys in software, (2) Solving the long-standing open problem of homomorphic public-key encryption, (3) Controlled delegation of authority and access, (4) Transforming Private-Key Encryption into Public-Key Encryption, and (5) Access Control Systems. Unfortunately however, program obfuscators that work on arbitrary programs cannot exist (1). No positive results for program obfuscation were known prior to this work. In this paper, we provide the first positive results in program obfuscation. We focus on the goal of access control, and give several provable obfuscations for complex access control functionalities, in the random oracle model. Our results are obtained through non-trivial compositions of obfuscations; we note that gen- eral composition of obfuscations is impossible, and so developing techniques for composing obfuscations is an important goal. Our work can also be seen as mak- ing initial progress toward the goal of obfuscating finite automata or regular ex- pressions, an important general class of machines which are not ruled out by the impossibility results of (1). We also note that our work provides the first formal proof techniques for obfuscation, which we expect to be useful in future work in this area.</abstract></paper>