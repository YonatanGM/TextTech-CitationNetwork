<paper id="1756530980"><title>Logic programs with exceptions</title><year>1990</year><authors><author org="Department of Computing, Imperial College, London, U.K." id="2228449327">Robert A. kowalski</author><author org="Department of Computing, Imperial College, London, U.K." id="2026095753">Fariba Sadri</author></authors><n_citation>114</n_citation><doc_type>Conference</doc_type><references><reference>176609766</reference><reference>1672891595</reference><reference>2020153579</reference><reference>2048600620</reference><reference>2132691907</reference><reference>2155322595</reference></references><venue id="2754141368" type="C">International Conference on Lightning Protection</venue><doi>10.1007/BF03037170</doi><keywords><keyword weight="0.70395">Default logic</keyword><keyword weight="0.45786">Programming language</keyword><keyword weight="0.6262">Negation</keyword><keyword weight="0.44108">Computer science</keyword><keyword weight="0.67805">Negation as failure</keyword><keyword weight="0.69008">Stable model semantics</keyword><keyword weight="0.67413">Logic programming</keyword><keyword weight="0.0">Default reasoning</keyword><keyword weight="0.52107">Semantics</keyword></keywords><publisher>MIT Press</publisher><abstract>We extend logic programming to deal with default reasoning by allowing the explicit representation of exceptions in addition to general rules. To formalise this extension, we modify the answer set semantics of Gelfond and Lifschitz, which allows both classical negation and negation as failure.</abstract></paper>