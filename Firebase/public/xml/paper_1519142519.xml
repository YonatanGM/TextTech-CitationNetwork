<paper id="1519142519"><title>Polymorphic Binding-Time Analysis</title><year>1994</year><authors><author org="University of copenhagen" id="2141268906">Fritz Henglein</author><author org="University of copenhagen" id="2011613385">Christian Mossin</author></authors><n_citation>64</n_citation><doc_type>Conference</doc_type><references><reference>47766774</reference><reference>1543641760</reference><reference>1562611359</reference><reference>1566968514</reference><reference>1567694639</reference><reference>2015256273</reference><reference>2017517899</reference><reference>2028175476</reference><reference>2044549124</reference><reference>2056847451</reference><reference>2073005537</reference><reference>2084099544</reference><reference>2095460218</reference><reference>2110656424</reference><reference>2145969019</reference><reference>2147795501</reference><reference>2152318180</reference><reference>2154632906</reference><reference>2163976959</reference><reference>2169611723</reference></references><venue id="1136861413" type="C">European Symposium on Programming</venue><doi>10.1007/3-540-57880-3_19</doi><keywords><keyword weight="0.0">Binding time analysis</keyword><keyword weight="0.48208">Expression (mathematics)</keyword><keyword weight="0.52865">Inference</keyword><keyword weight="0.41905">Computer science</keyword><keyword weight="0.49254">Partial evaluation</keyword><keyword weight="0.53862">Principal type</keyword><keyword weight="0.44411">Theoretical computer science</keyword><keyword weight="0.56023">Type inference</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Binding time analysis is an important part of off-line partial evaluation, annotating expressions as being safely evaluable from known data or possibly depending on unknown data. Most binding-time analyses have been monovariant, allowing only one binding-time description for each function. The idea of polyvariance is to allow multiple binding time descriptions of each function, by duplicating the function [6, 2] or by associating a set of binding time descriptions to each function [3]. Instead we present an inference based binding time analysis polymorphic in binding time values. This polymorphism captures a very powerful notion of polyvariance limited only by the (standard) types of the language. Polymorphism gives a much simpler definition than the known polyvariant schemes allowing us to reason formally about the system and prove it correct.</abstract></paper>