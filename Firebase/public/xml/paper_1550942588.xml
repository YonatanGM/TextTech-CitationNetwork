<paper id="1550942588"><title>Evaluation of correctness criteria for dynamic workflow changes</title><year>2003</year><authors><author org="University of Ulm, Faculty of Computer Science, Dept. Databases and Information Systems" id="2048013632">Stefanie Rinderle</author><author org="University of Ulm, Faculty of Computer Science, Dept. Databases and Information Systems" id="2124900482">Manfred Reichert</author><author org="University of Ulm, Faculty of Computer Science, Dept. Databases and Information Systems" id="153700510">Peter Dadam</author></authors><n_citation>67</n_citation><doc_type>Conference</doc_type><references><reference>1504210293</reference><reference>1521473511</reference><reference>1570265525</reference><reference>1603574094</reference><reference>2005083223</reference><reference>2027236907</reference><reference>2062756186</reference><reference>2085583673</reference><reference>2097583309</reference><reference>2113457143</reference><reference>2114459684</reference><reference>2174443976</reference><reference>2178686891</reference><reference>2913036292</reference></references><venue id="1152238068" type="C">Business Process Management</venue><doi>10.1007/3-540-44895-0_4</doi><keywords><keyword weight="0.44838">Information system</keyword><keyword weight="0.44566">Collaborative software</keyword><keyword weight="0.45436">Computer science</keyword><keyword weight="0.51356">Correctness</keyword><keyword weight="0.46855">Usability</keyword><keyword weight="0.42696">Integrated management</keyword><keyword weight="0.42101">Wireless ad hoc network</keyword><keyword weight="0.54002">Workflow management system</keyword><keyword weight="0.50581">Workflow</keyword><keyword weight="0.45534">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The capability to dynamically adapt in-progress workflows (WF) is an essential requirement for any workflow management system (WfMS). This fact has been recognized by the WF community for a long time and different approaches in the area of adaptive workflows have been developed so far. They either enable WF type changes and their propagation to in-progress WF instances or (ad-hoc) changes of single WF instances. Thus, at first glance, many of the major problems related to dynamic WF changes seem to be solved. However, this picture changes when digging deeper into the approaches and considering implementation and usability issues as well. This paper presents important criteria for the correct adaptation of runningw orkflows and analyzes how actual approaches satisfy them. At this, we demonstrate the strengths of the different approaches and provide additional solutions to overcome current limitations. These solutions comprise comprehensive correctness criteria as well as migration rules for change realization.</abstract></paper>