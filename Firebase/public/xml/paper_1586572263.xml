<paper id="1586572263"><title>Graph Rewriting, Constraint Solving and Tiles for Coordinating Distributed Systems</title><year>1999</year><authors><author org="Dipartimento di Informatica, Università di Pisa, Pisa, Italy. e-mail" id="2925215115">Ugo Montanari</author><author org="Dipartimento di Informatica, Università di Pisa, Pisa, Italy. e-mail" id="2252207586">Francesca Rossi</author></authors><n_citation>27</n_citation><doc_type>Journal</doc_type><references><reference>1482234031</reference><reference>1499822017</reference><reference>1512428151</reference><reference>1524794046</reference><reference>1542911159</reference><reference>1553093957</reference><reference>1574796876</reference><reference>1601458080</reference><reference>1607105588</reference><reference>1909063750</reference><reference>1967400027</reference><reference>1976195354</reference><reference>1984882019</reference><reference>2024875518</reference><reference>2030985429</reference><reference>2055102312</reference><reference>2069683773</reference><reference>2072755230</reference><reference>2075347452</reference><reference>2086991642</reference><reference>2095082129</reference><reference>2119456262</reference><reference>2135432705</reference><reference>2157740753</reference><reference>2533731002</reference><reference>2984454117</reference></references><venue id="148906134" type="J">Applied Categorical Structures</venue><doi>10.1023/A:1008693303228</doi><keywords><keyword weight="0.47898">Theoretical computer science</keyword><keyword weight="0.0">Formal description</keyword><keyword weight="0.0">Backtracking search algorithm</keyword><keyword weight="0.0">Expressivity</keyword><keyword weight="0.4682">Distributed computing</keyword><keyword weight="0.45761">Topology</keyword><keyword weight="0.44273">Discrete mathematics</keyword><keyword weight="0.58091">Local consistency</keyword><keyword weight="0.51786">Synchronization</keyword><keyword weight="0.63027">Constraint graph</keyword><keyword weight="0.66824">Graph rewriting</keyword><keyword weight="0.57355">Rewriting</keyword><keyword weight="0.39912">Mathematics</keyword></keywords><publisher>Kluwer Academic Publishers</publisher><abstract>We describe an approach to modeling the dynamics of distributed systems. By distributed systems we mean systems consisting of concurrent processes communicating via shared ports and posing certain synchronization requirements, via the ports, to the adjacent processes. The basic idea is to use graphs to represent states of such systems, and graph rewriting to represent their evolution. The kind of graph rewriting we use is based on simple context-free productions which are, however, combined by means of a synchronization mechanism. This allows for a good level of expressivity in the system without sacrifying full distribution. To formally model this kind of graph rewriting, however, we do not adopt the classical graph rewriting style but a more general framework, called the tile model, which allows for a clear separation between sequential rewriting and synchronization. Then, since the problem of satisfying the synchronization requirements may be a complex combinatorial problem, we suggest exploiting existing techniques for constraint solving. This is based on the observation that the synchronization problem can be modeled as a (finite domain) constraint problem. In this respect, we propose to use both local consistency techniques, to remove the possible redundancies in a system state, and a distributed backtracking search algorithm, as used in distributed constraint solving. Our method has the following advantages: first, it provides a formal description of the way a distributed system evolves; second, it seems promising from the performance point of view, since the techniques we propose for combining productions have been proved to be very convenient in several cases; finally, the kind of system evolution we describe here is just a particular instance of what can be described by using the tile model in its most general form, thus suggesting the possibility of extending our approach to modeling more complex distributed systems.</abstract></paper>