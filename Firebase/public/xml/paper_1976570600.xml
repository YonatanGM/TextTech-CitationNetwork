<paper id="1976570600"><title>Strategic directions in concurrency research</title><year>1996</year><authors><author org="North Carolina State University–Raleigh" id="2090782985">Rance Cleaveland</author><author org="State Univ. of NY at Stony Brook, Stony Brook, NY" id="2212808945">Scott A. Smolka</author></authors><n_citation>58</n_citation><doc_type>Journal</doc_type><references><reference>130102441</reference><reference>1479857408</reference><reference>1503973138</reference><reference>1504623906</reference><reference>1534850143</reference><reference>1535347731</reference><reference>1536783297</reference><reference>1540180001</reference><reference>1540442949</reference><reference>1542981786</reference><reference>1548392907</reference><reference>1554525902</reference><reference>1573208177</reference><reference>1580483840</reference><reference>1583200102</reference><reference>1591301196</reference><reference>1593428110</reference><reference>1597755753</reference><reference>1602360707</reference><reference>1604240241</reference><reference>1728798265</reference><reference>1780296805</reference><reference>1790031272</reference><reference>1791618115</reference><reference>1801991060</reference><reference>1829244603</reference><reference>1857327297</reference><reference>1875492031</reference><reference>1895483727</reference><reference>1903000972</reference><reference>1964727056</reference><reference>1965498649</reference><reference>1969833114</reference><reference>1971107784</reference><reference>1976268573</reference><reference>1978469611</reference><reference>1981737360</reference><reference>1983409972</reference><reference>1988808695</reference><reference>1990183105</reference><reference>1994350081</reference><reference>1999706742</reference><reference>2004306067</reference><reference>2012472438</reference><reference>2015640848</reference><reference>2021473546</reference><reference>2022205872</reference><reference>2023808162</reference><reference>2041152728</reference><reference>2045478049</reference><reference>2059396299</reference><reference>2061253312</reference><reference>2068361557</reference><reference>2081938726</reference><reference>2085273936</reference><reference>2093916942</reference><reference>2096039823</reference><reference>2099529102</reference><reference>2101508170</reference><reference>2102097307</reference><reference>2102548669</reference><reference>2104045047</reference><reference>2105135809</reference><reference>2110425399</reference><reference>2113355185</reference><reference>2117087357</reference><reference>2117189826</reference><reference>2126021517</reference><reference>2132334337</reference><reference>2133996557</reference><reference>2135657750</reference><reference>2136920408</reference><reference>2137865376</reference><reference>2144687289</reference><reference>2146191617</reference><reference>2150320481</reference><reference>2157144873</reference><reference>2296390057</reference><reference>2296604987</reference><reference>2756011084</reference><reference>2799068413</reference><reference>2912084748</reference><reference>2912916339</reference><reference>2914206182</reference></references><venue id="157921468" type="J">ACM Computing Surveys</venue><doi>10.1145/242223.242252</doi><keywords><keyword weight="0.54809">Concurrent engineering</keyword><keyword weight="0.44994">Computer science</keyword><keyword weight="0.64422">Concurrency</keyword><keyword weight="0.49974">Correctness</keyword><keyword weight="0.59732">Deadlock</keyword><keyword weight="0.4747">Thread (computing)</keyword><keyword weight="0.44124">Theoretical computer science</keyword><keyword weight="0.42777">Artificial intelligence</keyword><keyword weight="0.50751">Distributed database</keyword><keyword weight="0.62016">Concurrent computing</keyword><keyword weight="0.48945">Reactive system</keyword><keyword weight="0.45136">Distributed computing</keyword></keywords><publisher>ACM</publisher><abstract>Concurrency is concerned with the fundamental aspects of systems of multiple, simultaneously active computing agents that interact with one another. This notion is intended to cover a wide range of system architectures, from tightly coupled, mostly synchronous parallel systems, to loosely coupled, largely asynchronous distributed systems. We refer to systems exhibiting concurrency as concurrent systems, and we call computer programs written for concurrent systems concurrent programs. Concurrency has emerged as a separate area of research in response to the intrinsic difficulties experienced by designers of concurrent systems in diverse fields within computer science. These difficulties stem in general from two main sources. The first is that the presence of multiple threads of control can lead to subtle and often unanticipated interactions between agents—in particular, issues such as interference, race conditions, deadlock, and livelock are peculiar to concurrent programming. The second arises from the fact that many concurrent systems, such as operating systems and distributed databases, are reactive, meaning that they are designed to engage in an ongoing series of interactions with their environments. Unlike traditional sequential programs, reactive systems should not terminate, and consequently traditional notions of correctness that rely on relating inputs to expected outputs upon termination no longer apply. Developing mathematical frameworks that accurately and tractably account for these phenomena has been a major goal of researchers in concurrency.</abstract></paper>