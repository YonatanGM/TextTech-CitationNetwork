<paper id="1527018329"><title>Object-Oriented Verification Based on Record Subtyping in Higher-Order Logic</title><year>1998</year><authors><author org="Technische Universit채t M체nchen;" id="154659470">Wolfgang Naraschewski</author><author org="Technische Universit채t M체nchen;" id="2169917450">Markus Wenzel</author></authors><n_citation>44</n_citation><doc_type>Conference</doc_type><references><reference>1507766766</reference><reference>1513954469</reference><reference>1755481569</reference><reference>1996404651</reference><reference>2057835515</reference><reference>2080549728</reference><reference>2104204098</reference><reference>2138839382</reference><reference>2140595120</reference></references><venue id="2538859667" type="C">Theorem Proving in Higher Order Logics</venue><doi>10.1007/BFb0055146</doi><keywords><keyword weight="0.62646">HOL</keyword><keyword weight="0.46737">Programming language</keyword><keyword weight="0.0">Correctness proofs</keyword><keyword weight="0.44804">Computer science</keyword><keyword weight="0.4532">Theoretical computer science</keyword><keyword weight="0.53112">Higher-order logic</keyword><keyword weight="0.43643">Distributed computing</keyword><keyword weight="0.50518">Object-oriented programming</keyword><keyword weight="0.52383">Parametric polymorphism</keyword><keyword weight="0.43717">Algorithm</keyword><keyword weight="0.49463">Subtyping</keyword><keyword weight="0.44168">Encoding (memory)</keyword><keyword weight="0.0">Program specification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We show how extensible records with structural subtyping can be represented directly in Higher-Order Logic (HOL). Exploiting some specific properties of HOL, this encoding turns out to be extremely simple. In particular, structural subtyping is subsumed by naive parametric polymorphism, while overridable generic functions may be based on overloading. Taking HOL plus extensible records as a starting point, we then set out to build an environment for object-oriented specification and verification (HOOL). This framework offers several well-known concepts like classes, objects, methods and late-binding. All of this is achieved by very simple means within HOL.</abstract></paper>