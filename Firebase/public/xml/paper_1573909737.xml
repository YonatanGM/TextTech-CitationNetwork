<paper id="1573909737"><title>On formalizing UML with high-level petri nets</title><year>2001</year><authors><author org="Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milano, ITALY" id="737834871">L. Baresi</author><author org="Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milano, ITALY" id="1399203037">M. Pezz√®</author></authors><n_citation>87</n_citation><doc_type>Journal</doc_type><references><reference>1492866066</reference><reference>1496748331</reference><reference>1590835706</reference><reference>1759712729</reference><reference>1786196815</reference><reference>1844552598</reference><reference>1989185354</reference><reference>2027324948</reference><reference>2047562474</reference><reference>2091905875</reference><reference>2096039823</reference><reference>2120601740</reference><reference>2130408143</reference><reference>2139907081</reference><reference>2157585155</reference><reference>2161825580</reference><reference>2172262424</reference><reference>2176296250</reference><reference>2912062820</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45397-0_9</doi><keywords><keyword weight="0.45962">Programming language</keyword><keyword weight="0.62563">Petri net</keyword><keyword weight="0.65663">UML tool</keyword><keyword weight="0.53957">Unified Modeling Language</keyword><keyword weight="0.44416">Computer science</keyword><keyword weight="0.53692">Formal specification</keyword><keyword weight="0.52861">Booch method</keyword><keyword weight="0.72277">Applications of UML</keyword><keyword weight="0.47932">Abstract syntax</keyword><keyword weight="0.57046">Class diagram</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>Object-oriented methodologies are increasingly used in software development. Despite the proposal of several formally based models, current object-oriented practice is still dominated by informal methodologies, like Booch, OMT, and UML. Unfortunately, the lack of dynamic semantics of such methodologies limits the possibility of early analysis of :[46],"paper indicates the feasibility of ascribing formal semantics to UML by defining translation rules that automatically map UML specifications to high-level Petri nets. This :[46],"paper illustrates the method through the hurried philosophers problem, that is first specified by using (a subset of) UML, and then mapped onto high-level Petri nets. The :[46],"paper indicates how UML specifications can be verified by discussing properties of the hurried philosophers problem that can be verified on the derived highlevel Petri net.</abstract></paper>