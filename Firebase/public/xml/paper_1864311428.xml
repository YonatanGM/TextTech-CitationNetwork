<paper id="1864311428"><title>Precise Bounds for Montgomery Modular Multiplication and Some Potentially Insecure RSA Moduli</title><year>2002</year><authors><author org="UMIST" id="2170406325">Colin D. Walter</author></authors><n_citation>45</n_citation><doc_type>Conference</doc_type><references><reference>1536508214</reference><reference>1591503962</reference><reference>1601001795</reference><reference>1613874182</reference><reference>1996360405</reference><reference>2007954959</reference><reference>2098235952</reference><reference>2108834246</reference><reference>2156186849</reference><reference>2245967636</reference></references><venue id="2760694600" type="C">The Cryptographersâ€™ Track at the RSA Conference</venue><doi>10.1007/3-540-45760-7_3</doi><keywords><keyword weight="0.48877">Power analysis</keyword><keyword weight="0.50482">Cryptography</keyword><keyword weight="0.51678">Upper and lower bounds</keyword><keyword weight="0.41973">Computer science</keyword><keyword weight="0.42796">Algorithm</keyword><keyword weight="0.40474">Inefficiency</keyword><keyword weight="0.44484">Arithmetic</keyword><keyword weight="0.49629">Cryptosystem</keyword><keyword weight="0.53501">Timing attack</keyword><keyword weight="0.39357">Moduli</keyword><keyword weight="0.52912">Public-key cryptography</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>An optimal upper bound for the number of iterations and precise bounds for the output are established for the version of Montgomery Modular Multiplication from which conditional statements have been eliminated. The removal of such statements is done to avoid timing attacks on embedded cryptosystems but it can mean greater execution time. Unfortunately, this inefficiency is close to its maximal for standard RSA key lengths such as 512 or 1024 bits. Certain such keys are then potentially subject to attack using differential power analysis. These keys are identified, but they are rare and the danger is minimal. The improved bounds, however, lead to consequent savings in hardware.</abstract></paper>