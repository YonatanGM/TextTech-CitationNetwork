<paper id="1584814208"><title>Demand Interprocedural Program Analysis Using Logic Databases</title><year>1995</year><authors><author org="University of Wisconsin-Madison" id="341386833">Thomas W. Reps</author></authors><n_citation>82</n_citation><doc_type>Conference</doc_type><references><reference>89622799</reference><reference>110734221</reference><reference>1484019856</reference><reference>1570025952</reference><reference>1575308494</reference><reference>1576666996</reference><reference>1578662211</reference><reference>1593165330</reference><reference>1964583443</reference><reference>1966449927</reference><reference>1979611815</reference><reference>1997189447</reference><reference>1997493115</reference><reference>1997840492</reference><reference>2006084860</reference><reference>2013041359</reference><reference>2016558072</reference><reference>2022897333</reference><reference>2023222549</reference><reference>2025554746</reference><reference>2029722359</reference><reference>2036240164</reference><reference>2064625489</reference><reference>2070553391</reference><reference>2080573945</reference><reference>2086457189</reference><reference>2091843160</reference><reference>2142652792</reference><reference>2145913834</reference><reference>2147088720</reference><reference>2151328120</reference><reference>2293624369</reference><reference>2885877860</reference></references><venue id="1180646617" type="C">Logic in Databases</venue><doi>10.1007/978-1-4615-2207-2_8</doi><keywords><keyword weight="0.65375">Program slicing</keyword><keyword weight="0.0">Logic program</keyword><keyword weight="0.47547">Programming language</keyword><keyword weight="0.46259">Computer science</keyword><keyword weight="0.51389">Call site</keyword><keyword weight="0.45757">Theoretical computer science</keyword><keyword weight="0.56512">Dataflow</keyword><keyword weight="0.60623">Program analysis</keyword><keyword weight="0.44745">Database</keyword></keywords><publisher>Springer US</publisher><abstract>This paper describes how algorithms for demand versions of interprocedural program-analysis problems can be obtained from their exhaustive counterparts essentially for free, by applying the so-called magic-sets transformation that was developed in the logic-programming and deductive-database communities. Applications to interprocedural dataflow analysis and interprocedural program slicing are described.1</abstract></paper>