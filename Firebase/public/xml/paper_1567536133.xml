<paper id="1567536133"><title>Optimistic synchronization-based state-space reduction</title><year>2003</year><authors><author org="State University of New York at Stony Brook, Computer Science Dept., Stony Brook, NY" id="2091641100">Scott D. Stoller</author><author org="Microsoft Research, Cambridge UK#TAB#" id="2166020432">Ernie Cohen</author></authors><n_citation>26</n_citation><doc_type>Conference</doc_type><references><reference>298244054</reference><reference>1494237684</reference><reference>1523284847</reference><reference>1568729458</reference><reference>1573428492</reference><reference>1972544179</reference><reference>2002179840</reference><reference>2040060046</reference><reference>2065675749</reference><reference>2072062729</reference><reference>2077850509</reference><reference>2103957752</reference><reference>2115309705</reference><reference>2115969864</reference><reference>2125165081</reference><reference>2144118030</reference><reference>2163152086</reference><reference>2168704035</reference><reference>2171480813</reference><reference>2173952623</reference><reference>2340735175</reference><reference>2913459036</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-36577-X_36</doi><keywords><keyword weight="0.47861">Data structure</keyword><keyword weight="0.49164">Synchronization</keyword><keyword weight="0.5447">Model checking</keyword><keyword weight="0.44665">Computer science</keyword><keyword weight="0.44549">Theoretical computer science</keyword><keyword weight="0.45018">Exploit</keyword><keyword weight="0.0">State space reduction</keyword><keyword weight="0.5944">Partial order reduction</keyword><keyword weight="0.50223">Mutual exclusion</keyword><keyword weight="0.54763">State space</keyword><keyword weight="0.4488">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Reductions that aggregate fine-grained transitions into coarser transitions can significantly reduce the cost of automated verification, by reducing the size of the state space. We propose a reduction that can exploit common synchronization disciplines, such as the use of mutual exclusion for accesses to shared data structures. Exploiting them using traditional reduction theorems requires checking that the discipline is followed in the original (i.e., unreduced) system. That check can be prohibitively expensive. This paper presents a reduction that instead requires checking whether the discipline is followed in the reduced system. This check may be much cheaper, because the reachable state space is smaller.</abstract></paper>