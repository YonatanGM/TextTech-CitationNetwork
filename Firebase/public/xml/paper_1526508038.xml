<paper id="1526508038"><title>Actor-oriented design of scientific workflows</title><year>2005</year><authors><author org="UC Davis Genome Center#TAB#" id="2122508644">Shawn Bowers</author><author org="Department of Computer Science, University of California - Davis#TAB#" id="2239188769">Bertram Lud√§scher</author></authors><n_citation>112</n_citation><doc_type>Conference</doc_type><references><reference>1556309875</reference><reference>1612581146</reference><reference>1909893457</reference><reference>1983833794</reference><reference>2064940205</reference><reference>2116793756</reference><reference>2117495487</reference><reference>2140037779</reference><reference>2168103533</reference><reference>2568081765</reference><reference>2911625174</reference></references><venue id="1176514135" type="C">International Conference on Conceptual Modeling</venue><doi>10.1007/11568322_24</doi><keywords><keyword weight="0.5369">Data modeling</keyword><keyword weight="0.53804">Conceptual model</keyword><keyword weight="0.45139">Computer science</keyword><keyword weight="0.49837">Formal specification</keyword><keyword weight="0.49379">Data type</keyword><keyword weight="0.50552">Orchestration (computing)</keyword><keyword weight="0.54255">Workflow</keyword><keyword weight="0.44106">Database</keyword><keyword weight="0.4962">Software development</keyword><keyword weight="0.49121">Executable</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Scientific workflows are becoming increasingly important as a unifying mechanism for interlinking scientific data management, analysis, simulation, and visualization tasks. Scientific workflow systems are problem-solving environments, supporting scientists in the creation and execution of scientific workflows. While current systems permit the creation of executable workflows, conceptual modeling and design of scientific workflows has largely been neglected. Unlike business workflows, scientific workflows are typically highly data-centric naturally leading to dataflow-oriented modeling approaches. We first develop a formal model for scientific workflows based on an actor-oriented modeling and design approach, originally developed for studying models of complex concurrent systems. Actor-oriented modeling separates two modeling concerns: component communication (dataflow) and overall workflow coordination (orchestration). We then extend our framework by introducing a novel hybrid type system, separating further the concerns of conventional data modeling (structural data type) and conceptual modeling (semantic type). In our approach, semantic and structural mismatches can be handled independently or simultaneously, and via different types of adapters, giving rise to new methods of scientific workflow design.</abstract></paper>