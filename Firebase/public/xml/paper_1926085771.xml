<paper id="1926085771"><title>Symbolic Model Checking with Rich ssertional Languages</title><year>1997</year><authors><author org="(INTEL)" id="2589135439">Yonit Kesten</author><author org="Centre Equation" id="694493417">Oded Maler</author><author org="Weizmann institute of Science" id="2461713462">M. Marcus</author><author org="Weizmann institute of Science" id="2171343426">Amir Pnueli</author><author org="Weizmann institute of Science" id="2096937842">Elad Shahar</author></authors><n_citation>135</n_citation><doc_type>Conference</doc_type><references><reference>1488858096</reference><reference>1496412704</reference><reference>1529349649</reference><reference>1535168632</reference><reference>1540180001</reference><reference>1556247398</reference><reference>1578881602</reference><reference>1584007654</reference><reference>1588869192</reference><reference>1593428110</reference><reference>1607877490</reference><reference>2035020702</reference><reference>2036526834</reference><reference>2039812824</reference><reference>2041152728</reference><reference>2045112813</reference><reference>2048880957</reference><reference>2051054731</reference><reference>2053294975</reference><reference>2073663206</reference><reference>2080267935</reference><reference>2081883656</reference><reference>2102236203</reference><reference>2117189826</reference><reference>2129664123</reference><reference>2141957585</reference><reference>2147269402</reference><reference>2149706659</reference><reference>2344021881</reference></references><venue id="1162450063" type="C">Computer Aided Verification</venue><doi>10.1007/3-540-63166-6_41</doi><keywords><keyword weight="0.4635">Programming language</keyword><keyword weight="0.63751">Model checking</keyword><keyword weight="0.46097">Algorithmics</keyword><keyword weight="0.45188">Computer science</keyword><keyword weight="0.45954">Theoretical computer science</keyword><keyword weight="0.46939">Tree automaton</keyword><keyword weight="0.49652">Regular language</keyword><keyword weight="0.43813">Distributed computing</keyword><keyword weight="0.41743">Discrete mathematics</keyword><keyword weight="0.47727">Regular expression</keyword><keyword weight="0.46429">Parameterized complexity</keyword><keyword weight="0.46698">Automaton</keyword><keyword weight="0.43398">Algorithm</keyword><keyword weight="0.68784">Symbolic trajectory evaluation</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The paper shows that, by an appropriate choice of a rich assertional language, it is possible to extend the utility of symbolic model checking beyond the realm of BDD-represented finite-state systems into the domain of infinite-state systems, leading to a powerful technique for uniform verification of unbounded (parameterized) process networks.</abstract></paper>