<paper id="1603487667"><title>On dynamically defined complex objects and SQL</title><year>1988</year><authors><author org="IBM Almaden Research Center, San Jose CA" id="2973397613">R. Lorie</author><author org="IBM Almaden Research Center, Sn Jose, CA#TAB#" id="2985995504">H. J. Schek</author></authors><n_citation>9</n_citation><doc_type /><references><reference>1538721919</reference><reference>1540464923</reference><reference>2022843938</reference><reference>2060849841</reference><reference>2089781037</reference><reference>2158655585</reference><reference>2159525276</reference></references><venue id="" type="">Lecture notes in computer science on Advances in object-oriented database systems</venue><doi>10.1007/3-540-50345-5_30</doi><keywords><keyword weight="0.60271">SQL</keyword><keyword weight="0.51234">Joins</keyword><keyword weight="0.45708">Programming language</keyword><keyword weight="0.44722">Computer science</keyword><keyword weight="0.50991">Semantic property</keyword><keyword weight="0.60131">Database schema</keyword><keyword weight="0.59095">Relational model</keyword><keyword weight="0.48195">Syntax</keyword><keyword weight="0.53326">Semantics</keyword><keyword weight="0.5831">Referential integrity</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The initial relational database model is based on tables that are completely independent one from another: a row can be inserted or deleted in a table without consideration of any other table; joins may be expressed on any columns of compatible syntactic types. In other words, the initial model has very little notion of semantics. In the last decade, many authors have emphasized the need for more semantics ( see /HK87/ fo r a survey). The reasons for doing so vary, but the common underlying justification is that, once the system becomes aware of semantic properties, it can make the useru0027s task easier, increase the level of confidence in the data, and even improve performance.</abstract></paper>