<paper id="1972899329"><title>Lower bounds for on-line two-dimensional packing algorithms</title><year>1982</year><authors><author org="Coordinated Science Laboratory University of Illinois Urbana, Illinois" id="2130459035">Donna J. Brown</author><author org="Bell Laboratories Murray Hill, New Jersey#TAB#" id="2425255528">Brenda S. Baker</author><author org="Bell Labs, Holmdel" id="120280277">Howard P. Katseff</author></authors><n_citation>60</n_citation><doc_type>Journal</doc_type><references><reference>1997959089</reference><reference>2019318803</reference><reference>2031210751</reference><reference>2043862089</reference><reference>2055872862</reference><reference>2071027833</reference><reference>2081987145</reference></references><venue id="84409463" type="J">Acta Informatica</venue><doi>10.1007/BF00264439</doi><keywords><keyword weight="0.61726">Approximation algorithm</keyword><keyword weight="0.4566">Discrete mathematics</keyword><keyword weight="0.45457">Combinatorics</keyword><keyword weight="0.56177">Bin</keyword><keyword weight="0.51756">Upper and lower bounds</keyword><keyword weight="0.45585">Scheduling (computing)</keyword><keyword weight="0.44848">Algorithm</keyword><keyword weight="0.43645">Inventory control</keyword><keyword weight="0.41455">Shared resource</keyword><keyword weight="0.42386">Mathematics</keyword><keyword weight="0.6655">Bin packing problem</keyword></keywords><publisher>Springer-Verlag New York, Inc.</publisher><abstract>Many problems, such as cutting stock problems and the scheduling of tasks with a shared resource, can be viewed as two-dimensional bin packing problems. Using the two-dimensional packing model of Baker, Coffman, and Rivest, a finite list L of rectangles is to be packed into a rectangular bin of finite width but infinite height, so as to minimize the total height used. An algorithm which packs the list in the order given without looking ahead or moving pieces already packed is called an on-line algorithm. Since the problem of finding an optimal packing is NP-hard, previous work has been directed at finding approximation algorithms. Most of the approximation algorithms which have been studied are on-line except that they require the list to have been previously sorted by height or width. This paper examines lower bounds for the worst-case performance of on-line algorithms for both non-preordered lists and for lists preordered by increasing or decreasing height or width.</abstract></paper>