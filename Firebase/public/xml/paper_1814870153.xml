<paper id="1814870153"><title>DFA&amp;OPT-METAFrame: A Tool Kit for Program Analysis and Optimazation</title><year>1996</year><authors><author org="Rheinisch-WestfÄlische Technische Hochschule Aachen" id="2302034370">Marion Klein</author><author org="UniversitÄt Passau" id="2273773887">Jens Knoop</author><author org="UniversitÄt Passau" id="112950809">Dirk Koschützki</author><author org="UniversitÄt Passau" id="2063423718">Bernhard Steffen</author></authors><n_citation>17</n_citation><doc_type>Conference</doc_type><references><reference>1503265404</reference><reference>1581014917</reference><reference>1593165330</reference><reference>1934513401</reference><reference>1964193719</reference><reference>1978885908</reference><reference>1994660988</reference><reference>2058360616</reference><reference>2065818693</reference><reference>2122107008</reference><reference>2140192407</reference><reference>2154411735</reference></references><venue id="1159071770" type="C">Tools and Algorithms for Construction and Analysis of Systems</venue><doi>10.1007/3-540-61042-1_64</doi><keywords><keyword weight="0.4771">Programming language</keyword><keyword weight="0.459">Computer science</keyword><keyword weight="0.45278">Theoretical computer science</keyword><keyword weight="0.64043">Compiler</keyword><keyword weight="0.61553">Code generation</keyword><keyword weight="0.52743">Parsing</keyword><keyword weight="0.60385">Program analysis</keyword><keyword weight="0.51063">Data flow diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Whereas the construction process of a compiler for the early and late phases like syntactic analysis and code generation is well-supported by powerful tools, the optimizer, the key component for achieving highly efficient code is usually still hand-coded. The tool kit presented here supports this essential step in the construction of a compiler. The two key features making it exceptional are (1) that it automatically generates global program analyses for intraprocedural, interprocedural and parallel data flow problems, and (2) that it supports the combination of the results obtained to program optimizations.</abstract></paper>