<paper id="1481362792"><title>OCL: Syntax, Semantics, and Tools</title><year>2002</year><authors><author org="University of Bremen, FB 3" id="1736775477">Mark Richters</author><author org="University of Bremen, FB 3" id="2162885025">Martin Gogolla</author></authors><n_citation>85</n_citation><doc_type>Journal</doc_type><references><reference>172403954</reference><reference>1491103651</reference><reference>1495380017</reference><reference>1495459135</reference><reference>1509485343</reference><reference>1543667518</reference><reference>1546981233</reference><reference>1562350268</reference><reference>1573083166</reference><reference>1877477396</reference><reference>1879346405</reference><reference>1998017916</reference><reference>2015255691</reference><reference>2064025843</reference><reference>2111706174</reference><reference>2118968163</reference><reference>2130501155</reference><reference>2159765281</reference><reference>2160417078</reference><reference>2161825580</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/3-540-45669-4_4</doi><keywords><keyword weight="0.47677">Sequence diagram</keyword><keyword weight="0.46221">Programming language</keyword><keyword weight="0.49601">Unified Modeling Language</keyword><keyword weight="0.43868">Computer science</keyword><keyword weight="0.54138">Formal grammar</keyword><keyword weight="0.49255">Computer-aided software engineering</keyword><keyword weight="0.6955">Object Constraint Language</keyword><keyword weight="0.50387">Semantics</keyword><keyword weight="0.52793">Formal verification</keyword><keyword weight="0.53006">Class diagram</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The Object Constraint Language OCL allows to formally specify constraints on a UML model. We present a formal syntax and semantics for OCL based on set theory including expressions, invariants and pre- and postconditions. A formal foundation for OCL makes the meaning of constraints precise and helps to eliminate ambiguities and inconsistencies. A precise language definition is also a prerequisite for implementing CASE tools providing enhanced support for UML models and OCL constraints. We give a survey of some OCL tools and discuss one of the tools in some more detail. The design and implementation of the USE tool supporting the validation of UML models and OCL constraints is based on the formal approach presented in this paper.</abstract></paper>