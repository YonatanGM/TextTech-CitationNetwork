<paper id="1810446874"><title>Deriving Active Rules for Constraint Maintenance in an Object-Oriented Database</title><year>1992</year><authors><author org="Facultad de Informática, San Sebastian, Spain" id="2220643632">Oscar Díaz</author></authors><n_citation>10</n_citation><doc_type>Conference</doc_type><references><reference>1492626646</reference><reference>1496689342</reference><reference>1527509133</reference><reference>1533270337</reference><reference>1546560780</reference><reference>1954612705</reference><reference>2069880607</reference><reference>2614410808</reference></references><venue id="1192664773" type="C">Database and Expert Systems Applications</venue><doi>10.1007/978-3-7091-7557-6_57</doi><keywords><keyword weight="0.45168">Data mining</keyword><keyword weight="0.46692">Programming language</keyword><keyword weight="0.57404">Relational database</keyword><keyword weight="0.46228">Computer science</keyword><keyword weight="0.55482">View</keyword><keyword weight="0.55217">Database testing</keyword><keyword weight="0.55919">Database design</keyword><keyword weight="0.57148">Database schema</keyword><keyword weight="0.56364">Prolog</keyword><keyword weight="0.59335">Database theory</keyword><keyword weight="0.56869">Spatiotemporal database</keyword><keyword weight="0.44179">Database</keyword></keywords><publisher>Springer, Vienna</publisher><abstract>This paper presents a framework for translating constraints, declaratively stated by the user, into event-condition-action rules. Constraints are specified using a constraint equation approach and they are defined as a property of the attributes. A set of rules are generated based on the Horn logic counterpart of constraint equations. Being in an object-oriented context, the description of the event modifying a constraint not only includes the name of the method but also the name of the class. This idiosyncrasy of the object-oriented paradigm account for many of the differences with how this problem has been tackled in deductive databases and relational databases. Examples are shown of an early implementation in ADAM, an object-oriented database in Prolog.</abstract></paper>