<paper id="1489557556"><title>Process programming to support medical safety: a case study on blood transfusion</title><year>2005</year><authors><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="2106467035">Lori A. Clarke</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="2670667079">Yao Chen</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="11791032">George S. Avrunin</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="2310282352">Bin Chen</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="701088920">Rachel Cobleigh</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="2440769859">Kim Frederick</author><author org="School of Nursing, University of Massachusetts, Amherst, MA" id="240657160">Elizabeth A. Henneman</author><author org="Dept. of Computer Science, University of Massachusetts, Amherst MA" id="2248607981">Leon J. Osterweil</author></authors><n_citation>24</n_citation><doc_type>Journal</doc_type><references><reference>1990758343</reference><reference>2100782985</reference><reference>2115309705</reference><reference>2120305491</reference><reference>2130851407</reference><reference>2145326461</reference><reference>2161660684</reference></references><venue id="106296714" type="J">Lecture Notes in Computer Science</venue><doi>10.1007/11608035_29</doi><keywords><keyword weight="0.46127">Software engineering</keyword><keyword weight="0.4499">Computer science</keyword><keyword weight="0.37021">Blood transfusion</keyword><keyword weight="0.44305">Operations research</keyword><keyword weight="0.57342">Requirements elicitation</keyword><keyword weight="0.45739">Finite-state machine</keyword><keyword weight="0.62465">Medical algorithm</keyword><keyword weight="0.56147">Software development</keyword><keyword weight="0.42504">Distributed computing</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>Medical errors are now recognized as a major cause of untimely deathsor other adverse medical outcomes. To reduce the number of medical errors, the Medical Safety Project at the University of Massachusetts is exploring using a process programming language to define medical processes, a requirements elicitation framework for specifying important medical properties, and finite-state verification tools to evaluate whether the process definitions adhere to these properties. In this paper, we describe our experiences to date. Although our findings are preliminary, we have found that defining and evaluating processes helps to detect weaknesses in these processes and leads to improved medical processes definitions.</abstract></paper>