<paper id="1832368449"><title>ROO: A Parallel Theorem Prover</title><year>1992</year><authors><author org="Argonne National Laboratory,#TAB#" id="1977610862">Ewing L. Lusk</author><author org="Argonne National Laboratory,#TAB#" id="2113235922">William McCune</author><author org="Australian Nat. University" id="2026529187">John K. Slaney</author></authors><n_citation>25</n_citation><doc_type>Conference</doc_type><references><reference>1576601371</reference><reference>1841535323</reference><reference>1869961429</reference></references><venue id="1134440762" type="C">Conference on Automated Deduction</venue><doi>10.1007/3-540-55602-8_213</doi><keywords><keyword weight="0.45973">Programming language</keyword><keyword weight="0.59515">Parallel algorithm</keyword><keyword weight="0.44447">Computer science</keyword><keyword weight="0.0">Parallel processing</keyword><keyword weight="0.53575">Automated theorem proving</keyword><keyword weight="0.46016">Parallel computing</keyword><keyword weight="0.44351">Algorithm</keyword><keyword weight="0.47577">Memory management</keyword><keyword weight="0.55385">Sequent</keyword><keyword weight="0.55085">Mathematical logic</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>We describe a parallel theorem prover based on the Argonne theorem-proving system OTTER. The parallel system, called Roo, runs on shared-memory multiprocessors such as the Sequent Symmetry. We explain the parallel algorithm used and give performance results that demonstrate near-linear speedups on large problems.</abstract></paper>