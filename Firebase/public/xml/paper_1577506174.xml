<paper id="1577506174"><title>A propositional logic-based method for verification of feature models</title><year>2004</year><authors><author org="Peking University" id="2700124691">Wei Zhang</author><author org="Peking University" id="1975030499">Haiyan Zhao</author><author org="Peking University" id="2105324944">Hong Mei</author></authors><n_citation>106</n_citation><doc_type>Conference</doc_type><references><reference>1509367797</reference><reference>1554498106</reference><reference>1560572523</reference><reference>1585054116</reference><reference>1591726984</reference><reference>1608589721</reference><reference>1635782815</reference><reference>1997032741</reference><reference>1997216907</reference><reference>2001098379</reference><reference>2002454301</reference><reference>2114152285</reference><reference>2115350349</reference><reference>2129842352</reference></references><venue id="1133365479" type="C">International Conference on Formal Engineering Methods</venue><doi>10.1007/978-3-540-30482-1_16</doi><keywords><keyword weight="0.61665">Verification and validation of computer simulation models</keyword><keyword weight="0.6594">Functional verification</keyword><keyword weight="0.62866">Intelligent verification</keyword><keyword weight="0.46657">Computer science</keyword><keyword weight="0.47159">Theoretical computer science</keyword><keyword weight="0.63812">Runtime verification</keyword><keyword weight="0.62763">Feature model</keyword><keyword weight="0.5786">Formal methods</keyword><keyword weight="0.678">High-level verification</keyword><keyword weight="0.60114">Formal verification</keyword></keywords><publisher>Springer, Berlin, Heidelberg</publisher><abstract>The feature model is a domain/product-line oriented requirements model based on hierarchical structure and explicit variability modeling, and has been adopted by several important software reuse methods. However, with respect to the problem of verification of constraints on features and verification of partially customized feature models, these methods tend to be semi-formal and offer little formal assistance. In this paper, we propose a propositional logic-based method for the verification of feature models at different binding times. The most important characteristic of this method is that it integrates the logical verification with binding times, which makes it can be used to verify any partially customized feature models at any binding time (except run-time). In this method, constraints on features are formalized by logical sentences. Thus, the verification of feature models is converted into satisfaction problems in the logic. With this formal method, verification problems such as the detection of inconsistent constraints or the detection of conflicting or unnecessary binding resolutions can be automatically revealed.</abstract></paper>